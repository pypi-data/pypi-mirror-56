#%RAML 1.0 Library
(meta.module): imgaug.augmenters
uses:
  meta: meta.raml
types:
  Augmenter:
    (meta.abstract): true
    type: object
  HasPerChannel:
    type: Augmenter
    (meta.abstract): true
    properties:
      per_channel?: meta.probability

  HasAlpha:
    type: Augmenter
    (meta.abstract): true
    properties:
      alpha: meta.number_range
  WithChance:
    type: Augmenter
    (meta.abstract): true
    properties:
      probability:
        (meta.positional): true
        type: meta.probability
  RangedPerChannel:
    (meta.abstract): true
    type: HasPerChannel
    properties:
      range:
        (meta.positional): true
        type: meta.int_range
  ControlFlow:
    type: Augmenter
    (meta.abstract): true
    properties:
      value:
        (meta.positional): true
        type: Augmenter[]

### Concrete Augmenters starts here
  Add: RangedPerChannel
  BackgroundReplacer:
    type: Augmenter
    properties:
      path: string
      rate?: number
      erosion?:
       type: number
       default: 0
      augmenters?: Augmenter[]

  AddElementwise: RangedPerChannel
  Multiply: RangedPerChannel
  MultiplyElementwise: RangedPerChannel
  Fliplr: WithChance
  Flipud: WithChance
  Invert: WithChance
  Sequential: ControlFlow
  Affine:
    type: Augmenter
    properties:
      rotate: number[]
      scale: number[]
      shear: number[]
      translate_percent:
         type: object
         properties:
           x: number[]
           y: number[]
  OneOf: ControlFlow
  Pad:
    type: Augmenter
    properties:
     px: integer[]
  PadToFixedSize:
    type: Augmenter
    properties:
      width: integer
      height: integer
  CropToFixedSize:
    type: Augmenter
    properties:
      width: integer
      height: integer
  AdditiveGaussianNoise:
    type: Augmenter
    properties:
      scale: meta.number_range
      per_channel: meta.probability
  Grayscale:
    type: Augmenter
    properties:
      alpha: meta.number_range
  GaussianBlur:
    type: Augmenter
    properties:
      sigma: meta.number_range
  AverageBlur:
    type: Augmenter
    properties:
      k: meta.int_range
  MedianBlur: AverageBlur
  Sharpen:
    type: HasAlpha
    properties:
      lightness: meta.number_range
  Emboss:
    type: HasAlpha
    properties:
      strength: meta.number_range
  CropAndPad:
    type: Augmenter
    properties:
       percent: number[]
  EdgeDetect: HasAlpha
  DirectedEdgeDetect:
    type: HasAlpha
    properties:
      direction: meta.number_range
  Dropout:
    type: HasPerChannel
    properties:
      p: meta.number_range
  PiecewiseAffine:
    type: Augmenter
    properties:
      scale: meta.number_range
  ElasticTransformation:
    type: HasAlpha
    properties:
      scale: meta.number_range
      sigma: number