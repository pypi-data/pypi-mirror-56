Metadata-Version: 2.1
Name: SumoNetVis
Version: 1.0.0
Summary: A python library to render Sumo network files and trajectories with matplotlib.
Home-page: https://github.com/patmalcolm91/SumoNetVis
Author: Patrick Malcolm
Author-email: patmalcolm91@gmail.com
License: MIT
Download-URL: https://github.com/patmalcolm91/SumoNetVis/archive/v1.0.0.tar.gz
Description: # SumoNetVis
        A Python library for visualizing a Sumo network and trajectories with matplotlib.
        
        ![Example plot of an intersection with trajectory colored by speed](Example_Plot.png)
        ![Example plot of an curving road with bike lanes](Example_Plot_2.png)
        
        Basic trajectory plotting from FCD outputs is built in, but it is also possible to plot custom data and graphics on
        top of the network with the full flexibility and power of matplotlib and other compatible libraries, such as seaborn.
        
        ## Installation
        This package can be installed via pip with the command ```pip install SumoNetVis```.
        You can then import the library with:
        
        ```python
        import SumoNetVis
        ```
        
        ### Dependencies
        * shapely
        * matplotlib
        * numpy
        
        ## Usage
        To plot a Sumo net file and trajectories, you can use the following code:
        
        ```python
        import SumoNetVis
        import matplotlib.pyplot as plt
        # Plot Sumo Network
        net = SumoNetVis.Net("path/to/yourfile.net.xml")
        net.plot()
        # Plot trajectories
        trajectories = SumoNetVis.Trajectories("path/to/fcd-output.xml")
        trajectories["vehicle_id"].assign_colors_speed()
        trajectories["vehicle_id"].plot()
        # Show figure
        plt.show()
        ```
        
        You also have the option of passing a matplotlib Axes object to the plot methods.
        
        ## Contribution
        Issues and pull requests are welcome.
        
Keywords: sumo,network,visualize,plot,matplotlib,traffic
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
