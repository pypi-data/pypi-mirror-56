Metadata-Version: 2.1
Name: entangled-filters
Version: 0.4
Summary: Set of Pandoc filters to aid in literate programming
Home-page: https://entangled.github.io/
Author: Johan Hidding
Author-email: j.hidding@esciencecenter.nl
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/entangled/filters/issues/
Project-URL: Documentation, https://entangled.github.io/filters/
Project-URL: Source Code, https://github.com/entangled/filters/
Description: [![Test Badge](https://github.com/entangled/filters/workflows/Tests/badge.svg)](https://github.com/entangled/filters/actions?query=workflow%3ATests)
        [![codecov](https://codecov.io/gh/entangled/filters/branch/master/graph/badge.svg)](https://codecov.io/gh/entangled/filters)
        
        # Entangled - Pandoc filters
        
        This contains several Pandoc filters and scripts for literate programming in Markdown. These filters are enough to get you going with literate programming.
        
        ## Install
        
        ```shell
        pip install .
        ```
        
        ### Testing
        
        ```shell
        pip install -e .[test]
        pytest
        ```
        
        ## Supported syntax
        
        See the [project homepage](https://entangled.github.io) for more info.
        
        ### Named code blocks
        
        ~~~markdown
        ``` {.python #hello}
        print("Hello, World!")
        ```
        ~~~
        
        ### Reference code blocks
        
        ~~~markdown
        ``` {.python #main}
        def main():
            <<hello>>
        ```
        ~~~
        
        ### Define files
        
        ~~~markdown
        ``` {.python file=hello.py}
        <<main>>
        
        if __name__ == "__main__":
            main()
        ```
        ~~~
        
        ### Documentation tests
        
        ~~~markdown
        ``` {.python .doctest #the-question}
        6*7
        ---
        42
        ```
        ~~~
        
        ## `pandoc-tangle`
        
        Extracts code blocks and writes them to files.
        
        ```shell
        pandoc -t plain --filter pandoc-tangle hello.md
        ```
        
        ## `pandoc-test`
        
        Runs doctests, and include results into output.
        
        ```shell
        pandoc -t html5 -s --filter pandoc-test hello.md
        ```
        
        
Keywords: literate programming
Platform: UNKNOWN
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Education
Classifier: Topic :: Documentation
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Documentation
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Text Processing :: Markup
Description-Content-Type: text/markdown
Provides-Extra: test
