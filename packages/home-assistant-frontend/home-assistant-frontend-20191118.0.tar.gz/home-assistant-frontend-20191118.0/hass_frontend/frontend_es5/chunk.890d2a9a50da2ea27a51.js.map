{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["setupLeafletMap","_ref","regeneratorRuntime","mark","_callee","mapElement","darkMode","Leaflet","map","style","_args","arguments","wrap","_context","prev","next","length","undefined","parentNode","Error","__webpack_require__","e","then","t","bind","sent","Icon","Default","imagePath","document","createElement","setAttribute","appendChild","setView","createTileLayer","addTo","abrupt","stop","_x","apply","this","leaflet","tileLayer","concat","Browser","retina","attribution","subdomains","minZoom","maxZoom","d","__webpack_exports__","saveCoreConfig","detectCoreConfig","hass","values","callWS","Object","assign","type","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","customElement","LocationEditor","property","_leafletMap","location","fitZoom","html","_templateObject","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","_updateMarker","_ignoreFitToMap","fitMap","shadowRoot","querySelector","_ref2","_this2","_mapEl","_slicedToArray","addEventListener","ev","_updateLocation","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","bubbles","_this3","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","css","_templateObject2","LitElement","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","setTimeout","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","t0","alert","message","finish","_callee2","result","_context2","preventDefault","location_name","onboardCoreConfigStep"],"mappings":"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","file":"chunk.890d2a9a50da2ea27a51.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(/* webpackChunkName: \"leaflet\" */ \"leaflet\")) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}