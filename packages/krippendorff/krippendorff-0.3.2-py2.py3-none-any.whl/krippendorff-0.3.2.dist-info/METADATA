Metadata-Version: 2.1
Name: krippendorff
Version: 0.3.2
Summary: Fast computation of the Krippendorff's alpha measure.
Home-page: https://github.com/pln-fing-udelar/fast-krippendorff
Author: Santiago Castro
Author-email: sacastro@fing.edu.uy
Maintainer: Santiago Castro
Maintainer-email: sacastro@fing.edu.uy
License: GPL 3.0
Keywords: Krippendorff,alpha,agreement,reliability,coding,coders,units,values
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.5.0
Description-Content-Type: text/markdown
Requires-Dist: numpy

[![Build Status](https://travis-ci.com/pln-fing-udelar/fast-krippendorff.svg?branch=master)](https://travis-ci.com/pln-fing-udelar/fast-krippendorff)
[![Version](https://img.shields.io/pypi/v/krippendorff.svg)](https://pypi.python.org/pypi/krippendorff)
[![License](https://img.shields.io/pypi/l/krippendorff.svg)](https://pypi.python.org/pypi/krippendorff)
[![Supported Python versions](https://img.shields.io/pypi/pyversions/krippendorff.svg)](https://pypi.python.org/pypi/krippendorff)

# Krippendorff

Fast computation of [Krippendorff's alpha](https://en.wikipedia.org/wiki/Krippendorff%27s_alpha) agreement measure.

Based on [Thomas Grill implementation](https://github.com/grrrr/krippendorff-alpha). Works on Python 3.5+.

## Example usage

Given a reliability data matrix, run:

```python
import krippendorff

reliability_data = ...
krippendorff.alpha(reliability_data)
```

See `sample.py` and `alpha`'s docstring for more.

## Installation

```bash
pip install krippendorff
```

## Caveats

The implementation is fast as it doesn't do a nested loop for the coders. However, V should be small, since a matrix of VxV it's used.


