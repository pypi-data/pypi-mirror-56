Id,Preface,Original
,DO NOT EDIT,THIS FILE WAS AUTOGENERATED BY MAKE
1,[DEBUG] (data_specification.c: 48): ,SDRAM data begins at address: %08x
2,[ERROR] (data_specification.c: 66): ,Magic number is incorrect: %08x
3,[ERROR] (data_specification.c: 71): ,Version number is incorrect: %08x
4,[INFO] (data_specification.c: 78): ,magic = %08x, version = %d.%d
5,[INFO] (profiler.c: 31): ,Reading profile setup from 0x%08x
6,[INFO] (profiler.c: 37): ,Initialising profiler with storage for %u samples starting at 0x%08x
7,[INFO] (profiler.c: 51): ,Profiler wrote %u bytes to 0x%08x
8,[DEBUG] (recording.c: 126): ,dropping packet with sequence no: %d
9,[DEBUG] (recording.c: 141): ,channel %d, updating read pointer by %d bytes, from 0x%08x
10,[DEBUG] (recording.c: 147): ,channel %d, read wrap around
11,[DEBUG] (recording.c: 164): ,dropping packet with sequence no: %d
12,[DEBUG] (recording.c: 167): ,Sequence %d acked
13,[DEBUG] (recording.c: 177): ,received packet of type %d
14,[DEBUG] (recording.c: 180): ,recording - parsing a command packet
15,[DEBUG] (recording.c: 183): ,command: HOST_DATA_READ
16,[DEBUG] (recording.c: 188): ,command: HOST_DATA_READ_ACK
17,[DEBUG] (recording.c: 193): ,unhandled command ID %d
18,[DEBUG] (recording.c: 198): ,leaving packet handler
19,[DEBUG] (recording.c: 265): ,t = %u, channel = %u, start = 0x%08x, read = 0x%08x,write = 0x%08x, end = 0x%08x, operation == read = %u, len = %u
20,[DEBUG] (recording.c: 274): ,Packet fits in final space of %u
21,[DEBUG] (recording.c: 282): ,Not enough space in final area (%u bytes)
22,[DEBUG] (recording.c: 286): ,Copying first %d bytes to final space of %u
23,[DEBUG] (recording.c: 295): ,Copying remaining %u bytes
24,[DEBUG] (recording.c: 307): ,Not enough space in middle (%u bytes)
25,[DEBUG] (recording.c: 311): ,Packet fits in middle space of %u
26,[DEBUG] (recording.c: 316): ,reached end
27,[DEBUG] (recording.c: 318): ,Buffer already full
28,[DEBUG] (recording.c: 324): ,channel %u, write wrap around
29,[ERROR] (recording.c: 391): ,Unknown channel state - channel: %d, start pointer: %d, end pointer: %d, read_pointer: %d, write_pointer: %d, last operation==READ: %d
30,[DEBUG] (recording.c: 403): ,Sending request with sequence %d
31,[DEBUG] (recording.c: 419): ,Freeing message
32,[DEBUG] (recording.c: 421): ,Done freeing message
33,[INFO] (recording.c: 439): ,WARNING: recording channel %u out of space
34,[DEBUG] (recording.c: 471): ,Storing channel %d state info starting at 0x%08x
35,[DEBUG] (recording.c: 483): ,Finalising recording channels
36,[INFO] (recording.c: 504): ,\tFinalising channel %u - dropped information whilebuffering - state info stored in SDRAM
37,[INFO] (recording.c: 507): ,\tFinalising channel %u - state info stored in SDRAM
38,[ERROR] (recording.c: 510): ,could not close channel %u.
39,[INFO] (recording.c: 512): ,closed channel %u.
40,[INFO] (recording.c: 563): ,Recording %d regions, using output tag %d, size before trigger %d, time between triggers %d
41,[ERROR] (recording.c: 569): ,Not enough space to allocate recording addresses
42,[ERROR] (recording.c: 574): ,Not enough space to allocate region sizes
43,[ERROR] (recording.c: 597): ,Could not allocate recording region %u of %u bytes
44,[ERROR] (recording.c: 611): ,Not enough space to create recording channels
45,[DEBUG] (recording.c: 614): ,Allocated recording channels to 0x%08x
46,[DEBUG] (recording.c: 643): ,region size %d
47,[DEBUG] (recording.c: 648): ,%d is size of buffer state in words
48,[INFO] (recording.c: 665): ,Recording channel %u configured to use %u byte memory block starting at 0x%08x
49,[INFO] (recording.c: 677): ,Recording channel %u left uninitialised
50,[DEBUG] (recording.c: 688): ,Sending buffering trigger message
51,[INFO] (simulation.c: 77): ,Starting basic provenance gathering
52,[INFO] (simulation.c: 80): ,running other provenance gathering
53,[INFO] (simulation.c: 143): ,Received exit signal. Program complete.
54,[INFO] (simulation.c: 150): ,Calling pre-exit function
55,[INFO] (simulation.c: 153): ,Exiting
56,[INFO] (simulation.c: 159): ,Setting the runtime of this model to %d starting at %d
57,[INFO] (simulation.c: 161): ,Setting the flag of infinite run for this model to %d
58,[INFO] (simulation.c: 171): ,Calling pre-resume function
59,[INFO] (simulation.c: 175): ,Resuming
60,[INFO] (simulation.c: 188): ,Forced provenance gathering
61,[INFO] (simulation.c: 195): ,Calling pre-exit function
62,[ERROR] (simulation.c: 218): ,received packet with unknown command code %d
63,[ERROR] (simulation.c: 238): ,Cannot allocate SDP callback on port %d as its already been allocated.
64,[ERROR] (simulation.c: 260): ,Cannot handle tag value above %d, please reduce the tag value accordingly.
65,[ERROR] (simulation.c: 268): ,Cannot allocate DMA transfer callback on tag %d as its already been allocated.
66,[ERROR] (simulation.c: 292): ,Unexpected magic number 0x%08x instead of 0x%08x at 0x%08x
67,[ERROR] (simulation.c: 299): ,The SDP callback priority should be set to a number greater than or equal to -1.  It is currently set to %d
8001,[DEBUG] (bit_field_expander.c: 132): ,master_pop_table_base_address = %0x
8002,[DEBUG] (bit_field_expander.c: 134): ,synaptic_matrix_base_address = %0x
8003,[DEBUG] (bit_field_expander.c: 135): ,bit_field_base_address = %0x
8004,[DEBUG] (bit_field_expander.c: 137): ,direct_matrix_region_base_address = %0x
8005,[INFO] (bit_field_expander.c: 138): ,finished reading in vertex data region addresses
8006,[INFO] (bit_field_expander.c: 144): ,n items is %d
8007,[INFO] (bit_field_expander.c: 155): ,entry %d has key %x and n_atoms of %d
8008,[DEBUG] (bit_field_expander.c: 165): ,n pairs is %d
8009,[ERROR] (bit_field_expander.c: 174): ,did not find the key %x in the map. WTF!
8010,[ERROR] (bit_field_expander.c: 175): ,n pairs is %d
8011,[ERROR] (bit_field_expander.c: 180): ,key at index %d is %x and equal = %d
8012,[ERROR] (bit_field_expander.c: 193): ,failed to alloc dtcm for the fake bitfield holders
8013,[INFO] (bit_field_expander.c: 203): ,finished fake bit field
8014,[INFO] (bit_field_expander.c: 213): ,direct synapse init
8015,[ERROR] (bit_field_expander.c: 216): ,failed to init the synapses. failing
8016,[INFO] (bit_field_expander.c: 221): ,pop table init
8017,[ERROR] (bit_field_expander.c: 225): ,failed to init the master pop table. failing
8018,[INFO] (bit_field_expander.c: 230): , elements in master pop table is %d \n and max rows is %d
8019,[INFO] (bit_field_expander.c: 234): ,successfully processed the bitfields as there wasnt any
8020,[ERROR] (bit_field_expander.c: 244): ,failed to create fake bit field
8021,[INFO] (bit_field_expander.c: 249): ,allocating dtcm for row data
8022,[ERROR] (bit_field_expander.c: 252): ,could not allocate dtcm for the row data
8023,[DEBUG] (bit_field_expander.c: 255): ,finished dtcm for row data
8024,[INFO] (bit_field_expander.c: 259): ,finished pop table set connectivity lookup
8025,[DEBUG] (bit_field_expander.c: 270): ,plastic row had entries, so cant be pruned
8026,[DEBUG] (bit_field_expander.c: 280): ,plastic and fixed do not have entries, so can be pruned
8027,[DEBUG] (bit_field_expander.c: 284): ,fixed row has entries, so cant be pruned
8028,[DEBUG] (bit_field_expander.c: 298): ,process synaptic row
8029,[DEBUG] (bit_field_expander.c: 308): ,update by pop length
8030,[INFO] (bit_field_expander.c: 315): ,words location is %x
8031,[DEBUG] (bit_field_expander.c: 319): ,starting master pop entry bit field generation
8032,[DEBUG] (bit_field_expander.c: 333): ,pop entry %d, key = %d, mask = %0x, n_neurons = %d
8033,[ERROR] (bit_field_expander.c: 336): ,could not allocate dtcm for bit field
8034,[DEBUG] (bit_field_expander.c: 342): ,cleared bit field
8035,[DEBUG] (bit_field_expander.c: 348): ,putting master pop key %d in entry %d
8036,[DEBUG] (bit_field_expander.c: 350): ,putting n words %d in entry %d
8037,[DEBUG] (bit_field_expander.c: 353): ,searching neuron ids
8038,[DEBUG] (bit_field_expander.c: 358): ,new key for neurons %d is %0x
8039,[INFO] (bit_field_expander.c: 369): ,%d
8040,[DEBUG] (bit_field_expander.c: 374): ,direct synapse
8041,[DEBUG] (bit_field_expander.c: 378): ,dma read synapse
8042,[INFO] (bit_field_expander.c: 385): ,%d
8043,[DEBUG] (bit_field_expander.c: 390): ,direct synapse
8044,[DEBUG] (bit_field_expander.c: 394): ,dma read synapse
8045,[DEBUG] (bit_field_expander.c: 409): ,writing bitfield to sdram for core use
8046,[DEBUG] (bit_field_expander.c: 411): ,writing to address %0x, %d words to write
8047,[DEBUG] (bit_field_expander.c: 424): ,freeing the bitfield dtcm
8048,[INFO] (bit_field_expander.c: 434): ,starting the bit field expander
8049,[ERROR] (bit_field_expander.c: 441): ,failed to init the master pop and synaptic matrix
8050,[INFO] (bit_field_expander.c: 445): ,generating bit field
8051,[ERROR] (bit_field_expander.c: 447): ,failed to generate bitfield
8052,[INFO] (bit_field_expander.c: 452): ,successfully processed the bitfield
8053,[ERROR] (munich_protocol.h: 537): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8054,[ERROR] (munich_protocol.h: 553): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8055,[ERROR] (munich_protocol.h: 568): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8056,[ERROR] (munich_protocol.h: 584): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8057,[ERROR] (munich_protocol.h: 600): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8058,[ERROR] (munich_protocol.h: 615): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8059,[ERROR] (munich_protocol.h: 630): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8060,[ERROR] (munich_protocol.h: 645): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8061,[ERROR] (munich_protocol.h: 660): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8062,[ERROR] (munich_protocol.h: 675): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8063,[ERROR] (munich_protocol.h: 690): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8064,[ERROR] (munich_protocol.h: 705): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8065,[ERROR] (munich_protocol.h: 720): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8066,[ERROR] (munich_protocol.h: 736): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8067,[ERROR] (munich_protocol.h: 752): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
8068,[ERROR] (munich_protocol.h: 799): ,The no of pixels is not supported in this protocol.
8069,[ERROR] (munich_protocol.h: 830): ,Unknown size of timestamp in bytes: %d\n
8070,[WARNING] (munich_protocol.h: 842): ,The current SpyNNaker models do not support the reception of packets with payloads, therefore you will need to add a adaptor model between the device and spynnaker models.
8071,[ERROR] (munich_protocol.h: 848): ,If you are using payloads to store events, you cannot have time stamps at all.
8072,[DEBUG] (out_spikes.c: 50): ,Out spike size is %u words, allowing %u spike sources
8073,[ERROR] (out_spikes.c: 54): ,Out of DTCM when allocating out_spikes
8074,[DEBUG] (out_spikes.c: 91): ,out_spikes:\n
8075,[DEBUG] (out_spikes.c: 94): ,-----------\n
8076,[DEBUG] (out_spikes.c: 96): ,-----------\n
8077,[DEBUG] (out_spikes.c: 102): ,-----------\n
8078,[DEBUG] (out_spikes.c: 106): ,%08x\n
8079,[DEBUG] (out_spikes.c: 108): ,-----------\n
8080,[DEBUG] (delay_extension.c: 103): ,read_parameters: starting
8081,[DEBUG] (delay_extension.c: 111): ,\t key = 0x%08x, incoming key = 0x%08x, incoming mask = 0x%08x,incoming key mask = 0x%08x
8082,[DEBUG] (delay_extension.c: 129): ,\t parrot neurons = %u, neuron bit field words = %u, num delay stages = %u, num delay slots = %u (pot = %u), num delay slots mask = %08x
8083,[DEBUG] (delay_extension.c: 132): ,\t random back off = %u, time_between_spikes = %u
8084,[DEBUG] (delay_extension.c: 141): ,\t delay stage %u
8085,[DEBUG] (delay_extension.c: 155): ,\t\t delay stage config word %u = %08x
8086,[DEBUG] (delay_extension.c: 168): ,read_parameters: completed successfully
8087,[DEBUG] (delay_extension.c: 173): ,writing other provenance data
8088,[DEBUG] (delay_extension.c: 183): ,finished other provenance data
8089,[INFO] (delay_extension.c: 187): ,initialise: started
8090,[INFO] (delay_extension.c: 215): ,initialise: completed successfully
8091,[DEBUG] (delay_extension.c: 224): ,Received spike %x
8092,[DEBUG] (delay_extension.c: 246): ,Current time slot %u
8093,[DEBUG] (delay_extension.c: 261): ,Incrementing counter %u = %u\n
8094,[DEBUG] (delay_extension.c: 264): ,Invalid neuron ID %u
8095,[DEBUG] (delay_extension.c: 267): ,Invalid spike key 0x%08x
8096,[DEBUG] (delay_extension.c: 283): ,Timer tick %u
8097,[DEBUG] (delay_extension.c: 293): ,Delay extension finished at time %u, %u received spikes, %u processed spikes, %u sent spikes, %u added spikes
8098,[DEBUG] (delay_extension.c: 295): ,Delayed %u times
8099,[DEBUG] (delay_extension.c: 321): ,%u: Checking time slot %u for delay stage %u
8100,[DEBUG] (delay_extension.c: 335): ,Neuron %u sending %u spikes after delaystage %u with key %x
8101,[ERROR] (delay_extension.c: 365): ,Error in initialisation - exiting!
8102,[DEBUG] (delay_extension.c: 378): ,Timer period %u
8103,[INFO] (bit_field_filter.h: 34): ,n bitfields = %d
8104,[WARNING] (bit_field_filter.h: 42): ,couldn't  initialise basic bit field holder. Will end up doing possibly more DMA's during the execution than required
8105,[DEBUG] (bit_field_filter.h: 63): ,putting key %d in position %d
8106,[DEBUG] (bit_field_filter.h: 73): ,could not initialise bit field for key %d, packets with that key will use a DMA to check if the packet targets anything within this core. Potentially slowing down the execution of neurons on this core.
8107,[DEBUG] (bit_field_filter.h: 84): ,bit field for key %d is :
8108,[DEBUG] (bit_field_filter.h: 90): ,%x
8109,[DEBUG] (c_main.c: 121): ,Recording flags = 0x%08x
8110,[DEBUG] (c_main.c: 126): ,writing other provenance data
8111,[DEBUG] (c_main.c: 145): ,finished other provenance data
8112,[DEBUG] (c_main.c: 154): ,Initialise: started
8113,[INFO] (c_main.c: 246): ,initialising the bit field region
8114,[DEBUG] (c_main.c: 253): ,Initialise: finished
8115,[ERROR] (c_main.c: 267): ,failed to reload the neuron parameters.
8116,[DEBUG] (c_main.c: 289): ,Timer tick %u \n
8117,[DEBUG] (c_main.c: 297): ,Completed a run
8118,[DEBUG] (c_main.c: 311): ,updating recording regions
8119,[DEBUG] (c_main.c: 320): ,Rewire tries = %d
8120,[DEBUG] (c_main.c: 345): ,Sending user event for new spike
8121,[DEBUG] (c_main.c: 349): ,Could not trigger user event\n
8122,[DEBUG] (c_main.c: 380): ,setting timer tick callback for %d microseconds
8123,[INFO] (direct_synapses.c: 32): ,Direct matrix malloc size is %d
8124,[ERROR] (direct_synapses.c: 38): ,Not enough memory to allocate direct matrix
8125,[DEBUG] (direct_synapses.c: 43): ,Copying %u bytes of direct synapses to 0x%08x
8126,[DEBUG] (neuron.c: 146): ,loading parameters
8127,[DEBUG] (neuron.c: 174): ,neuron_reloading_neuron_parameters: starting
8128,[DEBUG] (neuron.c: 188): ,neuron_initialise: starting
8129,[DEBUG] (neuron.c: 194): ,\t back off = %u, time between spikes %u
8130,[DEBUG] (neuron.c: 204): ,\tThis model is not expecting to transmit as it has no key
8131,[DEBUG] (neuron.c: 206): ,\tThis model is expected to transmit with key = %08x
8132,[DEBUG] (neuron.c: 221): ,\t n_neurons = %u, spike buffer size = %u
8133,[ERROR] (neuron.c: 238): ,Could not allocate space for spike_recording_indexes
8134,[ERROR] (neuron.c: 243): ,Could not allocate space for var_recording_rate
8135,[ERROR] (neuron.c: 248): ,Could not allocate space for var_recording_count
8136,[ERROR] (neuron.c: 253): ,Could not allocate space for var_recording_increment
8137,[ERROR] (neuron.c: 258): ,Could not allocate space for var_recording_indexes
8138,[ERROR] (neuron.c: 263): ,Could not allocate space for var_recording_size
8139,[ERROR] (neuron.c: 269): ,Could not allocate space for var_recording_values
8140,[ERROR] (neuron.c: 278): ,Could not allocate space for var_recording_values[%d]
8141,[DEBUG] (neuron.c: 350): ,neuron %u spiked at time %u
8142,[DEBUG] (neuron.c: 374): ,the neuron %d has been determined to not spike
8143,[DEBUG] (spike_processing.c: 160): ,Writing back %u bytes of plastic region to %08x
8144,[DEBUG] (spike_processing.c: 173): ,Received spike %x at %d, DMA Busy = %d
8145,[DEBUG] (spike_processing.c: 180): ,Sending user event for new spike
8146,[DEBUG] (spike_processing.c: 184): ,Could not trigger user event\n
8147,[DEBUG] (spike_processing.c: 188): ,Could not add spike
8148,[DEBUG] (spike_processing.c: 206): ,DMA transfer complete at time %u with tag %u
8149,[ERROR] (spike_processing.c: 228): ,Error processing spike 0x%.8x for address 0x%.8x (local=0x%.8x)
8150,[ERROR] (spike_processing.c: 233): ,%u: 0x%.8x
8151,[ERROR] (spike_processing.c: 253): ,Could not initialise DMA buffers
8152,[DEBUG] (spike_processing.c: 257): ,DMA buffer %u allocated at 0x%08x
8153,[DEBUG] (synapses.c: 69): ,Synaptic row, at address %08x Num plastic words:%u\n
8154,[DEBUG] (synapses.c: 73): ,----------------------------------------\n
8155,[DEBUG] (synapses.c: 83): ,Fixed region %u fixed synapses (%u plastic control words):\n
8156,[DEBUG] (synapses.c: 91): ,%08x [%3d: (w: %5u (=
8157,[DEBUG] (synapses.c: 99): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
8158,[DEBUG] (synapses.c: 104): ,----------------------------------------\n
8159,[DEBUG] (synapses.c: 112): ,----------------------------------------\n
8160,[DEBUG] (synapses.c: 134): , 
8161,[DEBUG] (synapses.c: 153): ,Inputs\n
8162,[DEBUG] (synapses.c: 221): ,synapses_initialise: starting
8163,[ERROR] (synapses.c: 229): ,Not enough memory to allocate ring buffer
8164,[DEBUG] (synapses.c: 238): ,synapses_initialise: completed successfully
8165,[ERROR] (synapses.c: 263): ,Could not allocate %u entries for ring buffers
8166,[ERROR] (neuron_impl_semd.h: 62): ,Unable to allocate neuron array - Out of DTCM
8167,[ERROR] (neuron_impl_semd.h: 70): ,Unable to allocate input type array - Out of DTCM
8168,[ERROR] (neuron_impl_semd.h: 77): ,Unable to allocate threshold type array - Out of DTCM
8169,[ERROR] (neuron_impl_semd.h: 86): ,Unable to allocate synapse parameters array - Out of DTCM
8170,[DEBUG] (neuron_impl_semd.h: 105): ,writing parameters, next is %u, n_neurons is %u 
8171,[DEBUG] (neuron_impl_semd.h: 107): ,writing neuron local parameters
8172,[DEBUG] (neuron_impl_semd.h: 111): ,writing input type parameters
8173,[DEBUG] (neuron_impl_semd.h: 116): ,writing threshold type parameters
8174,[DEBUG] (neuron_impl_semd.h: 121): ,writing synapse parameters
8175,[DEBUG] (neuron_impl_semd.h: 209): ,writing parameters
8176,[DEBUG] (neuron_impl_semd.h: 211): ,writing neuron local parameters
8177,[DEBUG] (neuron_impl_semd.h: 216): ,writing input type parameters
8178,[DEBUG] (neuron_impl_semd.h: 221): ,writing threshold type parameters
8179,[DEBUG] (neuron_impl_semd.h: 226): ,writing synapse parameters
8180,[DEBUG] (neuron_impl_semd.h: 241): ,-------------------------------------\n
8181,[DEBUG] (neuron_impl_semd.h: 248): ,%3u: %12.6k (= 
8182,[DEBUG] (neuron_impl_semd.h: 250): ,)\n
8183,[DEBUG] (neuron_impl_semd.h: 253): ,-------------------------------------\n
8184,[DEBUG] (neuron_impl_semd.h: 258): ,-------------------------------------\n
8185,[DEBUG] (neuron_impl_semd.h: 262): ,-------------------------------------\n
8186,[ERROR] (neuron_impl_standard.h: 75): ,Unable to allocate global neuron parameters- Out of DTCM
8187,[ERROR] (neuron_impl_standard.h: 84): ,Unable to allocate neuron array - Out of DTCM
8188,[ERROR] (neuron_impl_standard.h: 93): ,Unable to allocate input type array - Out of DTCM
8189,[ERROR] (neuron_impl_standard.h: 104): ,Unable to allocate additional input array - Out of DTCM
8190,[ERROR] (neuron_impl_standard.h: 114): ,Unable to allocate threshold type array - Out of DTCM
8191,[ERROR] (neuron_impl_standard.h: 125): ,Unable to allocate synapse parameters array - Out of DTCM
8192,[DEBUG] (neuron_impl_standard.h: 150): ,reading parameters, next is %u, n_neurons is %u 
8193,[DEBUG] (neuron_impl_standard.h: 153): ,writing neuron global parameters
8194,[DEBUG] (neuron_impl_standard.h: 160): ,reading neuron local parameters
8195,[DEBUG] (neuron_impl_standard.h: 167): ,reading input type parameters
8196,[DEBUG] (neuron_impl_standard.h: 174): ,reading threshold type parameters
8197,[DEBUG] (neuron_impl_standard.h: 181): ,reading synapse parameters
8198,[DEBUG] (neuron_impl_standard.h: 188): ,reading additional input type parameters
8199,[DEBUG] (neuron_impl_standard.h: 197): ,-------------------------------------\n
8200,[DEBUG] (neuron_impl_standard.h: 201): ,-------------------------------------\n
8201,[DEBUG] (neuron_impl_standard.h: 293): ,writing parameters
8202,[DEBUG] (neuron_impl_standard.h: 301): ,writing neuron global parameters
8203,[DEBUG] (neuron_impl_standard.h: 308): ,writing neuron local parameters
8204,[DEBUG] (neuron_impl_standard.h: 315): ,writing input type parameters
8205,[DEBUG] (neuron_impl_standard.h: 322): ,writing threshold type parameters
8206,[DEBUG] (neuron_impl_standard.h: 329): ,writing synapse parameters
8207,[DEBUG] (neuron_impl_standard.h: 336): ,writing additional input type parameters
8208,[DEBUG] (neuron_impl_standard.h: 353): ,-------------------------------------\n
8209,[DEBUG] (neuron_impl_standard.h: 360): ,%3u: %12.6k (= 
8210,[DEBUG] (neuron_impl_standard.h: 362): ,)\n
8211,[DEBUG] (neuron_impl_standard.h: 365): ,-------------------------------------\n
8212,[DEBUG] (neuron_impl_standard.h: 370): ,-------------------------------------\n
8213,[DEBUG] (neuron_impl_standard.h: 374): ,-------------------------------------\n
8214,[DEBUG] (neuron_model_izh_impl.c: 39): , sv1 %9.4k  V %9.4k --- sv2 %9.4k  U %9.4k\n
8215,[DEBUG] (neuron_model_izh_impl.c: 127): ,V = %11.4k 
8216,[DEBUG] (neuron_model_izh_impl.c: 128): ,U = %11.4k 
8217,[DEBUG] (neuron_model_izh_impl.c: 132): ,A = %11.4k 
8218,[DEBUG] (neuron_model_izh_impl.c: 133): ,B = %11.4k 
8219,[DEBUG] (neuron_model_izh_impl.c: 134): ,C = %11.4k 
8220,[DEBUG] (neuron_model_izh_impl.c: 135): ,D = %11.4k 
8221,[DEBUG] (neuron_model_izh_impl.c: 137): ,I = %11.4k \n
8222,[DEBUG] (neuron_model_lif_impl.c: 41): ,Exc 1: %12.6k, Exc 2: %12.6k
8223,[DEBUG] (neuron_model_lif_impl.c: 42): ,Inh 1: %12.6k, Inh 2: %12.6k
8224,[DEBUG] (neuron_model_lif_impl.c: 81): ,V membrane    = %11.4k mv
8225,[DEBUG] (neuron_model_lif_impl.c: 85): ,V reset       = %11.4k mv
8226,[DEBUG] (neuron_model_lif_impl.c: 86): ,V rest        = %11.4k mv
8227,[DEBUG] (neuron_model_lif_impl.c: 88): ,I offset      = %11.4k nA
8228,[DEBUG] (neuron_model_lif_impl.c: 89): ,R membrane    = %11.4k Mohm
8229,[DEBUG] (neuron_model_lif_impl.c: 91): ,exp(-ms/(RC)) = %11.4k [.]
8230,[DEBUG] (neuron_model_lif_impl.c: 93): ,T refract     = %u timesteps
8231,[ERROR] (synapse_dynamics_static_impl.c: 57): ,There should be no plastic synapses!
8232,[ERROR] (post_events.h: 61): ,Unable to allocate global STDP structures - Out of DTCM: Try reducing the number of neurons per core to fix this problem 
8233,[DEBUG] (post_events.h: 199): ,		##  printing entire post event history  ##
8234,[DEBUG] (post_events.h: 202): ,post event: %u, time: %u, trace: %u
8235,[DEBUG] (post_events.h: 209): ,		##  printing post window  ##
8236,[DEBUG] (post_events.h: 218): ,post spike: %u, time: %u, trace: %u
8237,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 105): ,\tPerforming deferred synapse update at time:%u
8238,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 108): ,\t\tbegin_time:%u, end_time:%u - prev_time:%u, num_events:%u
8239,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 119): ,\t\tApplying post-synaptic event at delayed time:%u\n
8240,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 133): ,\t\tApplying pre-synaptic event at time:%u last post time:%u\n
8241,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 183): ,Plastic region %u synapses\n
8242,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 199): ,%08x [%3d: (w: %5u (=
8243,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 206): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
8244,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 292): ,Adding pre-synaptic event to trace at time:%u
8245,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 354): ,Adding post-synaptic event to trace at time:%u
8246,[INFO] (timing_nearest_pair_impl.c: 31): ,timing_initialise: starting
8247,[INFO] (timing_nearest_pair_impl.c: 32): ,\tSTDP nearest-pair rule
8248,[INFO] (timing_nearest_pair_impl.c: 41): ,timing_initialise: completed successfully
8249,[DEBUG] (timing_nearest_pair_impl.h: 77): ,\tdelta_time=%u\n
8250,[DEBUG] (timing_nearest_pair_impl.h: 90): ,\tdelta_time=%u\n
8251,[DEBUG] (timing_nearest_pair_impl.h: 111): ,\t\t\ttime_since_last_post=%u, decayed_o1=%d\n
8252,[DEBUG] (timing_nearest_pair_impl.h: 138): ,\t\t\ttime_since_last_pret=%u, decayed_r1=%d\n
8253,[DEBUG] (timing_nearest_pair_impl.h: 140): ,\t\t\ttime_since_last_post=%u, decayed_r1=%d\n
8254,[DEBUG] (timing_nearest_pair_impl.h: 143): ,\t\t\tSetting trace to zero as not first pre-post pairing
8255,[DEBUG] (timing_pair_impl.c: 31): ,timing_initialise: starting
8256,[DEBUG] (timing_pair_impl.c: 32): ,\tSTDP pair rule
8257,[DEBUG] (timing_pair_impl.c: 41): ,timing_initialise: completed successfully
8258,[DEBUG] (timing_pair_impl.h: 83): ,\tdelta_time=%d, o1=%d\n
8259,[DEBUG] (timing_pair_impl.h: 103): ,\tdelta_time=%u, r1=%d\n
8260,[DEBUG] (timing_pair_impl.h: 126): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
8261,[DEBUG] (timing_pair_impl.h: 151): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
8262,[INFO] (timing_pfister_triplet_impl.c: 33): ,timing_initialise: starting
8263,[INFO] (timing_pfister_triplet_impl.c: 34): ,\tSTDP triplet rule
8264,[INFO] (timing_pfister_triplet_impl.c: 47): ,timing_initialise: completed successfully
8265,[DEBUG] (timing_pfister_triplet_impl.h: 110): ,\tdelta_time=%d, o1=%d, o2=%d\n
8266,[DEBUG] (timing_pfister_triplet_impl.h: 136): ,\tdelta_time=%u, r1=%d, r2=%d\n
8267,[DEBUG] (timing_pfister_triplet_impl.h: 162): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d, r2=%d,decayed_o1_r2=%d\n
8268,[DEBUG] (timing_pfister_triplet_impl.h: 191): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d, o2=%d,decayed_r1_o2=%d\n
8269,[DEBUG] (timing_recurrent_common.h: 72): ,\tdelta_time=%u
8270,[DEBUG] (timing_recurrent_common.h: 86): ,\tdelta_time=%u
8271,[DEBUG] (timing_recurrent_common.h: 102): ,\tOpening pre-window
8272,[DEBUG] (timing_recurrent_common.h: 111): ,\tTime_since_last_pre_event=%u
8273,[DEBUG] (timing_recurrent_common.h: 115): ,\t\tClosing pre-window
8274,[DEBUG] (timing_recurrent_common.h: 119): ,\t\tRe-opening pre-window
8275,[DEBUG] (timing_recurrent_common.h: 128): ,\tTime_since_last_post_event=%u
8276,[DEBUG] (timing_recurrent_common.h: 132): ,\t\tIgnoring coinciding spikes
8277,[DEBUG] (timing_recurrent_common.h: 145): ,\t\tDecrementing accumulator=%d
8278,[DEBUG] (timing_recurrent_common.h: 148): ,\t\tApplying depression
8279,[DEBUG] (timing_recurrent_common.h: 160): ,\t\tPost-window closed - Opening pre-window
8280,[DEBUG] (timing_recurrent_common.h: 166): ,\tInvalid state %u
8281,[DEBUG] (timing_recurrent_common.h: 183): ,\tOpening post-window
8282,[DEBUG] (timing_recurrent_common.h: 192): ,\tTime_since_last_post_event=%u
8283,[DEBUG] (timing_recurrent_common.h: 197): ,\t\tClosing post-window
8284,[DEBUG] (timing_recurrent_common.h: 201): ,\t\tRe-opening post-window
8285,[DEBUG] (timing_recurrent_common.h: 211): ,\tTime_since_last_pre_event=%u
8286,[DEBUG] (timing_recurrent_common.h: 215): ,\t\tIgnoring coinciding spikes
8287,[DEBUG] (timing_recurrent_common.h: 228): ,\t\tIncrementing accumulator=%d
8288,[DEBUG] (timing_recurrent_common.h: 231): ,\t\tApplying potentiation
8289,[DEBUG] (timing_recurrent_common.h: 243): ,\t\tPre-window closed - Opening post-window
8290,[DEBUG] (timing_recurrent_common.h: 249): ,\tInvalid state %u
8291,[INFO] (timing_recurrent_dual_fsm_impl.c: 34): ,timing_initialise: starting
8292,[INFO] (timing_recurrent_dual_fsm_impl.c: 35): ,\tRecurrent dual-FSM STDP rule
8293,[INFO] (timing_recurrent_dual_fsm_impl.c: 46): ,\tAccumulator depression=%d, Accumulator potentiation=%d
8294,[INFO] (timing_recurrent_dual_fsm_impl.c: 56): ,timing_initialise: completed successfully
8295,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 71): ,\t\tResetting post-window: random=%d, window_length=%u
8296,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 88): ,\t\tResetting pre-window: random=%d, window_length=%u
8297,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 107): ,\t\t\ttime_since_last_post:%u, post_window_length:%u
8298,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 119): ,\t\t\t\tDecrementing accumulator=%d
8299,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 122): ,\t\t\t\tApplying depression
8300,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 147): ,\t\t\ttime_since_last_pre:%u, pre_window_length:%u
8301,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 159): ,\t\t\t\tIncrementing accumulator=%d
8302,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 162): ,\t\t\t\tApplying potentiation
8303,[INFO] (timing_recurrent_fixed_impl.c: 30): ,timing_initialise: starting
8304,[INFO] (timing_recurrent_fixed_impl.c: 31): ,\tRecurrent STDP rule
8305,[INFO] (timing_recurrent_fixed_impl.c: 45): ,\tAccumulator depression=%d, Accumulator potentiation=%d
8306,[INFO] (timing_recurrent_fixed_impl.c: 47): ,timing_initialise: completed successfully
8307,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 34): ,timing_initialise: starting
8308,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 35): ,\tRecurrent pre-calculated stochastic STDP rule
8309,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 46): ,\tAccumulator depression=%d, Accumulator potentiation=%d
8310,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 56): ,timing_initialise: completed successfully
8311,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 56): ,\t\tRandom=%d, Exp dist=%u
8312,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 67): ,\t\tRandom=%d, Exp dist=%u
8313,[INFO] (timing_recurrent_stochastic_impl.c: 33): ,timing_initialise: starting
8314,[INFO] (timing_recurrent_stochastic_impl.c: 34): ,\tRecurrent stochastic STDP rule
8315,[INFO] (timing_recurrent_stochastic_impl.c: 45): ,\tAccumulator depression=%d, Accumulator potentiation=%d
8316,[INFO] (timing_recurrent_stochastic_impl.c: 55): ,timing_initialise: completed successfully
8317,[DEBUG] (timing_recurrent_stochastic_impl.h: 57): ,\t\tCDF=%d, Random=%d
8318,[INFO] (timing_vogels_2011_impl.c: 33): ,timing_initialise: starting
8319,[INFO] (timing_vogels_2011_impl.c: 34): ,\tVogels 2011 timing rule
8320,[INFO] (timing_vogels_2011_impl.c: 43): ,timing_initialise: completed successfully
8321,[DEBUG] (timing_vogels_2011_impl.h: 82): ,\tdelta_time=%d, new_trace=%d\n
8322,[DEBUG] (timing_vogels_2011_impl.h: 118): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
8323,[DEBUG] (timing_vogels_2011_impl.h: 139): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
8324,[DEBUG] (weight_additive_one_term_impl.c: 34): ,weight_initialise: starting
8325,[DEBUG] (weight_additive_one_term_impl.c: 35): ,\tSTDP additive one-term weight dependence
8326,[ERROR] (weight_additive_one_term_impl.c: 43): ,Could not initialise weight region data
8327,[DEBUG] (weight_additive_one_term_impl.c: 56): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d
8328,[DEBUG] (weight_additive_one_term_impl.c: 58): ,weight_initialise: completed successfully
8329,[DEBUG] (weight_additive_one_term_impl.h: 102): ,\told_weight:%u, a2+:%d, a2-:%d, scaled a2+:%d, scaled a2-:%d, new_weight:%d
8330,[DEBUG] (weight_additive_two_term_impl.c: 34): ,weight_initialise: starting
8331,[DEBUG] (weight_additive_two_term_impl.c: 35): ,\tSTDP additive two-term weight dependance
8332,[ERROR] (weight_additive_two_term_impl.c: 43): ,Could not initialise weight region data
8333,[DEBUG] (weight_additive_two_term_impl.c: 61): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, A3+:%d, A3-:%d
8334,[DEBUG] (weight_additive_two_term_impl.c: 63): ,weight_initialise: completed successfully
8335,[DEBUG] (weight_additive_two_term_impl.h: 113): ,\told_weight:%u, a2+:%d, a2-:%d, a3+:%d, a3-:%d
8336,[DEBUG] (weight_additive_two_term_impl.h: 117): ,\tscaled a2+:%d, scaled a2-:%d, scaled a3+:%d, scaled a3-:%d, new_weight:%d
8337,[DEBUG] (weight_multiplicative_impl.c: 33): ,weight_initialise: starting
8338,[DEBUG] (weight_multiplicative_impl.c: 34): ,\tSTDP multiplicative weight dependence
8339,[ERROR] (weight_multiplicative_impl.c: 41): ,Could not initialise weight region data
8340,[ERROR] (weight_multiplicative_impl.c: 47): ,Could not initialise weight region data
8341,[DEBUG] (weight_multiplicative_impl.c: 69): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, Weight multiply right shift:%u
8342,[DEBUG] (weight_multiplicative_impl.c: 72): ,weight_initialise: completed successfully
8343,[DEBUG] (weight_multiplicative_impl.h: 99): ,\tnew_weight:%d\n
8344,[INFO] (population_table_binary_search_impl.c: 98): ,master_population\n
8345,[INFO] (population_table_binary_search_impl.c: 99): ,------------------------------------------\n
8346,[DEBUG] (population_table_binary_search_impl.c: 111): ,index (%d, %d), key: 0x%.8x, mask: 0x%.8x, offset: 0x%.8x, address: 0x%.8x, row_length: %u\n
8347,[DEBUG] (population_table_binary_search_impl.c: 118): ,index (%d, %d), key: 0x%.8x, mask: 0x%.8x, offset: 0x%.8x, address: 0x%.8x, single
8348,[INFO] (population_table_binary_search_impl.c: 122): ,------------------------------------------\n
8349,[DEBUG] (population_table_binary_search_impl.c: 128): ,population_table_initialise: starting
8350,[DEBUG] (population_table_binary_search_impl.c: 130): ,master pop base address is %d
8351,[DEBUG] (population_table_binary_search_impl.c: 132): ,master pop table length is %d\n
8352,[DEBUG] (population_table_binary_search_impl.c: 134): ,master pop table entry size is %d\n
8353,[DEBUG] (population_table_binary_search_impl.c: 138): ,pop table size is %d\n
8354,[ERROR] (population_table_binary_search_impl.c: 144): ,Could not allocate master population table
8355,[ERROR] (population_table_binary_search_impl.c: 157): ,Could not allocate master population address list
8356,[DEBUG] (population_table_binary_search_impl.c: 163): ,pop table size: %u (%u bytes)
8357,[DEBUG] (population_table_binary_search_impl.c: 165): ,address list size: %u (%u bytes)
8358,[INFO] (population_table_binary_search_impl.c: 175): ,the stored synaptic matrix base address is located at: 0x%08x
8359,[INFO] (population_table_binary_search_impl.c: 177): ,the direct synaptic matrix base address is located at: 0x%08x
8360,[DEBUG] (population_table_binary_search_impl.c: 191): ,searching for key %d
8361,[DEBUG] (population_table_binary_search_impl.c: 193): ,position = %d
8362,[DEBUG] (population_table_binary_search_impl.c: 201): ,spike %u (= %x): population found in master populationtable but count is 0
8363,[DEBUG] (population_table_binary_search_impl.c: 204): ,about to try to find neuron id
8364,[DEBUG] (population_table_binary_search_impl.c: 206): ,found neuron id of %d
8365,[DEBUG] (population_table_binary_search_impl.c: 211): ,checking bit field
8366,[DEBUG] (population_table_binary_search_impl.c: 213): ,can be checked, bitfield is allocated
8367,[DEBUG] (population_table_binary_search_impl.c: 218): ,tested and was not set
8368,[DEBUG] (population_table_binary_search_impl.c: 222): ,was set, carrying on
8369,[DEBUG] (population_table_binary_search_impl.c: 227): ,bit_field was not set up. either its due to a lack of dtcm, or because the bitfield was merged into the routing table
8370,[DEBUG] (population_table_binary_search_impl.c: 231): ,about to set items
8371,[DEBUG] (population_table_binary_search_impl.c: 235): ,about to do some other print
8372,[DEBUG] (population_table_binary_search_impl.c: 239): ,spike = %08x, entry_index = %u, start = %u, count = %u
8373,[DEBUG] (population_table_binary_search_impl.c: 247): ,found a entry which has a ghost entry for key %d
8374,[DEBUG] (population_table_binary_search_impl.c: 256): ,Ghost searches: %u\n
8375,[DEBUG] (population_table_binary_search_impl.c: 259): ,spike %u (= %x): population not found in master population table
8376,[DEBUG] (population_table_binary_search_impl.c: 320): ,neuron_id = %u, block_address = 0x%.8x,row_length = %u, row_address = 0x%.8x, n_bytes = %u
8377,[DEBUG] (synaptogenesis_dynamics_static_impl.c: 37): ,%s
8378,[ERROR] (synaptogenesis_dynamics_static_impl.c: 47): ,%s
8379,[ERROR] (synaptogenesis_dynamics_static_impl.c: 57): ,%s
8380,[DEBUG] (topographic_map_impl.c: 179): ,SR init.
8381,[DEBUG] (topographic_map_impl.c: 180): ,Registering DMA callback
8382,[DEBUG] (topographic_map_impl.c: 184): ,Callback registered
8383,[ERROR] (topographic_map_impl.c: 298): ,Fail init DMA buffers
8384,[DEBUG] (topographic_map_impl.c: 314): ,SR init complete.
8385,[DEBUG] (topographic_map_impl.c: 395): ,No previous spikes
8386,[ERROR] (topographic_map_impl.c: 456): ,FAIL@key %d
8387,[ERROR] (topographic_map_impl.c: 515): ,DMA queue full-read
8388,[ERROR] (topographic_map_impl.c: 553): ,%s
8389,[DEBUG] (topographic_map_impl.c: 608): ,row is full
8390,[DEBUG] (synapse_types_alpha_impl.h: 149): ,did not recognise synapse type %i
8391,[DEBUG] (synapse_types_alpha_impl.h: 162): ,-------------------------------------\n
8392,[DEBUG] (synapse_types_alpha_impl.h: 163): ,exc_response  = %11.4k\n
8393,[DEBUG] (synapse_types_alpha_impl.h: 164): ,inh_response  = %11.4k\n
8394,[DEBUG] (synapse_types_delta_impl.h: 146): ,did not recognise synapse type %i
8395,[DEBUG] (synapse_types_dual_excitatory_exponential_impl.h: 160): ,did not recognise synapse type %i
8396,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 182): ,exc_decay  = %11.4k\n
8397,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 183): ,exc_init   = %11.4k\n
8398,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 184): ,exc2_decay = %11.4k\n
8399,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 185): ,exc2_init  = %11.4k\n
8400,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 186): ,inh_decay  = %11.4k\n
8401,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 187): ,inh_init   = %11.4k\n
8402,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 189): ,gsyn_excitatory_initial_value = %11.4k\n
8403,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 191): ,gsyn_excitatory2_initial_value = %11.4k\n
8404,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 193): ,gsyn_inhibitory_initial_value = %11.4k\n
8405,[DEBUG] (synapse_types_exponential_impl.h: 151): ,did not recognise synapse type %i
8406,[DEBUG] (synapse_types_exponential_impl.h: 173): ,exc_decay = %R\n
8407,[DEBUG] (synapse_types_exponential_impl.h: 174): ,exc_init  = %R\n
8408,[DEBUG] (synapse_types_exponential_impl.h: 175): ,inh_decay = %R\n
8409,[DEBUG] (synapse_types_exponential_impl.h: 176): ,inh_init  = %R\n
8410,[DEBUG] (synapse_types_exponential_impl.h: 178): ,gsyn_excitatory_initial_value = %11.4k\n
8411,[DEBUG] (synapse_types_exponential_impl.h: 180): ,gsyn_inhibitory_initial_value = %11.4k\n
8412,[ERROR] (threshold_type_external_device_control.h: 105): ,Unknown enum value %u
8413,[DEBUG] (threshold_type_external_device_control.h: 127): ,Sending key=0x%08x payload=0x%08x
8414,[DEBUG] (threshold_type_external_device_control.h: 130): ,Sending key=0x%08x
8415,[DEBUG] (robot_motor_control.c: 77): ,%s = %d, %s = %d, delta = %d, threshold = %u
8416,[DEBUG] (robot_motor_control.c: 80): ,Moving %s
8417,[DEBUG] (robot_motor_control.c: 85): ,Moving %s
8418,[DEBUG] (robot_motor_control.c: 91): ,Motion is indeterminate in %s-%s direction
8419,[DEBUG] (robot_motor_control.c: 105): ,Resending %s = %d
8420,[DEBUG] (robot_motor_control.c: 108): ,Resending %s = %d
8421,[DEBUG] (robot_motor_control.c: 112): ,Resending No Motion in the %s-%s direction
8422,[DEBUG] (robot_motor_control.c: 123): ,Timer tick %d
8423,[INFO] (robot_motor_control.c: 127): ,Simulation complete.\n
8424,[DEBUG] (robot_motor_control.c: 140): ,Received spike from unknown neuron %d
8425,[INFO] (robot_motor_control.c: 166): ,Reading parameters from 0x%.8x
8426,[INFO] (robot_motor_control.c: 187): ,Key = %d, speed = %d, sample_time = %d, update_time = %d, delay_time = %d, delta_threshold = %d, continue_if_not_different = %d
8427,[DEBUG] (robot_motor_control.c: 193): ,Received spike %x at time %d\n
8428,[INFO] (robot_motor_control.c: 200): ,initialise: started
8429,[INFO] (robot_motor_control.c: 222): ,initialise: completed successfully
8430,[ERROR] (robot_motor_control.c: 232): ,Error in initialisation - exiting!
8431,[INFO] (spike_source_poisson.c: 226): ,atom %d
8432,[INFO] (spike_source_poisson.c: 227): ,scaled_start = %u
8433,[INFO] (spike_source_poisson.c: 228): ,scaled end = %u
8434,[INFO] (spike_source_poisson.c: 229): ,is_fast_source = %d
8435,[INFO] (spike_source_poisson.c: 230): ,exp_minus_lamda = %k
8436,[INFO] (spike_source_poisson.c: 231): ,sqrt_lambda = %k
8437,[INFO] (spike_source_poisson.c: 232): ,isi_val = %k
8438,[INFO] (spike_source_poisson.c: 233): ,time_to_spike = %k
8439,[INFO] (spike_source_poisson.c: 245): ,read global_parameters: starting
8440,[INFO] (spike_source_poisson.c: 250): ,\tkey = %08x, set rate mask = %08x, timer offset = %u
8441,[INFO] (spike_source_poisson.c: 254): ,\tseed = %u %u %u %u
8442,[INFO] (spike_source_poisson.c: 259): ,\tspike sources = %u, starting at %u
8443,[INFO] (spike_source_poisson.c: 260): ,seconds_per_tick = %k\n
8444,[INFO] (spike_source_poisson.c: 261): ,ticks_per_second = %k\n
8445,[INFO] (spike_source_poisson.c: 263): ,slow_rate_per_tick_cutoff = %k\n
8446,[INFO] (spike_source_poisson.c: 265): ,fast_rate_per_tick_cutoff = %k\n
8447,[INFO] (spike_source_poisson.c: 267): ,read_global_parameters: completed successfully
8448,[ERROR] (spike_source_poisson.c: 286): ,Failed to allocate poisson_parameters
8449,[INFO] (spike_source_poisson.c: 295): ,read_poisson_parameters: completed successfully
8450,[INFO] (spike_source_poisson.c: 307): ,Recording flags = 0x%08x
8451,[INFO] (spike_source_poisson.c: 321): ,Initialise: started
8452,[INFO] (spike_source_poisson.c: 379): ,Initialise: completed successfully
8453,[ERROR] (spike_source_poisson.c: 394): ,failed to reread the Poisson parameters from SDRAM
8454,[INFO] (spike_source_poisson.c: 407): ,Successfully resumed Poisson spike source at time: %u
8455,[INFO] (spike_source_poisson.c: 417): ,store_parameters: starting
8456,[INFO] (spike_source_poisson.c: 433): ,store_parameters: completed successfully
8457,[DEBUG] (spike_source_poisson.c: 449): ,Sending spike packet %x at %d\n
8458,[ERROR] (spike_source_poisson.c: 460): ,Cannot reallocate spike buffer
8459,[DEBUG] (spike_source_poisson.c: 539): ,Generating %d spikes
8460,[DEBUG] (spike_source_poisson.c: 601): ,Timer tick %u
8461,[ERROR] (spike_source_poisson.c: 610): ,Failed to write poisson parameters to SDRAM
8462,[DEBUG] (spike_source_poisson.c: 669): ,Setting rate of %u (%u) to %kHz (%k per tick)
8463,[ERROR] (spike_source_poisson.c: 706): ,Error in initialisation - exiting!
8464,[ERROR] (connection_generator.c: 151): ,Could not create generator
8465,[ERROR] (connection_generator.c: 163): ,Connection generator with hash %u not found
8466,[DEBUG] (delay_expander.c: 92): ,Generated %u synapses
8467,[DEBUG] (delay_expander.c: 111): ,Rounded delay %k to %u
8468,[DEBUG] (delay_expander.c: 162): ,Generating %u delay edges for %u atoms starting at %u
8469,[INFO] (delay_expander.c: 180): ,Starting To Build Delays
8470,[INFO] (delay_expander.c: 189): ,\tReading SDRAM delay params at 0x%08x, expander params at 0x%08x
8471,[INFO] (delay_expander.c: 194): ,!!!   Error reading SDRAM data   !!!
8472,[INFO] (delay_expander.c: 198): ,Finished On Machine Delays!
8473,[ERROR] (matrix_generator.c: 137): ,Could not create generator
8474,[ERROR] (matrix_generator.c: 149): ,Matrix generator with hash %u not found
8475,[DEBUG] (matrix_generator.c: 184): ,Rounded delay %k to %u
8476,[DEBUG] (matrix_generator.c: 196): ,Rounded weight %k to %u
8477,[DEBUG] (matrix_generator.c: 226): ,Generated %u synapses
8478,[DEBUG] (matrix_generator.c: 255): ,\t\tTotal synapses generated = %u. Done!
8479,[ERROR] (param_generator.c: 137): ,Could not create generator
8480,[ERROR] (param_generator.c: 149): ,Param generator with hash %u not found
8481,[DEBUG] (synapse_expander.c: 103): ,Synaptic matrix offset = %u, delayed offset = %u
8482,[DEBUG] (synapse_expander.c: 105): ,Max row synapses = %u, max delayed row synapses = %u
8483,[DEBUG] (synapse_expander.c: 117): ,Generating matrix at 0x%08x, delayed at 0x%08x
8484,[ERROR] (synapse_expander.c: 139): ,\tMatrix generation failed
8485,[INFO] (synapse_expander.c: 161): ,Generating %u edges for %u atoms starting at %u
8486,[INFO] (synapse_expander.c: 187): ,Starting To Build Connectors
8487,[INFO] (synapse_expander.c: 195): ,\tReading SDRAM at 0x%08x, writing to matrix at 0x%08x
8488,[INFO] (synapse_expander.c: 200): ,!!!   Error reading SDRAM data   !!!
8489,[INFO] (synapse_expander.c: 204): ,Finished On Machine Connectors!
8490,[DEBUG] (connection_generator_all_to_all.h: 47): ,All to all connector, allow self connections = %u
8491,[DEBUG] (connection_generator_all_to_all.h: 63): ,Generating for %u
8492,[DEBUG] (connection_generator_all_to_all.h: 78): ,Not generating for post %u
8493,[DEBUG] (connection_generator_fixed_post.h: 61): ,Fixed Number Post Connector, allow self connections = %u, with replacement = %u, n_post = %u, n post neurons = %u
8494,[DEBUG] (connection_generator_fixed_post.h: 96): ,Generating %u from %u possible synapses
8495,[INFO] (connection_generator_fixed_post.h: 175): ,Check: indices[%u] is %u
8496,[INFO] (connection_generator_fixed_post.h: 177): ,pre_neuron_index is %u count_indices is %u
8497,[DEBUG] (connection_generator_fixed_pre.h: 66): ,Fixed Total Number Connector, allow self connections = %u, with replacement = %u, n_pre = %u, n pre neurons = %u
8498,[DEBUG] (connection_generator_fixed_pre.h: 102): ,Generating %u from %u possible synapses
8499,[ERROR] (connection_generator_fixed_pre.h: 112): ,Created out of order!
8500,[WARNING] (connection_generator_fixed_pre.h: 122): ,Could not allocate in DTCM, trying SDRAM
8501,[ERROR] (connection_generator_fixed_pre.h: 128): ,Could not allocate array for indices
8502,[DEBUG] (connection_generator_fixed_prob.h: 61): ,Fixed Probability Connector, allow self connections = %u, probability = %k
8503,[WARNING] (connection_generator_fixed_prob.h: 102): ,Row overflow
8504,[DEBUG] (connection_generator_fixed_total.h: 66): ,Fixed Total Number Connector, allow self connections = %u, with replacement = %u, n connections = %u, n potential connections = %u
8505,[WARNING] (connection_generator_fixed_total.h: 165): ,Could not create %u connections
8506,[DEBUG] (connection_generator_fixed_total.h: 170): ,Generating %u of %u synapses
8507,[DEBUG] (connection_generator_kernel.h: 73): ,Kernel connector, m_kernelWidth, m_kernelHeight = %u %u
8508,[DEBUG] (connection_generator_kernel.h: 89): ,Generating for %u
8509,[DEBUG] (connection_generator_one_to_one.h: 31): ,One to One connector
8510,[DEBUG] (matrix_generator_common.h: 51): ,Delay of %u is too small
8511,[DEBUG] (matrix_generator_common.h: 58): ,Delay of %u is too big
8512,[DEBUG] (matrix_generator_static.h: 113): ,Max stage = %u
8513,[DEBUG] (matrix_generator_static.h: 129): ,row[0] = 0x%08x
8514,[DEBUG] (matrix_generator_static.h: 140): ,row[%u] = 0x%08x
8515,[DEBUG] (matrix_generator_static.h: 146): ,row[%u] = 0x%08x
8516,[DEBUG] (matrix_generator_static.h: 155): ,Row size at 0x%08x for stage %u
8517,[DEBUG] (matrix_generator_static.h: 163): ,write[%u] = 0x%08x
8518,[ERROR] (matrix_generator_static.h: 180): ,Delay stage %u has not been initialised; raw delay = %u, delay = %u, max stage = %u
8519,[WARNING] (matrix_generator_static.h: 187): ,Row for delay stage %u is full - word not added!
8520,[DEBUG] (matrix_generator_static.h: 197): ,Writing word to 0x%08x
8521,[ERROR] (matrix_generator_stdp.h: 207): ,Delay stage %u has not been initialised
8522,[WARNING] (matrix_generator_stdp.h: 215): ,Row %u only has %u half words of %u free - not writing
8523,[DEBUG] (param_generator_constant.h: 46): ,Constant value %k
8524,[DEBUG] (param_generator_exponential.h: 58): ,exponential beta = %k
8525,[DEBUG] (param_generator_kernel.h: 69): ,Kernel param generator; kernelWidth, kernelHeight = %u,%u
8526,[ERROR] (param_generator_kernel.h: 118): ,Kernel coordinates off range (%d, %d)
8527,[DEBUG] (param_generator_normal.h: 61): ,normal mu = %k, sigma = %k
8528,[DEBUG] (param_generator_normal_clipped.h: 65): ,normal clipped mu = %k, sigma = %k, low = %k, high = %k
8529,[DEBUG] (param_generator_normal_clipped_to_boundary.h: 65): ,normal clipped to boundary mu = %k, sigma = %k, low = %k, high = %k
8530,[DEBUG] (param_generator_uniform.h: 61): ,Uniform low = %k, high = %k
