Metadata-Version: 2.1
Name: perfect
Version: 0.0.1
Summary: The @perfect decorator - a utility library which makes it simpler to create flexible decorators
Home-page: https://github.com/kalaspuff/perfect
License: MIT
Keywords: perfect,decorator,perfect decorator,decorator on classes,decorator with arguments
Author: Carl Oscar Aaro
Author-email: hello@carloscar.com
Requires-Python: >=3.6,<4.0
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Typing :: Typed
Project-URL: Repository, https://github.com/kalaspuff/perfect
Description-Content-Type: text/markdown

# `perfect`
[![pypi](https://badge.fury.io/py/perfect.svg)](https://pypi.python.org/pypi/perfect/)
[![Made with Python](https://img.shields.io/pypi/pyversions/perfect)](https://www.python.org/)
[![Type hinted - mypy validated](https://img.shields.io/badge/typehinted-yes-teal)](https://github.com/kalaspuff/perfect)
[![MIT License](https://img.shields.io/github/license/kalaspuff/perfect.svg)](https://github.com/kalaspuff/perfect/blob/master/LICENSE)
[![Code coverage](https://codecov.io/gh/kalaspuff/perfect/branch/master/graph/badge.svg)](https://codecov.io/gh/kalaspuff/perfect/tree/master/perfect)

*A utility library which makes it simpler to create flexible decorators by just decorating them with the `@perfect` decorator.*


## Installation with `pip`
Like you would install any other Python package, use `pip`, `poetry`, `pipenv` or your weapon of choice.
```
$ pip install perfect
```


## Usage and examples

#### `@perfect` decorator

