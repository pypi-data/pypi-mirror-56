#!/usr/bin/perl
#
# produces an index.html file where none exists
# as a workaround for disabled directory listings on the webserver
#
use strict;
use File::Basename;
my $line = ' ';
my $file = 'index.html';
my $today = `date`;
my $fileroot = '/Users/dprice/web-phantom/';
my $webroot = 'https://phantomsph.bitbucket.io/';
my $dir = `pwd`;
chomp($dir);
#
# if you change the ls command, MAKE SURE the script still works
#
my $lscommand = 'ls -l -h -p';
#
# check if an index.html file already exists
#
if (-e $file) {
#
# replace the existing file if it was generated by this script
# (ie. first line matches our header as printed below)
#
   $_=`head -1 $file`;
   if ( m/(^<!--Generated by indexhtml\.pl.*)/) {
      print STDERR "replacing previously generated $file (in $dir)\n";
#
#--add these two lines to remove all index.html files generated by this script
#
      my $err = `rm $file`;
      #die "deleted previously generated index.html\n";
   } else {
#
# do nothing if it was created by another means
#
      die "$file exists and was not produced by this script (in $dir)\n";
   }
} else {

  #die "leaving directory blank \n";
#
# generate a completely new file
#
  print STDERR "creating new $file (in $dir)\n";
}
#
# work out what pathname to put in the title
#
my $pwd = `pwd`;
$_=$pwd;
if ( m/$fileroot.*/) {
  $pwd =~ s/$fileroot/$webroot/;
} else {
  print "WARNING: directory is not a subdirectory of $fileroot, using absolute filenames\n";
}

open(OUT,"> $file") || die "error opening $file\n";
print OUT "<!--Generated by indexhtml.pl, written by Daniel Price-->\n";
print OUT "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n";
print OUT "<html>\n";
print OUT "<head>\n";
print OUT "<title>Index of $pwd</title>\n";
print OUT "</head>\n";
print OUT "<body>\n";
print OUT "<h2>Index of $pwd</h2>\n";
print OUT "<table>\n";
print OUT "<tr><th><a href=\"?C=N;O=D\">Name</a></th><th><a href=\"?C=M;O=A\">Last Modified</a></th><th><a href=\"?C=S;O=A\">Size</a></th></tr>\n";
print OUT "<tr><th colspan=\"3\"><hr></tr>\n";
print OUT "<tr><td><a href=\"../\">../</a></td></tr>\n";
#
# all we do is reformat the output of ls
#
foreach $line (`$lscommand`) {
   #
   # extract the various bits and pieces from the output of the ls command
   #
   my ( $perm, $crap, $uid, $gid, $size, $day, $mon, $time, $lsfile ) = split ' ',$line;
   #
   # skip lines which are not files
   #
   if ($size != ' ') {
      #
      # do not print size for directories (replace it with '-')
      #
      if (-d $lsfile) { $size = '-' }
      #
      # get remains of line for filenames with spaces in them
      #
      $lsfile = substr $line, index($line,$lsfile);
      #
      # print line of html table, but skip self-listing
      #
      $_=$lsfile;
      if ( !m/$file/ ) {
        print OUT "<tr><td><a href=\"$lsfile\">$lsfile</a></td><td align=\"right\">$day $mon $time </td><td align=\"right\">$size</td></tr>\n";
      }
   }
}
print OUT "</table>\n";
print OUT "<hr>\n";
print OUT "<footer>\n";
my ($thisdir,$path) = fileparse($pwd);
$line = `$lscommand ../ | grep $thisdir`;
my ( $perm, $crap, $uid, $gid, $size, $day, $mon, $time, $lsfile ) = split ' ',$line;
print OUT "Directory last modified $day $mon $time\n";
print OUT "</footer>\n";
print OUT "</html>\n";
print OUT "</body>\n";
close(OUT);
