[tox]
minversion = 2.5.0
skipsdist = True
envlist = py27,py37,pep8,genconfig,genpolicy

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
basepython = python3
setenv = VIRTUAL_ENV={envdir}
deps = -c{env:UPPER_CONSTRAINTS_FILE:file://{toxinidir}/upper-constraints.txt}
       -r{toxinidir}/test-requirements.txt
       -r{toxinidir}/requirements.txt
       .[memcache,mongodb]
commands =
  find xerox -type f -name "*.pyc" -delete
  stestr run {posargs}
whitelist_externals =
  bash
  find
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY PBR_VERSION

# [testenv:api-ref]
# basepython = python3
# deps = -r{toxinidir}/doc/requirements.txt
# commands =
#   bash -c "rm -rf api-ref/build"
#   sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:pep8]
basepython = python3
deps =
     .[bandit]
     {[testenv]deps}
commands =
  flake8 --ignore=D100,D101,D102,D103,D104,E305,E402,W503,W504,W605

  # Run security linter
  bandit -r xerox -x 'xerox/tests/*'

# [testenv:fast8]
# basepython = python3
# envdir = {toxworkdir}/pep8
# commands =
#   {toxinidir}/tools/fast8.sh
# passenv = FAST8_NUM_COMMITS

[testenv:bandit]
basepython = python3
# NOTE(browne): This is required for the integration test job of the bandit
# project. Please do not remove.
deps = -c{env:UPPER_CONSTRAINTS_FILE:file://{toxinidir}/upper-constraints.txt}
       -r{toxinidir}/requirements.txt
       .[bandit]
commands = bandit -r xerox -x 'xerox/tests/*'

[testenv:cover]
basepython = python3
# Also do not run test_coverage_ext tests while gathering coverage as those
# tests conflict with coverage.
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source xerox --parallel-mode
commands =
  find xerox -type f -name "*.pyc" -delete
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml

# [testenv:patch_cover]
# basepython = python3
# commands =
#   bash tools/cover.sh

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:debug]
basepython = python3
commands =
  find xerox -type f -name "*.pyc" -delete
  oslo_debug_helper {posargs}
passenv =
    KSTEST_ADMIN_URL
    KSTEST_ADMIN_USERNAME
    KSTEST_ADMIN_PASSWORD
    KSTEST_ADMIN_DOMAIN_ID
    KSTEST_PUBLIC_URL
    KSTEST_USER_USERNAME
    KSTEST_USER_PASSWORD
    KSTEST_USER_DOMAIN_ID
    KSTEST_PROJECT_ID

[flake8]
filename= *.py,xerox-manage
show-source = true
enable-extensions = H106,H203,H904

# D100: Missing docstring in public module
# D101: Missing docstring in public class
# D102: Missing docstring in public method
# D103: Missing docstring in public function
# D104: Missing docstring in public package
# D203: 1 blank line required before class docstring (deprecated in pep257)
# TODO(wxy): Fix the pep8 issue.
# E402: module level import not at top of file
# W503: line break before binary operator
ignore = D100,D101,D102,D103,D104,D203,E402,W503

exclude=.venv,.git,.tox,build,dist,*lib/python*,*egg,tools,vendor,.update-venv,*.ini,*.po,*.pot
max-complexity=24

# [testenv:docs]
# TODO(muxin)
# basepython = python3
# deps =
#   -r{toxinidir}/doc/requirements.txt
#   .[ldap,memcache,mongodb]
# commands=
#     bash -c "rm -rf doc/build"
#     bash -c "rm -rf doc/source/api"
#     sphinx-build -W -b html -d doc/build/doctrees doc/source doc/build/html

# FIXME(gyee): we need to pre-create the doc/build/pdf/_static directory as a
# workaround because sphinx_feature_classification.support_matrix extension
# is operating under the assumption that the _static directory already exist
# and trying to copy support-matrix.css into it. We need to remove
# the workaround after this patch has merged:
# https://review.opendev.org/#/c/679860

# [testenv:releasenotes]
# basepython = python3
# deps = -r{toxinidir}/doc/requirements.txt
# commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:genconfig]
basepython = python3
commands = oslo-config-generator --config-file=config-generator/xerox.conf

[testenv:genpolicy]
basepython = python3
commands = oslopolicy-sample-generator --config-file config-generator/xerox-policy-generator.conf

[hacking]
import_exceptions =
  xerox.i18n
  six.moves
local-check-factory = xerox.tests.hacking.checks.factory
