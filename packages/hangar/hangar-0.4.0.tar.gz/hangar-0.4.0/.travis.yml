matrix:
  include:
    - os: linux
      dist: xenial
      language: python
      python: '3.7'
      cache: pip
      env:
        - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
        - SEGFAULT_SIGNALS=all
        - TOXENV=docs
      addons:
        apt_packages:
          - pandoc
    # cover
    - os: linux
      dist: xenial
      language: python
      python: '3.7'
      cache: pip
      env:
        - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
        - SEGFAULT_SIGNALS=all
        - TOXENV=py37-cover-ml,report
      after_success:
        - codecov
    - name: "Win Python 3.7: Run tests"
      os: windows
      language: shell
      env:
        - PATH=/c/Python37:/c/Python37/Scripts:$PATH
        - TOXENV=py37-cover-ml,report
      before_install:
        - choco install python --version 3.7.3
        - python -m pip install --upgrade pip
      after_success:
        - codecov
    - os: osx
      osx_image: xcode9.4
      language: generic
      env:
        - TR_PYTHON_VERSION=3.7.2
        - PYENV_VERSION=3.7.2
        - TOXENV=py37-cover-ml,report
      addons:
        homebrew:
          packages:
            - openssl
            - readline
            - xz
      after_success:
        - codecov
      cache:
        - pip
        - directories:
          - $HOME/.cache/pip
          - $HOME/.cache/pyenv
    # nocov
    - os: linux
      dist: xenial
      language: python
      python: '3.6'
      cache: pip
      env:
        - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
        - SEGFAULT_SIGNALS=all
        - TOXENV=py36-nocov
    - name: "Win Python 3.6: Run tests"
      os: windows
      language: shell
      env:
        - PATH=/c/Python36:/c/Python36/Scripts:$PATH
        - TOXENV=py36-nocov
      before_install:
        - choco install python --version 3.6.2
        - python -m pip install --upgrade pip
    - os: osx
      osx_image: xcode9.4
      language: generic
      env:
        - TR_PYTHON_VERSION=3.6.8
        - PYENV_VERSION=3.6.8
        - TOXENV=py36-nocov
      addons:
        homebrew:
          packages:
            - openssl
            - readline
            - xl
      cache:
        - pip
        - directories:
          - $HOME/.cache/pip
          - $HOME/.cache/pyenv
before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      unset PYENV_ROOT
      mkdir -p ~/.cache/pyenv/versions
      curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
      which pyenv
      ln -s ~/.cache/pyenv/versions ~/.pyenv/versions
      export PATH="$HOME/.pyenv/bin:$PATH"
      pyenv install --skip-existing $TR_PYTHON_VERSION
      eval "$(pyenv init -)"
      pyenv global $TR_PYTHON_VERSION
      # A manual check that the correct version of Python is running.
      python --version
      python -m pip install -U pip setuptools wheel
    fi
  - python --version
  - uname -a
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then lsb_release -a; fi

install:
  - pip install tox
  - pip install codecov
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version

script:
  - tox -v

after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat

notifications:
  email:
    on_success: never
    on_failure: never
