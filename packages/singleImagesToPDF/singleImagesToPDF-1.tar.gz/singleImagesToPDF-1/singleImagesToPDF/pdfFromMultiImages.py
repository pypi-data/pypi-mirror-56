# -*- coding: utf-8 -*-
"""PDF_from_multi_images

Automatically generated by Colaboratory.

Original file is located at
		https://colab.research.google.com/drive/1KDdnwIqwMeqBW6WDl1PLeZUxwrzUPzwk
"""

class pdfFromMultiImgs():
	""""
	do the following three before using:

	1) from PIL import Image
	2) import os
	3) !sudo apt-get install python3-pypdf2
	"""
    
	def __init__(self, img_list = None):
		import os
		self.new_filenames = []
		self.num_imgs = 0
		self.img_list = [i for i in os.listdir() if i.endswith("jpg") or i.endswith('jpeg') or i.endswith('png')]    
		self.img_list.sort()
		self.num_imgs = len(self.img_list)
		
		"""
		if self.img_list:
			self.img_list = self.img_list
			self.num_imgs = len(self.img_list)
		else:
			self.num_imgs = int(input('(Do read help(pdf_from_multi_imgs) Enter the num of img files:'))
			self.img_list = []
		"""

	def get_img_names(self):
		for i in range((self.num_imgs)):
			#self.img_list.append(input('Enter the img #' + str(i)))
			#self.new_filenames.append('/content/converted' + str(i) + '.pdf')
			self.new_filenames.append('converted' + str(i) + '.pdf')  
		print('\n')
		for i in range((self.num_imgs)):
			print('The received imgs are :\n', self.img_list[i] + '\n')
		
	def single_img_to_single_pdf_maker(self):
		from PIL import Image
		import os
		for im, new_filename in zip(self.img_list, self.new_filenames):
			im = Image.open(im)
			if im.mode == 'RGBA':
				im = im.convert('RGB')
			if not os.path.exists(new_filename):
				im.save(new_filename, "PDF", resolution = 100.0)
			print(im, new_filename)

	def single_pdfs_to_merged(self):
		try:
			from PyPDF2 import PdfFileMerger
		except:
			import os
			os.system('pip install PyPDF2')
			from PyPDF2 import PdfFileMerger
		import os
		self.final_file_name = input('\nEnter the file name with which to be stored(Do include ".pdf" extension at the end of file: ' )
		#path= '/content/'
		self.pdf_files = self.new_filenames

		merger = PdfFileMerger()
		for files in self.pdf_files:
			merger.append(files)
		#if not os.path.exists(path+ self.final_file_name):
		#    merger.write(path + self.final_file_name)
		if not os.path.exists(self.final_file_name):
				merger.write(self.final_file_name)  
		merger.close()

	def merge(self):
		import os
		ask = input('Enter the current working Operating System ("a" or "b"): ( a . Linux  /   b.  Windows)? ')
		if ask == 'a':    
				os.system('sudo apt-get install python3-pypdf2')
		else:
				os.system('runas pip3 install PyPDF2')
		#img_items = [i for i in os.listdir() if i.endswith("jpg") or i.endswith('jpeg') or i.endswith('png')]    
		#img_items.sort()
		
		#a = pdf_from_multi_imgs(img_items)
		self.get_img_names()
		self.single_img_to_single_pdf_maker()
		self.single_pdfs_to_merged()
		
		print("\n ================================================")
		print("\nMerged file made at the current working directory\n")
		keep = input("Keep the single files for each image? (yes/no) (y/n): ")
		if(keep == "yes" or keep == "y"):
				pass
		else:
				for i in range(len(self.img_list)):
						os.remove(self.new_filenames[i])
				
				print("\nMerged file kept, single files removed.\n")

"""
		__name__ == "__main__"
		if __name__ == "__main__":
				import os
				ask = input('Enter the current working Operating System ("a" or "b"): ( a . Linux  /   b.  Windows)? ')
				if ask == 'a':    
						os.system('sudo apt-get install python3-pypdf2')
				else:
						os.system('runas pip3 install PyPDF2')
				img_items = [i for i in os.listdir() if i.endswith("jpg") or i.endswith('jpeg') or i.endswith('png')]    
				img_items.sort()
				a = pdf_from_multi_imgs(img_items)
				a.get_img_names()
				a.single_img_to_single_pdf_maker()
				a.single_pdfs_to_merged()
				print("\n ================================================")
				print("\nMerged file made at the current working directory\n")
				keep = input("Keep the single files for each image? (yes/no) (y/n): ")
				if(keep == "yes" or keep == "y"):
						pass
				else:
						for i in range(len(img_items)):
								os.remove(a.new_filenames[i])
						
						print("\nMerged file kept, single files removed.\n")
				
		"""		
		
