Metadata-Version: 2.1
Name: trtm
Version: 0.1.2
Summary: Titan Radiative Transfer Model package
Home-page: https://github.com/seignovert/trtm
Author: Benoit Seignovert
Author-email: benoit.a.seignovert@jpl.nasa.gov
License: MIT
Description: Python parser Titan Radiative Transfer model
        ============================================
        
        |Build| |PyPI| |Python| |Version| |License|
        
        .. |Build| image:: https://github.com/seignovert/trtm/workflows/Github%20Actions/badge.svg
                :target: https://github.com/seignovert/trtm/actions?query=workflow%3A%22Github+Actions%22
        .. |PyPI| image:: https://img.shields.io/badge/PyPI-trtm-blue.svg?logo=python&logoColor=white
                :target: https://pypi.org/project/trtm
        .. |Python| image:: https://img.shields.io/pypi/pyversions/trtm.svg?label=Python
                :target: https://pypi.org/project/trtm
        .. |Version| image:: https://img.shields.io/pypi/v/trtm.svg?label=Version
                :target: https://pypi.org/project/trtm
        .. |License| image:: https://img.shields.io/pypi/l/trtm.svg?label=License
                :target: https://pypi.org/project/trtm
        
        
        Install
        -------
        
        From PyPI:
        
        .. code:: bash
        
            pip install trtm
        
        From the sources:
        
        .. code:: bash
        
            git clone https://github.com/seignovert/trtm.git && cd trtm
            python setup.py develop
        
        
        Usage
        -----
        
        .. code:: python
        
            >>> from trtm import TRTM
        
            >>> data = TRTM('1590648776_1', root='tests/data', suffix='test_SPSDISORT')
        
            >>> data.keys()
            [
                'setup',
                'wvlns',
                'outputs',
                'cube',
                ...
                'FH',
                ...
                'I_F',
                ...
                'albedo_corr',
                ...
            ]
        
            >>> data['setup']
            {
                'NumÃ©ro cube et pixel': 'C1590648776_1',
                'NKS': 4,
                ...
            }
        
            >>> data['NKS']
            4
        
            >>> out['FH'].shape
            (5, 3)
        
            >>> out['FH', 3, 5]
            0.900057
        
            >>> out['I_F'].shape
            (256, 5, 3)
        
            >>> out['I_F', 5.0].shape
            (5, 3)
        
            >>> out['I_F', 1, 1].shape
            (256, )
        
            >>>out['I_F', 1, 1, 5.12]
            0.04082437994
        
        See examples in `Jupyter notebook examples <notebooks/Examples.ipynb>`_.
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
Description-Content-Type: text/x-rst
