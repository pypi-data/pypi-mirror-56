# Dimensionality of the parameter space (int)
nPar: 3
# Number of derived quantities to output (GAMBIT printers handle these). (int)
nDerived: 0
# Number of parameters that are to be treated as discrete (int)
nDiscrete: 0
# Maximum number of generations (int)
maxgen: 5000
# Population size (individuals per generation) (int)
NP: 400
# Boundary constraint: 1=brick wall, 2=random re-initialization, 3=reflection (int)
bndry: 3
# Number of steps to smooth over when checking convergence (int)
convsteps: 10
# Save progress every savecount generations (int)
savecount: 1
# Initialisation strategy: 0=one shot, 1=n-shot, 2=n-shot with error if no valid vectors found. (int)
init_pop_strategy: 2
# Maximum number of times to try to find a valid vector for each slot in the initial population. (int)
max_ini_attempts: 10000
# Output verbosity: 0=only error messages, 1=basic info, 2=civ-level info, 3+=population info (int)
verbose: 2
# Input base seed for random number generation; non-positive means seed from the system clock (int)
seed: -1
# Base seed actually used for random number generation in last run (int)
actual_seed: 496295275
# Inertial weight (double)
omega: 0.7298
# Cognitive weight (double)
phi1: 1.5
# Social weight (double)
phi2: 1.5
# Threshold for gen-level convergence: smoothed fractional improvement in the mean personal best population value (double)
convthresh: 0.001
# Minimum function value to accept for the initial generation if init_population_strategy > 0. (double)
min_acceptable_value: -1e+06
# Use self-optimising adaptive choices for phi1 and phi2 (bool)
adapt_phi: true
# Use self-optimising adaptive choices for omega (bool)
adapt_omega: true
# Initialise particle velocities to zero (bool)
init_stationary: false
# Parameter space boundaries (std::vector<double>)
upperbounds: 
- 1
- 1
- 1
- 3
- 3
- 1
lowerbounds: 
- 0
- 0
- 0
- 1.5
- 1.5
- 0
# Indices of parameters to be treated as discrete (std::vector<int>) (bool)
discrete: []
