"Main interface for rds type defs"
from __future__ import annotations

from datetime import datetime
from typing import List
from typing_extensions import TypedDict


__all__ = (
    "ClientAddSourceIdentifierToSubscriptionResponseEventSubscriptionTypeDef",
    "ClientAddSourceIdentifierToSubscriptionResponseTypeDef",
    "ClientAddTagsToResourceTagsTypeDef",
    "ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef",
    "ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsTypeDef",
    "ClientApplyPendingMaintenanceActionResponseTypeDef",
    "ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef",
    "ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef",
    "ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef",
    "ClientAuthorizeDbSecurityGroupIngressResponseTypeDef",
    "ClientBacktrackDbClusterResponseTypeDef",
    "ClientCopyDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef",
    "ClientCopyDbClusterParameterGroupResponseTypeDef",
    "ClientCopyDbClusterParameterGroupTagsTypeDef",
    "ClientCopyDbClusterSnapshotResponseDBClusterSnapshotTypeDef",
    "ClientCopyDbClusterSnapshotResponseTypeDef",
    "ClientCopyDbClusterSnapshotTagsTypeDef",
    "ClientCopyDbParameterGroupResponseDBParameterGroupTypeDef",
    "ClientCopyDbParameterGroupResponseTypeDef",
    "ClientCopyDbParameterGroupTagsTypeDef",
    "ClientCopyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    "ClientCopyDbSnapshotResponseDBSnapshotTypeDef",
    "ClientCopyDbSnapshotResponseTypeDef",
    "ClientCopyDbSnapshotTagsTypeDef",
    "ClientCopyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef",
    "ClientCopyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef",
    "ClientCopyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef",
    "ClientCopyOptionGroupResponseOptionGroupOptionsTypeDef",
    "ClientCopyOptionGroupResponseOptionGroupTypeDef",
    "ClientCopyOptionGroupResponseTypeDef",
    "ClientCopyOptionGroupTagsTypeDef",
    "ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef",
    "ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef",
    "ClientCreateCustomAvailabilityZoneResponseTypeDef",
    "ClientCreateDbClusterEndpointResponseTypeDef",
    "ClientCreateDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef",
    "ClientCreateDbClusterParameterGroupResponseTypeDef",
    "ClientCreateDbClusterParameterGroupTagsTypeDef",
    "ClientCreateDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientCreateDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientCreateDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientCreateDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientCreateDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientCreateDbClusterResponseDBClusterTypeDef",
    "ClientCreateDbClusterResponseTypeDef",
    "ClientCreateDbClusterScalingConfigurationTypeDef",
    "ClientCreateDbClusterSnapshotResponseDBClusterSnapshotTypeDef",
    "ClientCreateDbClusterSnapshotResponseTypeDef",
    "ClientCreateDbClusterSnapshotTagsTypeDef",
    "ClientCreateDbClusterTagsTypeDef",
    "ClientCreateDbInstanceProcessorFeaturesTypeDef",
    "ClientCreateDbInstanceReadReplicaProcessorFeaturesTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceAssociatedRolesTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceDomainMembershipsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceEndpointTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceListenerEndpointTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceStatusInfosTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseDBInstanceTypeDef",
    "ClientCreateDbInstanceReadReplicaResponseTypeDef",
    "ClientCreateDbInstanceReadReplicaTagsTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceEndpointTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceStatusInfosTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientCreateDbInstanceResponseDBInstanceTypeDef",
    "ClientCreateDbInstanceResponseTypeDef",
    "ClientCreateDbInstanceTagsTypeDef",
    "ClientCreateDbParameterGroupResponseDBParameterGroupTypeDef",
    "ClientCreateDbParameterGroupResponseTypeDef",
    "ClientCreateDbParameterGroupTagsTypeDef",
    "ClientCreateDbSecurityGroupResponseDBSecurityGroupEC2SecurityGroupsTypeDef",
    "ClientCreateDbSecurityGroupResponseDBSecurityGroupIPRangesTypeDef",
    "ClientCreateDbSecurityGroupResponseDBSecurityGroupTypeDef",
    "ClientCreateDbSecurityGroupResponseTypeDef",
    "ClientCreateDbSecurityGroupTagsTypeDef",
    "ClientCreateDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    "ClientCreateDbSnapshotResponseDBSnapshotTypeDef",
    "ClientCreateDbSnapshotResponseTypeDef",
    "ClientCreateDbSnapshotTagsTypeDef",
    "ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef",
    "ClientCreateDbSubnetGroupResponseDBSubnetGroupTypeDef",
    "ClientCreateDbSubnetGroupResponseTypeDef",
    "ClientCreateDbSubnetGroupTagsTypeDef",
    "ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef",
    "ClientCreateEventSubscriptionResponseTypeDef",
    "ClientCreateEventSubscriptionTagsTypeDef",
    "ClientCreateGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    "ClientCreateGlobalClusterResponseGlobalClusterTypeDef",
    "ClientCreateGlobalClusterResponseTypeDef",
    "ClientCreateOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef",
    "ClientCreateOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef",
    "ClientCreateOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef",
    "ClientCreateOptionGroupResponseOptionGroupOptionsTypeDef",
    "ClientCreateOptionGroupResponseOptionGroupTypeDef",
    "ClientCreateOptionGroupResponseTypeDef",
    "ClientCreateOptionGroupTagsTypeDef",
    "ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef",
    "ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef",
    "ClientDeleteCustomAvailabilityZoneResponseTypeDef",
    "ClientDeleteDbClusterEndpointResponseTypeDef",
    "ClientDeleteDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientDeleteDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientDeleteDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientDeleteDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientDeleteDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientDeleteDbClusterResponseDBClusterTypeDef",
    "ClientDeleteDbClusterResponseTypeDef",
    "ClientDeleteDbClusterSnapshotResponseDBClusterSnapshotTypeDef",
    "ClientDeleteDbClusterSnapshotResponseTypeDef",
    "ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupRestoreWindowTypeDef",
    "ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupTypeDef",
    "ClientDeleteDbInstanceAutomatedBackupResponseTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceEndpointTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceStatusInfosTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientDeleteDbInstanceResponseDBInstanceTypeDef",
    "ClientDeleteDbInstanceResponseTypeDef",
    "ClientDeleteDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    "ClientDeleteDbSnapshotResponseDBSnapshotTypeDef",
    "ClientDeleteDbSnapshotResponseTypeDef",
    "ClientDeleteEventSubscriptionResponseEventSubscriptionTypeDef",
    "ClientDeleteEventSubscriptionResponseTypeDef",
    "ClientDeleteGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    "ClientDeleteGlobalClusterResponseGlobalClusterTypeDef",
    "ClientDeleteGlobalClusterResponseTypeDef",
    "ClientDeleteInstallationMediaResponseFailureCauseTypeDef",
    "ClientDeleteInstallationMediaResponseTypeDef",
    "ClientDescribeAccountAttributesResponseAccountQuotasTypeDef",
    "ClientDescribeAccountAttributesResponseTypeDef",
    "ClientDescribeCertificatesFiltersTypeDef",
    "ClientDescribeCertificatesResponseCertificatesTypeDef",
    "ClientDescribeCertificatesResponseTypeDef",
    "ClientDescribeCustomAvailabilityZonesFiltersTypeDef",
    "ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesVpnDetailsTypeDef",
    "ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesTypeDef",
    "ClientDescribeCustomAvailabilityZonesResponseTypeDef",
    "ClientDescribeDbClusterBacktracksFiltersTypeDef",
    "ClientDescribeDbClusterBacktracksResponseDBClusterBacktracksTypeDef",
    "ClientDescribeDbClusterBacktracksResponseTypeDef",
    "ClientDescribeDbClusterEndpointsFiltersTypeDef",
    "ClientDescribeDbClusterEndpointsResponseDBClusterEndpointsTypeDef",
    "ClientDescribeDbClusterEndpointsResponseTypeDef",
    "ClientDescribeDbClusterParameterGroupsFiltersTypeDef",
    "ClientDescribeDbClusterParameterGroupsResponseDBClusterParameterGroupsTypeDef",
    "ClientDescribeDbClusterParameterGroupsResponseTypeDef",
    "ClientDescribeDbClusterParametersFiltersTypeDef",
    "ClientDescribeDbClusterParametersResponseParametersTypeDef",
    "ClientDescribeDbClusterParametersResponseTypeDef",
    "ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef",
    "ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultTypeDef",
    "ClientDescribeDbClusterSnapshotAttributesResponseTypeDef",
    "ClientDescribeDbClusterSnapshotsFiltersTypeDef",
    "ClientDescribeDbClusterSnapshotsResponseDBClusterSnapshotsTypeDef",
    "ClientDescribeDbClusterSnapshotsResponseTypeDef",
    "ClientDescribeDbClustersFiltersTypeDef",
    "ClientDescribeDbClustersResponseDBClustersAssociatedRolesTypeDef",
    "ClientDescribeDbClustersResponseDBClustersDBClusterMembersTypeDef",
    "ClientDescribeDbClustersResponseDBClustersDBClusterOptionGroupMembershipsTypeDef",
    "ClientDescribeDbClustersResponseDBClustersScalingConfigurationInfoTypeDef",
    "ClientDescribeDbClustersResponseDBClustersVpcSecurityGroupsTypeDef",
    "ClientDescribeDbClustersResponseDBClustersTypeDef",
    "ClientDescribeDbClustersResponseTypeDef",
    "ClientDescribeDbEngineVersionsFiltersTypeDef",
    "ClientDescribeDbEngineVersionsResponseDBEngineVersionsDefaultCharacterSetTypeDef",
    "ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedCharacterSetsTypeDef",
    "ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedTimezonesTypeDef",
    "ClientDescribeDbEngineVersionsResponseDBEngineVersionsValidUpgradeTargetTypeDef",
    "ClientDescribeDbEngineVersionsResponseDBEngineVersionsTypeDef",
    "ClientDescribeDbEngineVersionsResponseTypeDef",
    "ClientDescribeDbInstanceAutomatedBackupsFiltersTypeDef",
    "ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef",
    "ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsTypeDef",
    "ClientDescribeDbInstanceAutomatedBackupsResponseTypeDef",
    "ClientDescribeDbInstancesFiltersTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesAssociatedRolesTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesDBParameterGroupsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesDBSecurityGroupsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesDomainMembershipsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesEndpointTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesListenerEndpointTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesOptionGroupMembershipsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesProcessorFeaturesTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesStatusInfosTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesVpcSecurityGroupsTypeDef",
    "ClientDescribeDbInstancesResponseDBInstancesTypeDef",
    "ClientDescribeDbInstancesResponseTypeDef",
    "ClientDescribeDbLogFilesFiltersTypeDef",
    "ClientDescribeDbLogFilesResponseDescribeDBLogFilesTypeDef",
    "ClientDescribeDbLogFilesResponseTypeDef",
    "ClientDescribeDbParameterGroupsFiltersTypeDef",
    "ClientDescribeDbParameterGroupsResponseDBParameterGroupsTypeDef",
    "ClientDescribeDbParameterGroupsResponseTypeDef",
    "ClientDescribeDbParametersFiltersTypeDef",
    "ClientDescribeDbParametersResponseParametersTypeDef",
    "ClientDescribeDbParametersResponseTypeDef",
    "ClientDescribeDbSecurityGroupsFiltersTypeDef",
    "ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsEC2SecurityGroupsTypeDef",
    "ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsIPRangesTypeDef",
    "ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsTypeDef",
    "ClientDescribeDbSecurityGroupsResponseTypeDef",
    "ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef",
    "ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultTypeDef",
    "ClientDescribeDbSnapshotAttributesResponseTypeDef",
    "ClientDescribeDbSnapshotsFiltersTypeDef",
    "ClientDescribeDbSnapshotsResponseDBSnapshotsProcessorFeaturesTypeDef",
    "ClientDescribeDbSnapshotsResponseDBSnapshotsTypeDef",
    "ClientDescribeDbSnapshotsResponseTypeDef",
    "ClientDescribeDbSubnetGroupsFiltersTypeDef",
    "ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsTypeDef",
    "ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsTypeDef",
    "ClientDescribeDbSubnetGroupsResponseTypeDef",
    "ClientDescribeEngineDefaultClusterParametersFiltersTypeDef",
    "ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsParametersTypeDef",
    "ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsTypeDef",
    "ClientDescribeEngineDefaultClusterParametersResponseTypeDef",
    "ClientDescribeEngineDefaultParametersFiltersTypeDef",
    "ClientDescribeEngineDefaultParametersResponseEngineDefaultsParametersTypeDef",
    "ClientDescribeEngineDefaultParametersResponseEngineDefaultsTypeDef",
    "ClientDescribeEngineDefaultParametersResponseTypeDef",
    "ClientDescribeEventCategoriesFiltersTypeDef",
    "ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef",
    "ClientDescribeEventCategoriesResponseTypeDef",
    "ClientDescribeEventSubscriptionsFiltersTypeDef",
    "ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef",
    "ClientDescribeEventSubscriptionsResponseTypeDef",
    "ClientDescribeEventsFiltersTypeDef",
    "ClientDescribeEventsResponseEventsTypeDef",
    "ClientDescribeEventsResponseTypeDef",
    "ClientDescribeGlobalClustersFiltersTypeDef",
    "ClientDescribeGlobalClustersResponseGlobalClustersGlobalClusterMembersTypeDef",
    "ClientDescribeGlobalClustersResponseGlobalClustersTypeDef",
    "ClientDescribeGlobalClustersResponseTypeDef",
    "ClientDescribeInstallationMediaFiltersTypeDef",
    "ClientDescribeInstallationMediaResponseInstallationMediaFailureCauseTypeDef",
    "ClientDescribeInstallationMediaResponseInstallationMediaTypeDef",
    "ClientDescribeInstallationMediaResponseTypeDef",
    "ClientDescribeOptionGroupOptionsFiltersTypeDef",
    "ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef",
    "ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef",
    "ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef",
    "ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsTypeDef",
    "ClientDescribeOptionGroupOptionsResponseTypeDef",
    "ClientDescribeOptionGroupsFiltersTypeDef",
    "ClientDescribeOptionGroupsResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef",
    "ClientDescribeOptionGroupsResponseOptionGroupsListOptionsOptionSettingsTypeDef",
    "ClientDescribeOptionGroupsResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef",
    "ClientDescribeOptionGroupsResponseOptionGroupsListOptionsTypeDef",
    "ClientDescribeOptionGroupsResponseOptionGroupsListTypeDef",
    "ClientDescribeOptionGroupsResponseTypeDef",
    "ClientDescribeOrderableDbInstanceOptionsFiltersTypeDef",
    "ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef",
    "ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef",
    "ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsTypeDef",
    "ClientDescribeOrderableDbInstanceOptionsResponseTypeDef",
    "ClientDescribePendingMaintenanceActionsFiltersTypeDef",
    "ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef",
    "ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsTypeDef",
    "ClientDescribePendingMaintenanceActionsResponseTypeDef",
    "ClientDescribeReservedDbInstancesFiltersTypeDef",
    "ClientDescribeReservedDbInstancesOfferingsFiltersTypeDef",
    "ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsRecurringChargesTypeDef",
    "ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsTypeDef",
    "ClientDescribeReservedDbInstancesOfferingsResponseTypeDef",
    "ClientDescribeReservedDbInstancesResponseReservedDBInstancesRecurringChargesTypeDef",
    "ClientDescribeReservedDbInstancesResponseReservedDBInstancesTypeDef",
    "ClientDescribeReservedDbInstancesResponseTypeDef",
    "ClientDescribeSourceRegionsFiltersTypeDef",
    "ClientDescribeSourceRegionsResponseSourceRegionsTypeDef",
    "ClientDescribeSourceRegionsResponseTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageIopsToStorageRatioTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageProvisionedIopsTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageStorageSizeTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageValidProcessorFeaturesTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageTypeDef",
    "ClientDescribeValidDbInstanceModificationsResponseTypeDef",
    "ClientDownloadDbLogFilePortionResponseTypeDef",
    "ClientFailoverDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientFailoverDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientFailoverDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientFailoverDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientFailoverDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientFailoverDbClusterResponseDBClusterTypeDef",
    "ClientFailoverDbClusterResponseTypeDef",
    "ClientImportInstallationMediaResponseFailureCauseTypeDef",
    "ClientImportInstallationMediaResponseTypeDef",
    "ClientListTagsForResourceFiltersTypeDef",
    "ClientListTagsForResourceResponseTagListTypeDef",
    "ClientListTagsForResourceResponseTypeDef",
    "ClientModifyCurrentDbClusterCapacityResponseTypeDef",
    "ClientModifyDbClusterCloudwatchLogsExportConfigurationTypeDef",
    "ClientModifyDbClusterEndpointResponseTypeDef",
    "ClientModifyDbClusterParameterGroupParametersTypeDef",
    "ClientModifyDbClusterParameterGroupResponseTypeDef",
    "ClientModifyDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientModifyDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientModifyDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientModifyDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientModifyDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientModifyDbClusterResponseDBClusterTypeDef",
    "ClientModifyDbClusterResponseTypeDef",
    "ClientModifyDbClusterScalingConfigurationTypeDef",
    "ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef",
    "ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultTypeDef",
    "ClientModifyDbClusterSnapshotAttributeResponseTypeDef",
    "ClientModifyDbInstanceCloudwatchLogsExportConfigurationTypeDef",
    "ClientModifyDbInstanceProcessorFeaturesTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceEndpointTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceStatusInfosTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientModifyDbInstanceResponseDBInstanceTypeDef",
    "ClientModifyDbInstanceResponseTypeDef",
    "ClientModifyDbParameterGroupParametersTypeDef",
    "ClientModifyDbParameterGroupResponseTypeDef",
    "ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef",
    "ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultTypeDef",
    "ClientModifyDbSnapshotAttributeResponseTypeDef",
    "ClientModifyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    "ClientModifyDbSnapshotResponseDBSnapshotTypeDef",
    "ClientModifyDbSnapshotResponseTypeDef",
    "ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef",
    "ClientModifyDbSubnetGroupResponseDBSubnetGroupTypeDef",
    "ClientModifyDbSubnetGroupResponseTypeDef",
    "ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef",
    "ClientModifyEventSubscriptionResponseTypeDef",
    "ClientModifyGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    "ClientModifyGlobalClusterResponseGlobalClusterTypeDef",
    "ClientModifyGlobalClusterResponseTypeDef",
    "ClientModifyOptionGroupOptionsToIncludeOptionSettingsTypeDef",
    "ClientModifyOptionGroupOptionsToIncludeTypeDef",
    "ClientModifyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef",
    "ClientModifyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef",
    "ClientModifyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef",
    "ClientModifyOptionGroupResponseOptionGroupOptionsTypeDef",
    "ClientModifyOptionGroupResponseOptionGroupTypeDef",
    "ClientModifyOptionGroupResponseTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseDBClusterTypeDef",
    "ClientPromoteReadReplicaDbClusterResponseTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceAssociatedRolesTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceDomainMembershipsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceEndpointTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceListenerEndpointTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceStatusInfosTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientPromoteReadReplicaResponseDBInstanceTypeDef",
    "ClientPromoteReadReplicaResponseTypeDef",
    "ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceRecurringChargesTypeDef",
    "ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceTypeDef",
    "ClientPurchaseReservedDbInstancesOfferingResponseTypeDef",
    "ClientPurchaseReservedDbInstancesOfferingTagsTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceEndpointTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceStatusInfosTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientRebootDbInstanceResponseDBInstanceTypeDef",
    "ClientRebootDbInstanceResponseTypeDef",
    "ClientRemoveFromGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    "ClientRemoveFromGlobalClusterResponseGlobalClusterTypeDef",
    "ClientRemoveFromGlobalClusterResponseTypeDef",
    "ClientRemoveSourceIdentifierFromSubscriptionResponseEventSubscriptionTypeDef",
    "ClientRemoveSourceIdentifierFromSubscriptionResponseTypeDef",
    "ClientResetDbClusterParameterGroupParametersTypeDef",
    "ClientResetDbClusterParameterGroupResponseTypeDef",
    "ClientResetDbParameterGroupParametersTypeDef",
    "ClientResetDbParameterGroupResponseTypeDef",
    "ClientRestoreDbClusterFromS3ResponseDBClusterAssociatedRolesTypeDef",
    "ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterMembersTypeDef",
    "ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientRestoreDbClusterFromS3ResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientRestoreDbClusterFromS3ResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientRestoreDbClusterFromS3ResponseDBClusterTypeDef",
    "ClientRestoreDbClusterFromS3ResponseTypeDef",
    "ClientRestoreDbClusterFromS3TagsTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseDBClusterAssociatedRolesTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterMembersTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseDBClusterTypeDef",
    "ClientRestoreDbClusterFromSnapshotResponseTypeDef",
    "ClientRestoreDbClusterFromSnapshotScalingConfigurationTypeDef",
    "ClientRestoreDbClusterFromSnapshotTagsTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseDBClusterAssociatedRolesTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterMembersTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseDBClusterTypeDef",
    "ClientRestoreDbClusterToPointInTimeResponseTypeDef",
    "ClientRestoreDbClusterToPointInTimeTagsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceAssociatedRolesTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDomainMembershipsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceEndpointTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceListenerEndpointTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceStatusInfosTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotResponseTypeDef",
    "ClientRestoreDbInstanceFromDbSnapshotTagsTypeDef",
    "ClientRestoreDbInstanceFromS3ProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceAssociatedRolesTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceDomainMembershipsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceEndpointTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceListenerEndpointTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceStatusInfosTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseDBInstanceTypeDef",
    "ClientRestoreDbInstanceFromS3ResponseTypeDef",
    "ClientRestoreDbInstanceFromS3TagsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceAssociatedRolesTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDomainMembershipsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceEndpointTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceListenerEndpointTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceStatusInfosTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseDBInstanceTypeDef",
    "ClientRestoreDbInstanceToPointInTimeResponseTypeDef",
    "ClientRestoreDbInstanceToPointInTimeTagsTypeDef",
    "ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef",
    "ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef",
    "ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef",
    "ClientRevokeDbSecurityGroupIngressResponseTypeDef",
    "ClientStartActivityStreamResponseTypeDef",
    "ClientStartDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientStartDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientStartDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientStartDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientStartDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientStartDbClusterResponseDBClusterTypeDef",
    "ClientStartDbClusterResponseTypeDef",
    "ClientStartDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    "ClientStartDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientStartDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientStartDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientStartDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    "ClientStartDbInstanceResponseDBInstanceEndpointTypeDef",
    "ClientStartDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    "ClientStartDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientStartDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientStartDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientStartDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientStartDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientStartDbInstanceResponseDBInstanceStatusInfosTypeDef",
    "ClientStartDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientStartDbInstanceResponseDBInstanceTypeDef",
    "ClientStartDbInstanceResponseTypeDef",
    "ClientStopActivityStreamResponseTypeDef",
    "ClientStopDbClusterResponseDBClusterAssociatedRolesTypeDef",
    "ClientStopDbClusterResponseDBClusterDBClusterMembersTypeDef",
    "ClientStopDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    "ClientStopDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    "ClientStopDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    "ClientStopDbClusterResponseDBClusterTypeDef",
    "ClientStopDbClusterResponseTypeDef",
    "ClientStopDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    "ClientStopDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    "ClientStopDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    "ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    "ClientStopDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    "ClientStopDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    "ClientStopDbInstanceResponseDBInstanceEndpointTypeDef",
    "ClientStopDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    "ClientStopDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    "ClientStopDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "ClientStopDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    "ClientStopDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    "ClientStopDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    "ClientStopDbInstanceResponseDBInstanceStatusInfosTypeDef",
    "ClientStopDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    "ClientStopDbInstanceResponseDBInstanceTypeDef",
    "ClientStopDbInstanceResponseTypeDef",
    "DbClusterSnapshotAvailableWaitFiltersTypeDef",
    "DbClusterSnapshotAvailableWaitWaiterConfigTypeDef",
    "DbClusterSnapshotDeletedWaitFiltersTypeDef",
    "DbClusterSnapshotDeletedWaitWaiterConfigTypeDef",
    "DbInstanceAvailableWaitFiltersTypeDef",
    "DbInstanceAvailableWaitWaiterConfigTypeDef",
    "DbInstanceDeletedWaitFiltersTypeDef",
    "DbInstanceDeletedWaitWaiterConfigTypeDef",
    "DbSnapshotAvailableWaitFiltersTypeDef",
    "DbSnapshotAvailableWaitWaiterConfigTypeDef",
    "DbSnapshotCompletedWaitFiltersTypeDef",
    "DbSnapshotCompletedWaitWaiterConfigTypeDef",
    "DbSnapshotDeletedWaitFiltersTypeDef",
    "DbSnapshotDeletedWaitWaiterConfigTypeDef",
    "DescribeCertificatesPaginateFiltersTypeDef",
    "DescribeCertificatesPaginatePaginationConfigTypeDef",
    "DescribeCertificatesPaginateResponseCertificatesTypeDef",
    "DescribeCertificatesPaginateResponseTypeDef",
    "DescribeCustomAvailabilityZonesPaginateFiltersTypeDef",
    "DescribeCustomAvailabilityZonesPaginatePaginationConfigTypeDef",
    "DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesVpnDetailsTypeDef",
    "DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesTypeDef",
    "DescribeCustomAvailabilityZonesPaginateResponseTypeDef",
    "DescribeDBClusterBacktracksPaginateFiltersTypeDef",
    "DescribeDBClusterBacktracksPaginatePaginationConfigTypeDef",
    "DescribeDBClusterBacktracksPaginateResponseDBClusterBacktracksTypeDef",
    "DescribeDBClusterBacktracksPaginateResponseTypeDef",
    "DescribeDBClusterEndpointsPaginateFiltersTypeDef",
    "DescribeDBClusterEndpointsPaginatePaginationConfigTypeDef",
    "DescribeDBClusterEndpointsPaginateResponseDBClusterEndpointsTypeDef",
    "DescribeDBClusterEndpointsPaginateResponseTypeDef",
    "DescribeDBClusterParameterGroupsPaginateFiltersTypeDef",
    "DescribeDBClusterParameterGroupsPaginatePaginationConfigTypeDef",
    "DescribeDBClusterParameterGroupsPaginateResponseDBClusterParameterGroupsTypeDef",
    "DescribeDBClusterParameterGroupsPaginateResponseTypeDef",
    "DescribeDBClusterParametersPaginateFiltersTypeDef",
    "DescribeDBClusterParametersPaginatePaginationConfigTypeDef",
    "DescribeDBClusterParametersPaginateResponseParametersTypeDef",
    "DescribeDBClusterParametersPaginateResponseTypeDef",
    "DescribeDBClusterSnapshotsPaginateFiltersTypeDef",
    "DescribeDBClusterSnapshotsPaginatePaginationConfigTypeDef",
    "DescribeDBClusterSnapshotsPaginateResponseDBClusterSnapshotsTypeDef",
    "DescribeDBClusterSnapshotsPaginateResponseTypeDef",
    "DescribeDBClustersPaginateFiltersTypeDef",
    "DescribeDBClustersPaginatePaginationConfigTypeDef",
    "DescribeDBClustersPaginateResponseDBClustersAssociatedRolesTypeDef",
    "DescribeDBClustersPaginateResponseDBClustersDBClusterMembersTypeDef",
    "DescribeDBClustersPaginateResponseDBClustersDBClusterOptionGroupMembershipsTypeDef",
    "DescribeDBClustersPaginateResponseDBClustersScalingConfigurationInfoTypeDef",
    "DescribeDBClustersPaginateResponseDBClustersVpcSecurityGroupsTypeDef",
    "DescribeDBClustersPaginateResponseDBClustersTypeDef",
    "DescribeDBClustersPaginateResponseTypeDef",
    "DescribeDBEngineVersionsPaginateFiltersTypeDef",
    "DescribeDBEngineVersionsPaginatePaginationConfigTypeDef",
    "DescribeDBEngineVersionsPaginateResponseDBEngineVersionsDefaultCharacterSetTypeDef",
    "DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedCharacterSetsTypeDef",
    "DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedTimezonesTypeDef",
    "DescribeDBEngineVersionsPaginateResponseDBEngineVersionsValidUpgradeTargetTypeDef",
    "DescribeDBEngineVersionsPaginateResponseDBEngineVersionsTypeDef",
    "DescribeDBEngineVersionsPaginateResponseTypeDef",
    "DescribeDBInstanceAutomatedBackupsPaginateFiltersTypeDef",
    "DescribeDBInstanceAutomatedBackupsPaginatePaginationConfigTypeDef",
    "DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef",
    "DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsTypeDef",
    "DescribeDBInstanceAutomatedBackupsPaginateResponseTypeDef",
    "DescribeDBInstancesPaginateFiltersTypeDef",
    "DescribeDBInstancesPaginatePaginationConfigTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesAssociatedRolesTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesDBParameterGroupsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesDBSecurityGroupsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesDomainMembershipsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesEndpointTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesListenerEndpointTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesOptionGroupMembershipsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesProcessorFeaturesTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesStatusInfosTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesVpcSecurityGroupsTypeDef",
    "DescribeDBInstancesPaginateResponseDBInstancesTypeDef",
    "DescribeDBInstancesPaginateResponseTypeDef",
    "DescribeDBLogFilesPaginateFiltersTypeDef",
    "DescribeDBLogFilesPaginatePaginationConfigTypeDef",
    "DescribeDBLogFilesPaginateResponseDescribeDBLogFilesTypeDef",
    "DescribeDBLogFilesPaginateResponseTypeDef",
    "DescribeDBParameterGroupsPaginateFiltersTypeDef",
    "DescribeDBParameterGroupsPaginatePaginationConfigTypeDef",
    "DescribeDBParameterGroupsPaginateResponseDBParameterGroupsTypeDef",
    "DescribeDBParameterGroupsPaginateResponseTypeDef",
    "DescribeDBParametersPaginateFiltersTypeDef",
    "DescribeDBParametersPaginatePaginationConfigTypeDef",
    "DescribeDBParametersPaginateResponseParametersTypeDef",
    "DescribeDBParametersPaginateResponseTypeDef",
    "DescribeDBSecurityGroupsPaginateFiltersTypeDef",
    "DescribeDBSecurityGroupsPaginatePaginationConfigTypeDef",
    "DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsEC2SecurityGroupsTypeDef",
    "DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsIPRangesTypeDef",
    "DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsTypeDef",
    "DescribeDBSecurityGroupsPaginateResponseTypeDef",
    "DescribeDBSnapshotsPaginateFiltersTypeDef",
    "DescribeDBSnapshotsPaginatePaginationConfigTypeDef",
    "DescribeDBSnapshotsPaginateResponseDBSnapshotsProcessorFeaturesTypeDef",
    "DescribeDBSnapshotsPaginateResponseDBSnapshotsTypeDef",
    "DescribeDBSnapshotsPaginateResponseTypeDef",
    "DescribeDBSubnetGroupsPaginateFiltersTypeDef",
    "DescribeDBSubnetGroupsPaginatePaginationConfigTypeDef",
    "DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    "DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsTypeDef",
    "DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsTypeDef",
    "DescribeDBSubnetGroupsPaginateResponseTypeDef",
    "DescribeEngineDefaultClusterParametersPaginateFiltersTypeDef",
    "DescribeEngineDefaultClusterParametersPaginatePaginationConfigTypeDef",
    "DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsParametersTypeDef",
    "DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsTypeDef",
    "DescribeEngineDefaultClusterParametersPaginateResponseTypeDef",
    "DescribeEngineDefaultParametersPaginateFiltersTypeDef",
    "DescribeEngineDefaultParametersPaginatePaginationConfigTypeDef",
    "DescribeEngineDefaultParametersPaginateResponseEngineDefaultsParametersTypeDef",
    "DescribeEngineDefaultParametersPaginateResponseEngineDefaultsTypeDef",
    "DescribeEngineDefaultParametersPaginateResponseTypeDef",
    "DescribeEventSubscriptionsPaginateFiltersTypeDef",
    "DescribeEventSubscriptionsPaginatePaginationConfigTypeDef",
    "DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef",
    "DescribeEventSubscriptionsPaginateResponseTypeDef",
    "DescribeEventsPaginateFiltersTypeDef",
    "DescribeEventsPaginatePaginationConfigTypeDef",
    "DescribeEventsPaginateResponseEventsTypeDef",
    "DescribeEventsPaginateResponseTypeDef",
    "DescribeGlobalClustersPaginateFiltersTypeDef",
    "DescribeGlobalClustersPaginatePaginationConfigTypeDef",
    "DescribeGlobalClustersPaginateResponseGlobalClustersGlobalClusterMembersTypeDef",
    "DescribeGlobalClustersPaginateResponseGlobalClustersTypeDef",
    "DescribeGlobalClustersPaginateResponseTypeDef",
    "DescribeInstallationMediaPaginateFiltersTypeDef",
    "DescribeInstallationMediaPaginatePaginationConfigTypeDef",
    "DescribeInstallationMediaPaginateResponseInstallationMediaFailureCauseTypeDef",
    "DescribeInstallationMediaPaginateResponseInstallationMediaTypeDef",
    "DescribeInstallationMediaPaginateResponseTypeDef",
    "DescribeOptionGroupOptionsPaginateFiltersTypeDef",
    "DescribeOptionGroupOptionsPaginatePaginationConfigTypeDef",
    "DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef",
    "DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef",
    "DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef",
    "DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsTypeDef",
    "DescribeOptionGroupOptionsPaginateResponseTypeDef",
    "DescribeOptionGroupsPaginateFiltersTypeDef",
    "DescribeOptionGroupsPaginatePaginationConfigTypeDef",
    "DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef",
    "DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsOptionSettingsTypeDef",
    "DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef",
    "DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsTypeDef",
    "DescribeOptionGroupsPaginateResponseOptionGroupsListTypeDef",
    "DescribeOptionGroupsPaginateResponseTypeDef",
    "DescribeOrderableDBInstanceOptionsPaginateFiltersTypeDef",
    "DescribeOrderableDBInstanceOptionsPaginatePaginationConfigTypeDef",
    "DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef",
    "DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef",
    "DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsTypeDef",
    "DescribeOrderableDBInstanceOptionsPaginateResponseTypeDef",
    "DescribePendingMaintenanceActionsPaginateFiltersTypeDef",
    "DescribePendingMaintenanceActionsPaginatePaginationConfigTypeDef",
    "DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef",
    "DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsTypeDef",
    "DescribePendingMaintenanceActionsPaginateResponseTypeDef",
    "DescribeReservedDBInstancesOfferingsPaginateFiltersTypeDef",
    "DescribeReservedDBInstancesOfferingsPaginatePaginationConfigTypeDef",
    "DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsRecurringChargesTypeDef",
    "DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsTypeDef",
    "DescribeReservedDBInstancesOfferingsPaginateResponseTypeDef",
    "DescribeReservedDBInstancesPaginateFiltersTypeDef",
    "DescribeReservedDBInstancesPaginatePaginationConfigTypeDef",
    "DescribeReservedDBInstancesPaginateResponseReservedDBInstancesRecurringChargesTypeDef",
    "DescribeReservedDBInstancesPaginateResponseReservedDBInstancesTypeDef",
    "DescribeReservedDBInstancesPaginateResponseTypeDef",
    "DescribeSourceRegionsPaginateFiltersTypeDef",
    "DescribeSourceRegionsPaginatePaginationConfigTypeDef",
    "DescribeSourceRegionsPaginateResponseSourceRegionsTypeDef",
    "DescribeSourceRegionsPaginateResponseTypeDef",
    "DownloadDBLogFilePortionPaginatePaginationConfigTypeDef",
    "DownloadDBLogFilePortionPaginateResponseTypeDef",
)


_ClientAddSourceIdentifierToSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientAddSourceIdentifierToSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class ClientAddSourceIdentifierToSubscriptionResponseEventSubscriptionTypeDef(
    _ClientAddSourceIdentifierToSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientAddSourceIdentifierToSubscriptionResponse` `EventSubscription`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the subscription
      is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientAddSourceIdentifierToSubscriptionResponseTypeDef = TypedDict(
    "_ClientAddSourceIdentifierToSubscriptionResponseTypeDef",
    {
        "EventSubscription": ClientAddSourceIdentifierToSubscriptionResponseEventSubscriptionTypeDef
    },
    total=False,
)


class ClientAddSourceIdentifierToSubscriptionResponseTypeDef(
    _ClientAddSourceIdentifierToSubscriptionResponseTypeDef
):
    """
    Type definition for `ClientAddSourceIdentifierToSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the RDS event notification subscription.

      - **CustSubscriptionId** *(string) --*

        The RDS event notification subscription Id.

      - **SnsTopicArn** *(string) --*

        The topic ARN of the RDS event notification subscription.

      - **Status** *(string) --*

        The status of the RDS event notification subscription.

        Constraints:

        Can be one of the following: creating | modifying | deleting | active | no-permission |
        topic-not-exist

        The status "no-permission" indicates that RDS no longer has permission to post to the SNS
        topic. The status "topic-not-exist" indicates that the topic was deleted after the
        subscription was created.

      - **SubscriptionCreationTime** *(string) --*

        The time the RDS event notification subscription was created.

      - **SourceType** *(string) --*

        The source type for the RDS event notification subscription.

      - **SourceIdsList** *(list) --*

        A list of source IDs for the RDS event notification subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        A list of event categories for the RDS event notification subscription.

        - *(string) --*

      - **Enabled** *(boolean) --*

        A Boolean value indicating if the subscription is enabled. True indicates the subscription
        is enabled.

      - **EventSubscriptionArn** *(string) --*

        The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientAddTagsToResourceTagsTypeDef = TypedDict(
    "_ClientAddTagsToResourceTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientAddTagsToResourceTagsTypeDef(_ClientAddTagsToResourceTagsTypeDef):
    """
    Type definition for `ClientAddTagsToResource` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef = TypedDict(
    "_ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef",
    {
        "Action": str,
        "AutoAppliedAfterDate": datetime,
        "ForcedApplyDate": datetime,
        "OptInStatus": str,
        "CurrentApplyDate": datetime,
        "Description": str,
    },
    total=False,
)


class ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef(
    _ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef
):
    """
    Type definition for `ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActions` `PendingMaintenanceActionDetails`

    Provides information about a pending maintenance action for a resource.

    - **Action** *(string) --*

      The type of pending maintenance action that is available for the resource. Valid
      actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

    - **AutoAppliedAfterDate** *(datetime) --*

      The date of the maintenance window when the action is applied. The maintenance action
      is applied to the resource during its first maintenance window after this date.

    - **ForcedApplyDate** *(datetime) --*

      The date when the maintenance action is automatically applied. The maintenance action
      is applied to the resource on this date regardless of the maintenance window for the
      resource.

    - **OptInStatus** *(string) --*

      Indicates the type of opt-in request that has been received for the resource.

    - **CurrentApplyDate** *(datetime) --*

      The effective date when the pending maintenance action is applied to the resource. This
      date takes into account opt-in requests received from the
      ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
      ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
      and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

    - **Description** *(string) --*

      A description providing more detail about the maintenance action.
    """


_ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsTypeDef = TypedDict(
    "_ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsTypeDef",
    {
        "ResourceIdentifier": str,
        "PendingMaintenanceActionDetails": List[
            ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef
        ],
    },
    total=False,
)


class ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsTypeDef(
    _ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsTypeDef
):
    """
    Type definition for `ClientApplyPendingMaintenanceActionResponse` `ResourcePendingMaintenanceActions`

    Describes the pending maintenance actions for a resource.

    - **ResourceIdentifier** *(string) --*

      The ARN of the resource that has pending maintenance actions.

    - **PendingMaintenanceActionDetails** *(list) --*

      A list that provides details about the pending maintenance actions for the resource.

      - *(dict) --*

        Provides information about a pending maintenance action for a resource.

        - **Action** *(string) --*

          The type of pending maintenance action that is available for the resource. Valid
          actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

        - **AutoAppliedAfterDate** *(datetime) --*

          The date of the maintenance window when the action is applied. The maintenance action
          is applied to the resource during its first maintenance window after this date.

        - **ForcedApplyDate** *(datetime) --*

          The date when the maintenance action is automatically applied. The maintenance action
          is applied to the resource on this date regardless of the maintenance window for the
          resource.

        - **OptInStatus** *(string) --*

          Indicates the type of opt-in request that has been received for the resource.

        - **CurrentApplyDate** *(datetime) --*

          The effective date when the pending maintenance action is applied to the resource. This
          date takes into account opt-in requests received from the
          ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
          ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
          and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

        - **Description** *(string) --*

          A description providing more detail about the maintenance action.
    """


_ClientApplyPendingMaintenanceActionResponseTypeDef = TypedDict(
    "_ClientApplyPendingMaintenanceActionResponseTypeDef",
    {
        "ResourcePendingMaintenanceActions": ClientApplyPendingMaintenanceActionResponseResourcePendingMaintenanceActionsTypeDef
    },
    total=False,
)


class ClientApplyPendingMaintenanceActionResponseTypeDef(
    _ClientApplyPendingMaintenanceActionResponseTypeDef
):
    """
    Type definition for `ClientApplyPendingMaintenanceAction` `Response`

    - **ResourcePendingMaintenanceActions** *(dict) --*

      Describes the pending maintenance actions for a resource.

      - **ResourceIdentifier** *(string) --*

        The ARN of the resource that has pending maintenance actions.

      - **PendingMaintenanceActionDetails** *(list) --*

        A list that provides details about the pending maintenance actions for the resource.

        - *(dict) --*

          Provides information about a pending maintenance action for a resource.

          - **Action** *(string) --*

            The type of pending maintenance action that is available for the resource. Valid
            actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

          - **AutoAppliedAfterDate** *(datetime) --*

            The date of the maintenance window when the action is applied. The maintenance action
            is applied to the resource during its first maintenance window after this date.

          - **ForcedApplyDate** *(datetime) --*

            The date when the maintenance action is automatically applied. The maintenance action
            is applied to the resource on this date regardless of the maintenance window for the
            resource.

          - **OptInStatus** *(string) --*

            Indicates the type of opt-in request that has been received for the resource.

          - **CurrentApplyDate** *(datetime) --*

            The effective date when the pending maintenance action is applied to the resource. This
            date takes into account opt-in requests received from the
            ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
            ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
            and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

          - **Description** *(string) --*

            A description providing more detail about the maintenance action.
    """


_ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupId": str,
        "EC2SecurityGroupOwnerId": str,
    },
    total=False,
)


class ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef(
    _ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroup` `EC2SecurityGroups`

    This data type is used as a response element in the following actions:

    * ``AuthorizeDBSecurityGroupIngress``

    * ``DescribeDBSecurityGroups``

    * ``RevokeDBSecurityGroupIngress``

    - **Status** *(string) --*

      Provides the status of the EC2 security group. Status can be "authorizing",
      "authorized", "revoking", and "revoked".

    - **EC2SecurityGroupName** *(string) --*

      Specifies the name of the EC2 security group.

    - **EC2SecurityGroupId** *(string) --*

      Specifies the id of the EC2 security group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      Specifies the AWS ID of the owner of the EC2 security group specified in the
      ``EC2SecurityGroupName`` field.
    """


_ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef = TypedDict(
    "_ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef",
    {"Status": str, "CIDRIP": str},
    total=False,
)


class ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef(
    _ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef
):
    """
    Type definition for `ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroup` `IPRanges`

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **Status** *(string) --*

      Specifies the status of the IP range. Status can be "authorizing", "authorized",
      "revoking", and "revoked".

    - **CIDRIP** *(string) --*

      Specifies the IP range.
    """


_ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef = TypedDict(
    "_ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef",
    {
        "OwnerId": str,
        "DBSecurityGroupName": str,
        "DBSecurityGroupDescription": str,
        "VpcId": str,
        "EC2SecurityGroups": List[
            ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef
        ],
        "DBSecurityGroupArn": str,
    },
    total=False,
)


class ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef(
    _ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef
):
    """
    Type definition for `ClientAuthorizeDbSecurityGroupIngressResponse` `DBSecurityGroup`

    Contains the details for an Amazon RDS DB security group.

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **OwnerId** *(string) --*

      Provides the AWS ID of the owner of a specific DB security group.

    - **DBSecurityGroupName** *(string) --*

      Specifies the name of the DB security group.

    - **DBSecurityGroupDescription** *(string) --*

      Provides the description of the DB security group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB security group.

    - **EC2SecurityGroups** *(list) --*

      Contains a list of ``EC2SecurityGroup`` elements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``AuthorizeDBSecurityGroupIngress``

        * ``DescribeDBSecurityGroups``

        * ``RevokeDBSecurityGroupIngress``

        - **Status** *(string) --*

          Provides the status of the EC2 security group. Status can be "authorizing",
          "authorized", "revoking", and "revoked".

        - **EC2SecurityGroupName** *(string) --*

          Specifies the name of the EC2 security group.

        - **EC2SecurityGroupId** *(string) --*

          Specifies the id of the EC2 security group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          Specifies the AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

    - **IPRanges** *(list) --*

      Contains a list of ``IPRange`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **Status** *(string) --*

          Specifies the status of the IP range. Status can be "authorizing", "authorized",
          "revoking", and "revoked".

        - **CIDRIP** *(string) --*

          Specifies the IP range.

    - **DBSecurityGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientAuthorizeDbSecurityGroupIngressResponseTypeDef = TypedDict(
    "_ClientAuthorizeDbSecurityGroupIngressResponseTypeDef",
    {
        "DBSecurityGroup": ClientAuthorizeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef
    },
    total=False,
)


class ClientAuthorizeDbSecurityGroupIngressResponseTypeDef(
    _ClientAuthorizeDbSecurityGroupIngressResponseTypeDef
):
    """
    Type definition for `ClientAuthorizeDbSecurityGroupIngress` `Response`

    - **DBSecurityGroup** *(dict) --*

      Contains the details for an Amazon RDS DB security group.

      This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

      - **OwnerId** *(string) --*

        Provides the AWS ID of the owner of a specific DB security group.

      - **DBSecurityGroupName** *(string) --*

        Specifies the name of the DB security group.

      - **DBSecurityGroupDescription** *(string) --*

        Provides the description of the DB security group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB security group.

      - **EC2SecurityGroups** *(list) --*

        Contains a list of ``EC2SecurityGroup`` elements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``AuthorizeDBSecurityGroupIngress``

          * ``DescribeDBSecurityGroups``

          * ``RevokeDBSecurityGroupIngress``

          - **Status** *(string) --*

            Provides the status of the EC2 security group. Status can be "authorizing",
            "authorized", "revoking", and "revoked".

          - **EC2SecurityGroupName** *(string) --*

            Specifies the name of the EC2 security group.

          - **EC2SecurityGroupId** *(string) --*

            Specifies the id of the EC2 security group.

          - **EC2SecurityGroupOwnerId** *(string) --*

            Specifies the AWS ID of the owner of the EC2 security group specified in the
            ``EC2SecurityGroupName`` field.

      - **IPRanges** *(list) --*

        Contains a list of ``IPRange`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

          - **Status** *(string) --*

            Specifies the status of the IP range. Status can be "authorizing", "authorized",
            "revoking", and "revoked".

          - **CIDRIP** *(string) --*

            Specifies the IP range.

      - **DBSecurityGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientBacktrackDbClusterResponseTypeDef = TypedDict(
    "_ClientBacktrackDbClusterResponseTypeDef",
    {
        "DBClusterIdentifier": str,
        "BacktrackIdentifier": str,
        "BacktrackTo": datetime,
        "BacktrackedFrom": datetime,
        "BacktrackRequestCreationTime": datetime,
        "Status": str,
    },
    total=False,
)


class ClientBacktrackDbClusterResponseTypeDef(_ClientBacktrackDbClusterResponseTypeDef):
    """
    Type definition for `ClientBacktrackDbCluster` `Response`

    This data type is used as a response element in the ``DescribeDBClusterBacktracks`` action.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **BacktrackIdentifier** *(string) --*

      Contains the backtrack identifier.

    - **BacktrackTo** *(datetime) --*

      The timestamp of the time to which the DB cluster was backtracked.

    - **BacktrackedFrom** *(datetime) --*

      The timestamp of the time from which the DB cluster was backtracked.

    - **BacktrackRequestCreationTime** *(datetime) --*

      The timestamp of the time at which the backtrack was requested.

    - **Status** *(string) --*

      The status of the backtrack. This property returns one of the following values:

      * ``applying`` - The backtrack is currently being applied to or rolled back from the DB
      cluster.

      * ``completed`` - The backtrack has successfully been applied to or rolled back from the DB
      cluster.

      * ``failed`` - An error occurred while the backtrack was applied to or rolled back from the
      DB cluster.

      * ``pending`` - The backtrack is currently pending application to or rollback from the DB
      cluster.
    """


_ClientCopyDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef = TypedDict(
    "_ClientCopyDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef",
    {
        "DBClusterParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBClusterParameterGroupArn": str,
    },
    total=False,
)


class ClientCopyDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef(
    _ClientCopyDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef
):
    """
    Type definition for `ClientCopyDbClusterParameterGroupResponse` `DBClusterParameterGroup`

    Contains the details of an Amazon RDS DB cluster parameter group.

    This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
    action.

    - **DBClusterParameterGroupName** *(string) --*

      Provides the name of the DB cluster parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB cluster parameter group is
      compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB cluster parameter group.

    - **DBClusterParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_ClientCopyDbClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientCopyDbClusterParameterGroupResponseTypeDef",
    {
        "DBClusterParameterGroup": ClientCopyDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef
    },
    total=False,
)


class ClientCopyDbClusterParameterGroupResponseTypeDef(
    _ClientCopyDbClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientCopyDbClusterParameterGroup` `Response`

    - **DBClusterParameterGroup** *(dict) --*

      Contains the details of an Amazon RDS DB cluster parameter group.

      This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
      action.

      - **DBClusterParameterGroupName** *(string) --*

        Provides the name of the DB cluster parameter group.

      - **DBParameterGroupFamily** *(string) --*

        Provides the name of the DB parameter group family that this DB cluster parameter group is
        compatible with.

      - **Description** *(string) --*

        Provides the customer-specified description for this DB cluster parameter group.

      - **DBClusterParameterGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_ClientCopyDbClusterParameterGroupTagsTypeDef = TypedDict(
    "_ClientCopyDbClusterParameterGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCopyDbClusterParameterGroupTagsTypeDef(
    _ClientCopyDbClusterParameterGroupTagsTypeDef
):
    """
    Type definition for `ClientCopyDbClusterParameterGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCopyDbClusterSnapshotResponseDBClusterSnapshotTypeDef = TypedDict(
    "_ClientCopyDbClusterSnapshotResponseDBClusterSnapshotTypeDef",
    {
        "AvailabilityZones": List[str],
        "DBClusterSnapshotIdentifier": str,
        "DBClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "VpcId": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "PercentProgress": int,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DBClusterSnapshotArn": str,
        "SourceDBClusterSnapshotArn": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class ClientCopyDbClusterSnapshotResponseDBClusterSnapshotTypeDef(
    _ClientCopyDbClusterSnapshotResponseDBClusterSnapshotTypeDef
):
    """
    Type definition for `ClientCopyDbClusterSnapshotResponse` `DBClusterSnapshot`

    Contains the details for an Amazon RDS DB cluster snapshot

    This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
      can be restored.

      - *(string) --*

    - **DBClusterSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB cluster snapshot.

    - **DBClusterIdentifier** *(string) --*

      Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
      created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB cluster snapshot.

    - **Port** *(integer) --*

      Specifies the port that the DB cluster was listening on at the time of the snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB cluster snapshot.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB cluster snapshot.

    - **EngineVersion** *(string) --*

      Provides the version of the database engine for this DB cluster snapshot.

    - **LicenseModel** *(string) --*

      Provides the license model information for this DB cluster snapshot.

    - **SnapshotType** *(string) --*

      Provides the type of the DB cluster snapshot.

    - **PercentProgress** *(integer) --*

      Specifies the percentage of the estimated data that has been transferred.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
      snapshot.

    - **DBClusterSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster snapshot.

    - **SourceDBClusterSnapshotArn** *(string) --*

      If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
      Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_ClientCopyDbClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientCopyDbClusterSnapshotResponseTypeDef",
    {"DBClusterSnapshot": ClientCopyDbClusterSnapshotResponseDBClusterSnapshotTypeDef},
    total=False,
)


class ClientCopyDbClusterSnapshotResponseTypeDef(
    _ClientCopyDbClusterSnapshotResponseTypeDef
):
    """
    Type definition for `ClientCopyDbClusterSnapshot` `Response`

    - **DBClusterSnapshot** *(dict) --*

      Contains the details for an Amazon RDS DB cluster snapshot

      This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
        can be restored.

        - *(string) --*

      - **DBClusterSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB cluster snapshot.

      - **DBClusterIdentifier** *(string) --*

        Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
        created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB cluster snapshot.

      - **Port** *(integer) --*

        Specifies the port that the DB cluster was listening on at the time of the snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB cluster snapshot.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB cluster snapshot.

      - **EngineVersion** *(string) --*

        Provides the version of the database engine for this DB cluster snapshot.

      - **LicenseModel** *(string) --*

        Provides the license model information for this DB cluster snapshot.

      - **SnapshotType** *(string) --*

        Provides the type of the DB cluster snapshot.

      - **PercentProgress** *(integer) --*

        Specifies the percentage of the estimated data that has been transferred.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
        snapshot.

      - **DBClusterSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster snapshot.

      - **SourceDBClusterSnapshotArn** *(string) --*

        If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
        Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.
    """


_ClientCopyDbClusterSnapshotTagsTypeDef = TypedDict(
    "_ClientCopyDbClusterSnapshotTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCopyDbClusterSnapshotTagsTypeDef(_ClientCopyDbClusterSnapshotTagsTypeDef):
    """
    Type definition for `ClientCopyDbClusterSnapshot` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCopyDbParameterGroupResponseDBParameterGroupTypeDef = TypedDict(
    "_ClientCopyDbParameterGroupResponseDBParameterGroupTypeDef",
    {
        "DBParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBParameterGroupArn": str,
    },
    total=False,
)


class ClientCopyDbParameterGroupResponseDBParameterGroupTypeDef(
    _ClientCopyDbParameterGroupResponseDBParameterGroupTypeDef
):
    """
    Type definition for `ClientCopyDbParameterGroupResponse` `DBParameterGroup`

    Contains the details of an Amazon RDS DB parameter group.

    This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

    - **DBParameterGroupName** *(string) --*

      Provides the name of the DB parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB parameter group is
      compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB parameter group.

    - **DBParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB parameter group.
    """


_ClientCopyDbParameterGroupResponseTypeDef = TypedDict(
    "_ClientCopyDbParameterGroupResponseTypeDef",
    {"DBParameterGroup": ClientCopyDbParameterGroupResponseDBParameterGroupTypeDef},
    total=False,
)


class ClientCopyDbParameterGroupResponseTypeDef(
    _ClientCopyDbParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientCopyDbParameterGroup` `Response`

    - **DBParameterGroup** *(dict) --*

      Contains the details of an Amazon RDS DB parameter group.

      This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

      - **DBParameterGroupName** *(string) --*

        Provides the name of the DB parameter group.

      - **DBParameterGroupFamily** *(string) --*

        Provides the name of the DB parameter group family that this DB parameter group is
        compatible with.

      - **Description** *(string) --*

        Provides the customer-specified description for this DB parameter group.

      - **DBParameterGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB parameter group.
    """


_ClientCopyDbParameterGroupTagsTypeDef = TypedDict(
    "_ClientCopyDbParameterGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCopyDbParameterGroupTagsTypeDef(_ClientCopyDbParameterGroupTagsTypeDef):
    """
    Type definition for `ClientCopyDbParameterGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCopyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef = TypedDict(
    "_ClientCopyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCopyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef(
    _ClientCopyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCopyDbSnapshotResponseDBSnapshot` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCopyDbSnapshotResponseDBSnapshotTypeDef = TypedDict(
    "_ClientCopyDbSnapshotResponseDBSnapshotTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBInstanceIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "Iops": int,
        "OptionGroupName": str,
        "PercentProgress": int,
        "SourceRegion": str,
        "SourceDBSnapshotIdentifier": str,
        "StorageType": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "DBSnapshotArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "ProcessorFeatures": List[
            ClientCopyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
        ],
        "DbiResourceId": str,
    },
    total=False,
)


class ClientCopyDbSnapshotResponseDBSnapshotTypeDef(
    _ClientCopyDbSnapshotResponseDBSnapshotTypeDef
):
    """
    Type definition for `ClientCopyDbSnapshotResponse` `DBSnapshot`

    Contains the details of an Amazon RDS DB snapshot.

    This data type is used as a response element in the ``DescribeDBSnapshots`` action.

    - **DBSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB snapshot.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB snapshot.

    - **Port** *(integer) --*

      Specifies the port that the database engine was listening on at the time of the snapshot.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance was located in at the time of
      the DB snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB snapshot.

    - **InstanceCreateTime** *(datetime) --*

      Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB snapshot.

    - **EngineVersion** *(string) --*

      Specifies the version of the database engine.

    - **LicenseModel** *(string) --*

      License model information for the restored DB instance.

    - **SnapshotType** *(string) --*

      Provides the type of the DB snapshot.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
      time of the snapshot.

    - **OptionGroupName** *(string) --*

      Provides the option group name for the DB snapshot.

    - **PercentProgress** *(integer) --*

      The percentage of the estimated data that has been transferred.

    - **SourceRegion** *(string) --*

      The AWS Region that the DB snapshot was created in or copied from.

    - **SourceDBSnapshotIdentifier** *(string) --*

      The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
      has value in case of cross-customer or cross-region copy.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB snapshot.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which to associate the instance for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the DB snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

    - **DBSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB snapshot.

    - **Timezone** *(string) --*

      The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
      instances that were created with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance when the DB snapshot was created.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to an
      AWS Region.
    """


_ClientCopyDbSnapshotResponseTypeDef = TypedDict(
    "_ClientCopyDbSnapshotResponseTypeDef",
    {"DBSnapshot": ClientCopyDbSnapshotResponseDBSnapshotTypeDef},
    total=False,
)


class ClientCopyDbSnapshotResponseTypeDef(_ClientCopyDbSnapshotResponseTypeDef):
    """
    Type definition for `ClientCopyDbSnapshot` `Response`

    - **DBSnapshot** *(dict) --*

      Contains the details of an Amazon RDS DB snapshot.

      This data type is used as a response element in the ``DescribeDBSnapshots`` action.

      - **DBSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB snapshot.

      - **DBInstanceIdentifier** *(string) --*

        Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB snapshot.

      - **Port** *(integer) --*

        Specifies the port that the database engine was listening on at the time of the snapshot.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance was located in at the time of
        the DB snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB snapshot.

      - **InstanceCreateTime** *(datetime) --*

        Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB snapshot.

      - **EngineVersion** *(string) --*

        Specifies the version of the database engine.

      - **LicenseModel** *(string) --*

        License model information for the restored DB instance.

      - **SnapshotType** *(string) --*

        Provides the type of the DB snapshot.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
        time of the snapshot.

      - **OptionGroupName** *(string) --*

        Provides the option group name for the DB snapshot.

      - **PercentProgress** *(integer) --*

        The percentage of the estimated data that has been transferred.

      - **SourceRegion** *(string) --*

        The AWS Region that the DB snapshot was created in or copied from.

      - **SourceDBSnapshotIdentifier** *(string) --*

        The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
        has value in case of cross-customer or cross-region copy.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB snapshot.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which to associate the instance for TDE encryption.

      - **Encrypted** *(boolean) --*

        Specifies whether the DB snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

      - **DBSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB snapshot.

      - **Timezone** *(string) --*

        The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
        instances that were created with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance when the DB snapshot was created.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DbiResourceId** *(string) --*

        The identifier for the source DB instance, which can't be changed and which is unique to an
        AWS Region.
    """


_ClientCopyDbSnapshotTagsTypeDef = TypedDict(
    "_ClientCopyDbSnapshotTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCopyDbSnapshotTagsTypeDef(_ClientCopyDbSnapshotTagsTypeDef):
    """
    Type definition for `ClientCopyDbSnapshot` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCopyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientCopyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientCopyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef(
    _ClientCopyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCopyOptionGroupResponseOptionGroupOptions` `DBSecurityGroupMemberships`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientCopyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef = TypedDict(
    "_ClientCopyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef",
    {
        "Name": str,
        "Value": str,
        "DefaultValue": str,
        "Description": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsCollection": bool,
    },
    total=False,
)


class ClientCopyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef(
    _ClientCopyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef
):
    """
    Type definition for `ClientCopyOptionGroupResponseOptionGroupOptions` `OptionSettings`

    Option settings are the actual settings being applied or configured for that option.
    It is used when you modify an option group or describe option groups. For example,
    the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
    that can have several different values.

    - **Name** *(string) --*

      The name of the option that has settings that you can set.

    - **Value** *(string) --*

      The current value of the option setting.

    - **DefaultValue** *(string) --*

      The default value of the option setting.

    - **Description** *(string) --*

      The description of the option setting.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type.

    - **DataType** *(string) --*

      The data type of the option setting.

    - **AllowedValues** *(string) --*

      The allowed values of the option setting.

    - **IsModifiable** *(boolean) --*

      A Boolean value that, when true, indicates the option setting can be modified from
      the default.

    - **IsCollection** *(boolean) --*

      Indicates if the option setting is part of a collection.
    """


_ClientCopyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientCopyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientCopyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef(
    _ClientCopyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCopyOptionGroupResponseOptionGroupOptions` `VpcSecurityGroupMemberships`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientCopyOptionGroupResponseOptionGroupOptionsTypeDef = TypedDict(
    "_ClientCopyOptionGroupResponseOptionGroupOptionsTypeDef",
    {
        "OptionName": str,
        "OptionDescription": str,
        "Persistent": bool,
        "Permanent": bool,
        "Port": int,
        "OptionVersion": str,
        "OptionSettings": List[
            ClientCopyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef
        ],
        "DBSecurityGroupMemberships": List[
            ClientCopyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef
        ],
        "VpcSecurityGroupMemberships": List[
            ClientCopyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef
        ],
    },
    total=False,
)


class ClientCopyOptionGroupResponseOptionGroupOptionsTypeDef(
    _ClientCopyOptionGroupResponseOptionGroupOptionsTypeDef
):
    """
    Type definition for `ClientCopyOptionGroupResponseOptionGroup` `Options`

    Option details.

    - **OptionName** *(string) --*

      The name of the option.

    - **OptionDescription** *(string) --*

      The description of the option.

    - **Persistent** *(boolean) --*

      Indicate if this option is persistent.

    - **Permanent** *(boolean) --*

      Indicate if this option is permanent.

    - **Port** *(integer) --*

      If required, the port configured for this option to use.

    - **OptionVersion** *(string) --*

      The version of the option.

    - **OptionSettings** *(list) --*

      The option settings for this option.

      - *(dict) --*

        Option settings are the actual settings being applied or configured for that option.
        It is used when you modify an option group or describe option groups. For example,
        the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
        that can have several different values.

        - **Name** *(string) --*

          The name of the option that has settings that you can set.

        - **Value** *(string) --*

          The current value of the option setting.

        - **DefaultValue** *(string) --*

          The default value of the option setting.

        - **Description** *(string) --*

          The description of the option setting.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type.

        - **DataType** *(string) --*

          The data type of the option setting.

        - **AllowedValues** *(string) --*

          The allowed values of the option setting.

        - **IsModifiable** *(boolean) --*

          A Boolean value that, when true, indicates the option setting can be modified from
          the default.

        - **IsCollection** *(boolean) --*

          Indicates if the option setting is part of a collection.

    - **DBSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this DB security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this VPC security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.
    """


_ClientCopyOptionGroupResponseOptionGroupTypeDef = TypedDict(
    "_ClientCopyOptionGroupResponseOptionGroupTypeDef",
    {
        "OptionGroupName": str,
        "OptionGroupDescription": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "Options": List[ClientCopyOptionGroupResponseOptionGroupOptionsTypeDef],
        "AllowsVpcAndNonVpcInstanceMemberships": bool,
        "VpcId": str,
        "OptionGroupArn": str,
    },
    total=False,
)


class ClientCopyOptionGroupResponseOptionGroupTypeDef(
    _ClientCopyOptionGroupResponseOptionGroupTypeDef
):
    """
    Type definition for `ClientCopyOptionGroupResponse` `OptionGroup`

    - **OptionGroupName** *(string) --*

      Specifies the name of the option group.

    - **OptionGroupDescription** *(string) --*

      Provides a description of the option group.

    - **EngineName** *(string) --*

      Indicates the name of the engine that this option group can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version associated with this option group.

    - **Options** *(list) --*

      Indicates what options are available in the option group.

      - *(dict) --*

        Option details.

        - **OptionName** *(string) --*

          The name of the option.

        - **OptionDescription** *(string) --*

          The description of the option.

        - **Persistent** *(boolean) --*

          Indicate if this option is persistent.

        - **Permanent** *(boolean) --*

          Indicate if this option is permanent.

        - **Port** *(integer) --*

          If required, the port configured for this option to use.

        - **OptionVersion** *(string) --*

          The version of the option.

        - **OptionSettings** *(list) --*

          The option settings for this option.

          - *(dict) --*

            Option settings are the actual settings being applied or configured for that option.
            It is used when you modify an option group or describe option groups. For example,
            the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
            that can have several different values.

            - **Name** *(string) --*

              The name of the option that has settings that you can set.

            - **Value** *(string) --*

              The current value of the option setting.

            - **DefaultValue** *(string) --*

              The default value of the option setting.

            - **Description** *(string) --*

              The description of the option setting.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type.

            - **DataType** *(string) --*

              The data type of the option setting.

            - **AllowedValues** *(string) --*

              The allowed values of the option setting.

            - **IsModifiable** *(boolean) --*

              A Boolean value that, when true, indicates the option setting can be modified from
              the default.

            - **IsCollection** *(boolean) --*

              Indicates if the option setting is part of a collection.

        - **DBSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this DB security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this VPC security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

    - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

      Indicates whether this option group can be applied to both VPC and non-VPC instances. The
      value ``true`` indicates the option group can be applied to both VPC and non-VPC instances.

    - **VpcId** *(string) --*

      If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
      **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
      option group can be applied to both VPC and non-VPC instances. If this field contains a
      value, then this option group can only be applied to instances that are in the VPC
      indicated by this field.

    - **OptionGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the option group.
    """


_ClientCopyOptionGroupResponseTypeDef = TypedDict(
    "_ClientCopyOptionGroupResponseTypeDef",
    {"OptionGroup": ClientCopyOptionGroupResponseOptionGroupTypeDef},
    total=False,
)


class ClientCopyOptionGroupResponseTypeDef(_ClientCopyOptionGroupResponseTypeDef):
    """
    Type definition for `ClientCopyOptionGroup` `Response`

    - **OptionGroup** *(dict) --*

      - **OptionGroupName** *(string) --*

        Specifies the name of the option group.

      - **OptionGroupDescription** *(string) --*

        Provides a description of the option group.

      - **EngineName** *(string) --*

        Indicates the name of the engine that this option group can be applied to.

      - **MajorEngineVersion** *(string) --*

        Indicates the major engine version associated with this option group.

      - **Options** *(list) --*

        Indicates what options are available in the option group.

        - *(dict) --*

          Option details.

          - **OptionName** *(string) --*

            The name of the option.

          - **OptionDescription** *(string) --*

            The description of the option.

          - **Persistent** *(boolean) --*

            Indicate if this option is persistent.

          - **Permanent** *(boolean) --*

            Indicate if this option is permanent.

          - **Port** *(integer) --*

            If required, the port configured for this option to use.

          - **OptionVersion** *(string) --*

            The version of the option.

          - **OptionSettings** *(list) --*

            The option settings for this option.

            - *(dict) --*

              Option settings are the actual settings being applied or configured for that option.
              It is used when you modify an option group or describe option groups. For example,
              the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
              that can have several different values.

              - **Name** *(string) --*

                The name of the option that has settings that you can set.

              - **Value** *(string) --*

                The current value of the option setting.

              - **DefaultValue** *(string) --*

                The default value of the option setting.

              - **Description** *(string) --*

                The description of the option setting.

              - **ApplyType** *(string) --*

                The DB engine specific parameter type.

              - **DataType** *(string) --*

                The data type of the option setting.

              - **AllowedValues** *(string) --*

                The allowed values of the option setting.

              - **IsModifiable** *(boolean) --*

                A Boolean value that, when true, indicates the option setting can be modified from
                the default.

              - **IsCollection** *(boolean) --*

                Indicates if the option setting is part of a collection.

          - **DBSecurityGroupMemberships** *(list) --*

            If the option requires access to a port, then this DB security group allows access to
            the port.

            - *(dict) --*

              This data type is used as a response element in the following actions:

              * ``ModifyDBInstance``

              * ``RebootDBInstance``

              * ``RestoreDBInstanceFromDBSnapshot``

              * ``RestoreDBInstanceToPointInTime``

              - **DBSecurityGroupName** *(string) --*

                The name of the DB security group.

              - **Status** *(string) --*

                The status of the DB security group.

          - **VpcSecurityGroupMemberships** *(list) --*

            If the option requires access to a port, then this VPC security group allows access to
            the port.

            - *(dict) --*

              This data type is used as a response element for queries on VPC security group
              membership.

              - **VpcSecurityGroupId** *(string) --*

                The name of the VPC security group.

              - **Status** *(string) --*

                The status of the VPC security group.

      - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

        Indicates whether this option group can be applied to both VPC and non-VPC instances. The
        value ``true`` indicates the option group can be applied to both VPC and non-VPC instances.

      - **VpcId** *(string) --*

        If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
        **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
        option group can be applied to both VPC and non-VPC instances. If this field contains a
        value, then this option group can only be applied to instances that are in the VPC
        indicated by this field.

      - **OptionGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the option group.
    """


_ClientCopyOptionGroupTagsTypeDef = TypedDict(
    "_ClientCopyOptionGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCopyOptionGroupTagsTypeDef(_ClientCopyOptionGroupTagsTypeDef):
    """
    Type definition for `ClientCopyOptionGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef = TypedDict(
    "_ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef",
    {
        "VpnId": str,
        "VpnTunnelOriginatorIP": str,
        "VpnGatewayIp": str,
        "VpnPSK": str,
        "VpnName": str,
        "VpnState": str,
    },
    total=False,
)


class ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef(
    _ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef
):
    """
    Type definition for `ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZone` `VpnDetails`

    Information about the virtual private network (VPN) between the VMware vSphere cluster and
    the AWS website.

    - **VpnId** *(string) --*

      The ID of the VPN.

    - **VpnTunnelOriginatorIP** *(string) --*

      The IP address of network traffic from your on-premises data center. A custom AZ receives
      the network traffic.

    - **VpnGatewayIp** *(string) --*

      The IP address of network traffic from AWS to your on-premises data center.

    - **VpnPSK** *(string) --*

      The preshared key (PSK) for the VPN.

    - **VpnName** *(string) --*

      The name of the VPN.

    - **VpnState** *(string) --*

      The state of the VPN.
    """


_ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef = TypedDict(
    "_ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef",
    {
        "CustomAvailabilityZoneId": str,
        "CustomAvailabilityZoneName": str,
        "CustomAvailabilityZoneStatus": str,
        "VpnDetails": ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef,
    },
    total=False,
)


class ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef(
    _ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientCreateCustomAvailabilityZoneResponse` `CustomAvailabilityZone`

    A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere
    cluster.

    For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
    https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

    - **CustomAvailabilityZoneId** *(string) --*

      The identifier of the custom AZ.

      Amazon RDS generates a unique identifier when a custom AZ is created.

    - **CustomAvailabilityZoneName** *(string) --*

      The name of the custom AZ.

    - **CustomAvailabilityZoneStatus** *(string) --*

      The status of the custom AZ.

    - **VpnDetails** *(dict) --*

      Information about the virtual private network (VPN) between the VMware vSphere cluster and
      the AWS website.

      - **VpnId** *(string) --*

        The ID of the VPN.

      - **VpnTunnelOriginatorIP** *(string) --*

        The IP address of network traffic from your on-premises data center. A custom AZ receives
        the network traffic.

      - **VpnGatewayIp** *(string) --*

        The IP address of network traffic from AWS to your on-premises data center.

      - **VpnPSK** *(string) --*

        The preshared key (PSK) for the VPN.

      - **VpnName** *(string) --*

        The name of the VPN.

      - **VpnState** *(string) --*

        The state of the VPN.
    """


_ClientCreateCustomAvailabilityZoneResponseTypeDef = TypedDict(
    "_ClientCreateCustomAvailabilityZoneResponseTypeDef",
    {
        "CustomAvailabilityZone": ClientCreateCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef
    },
    total=False,
)


class ClientCreateCustomAvailabilityZoneResponseTypeDef(
    _ClientCreateCustomAvailabilityZoneResponseTypeDef
):
    """
    Type definition for `ClientCreateCustomAvailabilityZone` `Response`

    - **CustomAvailabilityZone** *(dict) --*

      A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere
      cluster.

      For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
      https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

      - **CustomAvailabilityZoneId** *(string) --*

        The identifier of the custom AZ.

        Amazon RDS generates a unique identifier when a custom AZ is created.

      - **CustomAvailabilityZoneName** *(string) --*

        The name of the custom AZ.

      - **CustomAvailabilityZoneStatus** *(string) --*

        The status of the custom AZ.

      - **VpnDetails** *(dict) --*

        Information about the virtual private network (VPN) between the VMware vSphere cluster and
        the AWS website.

        - **VpnId** *(string) --*

          The ID of the VPN.

        - **VpnTunnelOriginatorIP** *(string) --*

          The IP address of network traffic from your on-premises data center. A custom AZ receives
          the network traffic.

        - **VpnGatewayIp** *(string) --*

          The IP address of network traffic from AWS to your on-premises data center.

        - **VpnPSK** *(string) --*

          The preshared key (PSK) for the VPN.

        - **VpnName** *(string) --*

          The name of the VPN.

        - **VpnState** *(string) --*

          The state of the VPN.
    """


_ClientCreateDbClusterEndpointResponseTypeDef = TypedDict(
    "_ClientCreateDbClusterEndpointResponseTypeDef",
    {
        "DBClusterEndpointIdentifier": str,
        "DBClusterIdentifier": str,
        "DBClusterEndpointResourceIdentifier": str,
        "Endpoint": str,
        "Status": str,
        "EndpointType": str,
        "CustomEndpointType": str,
        "StaticMembers": List[str],
        "ExcludedMembers": List[str],
        "DBClusterEndpointArn": str,
    },
    total=False,
)


class ClientCreateDbClusterEndpointResponseTypeDef(
    _ClientCreateDbClusterEndpointResponseTypeDef
):
    """
    Type definition for `ClientCreateDbClusterEndpoint` `Response`

    This data type represents the information you need to connect to an Amazon Aurora DB cluster.
    This data type is used as a response element in the following actions:

    * ``CreateDBClusterEndpoint``

    * ``DescribeDBClusterEndpoints``

    * ``ModifyDBClusterEndpoint``

    * ``DeleteDBClusterEndpoint``

    For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

    - **DBClusterEndpointIdentifier** *(string) --*

      The identifier associated with the endpoint. This parameter is stored as a lowercase string.

    - **DBClusterIdentifier** *(string) --*

      The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is
      stored as a lowercase string.

    - **DBClusterEndpointResourceIdentifier** *(string) --*

      A unique system-generated identifier for an endpoint. It remains the same for the whole life
      of the endpoint.

    - **Endpoint** *(string) --*

      The DNS address of the endpoint.

    - **Status** *(string) --*

      The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
      ``modifying`` .

    - **EndpointType** *(string) --*

      The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

    - **CustomEndpointType** *(string) --*

      The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

    - **StaticMembers** *(list) --*

      List of DB instance identifiers that are part of the custom endpoint group.

      - *(string) --*

    - **ExcludedMembers** *(list) --*

      List of DB instance identifiers that aren't part of the custom endpoint group. All other
      eligible instances are reachable through the custom endpoint. Only relevant if the list of
      static members is empty.

      - *(string) --*

    - **DBClusterEndpointArn** *(string) --*

      The Amazon Resource Name (ARN) for the endpoint.
    """


_ClientCreateDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef = TypedDict(
    "_ClientCreateDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef",
    {
        "DBClusterParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBClusterParameterGroupArn": str,
    },
    total=False,
)


class ClientCreateDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef(
    _ClientCreateDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef
):
    """
    Type definition for `ClientCreateDbClusterParameterGroupResponse` `DBClusterParameterGroup`

    Contains the details of an Amazon RDS DB cluster parameter group.

    This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
    action.

    - **DBClusterParameterGroupName** *(string) --*

      Provides the name of the DB cluster parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB cluster parameter group is
      compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB cluster parameter group.

    - **DBClusterParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_ClientCreateDbClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientCreateDbClusterParameterGroupResponseTypeDef",
    {
        "DBClusterParameterGroup": ClientCreateDbClusterParameterGroupResponseDBClusterParameterGroupTypeDef
    },
    total=False,
)


class ClientCreateDbClusterParameterGroupResponseTypeDef(
    _ClientCreateDbClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientCreateDbClusterParameterGroup` `Response`

    - **DBClusterParameterGroup** *(dict) --*

      Contains the details of an Amazon RDS DB cluster parameter group.

      This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
      action.

      - **DBClusterParameterGroupName** *(string) --*

        Provides the name of the DB cluster parameter group.

      - **DBParameterGroupFamily** *(string) --*

        Provides the name of the DB parameter group family that this DB cluster parameter group is
        compatible with.

      - **Description** *(string) --*

        Provides the customer-specified description for this DB cluster parameter group.

      - **DBClusterParameterGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_ClientCreateDbClusterParameterGroupTagsTypeDef = TypedDict(
    "_ClientCreateDbClusterParameterGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateDbClusterParameterGroupTagsTypeDef(
    _ClientCreateDbClusterParameterGroupTagsTypeDef
):
    """
    Type definition for `ClientCreateDbClusterParameterGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientCreateDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientCreateDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientCreateDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientCreateDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientCreateDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientCreateDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientCreateDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientCreateDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientCreateDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientCreateDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCreateDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientCreateDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientCreateDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientCreateDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientCreateDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientCreateDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientCreateDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientCreateDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientCreateDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientCreateDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientCreateDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientCreateDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientCreateDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientCreateDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientCreateDbClusterResponseDBClusterTypeDef(
    _ClientCreateDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientCreateDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientCreateDbClusterResponseTypeDef = TypedDict(
    "_ClientCreateDbClusterResponseTypeDef",
    {"DBCluster": ClientCreateDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientCreateDbClusterResponseTypeDef(_ClientCreateDbClusterResponseTypeDef):
    """
    Type definition for `ClientCreateDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientCreateDbClusterScalingConfigurationTypeDef = TypedDict(
    "_ClientCreateDbClusterScalingConfigurationTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientCreateDbClusterScalingConfigurationTypeDef(
    _ClientCreateDbClusterScalingConfigurationTypeDef
):
    """
    Type definition for `ClientCreateDbCluster` `ScalingConfiguration`

    For DB clusters in ``serverless`` DB engine mode, the scaling properties of the DB cluster.

    - **MinCapacity** *(integer) --*

      The minimum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      For Aurora MySQL, valid capacity values are ``1`` , ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``128`` , and ``256`` .

      For Aurora PostgreSQL, valid capacity values are ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``192`` , and ``384`` .

      The minimum capacity must be less than or equal to the maximum capacity.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      For Aurora MySQL, valid capacity values are ``1`` , ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``128`` , and ``256`` .

      For Aurora PostgreSQL, valid capacity values are ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``192`` , and ``384`` .

      The maximum capacity must be greater than or equal to the minimum capacity.

    - **AutoPause** *(boolean) --*

      A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in
      ``serverless`` DB engine mode. A DB cluster can be paused only when it's idle (it has no
      connections).

      .. note::

        If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a
        snapshot. In this case, the DB cluster is restored when there is a request to connect to it.

    - **SecondsUntilAutoPause** *(integer) --*

      The time, in seconds, before an Aurora DB cluster in ``serverless`` mode is paused.

    - **TimeoutAction** *(string) --*

      The action to take when the timeout is reached, either ``ForceApplyCapacityChange`` or
      ``RollbackCapacityChange`` .

       ``ForceApplyCapacityChange`` sets the capacity to the specified value as soon as possible.

       ``RollbackCapacityChange`` , the default, ignores the capacity change if a scaling point isn't
       found in the timeout period.

      .. warning::

        If you specify ``ForceApplyCapacityChange`` , connections that prevent Aurora Serverless from
        finding a scaling point might be dropped.

      For more information, see `Autoscaling for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientCreateDbClusterSnapshotResponseDBClusterSnapshotTypeDef = TypedDict(
    "_ClientCreateDbClusterSnapshotResponseDBClusterSnapshotTypeDef",
    {
        "AvailabilityZones": List[str],
        "DBClusterSnapshotIdentifier": str,
        "DBClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "VpcId": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "PercentProgress": int,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DBClusterSnapshotArn": str,
        "SourceDBClusterSnapshotArn": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class ClientCreateDbClusterSnapshotResponseDBClusterSnapshotTypeDef(
    _ClientCreateDbClusterSnapshotResponseDBClusterSnapshotTypeDef
):
    """
    Type definition for `ClientCreateDbClusterSnapshotResponse` `DBClusterSnapshot`

    Contains the details for an Amazon RDS DB cluster snapshot

    This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
      can be restored.

      - *(string) --*

    - **DBClusterSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB cluster snapshot.

    - **DBClusterIdentifier** *(string) --*

      Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
      created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB cluster snapshot.

    - **Port** *(integer) --*

      Specifies the port that the DB cluster was listening on at the time of the snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB cluster snapshot.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB cluster snapshot.

    - **EngineVersion** *(string) --*

      Provides the version of the database engine for this DB cluster snapshot.

    - **LicenseModel** *(string) --*

      Provides the license model information for this DB cluster snapshot.

    - **SnapshotType** *(string) --*

      Provides the type of the DB cluster snapshot.

    - **PercentProgress** *(integer) --*

      Specifies the percentage of the estimated data that has been transferred.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
      snapshot.

    - **DBClusterSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster snapshot.

    - **SourceDBClusterSnapshotArn** *(string) --*

      If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
      Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_ClientCreateDbClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientCreateDbClusterSnapshotResponseTypeDef",
    {
        "DBClusterSnapshot": ClientCreateDbClusterSnapshotResponseDBClusterSnapshotTypeDef
    },
    total=False,
)


class ClientCreateDbClusterSnapshotResponseTypeDef(
    _ClientCreateDbClusterSnapshotResponseTypeDef
):
    """
    Type definition for `ClientCreateDbClusterSnapshot` `Response`

    - **DBClusterSnapshot** *(dict) --*

      Contains the details for an Amazon RDS DB cluster snapshot

      This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
        can be restored.

        - *(string) --*

      - **DBClusterSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB cluster snapshot.

      - **DBClusterIdentifier** *(string) --*

        Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
        created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB cluster snapshot.

      - **Port** *(integer) --*

        Specifies the port that the DB cluster was listening on at the time of the snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB cluster snapshot.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB cluster snapshot.

      - **EngineVersion** *(string) --*

        Provides the version of the database engine for this DB cluster snapshot.

      - **LicenseModel** *(string) --*

        Provides the license model information for this DB cluster snapshot.

      - **SnapshotType** *(string) --*

        Provides the type of the DB cluster snapshot.

      - **PercentProgress** *(integer) --*

        Specifies the percentage of the estimated data that has been transferred.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
        snapshot.

      - **DBClusterSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster snapshot.

      - **SourceDBClusterSnapshotArn** *(string) --*

        If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
        Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.
    """


_ClientCreateDbClusterSnapshotTagsTypeDef = TypedDict(
    "_ClientCreateDbClusterSnapshotTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbClusterSnapshotTagsTypeDef(
    _ClientCreateDbClusterSnapshotTagsTypeDef
):
    """
    Type definition for `ClientCreateDbClusterSnapshot` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbClusterTagsTypeDef = TypedDict(
    "_ClientCreateDbClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbClusterTagsTypeDef(_ClientCreateDbClusterTagsTypeDef):
    """
    Type definition for `ClientCreateDbCluster` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceProcessorFeaturesTypeDef(
    _ClientCreateDbInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature name
    for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you call one
    of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbInstanceReadReplicaProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaProcessorFeaturesTypeDef(
    _ClientCreateDbInstanceReadReplicaProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplica` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature name
    for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you call one
    of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceAssociatedRolesTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceDomainMembershipsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceEndpointTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceListenerEndpointTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceStatusInfosTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientCreateDbInstanceReadReplicaResponseDBInstanceTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientCreateDbInstanceReadReplicaResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientCreateDbInstanceReadReplicaResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientCreateDbInstanceReadReplicaResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientCreateDbInstanceReadReplicaResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientCreateDbInstanceReadReplicaResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseDBInstanceTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplicaResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientCreateDbInstanceReadReplicaResponseTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaResponseTypeDef",
    {"DBInstance": ClientCreateDbInstanceReadReplicaResponseDBInstanceTypeDef},
    total=False,
)


class ClientCreateDbInstanceReadReplicaResponseTypeDef(
    _ClientCreateDbInstanceReadReplicaResponseTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplica` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientCreateDbInstanceReadReplicaTagsTypeDef = TypedDict(
    "_ClientCreateDbInstanceReadReplicaTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceReadReplicaTagsTypeDef(
    _ClientCreateDbInstanceReadReplicaTagsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceReadReplica` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbInstanceResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceAssociatedRolesTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientCreateDbInstanceResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientCreateDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientCreateDbInstanceResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceDomainMembershipsTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientCreateDbInstanceResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceEndpointTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientCreateDbInstanceResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceListenerEndpointTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientCreateDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientCreateDbInstanceResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbInstanceResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceStatusInfosTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientCreateDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientCreateDbInstanceResponseDBInstanceTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientCreateDbInstanceResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientCreateDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientCreateDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientCreateDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientCreateDbInstanceResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientCreateDbInstanceResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientCreateDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[ClientCreateDbInstanceResponseDBInstanceStatusInfosTypeDef],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientCreateDbInstanceResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientCreateDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientCreateDbInstanceResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientCreateDbInstanceResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientCreateDbInstanceResponseDBInstanceTypeDef(
    _ClientCreateDbInstanceResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientCreateDbInstanceResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientCreateDbInstanceResponseTypeDef = TypedDict(
    "_ClientCreateDbInstanceResponseTypeDef",
    {"DBInstance": ClientCreateDbInstanceResponseDBInstanceTypeDef},
    total=False,
)


class ClientCreateDbInstanceResponseTypeDef(_ClientCreateDbInstanceResponseTypeDef):
    """
    Type definition for `ClientCreateDbInstance` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientCreateDbInstanceTagsTypeDef = TypedDict(
    "_ClientCreateDbInstanceTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbInstanceTagsTypeDef(_ClientCreateDbInstanceTagsTypeDef):
    """
    Type definition for `ClientCreateDbInstance` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbParameterGroupResponseDBParameterGroupTypeDef = TypedDict(
    "_ClientCreateDbParameterGroupResponseDBParameterGroupTypeDef",
    {
        "DBParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBParameterGroupArn": str,
    },
    total=False,
)


class ClientCreateDbParameterGroupResponseDBParameterGroupTypeDef(
    _ClientCreateDbParameterGroupResponseDBParameterGroupTypeDef
):
    """
    Type definition for `ClientCreateDbParameterGroupResponse` `DBParameterGroup`

    Contains the details of an Amazon RDS DB parameter group.

    This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

    - **DBParameterGroupName** *(string) --*

      Provides the name of the DB parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB parameter group is
      compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB parameter group.

    - **DBParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB parameter group.
    """


_ClientCreateDbParameterGroupResponseTypeDef = TypedDict(
    "_ClientCreateDbParameterGroupResponseTypeDef",
    {"DBParameterGroup": ClientCreateDbParameterGroupResponseDBParameterGroupTypeDef},
    total=False,
)


class ClientCreateDbParameterGroupResponseTypeDef(
    _ClientCreateDbParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientCreateDbParameterGroup` `Response`

    - **DBParameterGroup** *(dict) --*

      Contains the details of an Amazon RDS DB parameter group.

      This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

      - **DBParameterGroupName** *(string) --*

        Provides the name of the DB parameter group.

      - **DBParameterGroupFamily** *(string) --*

        Provides the name of the DB parameter group family that this DB parameter group is
        compatible with.

      - **Description** *(string) --*

        Provides the customer-specified description for this DB parameter group.

      - **DBParameterGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB parameter group.
    """


_ClientCreateDbParameterGroupTagsTypeDef = TypedDict(
    "_ClientCreateDbParameterGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbParameterGroupTagsTypeDef(_ClientCreateDbParameterGroupTagsTypeDef):
    """
    Type definition for `ClientCreateDbParameterGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbSecurityGroupResponseDBSecurityGroupEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientCreateDbSecurityGroupResponseDBSecurityGroupEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupId": str,
        "EC2SecurityGroupOwnerId": str,
    },
    total=False,
)


class ClientCreateDbSecurityGroupResponseDBSecurityGroupEC2SecurityGroupsTypeDef(
    _ClientCreateDbSecurityGroupResponseDBSecurityGroupEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateDbSecurityGroupResponseDBSecurityGroup` `EC2SecurityGroups`

    This data type is used as a response element in the following actions:

    * ``AuthorizeDBSecurityGroupIngress``

    * ``DescribeDBSecurityGroups``

    * ``RevokeDBSecurityGroupIngress``

    - **Status** *(string) --*

      Provides the status of the EC2 security group. Status can be "authorizing",
      "authorized", "revoking", and "revoked".

    - **EC2SecurityGroupName** *(string) --*

      Specifies the name of the EC2 security group.

    - **EC2SecurityGroupId** *(string) --*

      Specifies the id of the EC2 security group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      Specifies the AWS ID of the owner of the EC2 security group specified in the
      ``EC2SecurityGroupName`` field.
    """


_ClientCreateDbSecurityGroupResponseDBSecurityGroupIPRangesTypeDef = TypedDict(
    "_ClientCreateDbSecurityGroupResponseDBSecurityGroupIPRangesTypeDef",
    {"Status": str, "CIDRIP": str},
    total=False,
)


class ClientCreateDbSecurityGroupResponseDBSecurityGroupIPRangesTypeDef(
    _ClientCreateDbSecurityGroupResponseDBSecurityGroupIPRangesTypeDef
):
    """
    Type definition for `ClientCreateDbSecurityGroupResponseDBSecurityGroup` `IPRanges`

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **Status** *(string) --*

      Specifies the status of the IP range. Status can be "authorizing", "authorized",
      "revoking", and "revoked".

    - **CIDRIP** *(string) --*

      Specifies the IP range.
    """


_ClientCreateDbSecurityGroupResponseDBSecurityGroupTypeDef = TypedDict(
    "_ClientCreateDbSecurityGroupResponseDBSecurityGroupTypeDef",
    {
        "OwnerId": str,
        "DBSecurityGroupName": str,
        "DBSecurityGroupDescription": str,
        "VpcId": str,
        "EC2SecurityGroups": List[
            ClientCreateDbSecurityGroupResponseDBSecurityGroupEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientCreateDbSecurityGroupResponseDBSecurityGroupIPRangesTypeDef
        ],
        "DBSecurityGroupArn": str,
    },
    total=False,
)


class ClientCreateDbSecurityGroupResponseDBSecurityGroupTypeDef(
    _ClientCreateDbSecurityGroupResponseDBSecurityGroupTypeDef
):
    """
    Type definition for `ClientCreateDbSecurityGroupResponse` `DBSecurityGroup`

    Contains the details for an Amazon RDS DB security group.

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **OwnerId** *(string) --*

      Provides the AWS ID of the owner of a specific DB security group.

    - **DBSecurityGroupName** *(string) --*

      Specifies the name of the DB security group.

    - **DBSecurityGroupDescription** *(string) --*

      Provides the description of the DB security group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB security group.

    - **EC2SecurityGroups** *(list) --*

      Contains a list of ``EC2SecurityGroup`` elements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``AuthorizeDBSecurityGroupIngress``

        * ``DescribeDBSecurityGroups``

        * ``RevokeDBSecurityGroupIngress``

        - **Status** *(string) --*

          Provides the status of the EC2 security group. Status can be "authorizing",
          "authorized", "revoking", and "revoked".

        - **EC2SecurityGroupName** *(string) --*

          Specifies the name of the EC2 security group.

        - **EC2SecurityGroupId** *(string) --*

          Specifies the id of the EC2 security group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          Specifies the AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

    - **IPRanges** *(list) --*

      Contains a list of ``IPRange`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **Status** *(string) --*

          Specifies the status of the IP range. Status can be "authorizing", "authorized",
          "revoking", and "revoked".

        - **CIDRIP** *(string) --*

          Specifies the IP range.

    - **DBSecurityGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientCreateDbSecurityGroupResponseTypeDef = TypedDict(
    "_ClientCreateDbSecurityGroupResponseTypeDef",
    {"DBSecurityGroup": ClientCreateDbSecurityGroupResponseDBSecurityGroupTypeDef},
    total=False,
)


class ClientCreateDbSecurityGroupResponseTypeDef(
    _ClientCreateDbSecurityGroupResponseTypeDef
):
    """
    Type definition for `ClientCreateDbSecurityGroup` `Response`

    - **DBSecurityGroup** *(dict) --*

      Contains the details for an Amazon RDS DB security group.

      This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

      - **OwnerId** *(string) --*

        Provides the AWS ID of the owner of a specific DB security group.

      - **DBSecurityGroupName** *(string) --*

        Specifies the name of the DB security group.

      - **DBSecurityGroupDescription** *(string) --*

        Provides the description of the DB security group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB security group.

      - **EC2SecurityGroups** *(list) --*

        Contains a list of ``EC2SecurityGroup`` elements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``AuthorizeDBSecurityGroupIngress``

          * ``DescribeDBSecurityGroups``

          * ``RevokeDBSecurityGroupIngress``

          - **Status** *(string) --*

            Provides the status of the EC2 security group. Status can be "authorizing",
            "authorized", "revoking", and "revoked".

          - **EC2SecurityGroupName** *(string) --*

            Specifies the name of the EC2 security group.

          - **EC2SecurityGroupId** *(string) --*

            Specifies the id of the EC2 security group.

          - **EC2SecurityGroupOwnerId** *(string) --*

            Specifies the AWS ID of the owner of the EC2 security group specified in the
            ``EC2SecurityGroupName`` field.

      - **IPRanges** *(list) --*

        Contains a list of ``IPRange`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

          - **Status** *(string) --*

            Specifies the status of the IP range. Status can be "authorizing", "authorized",
            "revoking", and "revoked".

          - **CIDRIP** *(string) --*

            Specifies the IP range.

      - **DBSecurityGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientCreateDbSecurityGroupTagsTypeDef = TypedDict(
    "_ClientCreateDbSecurityGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbSecurityGroupTagsTypeDef(_ClientCreateDbSecurityGroupTagsTypeDef):
    """
    Type definition for `ClientCreateDbSecurityGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef = TypedDict(
    "_ClientCreateDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientCreateDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef(
    _ClientCreateDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientCreateDbSnapshotResponseDBSnapshot` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientCreateDbSnapshotResponseDBSnapshotTypeDef = TypedDict(
    "_ClientCreateDbSnapshotResponseDBSnapshotTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBInstanceIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "Iops": int,
        "OptionGroupName": str,
        "PercentProgress": int,
        "SourceRegion": str,
        "SourceDBSnapshotIdentifier": str,
        "StorageType": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "DBSnapshotArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "ProcessorFeatures": List[
            ClientCreateDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
        ],
        "DbiResourceId": str,
    },
    total=False,
)


class ClientCreateDbSnapshotResponseDBSnapshotTypeDef(
    _ClientCreateDbSnapshotResponseDBSnapshotTypeDef
):
    """
    Type definition for `ClientCreateDbSnapshotResponse` `DBSnapshot`

    Contains the details of an Amazon RDS DB snapshot.

    This data type is used as a response element in the ``DescribeDBSnapshots`` action.

    - **DBSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB snapshot.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB snapshot.

    - **Port** *(integer) --*

      Specifies the port that the database engine was listening on at the time of the snapshot.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance was located in at the time of
      the DB snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB snapshot.

    - **InstanceCreateTime** *(datetime) --*

      Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB snapshot.

    - **EngineVersion** *(string) --*

      Specifies the version of the database engine.

    - **LicenseModel** *(string) --*

      License model information for the restored DB instance.

    - **SnapshotType** *(string) --*

      Provides the type of the DB snapshot.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
      time of the snapshot.

    - **OptionGroupName** *(string) --*

      Provides the option group name for the DB snapshot.

    - **PercentProgress** *(integer) --*

      The percentage of the estimated data that has been transferred.

    - **SourceRegion** *(string) --*

      The AWS Region that the DB snapshot was created in or copied from.

    - **SourceDBSnapshotIdentifier** *(string) --*

      The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
      has value in case of cross-customer or cross-region copy.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB snapshot.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which to associate the instance for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the DB snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

    - **DBSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB snapshot.

    - **Timezone** *(string) --*

      The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
      instances that were created with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance when the DB snapshot was created.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to an
      AWS Region.
    """


_ClientCreateDbSnapshotResponseTypeDef = TypedDict(
    "_ClientCreateDbSnapshotResponseTypeDef",
    {"DBSnapshot": ClientCreateDbSnapshotResponseDBSnapshotTypeDef},
    total=False,
)


class ClientCreateDbSnapshotResponseTypeDef(_ClientCreateDbSnapshotResponseTypeDef):
    """
    Type definition for `ClientCreateDbSnapshot` `Response`

    - **DBSnapshot** *(dict) --*

      Contains the details of an Amazon RDS DB snapshot.

      This data type is used as a response element in the ``DescribeDBSnapshots`` action.

      - **DBSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB snapshot.

      - **DBInstanceIdentifier** *(string) --*

        Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB snapshot.

      - **Port** *(integer) --*

        Specifies the port that the database engine was listening on at the time of the snapshot.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance was located in at the time of
        the DB snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB snapshot.

      - **InstanceCreateTime** *(datetime) --*

        Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB snapshot.

      - **EngineVersion** *(string) --*

        Specifies the version of the database engine.

      - **LicenseModel** *(string) --*

        License model information for the restored DB instance.

      - **SnapshotType** *(string) --*

        Provides the type of the DB snapshot.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
        time of the snapshot.

      - **OptionGroupName** *(string) --*

        Provides the option group name for the DB snapshot.

      - **PercentProgress** *(integer) --*

        The percentage of the estimated data that has been transferred.

      - **SourceRegion** *(string) --*

        The AWS Region that the DB snapshot was created in or copied from.

      - **SourceDBSnapshotIdentifier** *(string) --*

        The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
        has value in case of cross-customer or cross-region copy.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB snapshot.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which to associate the instance for TDE encryption.

      - **Encrypted** *(boolean) --*

        Specifies whether the DB snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

      - **DBSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB snapshot.

      - **Timezone** *(string) --*

        The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
        instances that were created with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance when the DB snapshot was created.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DbiResourceId** *(string) --*

        The identifier for the source DB instance, which can't be changed and which is unique to an
        AWS Region.
    """


_ClientCreateDbSnapshotTagsTypeDef = TypedDict(
    "_ClientCreateDbSnapshotTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbSnapshotTagsTypeDef(_ClientCreateDbSnapshotTagsTypeDef):
    """
    Type definition for `ClientCreateDbSnapshot` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef(
    _ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientCreateDbSubnetGroupResponseDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientCreateDbSubnetGroupResponseDBSubnetGroupTypeDef = TypedDict(
    "_ClientCreateDbSubnetGroupResponseDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[ClientCreateDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientCreateDbSubnetGroupResponseDBSubnetGroupTypeDef(
    _ClientCreateDbSubnetGroupResponseDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientCreateDbSubnetGroupResponse` `DBSubnetGroup`

    Contains the details of an Amazon RDS DB subnet group.

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientCreateDbSubnetGroupResponseTypeDef = TypedDict(
    "_ClientCreateDbSubnetGroupResponseTypeDef",
    {"DBSubnetGroup": ClientCreateDbSubnetGroupResponseDBSubnetGroupTypeDef},
    total=False,
)


class ClientCreateDbSubnetGroupResponseTypeDef(
    _ClientCreateDbSubnetGroupResponseTypeDef
):
    """
    Type definition for `ClientCreateDbSubnetGroup` `Response`

    - **DBSubnetGroup** *(dict) --*

      Contains the details of an Amazon RDS DB subnet group.

      This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientCreateDbSubnetGroupTagsTypeDef = TypedDict(
    "_ClientCreateDbSubnetGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateDbSubnetGroupTagsTypeDef(_ClientCreateDbSubnetGroupTagsTypeDef):
    """
    Type definition for `ClientCreateDbSubnetGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef(
    _ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientCreateEventSubscriptionResponse` `EventSubscription`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the subscription
      is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientCreateEventSubscriptionResponseTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionResponseTypeDef",
    {
        "EventSubscription": ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef
    },
    total=False,
)


class ClientCreateEventSubscriptionResponseTypeDef(
    _ClientCreateEventSubscriptionResponseTypeDef
):
    """
    Type definition for `ClientCreateEventSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the RDS event notification subscription.

      - **CustSubscriptionId** *(string) --*

        The RDS event notification subscription Id.

      - **SnsTopicArn** *(string) --*

        The topic ARN of the RDS event notification subscription.

      - **Status** *(string) --*

        The status of the RDS event notification subscription.

        Constraints:

        Can be one of the following: creating | modifying | deleting | active | no-permission |
        topic-not-exist

        The status "no-permission" indicates that RDS no longer has permission to post to the SNS
        topic. The status "topic-not-exist" indicates that the topic was deleted after the
        subscription was created.

      - **SubscriptionCreationTime** *(string) --*

        The time the RDS event notification subscription was created.

      - **SourceType** *(string) --*

        The source type for the RDS event notification subscription.

      - **SourceIdsList** *(list) --*

        A list of source IDs for the RDS event notification subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        A list of event categories for the RDS event notification subscription.

        - *(string) --*

      - **Enabled** *(boolean) --*

        A Boolean value indicating if the subscription is enabled. True indicates the subscription
        is enabled.

      - **EventSubscriptionArn** *(string) --*

        The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientCreateEventSubscriptionTagsTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateEventSubscriptionTagsTypeDef(
    _ClientCreateEventSubscriptionTagsTypeDef
):
    """
    Type definition for `ClientCreateEventSubscription` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientCreateGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef = TypedDict(
    "_ClientCreateGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    {"DBClusterArn": str, "Readers": List[str], "IsWriter": bool},
    total=False,
)


class ClientCreateGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef(
    _ClientCreateGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
):
    """
    Type definition for `ClientCreateGlobalClusterResponseGlobalCluster` `GlobalClusterMembers`

    A data structure with information about any primary and secondary clusters associated
    with an Aurora global database.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for each Aurora cluster.

    - **Readers** *(list) --*

      The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
      Aurora global database.

      - *(string) --*

    - **IsWriter** *(boolean) --*

      Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
      capability) for the Aurora global database with which it is associated.
    """


_ClientCreateGlobalClusterResponseGlobalClusterTypeDef = TypedDict(
    "_ClientCreateGlobalClusterResponseGlobalClusterTypeDef",
    {
        "GlobalClusterIdentifier": str,
        "GlobalClusterResourceId": str,
        "GlobalClusterArn": str,
        "Status": str,
        "Engine": str,
        "EngineVersion": str,
        "DatabaseName": str,
        "StorageEncrypted": bool,
        "DeletionProtection": bool,
        "GlobalClusterMembers": List[
            ClientCreateGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
        ],
    },
    total=False,
)


class ClientCreateGlobalClusterResponseGlobalClusterTypeDef(
    _ClientCreateGlobalClusterResponseGlobalClusterTypeDef
):
    """
    Type definition for `ClientCreateGlobalClusterResponse` `GlobalCluster`

    A data type representing an Aurora global database.

    - **GlobalClusterIdentifier** *(string) --*

      Contains a user-supplied global database cluster identifier. This identifier is the unique
      key that identifies a global database cluster.

    - **GlobalClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the global database cluster. This
      identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
      cluster is accessed.

    - **GlobalClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the global database cluster.

    - **Status** *(string) --*

      Specifies the current state of this global database cluster.

    - **Engine** *(string) --*

      The Aurora database engine used by the global database cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **DatabaseName** *(string) --*

      The default database name within the new global database cluster.

    - **StorageEncrypted** *(boolean) --*

      The storage encryption setting for the global database cluster.

    - **DeletionProtection** *(boolean) --*

      The deletion protection setting for the new global database cluster.

    - **GlobalClusterMembers** *(list) --*

      The list of cluster IDs for secondary clusters within the global database cluster.
      Currently limited to 1 item.

      - *(dict) --*

        A data structure with information about any primary and secondary clusters associated
        with an Aurora global database.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for each Aurora cluster.

        - **Readers** *(list) --*

          The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
          Aurora global database.

          - *(string) --*

        - **IsWriter** *(boolean) --*

          Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
          capability) for the Aurora global database with which it is associated.
    """


_ClientCreateGlobalClusterResponseTypeDef = TypedDict(
    "_ClientCreateGlobalClusterResponseTypeDef",
    {"GlobalCluster": ClientCreateGlobalClusterResponseGlobalClusterTypeDef},
    total=False,
)


class ClientCreateGlobalClusterResponseTypeDef(
    _ClientCreateGlobalClusterResponseTypeDef
):
    """
    Type definition for `ClientCreateGlobalCluster` `Response`

    - **GlobalCluster** *(dict) --*

      A data type representing an Aurora global database.

      - **GlobalClusterIdentifier** *(string) --*

        Contains a user-supplied global database cluster identifier. This identifier is the unique
        key that identifies a global database cluster.

      - **GlobalClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the global database cluster. This
        identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
        cluster is accessed.

      - **GlobalClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the global database cluster.

      - **Status** *(string) --*

        Specifies the current state of this global database cluster.

      - **Engine** *(string) --*

        The Aurora database engine used by the global database cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **DatabaseName** *(string) --*

        The default database name within the new global database cluster.

      - **StorageEncrypted** *(boolean) --*

        The storage encryption setting for the global database cluster.

      - **DeletionProtection** *(boolean) --*

        The deletion protection setting for the new global database cluster.

      - **GlobalClusterMembers** *(list) --*

        The list of cluster IDs for secondary clusters within the global database cluster.
        Currently limited to 1 item.

        - *(dict) --*

          A data structure with information about any primary and secondary clusters associated
          with an Aurora global database.

          - **DBClusterArn** *(string) --*

            The Amazon Resource Name (ARN) for each Aurora cluster.

          - **Readers** *(list) --*

            The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
            Aurora global database.

            - *(string) --*

          - **IsWriter** *(boolean) --*

            Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
            capability) for the Aurora global database with which it is associated.
    """


_ClientCreateOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientCreateOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientCreateOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef(
    _ClientCreateOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCreateOptionGroupResponseOptionGroupOptions` `DBSecurityGroupMemberships`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientCreateOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef = TypedDict(
    "_ClientCreateOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef",
    {
        "Name": str,
        "Value": str,
        "DefaultValue": str,
        "Description": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsCollection": bool,
    },
    total=False,
)


class ClientCreateOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef(
    _ClientCreateOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef
):
    """
    Type definition for `ClientCreateOptionGroupResponseOptionGroupOptions` `OptionSettings`

    Option settings are the actual settings being applied or configured for that option.
    It is used when you modify an option group or describe option groups. For example,
    the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
    that can have several different values.

    - **Name** *(string) --*

      The name of the option that has settings that you can set.

    - **Value** *(string) --*

      The current value of the option setting.

    - **DefaultValue** *(string) --*

      The default value of the option setting.

    - **Description** *(string) --*

      The description of the option setting.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type.

    - **DataType** *(string) --*

      The data type of the option setting.

    - **AllowedValues** *(string) --*

      The allowed values of the option setting.

    - **IsModifiable** *(boolean) --*

      A Boolean value that, when true, indicates the option setting can be modified from
      the default.

    - **IsCollection** *(boolean) --*

      Indicates if the option setting is part of a collection.
    """


_ClientCreateOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientCreateOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientCreateOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef(
    _ClientCreateOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientCreateOptionGroupResponseOptionGroupOptions` `VpcSecurityGroupMemberships`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientCreateOptionGroupResponseOptionGroupOptionsTypeDef = TypedDict(
    "_ClientCreateOptionGroupResponseOptionGroupOptionsTypeDef",
    {
        "OptionName": str,
        "OptionDescription": str,
        "Persistent": bool,
        "Permanent": bool,
        "Port": int,
        "OptionVersion": str,
        "OptionSettings": List[
            ClientCreateOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef
        ],
        "DBSecurityGroupMemberships": List[
            ClientCreateOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef
        ],
        "VpcSecurityGroupMemberships": List[
            ClientCreateOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef
        ],
    },
    total=False,
)


class ClientCreateOptionGroupResponseOptionGroupOptionsTypeDef(
    _ClientCreateOptionGroupResponseOptionGroupOptionsTypeDef
):
    """
    Type definition for `ClientCreateOptionGroupResponseOptionGroup` `Options`

    Option details.

    - **OptionName** *(string) --*

      The name of the option.

    - **OptionDescription** *(string) --*

      The description of the option.

    - **Persistent** *(boolean) --*

      Indicate if this option is persistent.

    - **Permanent** *(boolean) --*

      Indicate if this option is permanent.

    - **Port** *(integer) --*

      If required, the port configured for this option to use.

    - **OptionVersion** *(string) --*

      The version of the option.

    - **OptionSettings** *(list) --*

      The option settings for this option.

      - *(dict) --*

        Option settings are the actual settings being applied or configured for that option.
        It is used when you modify an option group or describe option groups. For example,
        the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
        that can have several different values.

        - **Name** *(string) --*

          The name of the option that has settings that you can set.

        - **Value** *(string) --*

          The current value of the option setting.

        - **DefaultValue** *(string) --*

          The default value of the option setting.

        - **Description** *(string) --*

          The description of the option setting.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type.

        - **DataType** *(string) --*

          The data type of the option setting.

        - **AllowedValues** *(string) --*

          The allowed values of the option setting.

        - **IsModifiable** *(boolean) --*

          A Boolean value that, when true, indicates the option setting can be modified from
          the default.

        - **IsCollection** *(boolean) --*

          Indicates if the option setting is part of a collection.

    - **DBSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this DB security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this VPC security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.
    """


_ClientCreateOptionGroupResponseOptionGroupTypeDef = TypedDict(
    "_ClientCreateOptionGroupResponseOptionGroupTypeDef",
    {
        "OptionGroupName": str,
        "OptionGroupDescription": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "Options": List[ClientCreateOptionGroupResponseOptionGroupOptionsTypeDef],
        "AllowsVpcAndNonVpcInstanceMemberships": bool,
        "VpcId": str,
        "OptionGroupArn": str,
    },
    total=False,
)


class ClientCreateOptionGroupResponseOptionGroupTypeDef(
    _ClientCreateOptionGroupResponseOptionGroupTypeDef
):
    """
    Type definition for `ClientCreateOptionGroupResponse` `OptionGroup`

    - **OptionGroupName** *(string) --*

      Specifies the name of the option group.

    - **OptionGroupDescription** *(string) --*

      Provides a description of the option group.

    - **EngineName** *(string) --*

      Indicates the name of the engine that this option group can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version associated with this option group.

    - **Options** *(list) --*

      Indicates what options are available in the option group.

      - *(dict) --*

        Option details.

        - **OptionName** *(string) --*

          The name of the option.

        - **OptionDescription** *(string) --*

          The description of the option.

        - **Persistent** *(boolean) --*

          Indicate if this option is persistent.

        - **Permanent** *(boolean) --*

          Indicate if this option is permanent.

        - **Port** *(integer) --*

          If required, the port configured for this option to use.

        - **OptionVersion** *(string) --*

          The version of the option.

        - **OptionSettings** *(list) --*

          The option settings for this option.

          - *(dict) --*

            Option settings are the actual settings being applied or configured for that option.
            It is used when you modify an option group or describe option groups. For example,
            the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
            that can have several different values.

            - **Name** *(string) --*

              The name of the option that has settings that you can set.

            - **Value** *(string) --*

              The current value of the option setting.

            - **DefaultValue** *(string) --*

              The default value of the option setting.

            - **Description** *(string) --*

              The description of the option setting.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type.

            - **DataType** *(string) --*

              The data type of the option setting.

            - **AllowedValues** *(string) --*

              The allowed values of the option setting.

            - **IsModifiable** *(boolean) --*

              A Boolean value that, when true, indicates the option setting can be modified from
              the default.

            - **IsCollection** *(boolean) --*

              Indicates if the option setting is part of a collection.

        - **DBSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this DB security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this VPC security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

    - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

      Indicates whether this option group can be applied to both VPC and non-VPC instances. The
      value ``true`` indicates the option group can be applied to both VPC and non-VPC instances.

    - **VpcId** *(string) --*

      If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
      **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
      option group can be applied to both VPC and non-VPC instances. If this field contains a
      value, then this option group can only be applied to instances that are in the VPC
      indicated by this field.

    - **OptionGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the option group.
    """


_ClientCreateOptionGroupResponseTypeDef = TypedDict(
    "_ClientCreateOptionGroupResponseTypeDef",
    {"OptionGroup": ClientCreateOptionGroupResponseOptionGroupTypeDef},
    total=False,
)


class ClientCreateOptionGroupResponseTypeDef(_ClientCreateOptionGroupResponseTypeDef):
    """
    Type definition for `ClientCreateOptionGroup` `Response`

    - **OptionGroup** *(dict) --*

      - **OptionGroupName** *(string) --*

        Specifies the name of the option group.

      - **OptionGroupDescription** *(string) --*

        Provides a description of the option group.

      - **EngineName** *(string) --*

        Indicates the name of the engine that this option group can be applied to.

      - **MajorEngineVersion** *(string) --*

        Indicates the major engine version associated with this option group.

      - **Options** *(list) --*

        Indicates what options are available in the option group.

        - *(dict) --*

          Option details.

          - **OptionName** *(string) --*

            The name of the option.

          - **OptionDescription** *(string) --*

            The description of the option.

          - **Persistent** *(boolean) --*

            Indicate if this option is persistent.

          - **Permanent** *(boolean) --*

            Indicate if this option is permanent.

          - **Port** *(integer) --*

            If required, the port configured for this option to use.

          - **OptionVersion** *(string) --*

            The version of the option.

          - **OptionSettings** *(list) --*

            The option settings for this option.

            - *(dict) --*

              Option settings are the actual settings being applied or configured for that option.
              It is used when you modify an option group or describe option groups. For example,
              the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
              that can have several different values.

              - **Name** *(string) --*

                The name of the option that has settings that you can set.

              - **Value** *(string) --*

                The current value of the option setting.

              - **DefaultValue** *(string) --*

                The default value of the option setting.

              - **Description** *(string) --*

                The description of the option setting.

              - **ApplyType** *(string) --*

                The DB engine specific parameter type.

              - **DataType** *(string) --*

                The data type of the option setting.

              - **AllowedValues** *(string) --*

                The allowed values of the option setting.

              - **IsModifiable** *(boolean) --*

                A Boolean value that, when true, indicates the option setting can be modified from
                the default.

              - **IsCollection** *(boolean) --*

                Indicates if the option setting is part of a collection.

          - **DBSecurityGroupMemberships** *(list) --*

            If the option requires access to a port, then this DB security group allows access to
            the port.

            - *(dict) --*

              This data type is used as a response element in the following actions:

              * ``ModifyDBInstance``

              * ``RebootDBInstance``

              * ``RestoreDBInstanceFromDBSnapshot``

              * ``RestoreDBInstanceToPointInTime``

              - **DBSecurityGroupName** *(string) --*

                The name of the DB security group.

              - **Status** *(string) --*

                The status of the DB security group.

          - **VpcSecurityGroupMemberships** *(list) --*

            If the option requires access to a port, then this VPC security group allows access to
            the port.

            - *(dict) --*

              This data type is used as a response element for queries on VPC security group
              membership.

              - **VpcSecurityGroupId** *(string) --*

                The name of the VPC security group.

              - **Status** *(string) --*

                The status of the VPC security group.

      - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

        Indicates whether this option group can be applied to both VPC and non-VPC instances. The
        value ``true`` indicates the option group can be applied to both VPC and non-VPC instances.

      - **VpcId** *(string) --*

        If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
        **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
        option group can be applied to both VPC and non-VPC instances. If this field contains a
        value, then this option group can only be applied to instances that are in the VPC
        indicated by this field.

      - **OptionGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the option group.
    """


_ClientCreateOptionGroupTagsTypeDef = TypedDict(
    "_ClientCreateOptionGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateOptionGroupTagsTypeDef(_ClientCreateOptionGroupTagsTypeDef):
    """
    Type definition for `ClientCreateOptionGroup` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef = TypedDict(
    "_ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef",
    {
        "VpnId": str,
        "VpnTunnelOriginatorIP": str,
        "VpnGatewayIp": str,
        "VpnPSK": str,
        "VpnName": str,
        "VpnState": str,
    },
    total=False,
)


class ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef(
    _ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef
):
    """
    Type definition for `ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZone` `VpnDetails`

    Information about the virtual private network (VPN) between the VMware vSphere cluster and
    the AWS website.

    - **VpnId** *(string) --*

      The ID of the VPN.

    - **VpnTunnelOriginatorIP** *(string) --*

      The IP address of network traffic from your on-premises data center. A custom AZ receives
      the network traffic.

    - **VpnGatewayIp** *(string) --*

      The IP address of network traffic from AWS to your on-premises data center.

    - **VpnPSK** *(string) --*

      The preshared key (PSK) for the VPN.

    - **VpnName** *(string) --*

      The name of the VPN.

    - **VpnState** *(string) --*

      The state of the VPN.
    """


_ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef = TypedDict(
    "_ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef",
    {
        "CustomAvailabilityZoneId": str,
        "CustomAvailabilityZoneName": str,
        "CustomAvailabilityZoneStatus": str,
        "VpnDetails": ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneVpnDetailsTypeDef,
    },
    total=False,
)


class ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef(
    _ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientDeleteCustomAvailabilityZoneResponse` `CustomAvailabilityZone`

    A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere
    cluster.

    For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
    https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

    - **CustomAvailabilityZoneId** *(string) --*

      The identifier of the custom AZ.

      Amazon RDS generates a unique identifier when a custom AZ is created.

    - **CustomAvailabilityZoneName** *(string) --*

      The name of the custom AZ.

    - **CustomAvailabilityZoneStatus** *(string) --*

      The status of the custom AZ.

    - **VpnDetails** *(dict) --*

      Information about the virtual private network (VPN) between the VMware vSphere cluster and
      the AWS website.

      - **VpnId** *(string) --*

        The ID of the VPN.

      - **VpnTunnelOriginatorIP** *(string) --*

        The IP address of network traffic from your on-premises data center. A custom AZ receives
        the network traffic.

      - **VpnGatewayIp** *(string) --*

        The IP address of network traffic from AWS to your on-premises data center.

      - **VpnPSK** *(string) --*

        The preshared key (PSK) for the VPN.

      - **VpnName** *(string) --*

        The name of the VPN.

      - **VpnState** *(string) --*

        The state of the VPN.
    """


_ClientDeleteCustomAvailabilityZoneResponseTypeDef = TypedDict(
    "_ClientDeleteCustomAvailabilityZoneResponseTypeDef",
    {
        "CustomAvailabilityZone": ClientDeleteCustomAvailabilityZoneResponseCustomAvailabilityZoneTypeDef
    },
    total=False,
)


class ClientDeleteCustomAvailabilityZoneResponseTypeDef(
    _ClientDeleteCustomAvailabilityZoneResponseTypeDef
):
    """
    Type definition for `ClientDeleteCustomAvailabilityZone` `Response`

    - **CustomAvailabilityZone** *(dict) --*

      A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere
      cluster.

      For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
      https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

      - **CustomAvailabilityZoneId** *(string) --*

        The identifier of the custom AZ.

        Amazon RDS generates a unique identifier when a custom AZ is created.

      - **CustomAvailabilityZoneName** *(string) --*

        The name of the custom AZ.

      - **CustomAvailabilityZoneStatus** *(string) --*

        The status of the custom AZ.

      - **VpnDetails** *(dict) --*

        Information about the virtual private network (VPN) between the VMware vSphere cluster and
        the AWS website.

        - **VpnId** *(string) --*

          The ID of the VPN.

        - **VpnTunnelOriginatorIP** *(string) --*

          The IP address of network traffic from your on-premises data center. A custom AZ receives
          the network traffic.

        - **VpnGatewayIp** *(string) --*

          The IP address of network traffic from AWS to your on-premises data center.

        - **VpnPSK** *(string) --*

          The preshared key (PSK) for the VPN.

        - **VpnName** *(string) --*

          The name of the VPN.

        - **VpnState** *(string) --*

          The state of the VPN.
    """


_ClientDeleteDbClusterEndpointResponseTypeDef = TypedDict(
    "_ClientDeleteDbClusterEndpointResponseTypeDef",
    {
        "DBClusterEndpointIdentifier": str,
        "DBClusterIdentifier": str,
        "DBClusterEndpointResourceIdentifier": str,
        "Endpoint": str,
        "Status": str,
        "EndpointType": str,
        "CustomEndpointType": str,
        "StaticMembers": List[str],
        "ExcludedMembers": List[str],
        "DBClusterEndpointArn": str,
    },
    total=False,
)


class ClientDeleteDbClusterEndpointResponseTypeDef(
    _ClientDeleteDbClusterEndpointResponseTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterEndpoint` `Response`

    This data type represents the information you need to connect to an Amazon Aurora DB cluster.
    This data type is used as a response element in the following actions:

    * ``CreateDBClusterEndpoint``

    * ``DescribeDBClusterEndpoints``

    * ``ModifyDBClusterEndpoint``

    * ``DeleteDBClusterEndpoint``

    For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

    - **DBClusterEndpointIdentifier** *(string) --*

      The identifier associated with the endpoint. This parameter is stored as a lowercase string.

    - **DBClusterIdentifier** *(string) --*

      The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is
      stored as a lowercase string.

    - **DBClusterEndpointResourceIdentifier** *(string) --*

      A unique system-generated identifier for an endpoint. It remains the same for the whole life
      of the endpoint.

    - **Endpoint** *(string) --*

      The DNS address of the endpoint.

    - **Status** *(string) --*

      The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
      ``modifying`` .

    - **EndpointType** *(string) --*

      The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

    - **CustomEndpointType** *(string) --*

      The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

    - **StaticMembers** *(list) --*

      List of DB instance identifiers that are part of the custom endpoint group.

      - *(string) --*

    - **ExcludedMembers** *(list) --*

      List of DB instance identifiers that aren't part of the custom endpoint group. All other
      eligible instances are reachable through the custom endpoint. Only relevant if the list of
      static members is empty.

      - *(string) --*

    - **DBClusterEndpointArn** *(string) --*

      The Amazon Resource Name (ARN) for the endpoint.
    """


_ClientDeleteDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientDeleteDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientDeleteDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientDeleteDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientDeleteDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientDeleteDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientDeleteDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientDeleteDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientDeleteDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientDeleteDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientDeleteDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientDeleteDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientDeleteDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDeleteDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientDeleteDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDeleteDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientDeleteDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientDeleteDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientDeleteDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientDeleteDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientDeleteDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientDeleteDbClusterResponseDBClusterTypeDef(
    _ClientDeleteDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientDeleteDbClusterResponseTypeDef = TypedDict(
    "_ClientDeleteDbClusterResponseTypeDef",
    {"DBCluster": ClientDeleteDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientDeleteDbClusterResponseTypeDef(_ClientDeleteDbClusterResponseTypeDef):
    """
    Type definition for `ClientDeleteDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientDeleteDbClusterSnapshotResponseDBClusterSnapshotTypeDef = TypedDict(
    "_ClientDeleteDbClusterSnapshotResponseDBClusterSnapshotTypeDef",
    {
        "AvailabilityZones": List[str],
        "DBClusterSnapshotIdentifier": str,
        "DBClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "VpcId": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "PercentProgress": int,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DBClusterSnapshotArn": str,
        "SourceDBClusterSnapshotArn": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class ClientDeleteDbClusterSnapshotResponseDBClusterSnapshotTypeDef(
    _ClientDeleteDbClusterSnapshotResponseDBClusterSnapshotTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterSnapshotResponse` `DBClusterSnapshot`

    Contains the details for an Amazon RDS DB cluster snapshot

    This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
      can be restored.

      - *(string) --*

    - **DBClusterSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB cluster snapshot.

    - **DBClusterIdentifier** *(string) --*

      Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
      created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB cluster snapshot.

    - **Port** *(integer) --*

      Specifies the port that the DB cluster was listening on at the time of the snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB cluster snapshot.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB cluster snapshot.

    - **EngineVersion** *(string) --*

      Provides the version of the database engine for this DB cluster snapshot.

    - **LicenseModel** *(string) --*

      Provides the license model information for this DB cluster snapshot.

    - **SnapshotType** *(string) --*

      Provides the type of the DB cluster snapshot.

    - **PercentProgress** *(integer) --*

      Specifies the percentage of the estimated data that has been transferred.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
      snapshot.

    - **DBClusterSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster snapshot.

    - **SourceDBClusterSnapshotArn** *(string) --*

      If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
      Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_ClientDeleteDbClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientDeleteDbClusterSnapshotResponseTypeDef",
    {
        "DBClusterSnapshot": ClientDeleteDbClusterSnapshotResponseDBClusterSnapshotTypeDef
    },
    total=False,
)


class ClientDeleteDbClusterSnapshotResponseTypeDef(
    _ClientDeleteDbClusterSnapshotResponseTypeDef
):
    """
    Type definition for `ClientDeleteDbClusterSnapshot` `Response`

    - **DBClusterSnapshot** *(dict) --*

      Contains the details for an Amazon RDS DB cluster snapshot

      This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
        can be restored.

        - *(string) --*

      - **DBClusterSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB cluster snapshot.

      - **DBClusterIdentifier** *(string) --*

        Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
        created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB cluster snapshot.

      - **Port** *(integer) --*

        Specifies the port that the DB cluster was listening on at the time of the snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB cluster snapshot.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB cluster snapshot.

      - **EngineVersion** *(string) --*

        Provides the version of the database engine for this DB cluster snapshot.

      - **LicenseModel** *(string) --*

        Provides the license model information for this DB cluster snapshot.

      - **SnapshotType** *(string) --*

        Provides the type of the DB cluster snapshot.

      - **PercentProgress** *(integer) --*

        Specifies the percentage of the estimated data that has been transferred.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
        snapshot.

      - **DBClusterSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster snapshot.

      - **SourceDBClusterSnapshotArn** *(string) --*

        If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
        Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.
    """


_ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupRestoreWindowTypeDef = TypedDict(
    "_ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupRestoreWindowTypeDef",
    {"EarliestTime": datetime, "LatestTime": datetime},
    total=False,
)


class ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupRestoreWindowTypeDef(
    _ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupRestoreWindowTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackup` `RestoreWindow`

    Earliest and latest time an instance can be restored to.

    - **EarliestTime** *(datetime) --*

      The earliest time you can restore an instance to.

    - **LatestTime** *(datetime) --*

      The latest time you can restore an instance to.
    """


_ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupTypeDef = TypedDict(
    "_ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupTypeDef",
    {
        "DBInstanceArn": str,
        "DbiResourceId": str,
        "Region": str,
        "DBInstanceIdentifier": str,
        "RestoreWindow": ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupRestoreWindowTypeDef,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "Engine": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupName": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "StorageType": str,
        "KmsKeyId": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupTypeDef(
    _ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceAutomatedBackupResponse` `DBInstanceAutomatedBackup`

    An automated backup of a DB instance. It it consists of system backups, transaction logs, and
    the database instance properties that existed at the time you deleted the source instance.

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the automated backup.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to an
      AWS Region.

    - **Region** *(string) --*

      The AWS Region associated with the automated backup.

    - **DBInstanceIdentifier** *(string) --*

      The customer id of the instance that is/was associated with the automated backup.

    - **RestoreWindow** *(dict) --*

      Earliest and latest time an instance can be restored to.

      - **EarliestTime** *(datetime) --*

        The earliest time you can restore an instance to.

      - **LatestTime** *(datetime) --*

        The latest time you can restore an instance to.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Provides a list of status information for an automated backup:

      * ``active`` - automated backups for current instances

      * ``retained`` - automated backups for deleted instances

      * ``creating`` - automated backups that are waiting for the first automated snapshot to be
      available.

    - **Port** *(integer) --*

      The port number that the automated backup used for connections.

      Default: Inherits from the source DB instance

      Valid Values: ``1150-65535``

    - **AvailabilityZone** *(string) --*

      The Availability Zone that the automated backup was created in. For information on AWS
      Regions and Availability Zones, see `Regions and Availability Zones
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html>`__
      .

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB instance

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time that the DB instance was created.

    - **MasterUsername** *(string) --*

      The license model of an automated backup.

    - **Engine** *(string) --*

      The name of the database engine for this automated backup.

    - **EngineVersion** *(string) --*

      The version of the database engine for the automated backup.

    - **LicenseModel** *(string) --*

      License model information for the automated backup.

    - **Iops** *(integer) --*

      The IOPS (I/O operations per second) value for the automated backup.

    - **OptionGroupName** *(string) --*

      The option group the automated backup is associated with. If omitted, the default option
      group for the engine specified is used.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the automated backup is associated for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the automated backup is encrypted.

    - **StorageType** *(string) --*

      Specifies the storage type associated with the automated backup.

    - **KmsKeyId** *(string) --*

      The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name
      (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

    - **Timezone** *(string) --*

      The time zone of the automated backup. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_ClientDeleteDbInstanceAutomatedBackupResponseTypeDef = TypedDict(
    "_ClientDeleteDbInstanceAutomatedBackupResponseTypeDef",
    {
        "DBInstanceAutomatedBackup": ClientDeleteDbInstanceAutomatedBackupResponseDBInstanceAutomatedBackupTypeDef
    },
    total=False,
)


class ClientDeleteDbInstanceAutomatedBackupResponseTypeDef(
    _ClientDeleteDbInstanceAutomatedBackupResponseTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceAutomatedBackup` `Response`

    - **DBInstanceAutomatedBackup** *(dict) --*

      An automated backup of a DB instance. It it consists of system backups, transaction logs, and
      the database instance properties that existed at the time you deleted the source instance.

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the automated backup.

      - **DbiResourceId** *(string) --*

        The identifier for the source DB instance, which can't be changed and which is unique to an
        AWS Region.

      - **Region** *(string) --*

        The AWS Region associated with the automated backup.

      - **DBInstanceIdentifier** *(string) --*

        The customer id of the instance that is/was associated with the automated backup.

      - **RestoreWindow** *(dict) --*

        Earliest and latest time an instance can be restored to.

        - **EarliestTime** *(datetime) --*

          The earliest time you can restore an instance to.

        - **LatestTime** *(datetime) --*

          The latest time you can restore an instance to.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Provides a list of status information for an automated backup:

        * ``active`` - automated backups for current instances

        * ``retained`` - automated backups for deleted instances

        * ``creating`` - automated backups that are waiting for the first automated snapshot to be
        available.

      - **Port** *(integer) --*

        The port number that the automated backup used for connections.

        Default: Inherits from the source DB instance

        Valid Values: ``1150-65535``

      - **AvailabilityZone** *(string) --*

        The Availability Zone that the automated backup was created in. For information on AWS
        Regions and Availability Zones, see `Regions and Availability Zones
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html>`__
        .

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB instance

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time that the DB instance was created.

      - **MasterUsername** *(string) --*

        The license model of an automated backup.

      - **Engine** *(string) --*

        The name of the database engine for this automated backup.

      - **EngineVersion** *(string) --*

        The version of the database engine for the automated backup.

      - **LicenseModel** *(string) --*

        License model information for the automated backup.

      - **Iops** *(integer) --*

        The IOPS (I/O operations per second) value for the automated backup.

      - **OptionGroupName** *(string) --*

        The option group the automated backup is associated with. If omitted, the default option
        group for the engine specified is used.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the automated backup is associated for TDE encryption.

      - **Encrypted** *(boolean) --*

        Specifies whether the automated backup is encrypted.

      - **StorageType** *(string) --*

        Specifies the storage type associated with the automated backup.

      - **KmsKeyId** *(string) --*

        The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name
        (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

      - **Timezone** *(string) --*

        The time zone of the automated backup. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.
    """


_ClientDeleteDbInstanceResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceAssociatedRolesTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientDeleteDbInstanceResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientDeleteDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientDeleteDbInstanceResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceDomainMembershipsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientDeleteDbInstanceResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceEndpointTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientDeleteDbInstanceResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceListenerEndpointTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientDeleteDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientDeleteDbInstanceResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientDeleteDbInstanceResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceStatusInfosTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientDeleteDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDeleteDbInstanceResponseDBInstanceTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientDeleteDbInstanceResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientDeleteDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientDeleteDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientDeleteDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientDeleteDbInstanceResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientDeleteDbInstanceResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientDeleteDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[ClientDeleteDbInstanceResponseDBInstanceStatusInfosTypeDef],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientDeleteDbInstanceResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientDeleteDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientDeleteDbInstanceResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientDeleteDbInstanceResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientDeleteDbInstanceResponseDBInstanceTypeDef(
    _ClientDeleteDbInstanceResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientDeleteDbInstanceResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientDeleteDbInstanceResponseTypeDef = TypedDict(
    "_ClientDeleteDbInstanceResponseTypeDef",
    {"DBInstance": ClientDeleteDbInstanceResponseDBInstanceTypeDef},
    total=False,
)


class ClientDeleteDbInstanceResponseTypeDef(_ClientDeleteDbInstanceResponseTypeDef):
    """
    Type definition for `ClientDeleteDbInstance` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientDeleteDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef = TypedDict(
    "_ClientDeleteDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientDeleteDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef(
    _ClientDeleteDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDeleteDbSnapshotResponseDBSnapshot` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientDeleteDbSnapshotResponseDBSnapshotTypeDef = TypedDict(
    "_ClientDeleteDbSnapshotResponseDBSnapshotTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBInstanceIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "Iops": int,
        "OptionGroupName": str,
        "PercentProgress": int,
        "SourceRegion": str,
        "SourceDBSnapshotIdentifier": str,
        "StorageType": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "DBSnapshotArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "ProcessorFeatures": List[
            ClientDeleteDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
        ],
        "DbiResourceId": str,
    },
    total=False,
)


class ClientDeleteDbSnapshotResponseDBSnapshotTypeDef(
    _ClientDeleteDbSnapshotResponseDBSnapshotTypeDef
):
    """
    Type definition for `ClientDeleteDbSnapshotResponse` `DBSnapshot`

    Contains the details of an Amazon RDS DB snapshot.

    This data type is used as a response element in the ``DescribeDBSnapshots`` action.

    - **DBSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB snapshot.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB snapshot.

    - **Port** *(integer) --*

      Specifies the port that the database engine was listening on at the time of the snapshot.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance was located in at the time of
      the DB snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB snapshot.

    - **InstanceCreateTime** *(datetime) --*

      Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB snapshot.

    - **EngineVersion** *(string) --*

      Specifies the version of the database engine.

    - **LicenseModel** *(string) --*

      License model information for the restored DB instance.

    - **SnapshotType** *(string) --*

      Provides the type of the DB snapshot.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
      time of the snapshot.

    - **OptionGroupName** *(string) --*

      Provides the option group name for the DB snapshot.

    - **PercentProgress** *(integer) --*

      The percentage of the estimated data that has been transferred.

    - **SourceRegion** *(string) --*

      The AWS Region that the DB snapshot was created in or copied from.

    - **SourceDBSnapshotIdentifier** *(string) --*

      The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
      has value in case of cross-customer or cross-region copy.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB snapshot.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which to associate the instance for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the DB snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

    - **DBSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB snapshot.

    - **Timezone** *(string) --*

      The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
      instances that were created with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance when the DB snapshot was created.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to an
      AWS Region.
    """


_ClientDeleteDbSnapshotResponseTypeDef = TypedDict(
    "_ClientDeleteDbSnapshotResponseTypeDef",
    {"DBSnapshot": ClientDeleteDbSnapshotResponseDBSnapshotTypeDef},
    total=False,
)


class ClientDeleteDbSnapshotResponseTypeDef(_ClientDeleteDbSnapshotResponseTypeDef):
    """
    Type definition for `ClientDeleteDbSnapshot` `Response`

    - **DBSnapshot** *(dict) --*

      Contains the details of an Amazon RDS DB snapshot.

      This data type is used as a response element in the ``DescribeDBSnapshots`` action.

      - **DBSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB snapshot.

      - **DBInstanceIdentifier** *(string) --*

        Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB snapshot.

      - **Port** *(integer) --*

        Specifies the port that the database engine was listening on at the time of the snapshot.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance was located in at the time of
        the DB snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB snapshot.

      - **InstanceCreateTime** *(datetime) --*

        Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB snapshot.

      - **EngineVersion** *(string) --*

        Specifies the version of the database engine.

      - **LicenseModel** *(string) --*

        License model information for the restored DB instance.

      - **SnapshotType** *(string) --*

        Provides the type of the DB snapshot.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
        time of the snapshot.

      - **OptionGroupName** *(string) --*

        Provides the option group name for the DB snapshot.

      - **PercentProgress** *(integer) --*

        The percentage of the estimated data that has been transferred.

      - **SourceRegion** *(string) --*

        The AWS Region that the DB snapshot was created in or copied from.

      - **SourceDBSnapshotIdentifier** *(string) --*

        The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
        has value in case of cross-customer or cross-region copy.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB snapshot.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which to associate the instance for TDE encryption.

      - **Encrypted** *(boolean) --*

        Specifies whether the DB snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

      - **DBSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB snapshot.

      - **Timezone** *(string) --*

        The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
        instances that were created with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance when the DB snapshot was created.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DbiResourceId** *(string) --*

        The identifier for the source DB instance, which can't be changed and which is unique to an
        AWS Region.
    """


_ClientDeleteEventSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientDeleteEventSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class ClientDeleteEventSubscriptionResponseEventSubscriptionTypeDef(
    _ClientDeleteEventSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientDeleteEventSubscriptionResponse` `EventSubscription`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the subscription
      is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientDeleteEventSubscriptionResponseTypeDef = TypedDict(
    "_ClientDeleteEventSubscriptionResponseTypeDef",
    {
        "EventSubscription": ClientDeleteEventSubscriptionResponseEventSubscriptionTypeDef
    },
    total=False,
)


class ClientDeleteEventSubscriptionResponseTypeDef(
    _ClientDeleteEventSubscriptionResponseTypeDef
):
    """
    Type definition for `ClientDeleteEventSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the RDS event notification subscription.

      - **CustSubscriptionId** *(string) --*

        The RDS event notification subscription Id.

      - **SnsTopicArn** *(string) --*

        The topic ARN of the RDS event notification subscription.

      - **Status** *(string) --*

        The status of the RDS event notification subscription.

        Constraints:

        Can be one of the following: creating | modifying | deleting | active | no-permission |
        topic-not-exist

        The status "no-permission" indicates that RDS no longer has permission to post to the SNS
        topic. The status "topic-not-exist" indicates that the topic was deleted after the
        subscription was created.

      - **SubscriptionCreationTime** *(string) --*

        The time the RDS event notification subscription was created.

      - **SourceType** *(string) --*

        The source type for the RDS event notification subscription.

      - **SourceIdsList** *(list) --*

        A list of source IDs for the RDS event notification subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        A list of event categories for the RDS event notification subscription.

        - *(string) --*

      - **Enabled** *(boolean) --*

        A Boolean value indicating if the subscription is enabled. True indicates the subscription
        is enabled.

      - **EventSubscriptionArn** *(string) --*

        The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientDeleteGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef = TypedDict(
    "_ClientDeleteGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    {"DBClusterArn": str, "Readers": List[str], "IsWriter": bool},
    total=False,
)


class ClientDeleteGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef(
    _ClientDeleteGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
):
    """
    Type definition for `ClientDeleteGlobalClusterResponseGlobalCluster` `GlobalClusterMembers`

    A data structure with information about any primary and secondary clusters associated
    with an Aurora global database.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for each Aurora cluster.

    - **Readers** *(list) --*

      The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
      Aurora global database.

      - *(string) --*

    - **IsWriter** *(boolean) --*

      Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
      capability) for the Aurora global database with which it is associated.
    """


_ClientDeleteGlobalClusterResponseGlobalClusterTypeDef = TypedDict(
    "_ClientDeleteGlobalClusterResponseGlobalClusterTypeDef",
    {
        "GlobalClusterIdentifier": str,
        "GlobalClusterResourceId": str,
        "GlobalClusterArn": str,
        "Status": str,
        "Engine": str,
        "EngineVersion": str,
        "DatabaseName": str,
        "StorageEncrypted": bool,
        "DeletionProtection": bool,
        "GlobalClusterMembers": List[
            ClientDeleteGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
        ],
    },
    total=False,
)


class ClientDeleteGlobalClusterResponseGlobalClusterTypeDef(
    _ClientDeleteGlobalClusterResponseGlobalClusterTypeDef
):
    """
    Type definition for `ClientDeleteGlobalClusterResponse` `GlobalCluster`

    A data type representing an Aurora global database.

    - **GlobalClusterIdentifier** *(string) --*

      Contains a user-supplied global database cluster identifier. This identifier is the unique
      key that identifies a global database cluster.

    - **GlobalClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the global database cluster. This
      identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
      cluster is accessed.

    - **GlobalClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the global database cluster.

    - **Status** *(string) --*

      Specifies the current state of this global database cluster.

    - **Engine** *(string) --*

      The Aurora database engine used by the global database cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **DatabaseName** *(string) --*

      The default database name within the new global database cluster.

    - **StorageEncrypted** *(boolean) --*

      The storage encryption setting for the global database cluster.

    - **DeletionProtection** *(boolean) --*

      The deletion protection setting for the new global database cluster.

    - **GlobalClusterMembers** *(list) --*

      The list of cluster IDs for secondary clusters within the global database cluster.
      Currently limited to 1 item.

      - *(dict) --*

        A data structure with information about any primary and secondary clusters associated
        with an Aurora global database.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for each Aurora cluster.

        - **Readers** *(list) --*

          The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
          Aurora global database.

          - *(string) --*

        - **IsWriter** *(boolean) --*

          Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
          capability) for the Aurora global database with which it is associated.
    """


_ClientDeleteGlobalClusterResponseTypeDef = TypedDict(
    "_ClientDeleteGlobalClusterResponseTypeDef",
    {"GlobalCluster": ClientDeleteGlobalClusterResponseGlobalClusterTypeDef},
    total=False,
)


class ClientDeleteGlobalClusterResponseTypeDef(
    _ClientDeleteGlobalClusterResponseTypeDef
):
    """
    Type definition for `ClientDeleteGlobalCluster` `Response`

    - **GlobalCluster** *(dict) --*

      A data type representing an Aurora global database.

      - **GlobalClusterIdentifier** *(string) --*

        Contains a user-supplied global database cluster identifier. This identifier is the unique
        key that identifies a global database cluster.

      - **GlobalClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the global database cluster. This
        identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
        cluster is accessed.

      - **GlobalClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the global database cluster.

      - **Status** *(string) --*

        Specifies the current state of this global database cluster.

      - **Engine** *(string) --*

        The Aurora database engine used by the global database cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **DatabaseName** *(string) --*

        The default database name within the new global database cluster.

      - **StorageEncrypted** *(boolean) --*

        The storage encryption setting for the global database cluster.

      - **DeletionProtection** *(boolean) --*

        The deletion protection setting for the new global database cluster.

      - **GlobalClusterMembers** *(list) --*

        The list of cluster IDs for secondary clusters within the global database cluster.
        Currently limited to 1 item.

        - *(dict) --*

          A data structure with information about any primary and secondary clusters associated
          with an Aurora global database.

          - **DBClusterArn** *(string) --*

            The Amazon Resource Name (ARN) for each Aurora cluster.

          - **Readers** *(list) --*

            The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
            Aurora global database.

            - *(string) --*

          - **IsWriter** *(boolean) --*

            Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
            capability) for the Aurora global database with which it is associated.
    """


_ClientDeleteInstallationMediaResponseFailureCauseTypeDef = TypedDict(
    "_ClientDeleteInstallationMediaResponseFailureCauseTypeDef",
    {"Message": str},
    total=False,
)


class ClientDeleteInstallationMediaResponseFailureCauseTypeDef(
    _ClientDeleteInstallationMediaResponseFailureCauseTypeDef
):
    """
    Type definition for `ClientDeleteInstallationMediaResponse` `FailureCause`

    If an installation media failure occurred, the cause of the failure.

    - **Message** *(string) --*

      The reason that an installation media import failed.
    """


_ClientDeleteInstallationMediaResponseTypeDef = TypedDict(
    "_ClientDeleteInstallationMediaResponseTypeDef",
    {
        "InstallationMediaId": str,
        "CustomAvailabilityZoneId": str,
        "Engine": str,
        "EngineVersion": str,
        "EngineInstallationMediaPath": str,
        "OSInstallationMediaPath": str,
        "Status": str,
        "FailureCause": ClientDeleteInstallationMediaResponseFailureCauseTypeDef,
    },
    total=False,
)


class ClientDeleteInstallationMediaResponseTypeDef(
    _ClientDeleteInstallationMediaResponseTypeDef
):
    """
    Type definition for `ClientDeleteInstallationMedia` `Response`

    Contains the installation media for a DB engine that requires an on-premises customer provided
    license, such as Microsoft SQL Server.

    - **InstallationMediaId** *(string) --*

      The installation medium ID.

    - **CustomAvailabilityZoneId** *(string) --*

      The custom Availability Zone (AZ) that contains the installation media.

    - **Engine** *(string) --*

      The DB engine.

    - **EngineVersion** *(string) --*

      The engine version of the DB engine.

    - **EngineInstallationMediaPath** *(string) --*

      The path to the installation medium for the DB engine.

    - **OSInstallationMediaPath** *(string) --*

      The path to the installation medium for the operating system associated with the DB engine.

    - **Status** *(string) --*

      The status of the installation medium.

    - **FailureCause** *(dict) --*

      If an installation media failure occurred, the cause of the failure.

      - **Message** *(string) --*

        The reason that an installation media import failed.
    """


_ClientDescribeAccountAttributesResponseAccountQuotasTypeDef = TypedDict(
    "_ClientDescribeAccountAttributesResponseAccountQuotasTypeDef",
    {"AccountQuotaName": str, "Used": int, "Max": int},
    total=False,
)


class ClientDescribeAccountAttributesResponseAccountQuotasTypeDef(
    _ClientDescribeAccountAttributesResponseAccountQuotasTypeDef
):
    """
    Type definition for `ClientDescribeAccountAttributesResponse` `AccountQuotas`

    Describes a quota for an AWS account.

    The following are account quotas:

    * ``AllocatedStorage`` - The total allocated storage per account, in GiB. The used value is
    the total allocated storage in the account, in GiB.

    * ``AuthorizationsPerDBSecurityGroup`` - The number of ingress rules per DB security group.
    The used value is the highest number of ingress rules in a DB security group in the
    account. Other DB security groups in the account might have a lower number of ingress rules.

    * ``CustomEndpointsPerDBCluster`` - The number of custom endpoints per DB cluster. The used
    value is the highest number of custom endpoints in a DB clusters in the account. Other DB
    clusters in the account might have a lower number of custom endpoints.

    * ``DBClusterParameterGroups`` - The number of DB cluster parameter groups per account,
    excluding default parameter groups. The used value is the count of nondefault DB cluster
    parameter groups in the account.

    * ``DBClusterRoles`` - The number of associated AWS Identity and Access Management (IAM)
    roles per DB cluster. The used value is the highest number of associated IAM roles for a DB
    cluster in the account. Other DB clusters in the account might have a lower number of
    associated IAM roles.

    * ``DBClusters`` - The number of DB clusters per account. The used value is the count of DB
    clusters in the account.

    * ``DBInstanceRoles`` - The number of associated IAM roles per DB instance. The used value
    is the highest number of associated IAM roles for a DB instance in the account. Other DB
    instances in the account might have a lower number of associated IAM roles.

    * ``DBInstances`` - The number of DB instances per account. The used value is the count of
    the DB instances in the account.

    * ``DBParameterGroups`` - The number of DB parameter groups per account, excluding default
    parameter groups. The used value is the count of nondefault DB parameter groups in the
    account.

    * ``DBSecurityGroups`` - The number of DB security groups (not VPC security groups) per
    account, excluding the default security group. The used value is the count of nondefault DB
    security groups in the account.

    * ``DBSubnetGroups`` - The number of DB subnet groups per account. The used value is the
    count of the DB subnet groups in the account.

    * ``EventSubscriptions`` - The number of event subscriptions per account. The used value is
    the count of the event subscriptions in the account.

    * ``ManualSnapshots`` - The number of manual DB snapshots per account. The used value is
    the count of the manual DB snapshots in the account.

    * ``OptionGroups`` - The number of DB option groups per account, excluding default option
    groups. The used value is the count of nondefault DB option groups in the account.

    * ``ReadReplicasPerMaster`` - The number of Read Replicas per DB instance. The used value
    is the highest number of Read Replicas for a DB instance in the account. Other DB instances
    in the account might have a lower number of Read Replicas.

    * ``ReservedDBInstances`` - The number of reserved DB instances per account. The used value
    is the count of the active reserved DB instances in the account.

    * ``SubnetsPerDBSubnetGroup`` - The number of subnets per DB subnet group. The used value
    is highest number of subnets for a DB subnet group in the account. Other DB subnet groups
    in the account might have a lower number of subnets.

    For more information, see `Limits
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html>`__ in the *Amazon
    RDS User Guide* and `Limits
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html>`__ in the
    *Amazon Aurora User Guide* .

    - **AccountQuotaName** *(string) --*

      The name of the Amazon RDS quota for this AWS account.

    - **Used** *(integer) --*

      The amount currently used toward the quota maximum.

    - **Max** *(integer) --*

      The maximum allowed value for the quota.
    """


_ClientDescribeAccountAttributesResponseTypeDef = TypedDict(
    "_ClientDescribeAccountAttributesResponseTypeDef",
    {
        "AccountQuotas": List[
            ClientDescribeAccountAttributesResponseAccountQuotasTypeDef
        ]
    },
    total=False,
)


class ClientDescribeAccountAttributesResponseTypeDef(
    _ClientDescribeAccountAttributesResponseTypeDef
):
    """
    Type definition for `ClientDescribeAccountAttributes` `Response`

    Data returned by the **DescribeAccountAttributes** action.

    - **AccountQuotas** *(list) --*

      A list of ``AccountQuota`` objects. Within this list, each quota has a name, a count of usage
      toward the quota maximum, and a maximum value for the quota.

      - *(dict) --*

        Describes a quota for an AWS account.

        The following are account quotas:

        * ``AllocatedStorage`` - The total allocated storage per account, in GiB. The used value is
        the total allocated storage in the account, in GiB.

        * ``AuthorizationsPerDBSecurityGroup`` - The number of ingress rules per DB security group.
        The used value is the highest number of ingress rules in a DB security group in the
        account. Other DB security groups in the account might have a lower number of ingress rules.

        * ``CustomEndpointsPerDBCluster`` - The number of custom endpoints per DB cluster. The used
        value is the highest number of custom endpoints in a DB clusters in the account. Other DB
        clusters in the account might have a lower number of custom endpoints.

        * ``DBClusterParameterGroups`` - The number of DB cluster parameter groups per account,
        excluding default parameter groups. The used value is the count of nondefault DB cluster
        parameter groups in the account.

        * ``DBClusterRoles`` - The number of associated AWS Identity and Access Management (IAM)
        roles per DB cluster. The used value is the highest number of associated IAM roles for a DB
        cluster in the account. Other DB clusters in the account might have a lower number of
        associated IAM roles.

        * ``DBClusters`` - The number of DB clusters per account. The used value is the count of DB
        clusters in the account.

        * ``DBInstanceRoles`` - The number of associated IAM roles per DB instance. The used value
        is the highest number of associated IAM roles for a DB instance in the account. Other DB
        instances in the account might have a lower number of associated IAM roles.

        * ``DBInstances`` - The number of DB instances per account. The used value is the count of
        the DB instances in the account.

        * ``DBParameterGroups`` - The number of DB parameter groups per account, excluding default
        parameter groups. The used value is the count of nondefault DB parameter groups in the
        account.

        * ``DBSecurityGroups`` - The number of DB security groups (not VPC security groups) per
        account, excluding the default security group. The used value is the count of nondefault DB
        security groups in the account.

        * ``DBSubnetGroups`` - The number of DB subnet groups per account. The used value is the
        count of the DB subnet groups in the account.

        * ``EventSubscriptions`` - The number of event subscriptions per account. The used value is
        the count of the event subscriptions in the account.

        * ``ManualSnapshots`` - The number of manual DB snapshots per account. The used value is
        the count of the manual DB snapshots in the account.

        * ``OptionGroups`` - The number of DB option groups per account, excluding default option
        groups. The used value is the count of nondefault DB option groups in the account.

        * ``ReadReplicasPerMaster`` - The number of Read Replicas per DB instance. The used value
        is the highest number of Read Replicas for a DB instance in the account. Other DB instances
        in the account might have a lower number of Read Replicas.

        * ``ReservedDBInstances`` - The number of reserved DB instances per account. The used value
        is the count of the active reserved DB instances in the account.

        * ``SubnetsPerDBSubnetGroup`` - The number of subnets per DB subnet group. The used value
        is highest number of subnets for a DB subnet group in the account. Other DB subnet groups
        in the account might have a lower number of subnets.

        For more information, see `Limits
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html>`__ in the *Amazon
        RDS User Guide* and `Limits
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html>`__ in the
        *Amazon Aurora User Guide* .

        - **AccountQuotaName** *(string) --*

          The name of the Amazon RDS quota for this AWS account.

        - **Used** *(integer) --*

          The amount currently used toward the quota maximum.

        - **Max** *(integer) --*

          The maximum allowed value for the quota.
    """


_ClientDescribeCertificatesFiltersTypeDef = TypedDict(
    "_ClientDescribeCertificatesFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeCertificatesFiltersTypeDef(
    _ClientDescribeCertificatesFiltersTypeDef
):
    """
    Type definition for `ClientDescribeCertificates` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeCertificatesResponseCertificatesTypeDef = TypedDict(
    "_ClientDescribeCertificatesResponseCertificatesTypeDef",
    {
        "CertificateIdentifier": str,
        "CertificateType": str,
        "Thumbprint": str,
        "ValidFrom": datetime,
        "ValidTill": datetime,
        "CertificateArn": str,
    },
    total=False,
)


class ClientDescribeCertificatesResponseCertificatesTypeDef(
    _ClientDescribeCertificatesResponseCertificatesTypeDef
):
    """
    Type definition for `ClientDescribeCertificatesResponse` `Certificates`

    A CA certificate for an AWS account.

    - **CertificateIdentifier** *(string) --*

      The unique key that identifies a certificate.

    - **CertificateType** *(string) --*

      The type of the certificate.

    - **Thumbprint** *(string) --*

      The thumbprint of the certificate.

    - **ValidFrom** *(datetime) --*

      The starting date from which the certificate is valid.

    - **ValidTill** *(datetime) --*

      The final date that the certificate continues to be valid.

    - **CertificateArn** *(string) --*

      The Amazon Resource Name (ARN) for the certificate.
    """


_ClientDescribeCertificatesResponseTypeDef = TypedDict(
    "_ClientDescribeCertificatesResponseTypeDef",
    {
        "Certificates": List[ClientDescribeCertificatesResponseCertificatesTypeDef],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeCertificatesResponseTypeDef(
    _ClientDescribeCertificatesResponseTypeDef
):
    """
    Type definition for `ClientDescribeCertificates` `Response`

    Data returned by the **DescribeCertificates** action.

    - **Certificates** *(list) --*

      The list of ``Certificate`` objects for the AWS account.

      - *(dict) --*

        A CA certificate for an AWS account.

        - **CertificateIdentifier** *(string) --*

          The unique key that identifies a certificate.

        - **CertificateType** *(string) --*

          The type of the certificate.

        - **Thumbprint** *(string) --*

          The thumbprint of the certificate.

        - **ValidFrom** *(datetime) --*

          The starting date from which the certificate is valid.

        - **ValidTill** *(datetime) --*

          The final date that the certificate continues to be valid.

        - **CertificateArn** *(string) --*

          The Amazon Resource Name (ARN) for the certificate.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribeCertificates`` request. If this
      parameter is specified, the response includes only records beyond the marker, up to the value
      specified by ``MaxRecords`` .
    """


_ClientDescribeCustomAvailabilityZonesFiltersTypeDef = TypedDict(
    "_ClientDescribeCustomAvailabilityZonesFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeCustomAvailabilityZonesFiltersTypeDef(
    _ClientDescribeCustomAvailabilityZonesFiltersTypeDef
):
    """
    Type definition for `ClientDescribeCustomAvailabilityZones` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesVpnDetailsTypeDef = TypedDict(
    "_ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesVpnDetailsTypeDef",
    {
        "VpnId": str,
        "VpnTunnelOriginatorIP": str,
        "VpnGatewayIp": str,
        "VpnPSK": str,
        "VpnName": str,
        "VpnState": str,
    },
    total=False,
)


class ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesVpnDetailsTypeDef(
    _ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesVpnDetailsTypeDef
):
    """
    Type definition for `ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZones` `VpnDetails`

    Information about the virtual private network (VPN) between the VMware vSphere cluster
    and the AWS website.

    - **VpnId** *(string) --*

      The ID of the VPN.

    - **VpnTunnelOriginatorIP** *(string) --*

      The IP address of network traffic from your on-premises data center. A custom AZ
      receives the network traffic.

    - **VpnGatewayIp** *(string) --*

      The IP address of network traffic from AWS to your on-premises data center.

    - **VpnPSK** *(string) --*

      The preshared key (PSK) for the VPN.

    - **VpnName** *(string) --*

      The name of the VPN.

    - **VpnState** *(string) --*

      The state of the VPN.
    """


_ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesTypeDef = TypedDict(
    "_ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesTypeDef",
    {
        "CustomAvailabilityZoneId": str,
        "CustomAvailabilityZoneName": str,
        "CustomAvailabilityZoneStatus": str,
        "VpnDetails": ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesVpnDetailsTypeDef,
    },
    total=False,
)


class ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesTypeDef(
    _ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesTypeDef
):
    """
    Type definition for `ClientDescribeCustomAvailabilityZonesResponse` `CustomAvailabilityZones`

    A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware
    vSphere cluster.

    For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
    https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

    - **CustomAvailabilityZoneId** *(string) --*

      The identifier of the custom AZ.

      Amazon RDS generates a unique identifier when a custom AZ is created.

    - **CustomAvailabilityZoneName** *(string) --*

      The name of the custom AZ.

    - **CustomAvailabilityZoneStatus** *(string) --*

      The status of the custom AZ.

    - **VpnDetails** *(dict) --*

      Information about the virtual private network (VPN) between the VMware vSphere cluster
      and the AWS website.

      - **VpnId** *(string) --*

        The ID of the VPN.

      - **VpnTunnelOriginatorIP** *(string) --*

        The IP address of network traffic from your on-premises data center. A custom AZ
        receives the network traffic.

      - **VpnGatewayIp** *(string) --*

        The IP address of network traffic from AWS to your on-premises data center.

      - **VpnPSK** *(string) --*

        The preshared key (PSK) for the VPN.

      - **VpnName** *(string) --*

        The name of the VPN.

      - **VpnState** *(string) --*

        The state of the VPN.
    """


_ClientDescribeCustomAvailabilityZonesResponseTypeDef = TypedDict(
    "_ClientDescribeCustomAvailabilityZonesResponseTypeDef",
    {
        "Marker": str,
        "CustomAvailabilityZones": List[
            ClientDescribeCustomAvailabilityZonesResponseCustomAvailabilityZonesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeCustomAvailabilityZonesResponseTypeDef(
    _ClientDescribeCustomAvailabilityZonesResponseTypeDef
):
    """
    Type definition for `ClientDescribeCustomAvailabilityZones` `Response`

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribeCustomAvailabilityZones``
      request. If this parameter is specified, the response includes only records beyond the
      marker, up to the value specified by ``MaxRecords`` .

    - **CustomAvailabilityZones** *(list) --*

      The list of  CustomAvailabilityZone objects for the AWS account.

      - *(dict) --*

        A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware
        vSphere cluster.

        For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
        https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

        - **CustomAvailabilityZoneId** *(string) --*

          The identifier of the custom AZ.

          Amazon RDS generates a unique identifier when a custom AZ is created.

        - **CustomAvailabilityZoneName** *(string) --*

          The name of the custom AZ.

        - **CustomAvailabilityZoneStatus** *(string) --*

          The status of the custom AZ.

        - **VpnDetails** *(dict) --*

          Information about the virtual private network (VPN) between the VMware vSphere cluster
          and the AWS website.

          - **VpnId** *(string) --*

            The ID of the VPN.

          - **VpnTunnelOriginatorIP** *(string) --*

            The IP address of network traffic from your on-premises data center. A custom AZ
            receives the network traffic.

          - **VpnGatewayIp** *(string) --*

            The IP address of network traffic from AWS to your on-premises data center.

          - **VpnPSK** *(string) --*

            The preshared key (PSK) for the VPN.

          - **VpnName** *(string) --*

            The name of the VPN.

          - **VpnState** *(string) --*

            The state of the VPN.
    """


_ClientDescribeDbClusterBacktracksFiltersTypeDef = TypedDict(
    "_ClientDescribeDbClusterBacktracksFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeDbClusterBacktracksFiltersTypeDef(
    _ClientDescribeDbClusterBacktracksFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterBacktracks` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbClusterBacktracksResponseDBClusterBacktracksTypeDef = TypedDict(
    "_ClientDescribeDbClusterBacktracksResponseDBClusterBacktracksTypeDef",
    {
        "DBClusterIdentifier": str,
        "BacktrackIdentifier": str,
        "BacktrackTo": datetime,
        "BacktrackedFrom": datetime,
        "BacktrackRequestCreationTime": datetime,
        "Status": str,
    },
    total=False,
)


class ClientDescribeDbClusterBacktracksResponseDBClusterBacktracksTypeDef(
    _ClientDescribeDbClusterBacktracksResponseDBClusterBacktracksTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterBacktracksResponse` `DBClusterBacktracks`

    This data type is used as a response element in the ``DescribeDBClusterBacktracks`` action.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **BacktrackIdentifier** *(string) --*

      Contains the backtrack identifier.

    - **BacktrackTo** *(datetime) --*

      The timestamp of the time to which the DB cluster was backtracked.

    - **BacktrackedFrom** *(datetime) --*

      The timestamp of the time from which the DB cluster was backtracked.

    - **BacktrackRequestCreationTime** *(datetime) --*

      The timestamp of the time at which the backtrack was requested.

    - **Status** *(string) --*

      The status of the backtrack. This property returns one of the following values:

      * ``applying`` - The backtrack is currently being applied to or rolled back from the DB
      cluster.

      * ``completed`` - The backtrack has successfully been applied to or rolled back from the
      DB cluster.

      * ``failed`` - An error occurred while the backtrack was applied to or rolled back from
      the DB cluster.

      * ``pending`` - The backtrack is currently pending application to or rollback from the DB
      cluster.
    """


_ClientDescribeDbClusterBacktracksResponseTypeDef = TypedDict(
    "_ClientDescribeDbClusterBacktracksResponseTypeDef",
    {
        "Marker": str,
        "DBClusterBacktracks": List[
            ClientDescribeDbClusterBacktracksResponseDBClusterBacktracksTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbClusterBacktracksResponseTypeDef(
    _ClientDescribeDbClusterBacktracksResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterBacktracks` `Response`

    Contains the result of a successful invocation of the ``DescribeDBClusterBacktracks`` action.

    - **Marker** *(string) --*

      A pagination token that can be used in a subsequent ``DescribeDBClusterBacktracks`` request.

    - **DBClusterBacktracks** *(list) --*

      Contains a list of backtracks for the user.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBClusterBacktracks`` action.

        - **DBClusterIdentifier** *(string) --*

          Contains a user-supplied DB cluster identifier. This identifier is the unique key that
          identifies a DB cluster.

        - **BacktrackIdentifier** *(string) --*

          Contains the backtrack identifier.

        - **BacktrackTo** *(datetime) --*

          The timestamp of the time to which the DB cluster was backtracked.

        - **BacktrackedFrom** *(datetime) --*

          The timestamp of the time from which the DB cluster was backtracked.

        - **BacktrackRequestCreationTime** *(datetime) --*

          The timestamp of the time at which the backtrack was requested.

        - **Status** *(string) --*

          The status of the backtrack. This property returns one of the following values:

          * ``applying`` - The backtrack is currently being applied to or rolled back from the DB
          cluster.

          * ``completed`` - The backtrack has successfully been applied to or rolled back from the
          DB cluster.

          * ``failed`` - An error occurred while the backtrack was applied to or rolled back from
          the DB cluster.

          * ``pending`` - The backtrack is currently pending application to or rollback from the DB
          cluster.
    """


_ClientDescribeDbClusterEndpointsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbClusterEndpointsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeDbClusterEndpointsFiltersTypeDef(
    _ClientDescribeDbClusterEndpointsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterEndpoints` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbClusterEndpointsResponseDBClusterEndpointsTypeDef = TypedDict(
    "_ClientDescribeDbClusterEndpointsResponseDBClusterEndpointsTypeDef",
    {
        "DBClusterEndpointIdentifier": str,
        "DBClusterIdentifier": str,
        "DBClusterEndpointResourceIdentifier": str,
        "Endpoint": str,
        "Status": str,
        "EndpointType": str,
        "CustomEndpointType": str,
        "StaticMembers": List[str],
        "ExcludedMembers": List[str],
        "DBClusterEndpointArn": str,
    },
    total=False,
)


class ClientDescribeDbClusterEndpointsResponseDBClusterEndpointsTypeDef(
    _ClientDescribeDbClusterEndpointsResponseDBClusterEndpointsTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterEndpointsResponse` `DBClusterEndpoints`

    This data type represents the information you need to connect to an Amazon Aurora DB
    cluster. This data type is used as a response element in the following actions:

    * ``CreateDBClusterEndpoint``

    * ``DescribeDBClusterEndpoints``

    * ``ModifyDBClusterEndpoint``

    * ``DeleteDBClusterEndpoint``

    For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

    - **DBClusterEndpointIdentifier** *(string) --*

      The identifier associated with the endpoint. This parameter is stored as a lowercase
      string.

    - **DBClusterIdentifier** *(string) --*

      The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
      is stored as a lowercase string.

    - **DBClusterEndpointResourceIdentifier** *(string) --*

      A unique system-generated identifier for an endpoint. It remains the same for the whole
      life of the endpoint.

    - **Endpoint** *(string) --*

      The DNS address of the endpoint.

    - **Status** *(string) --*

      The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
      ``modifying`` .

    - **EndpointType** *(string) --*

      The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

    - **CustomEndpointType** *(string) --*

      The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

    - **StaticMembers** *(list) --*

      List of DB instance identifiers that are part of the custom endpoint group.

      - *(string) --*

    - **ExcludedMembers** *(list) --*

      List of DB instance identifiers that aren't part of the custom endpoint group. All other
      eligible instances are reachable through the custom endpoint. Only relevant if the list
      of static members is empty.

      - *(string) --*

    - **DBClusterEndpointArn** *(string) --*

      The Amazon Resource Name (ARN) for the endpoint.
    """


_ClientDescribeDbClusterEndpointsResponseTypeDef = TypedDict(
    "_ClientDescribeDbClusterEndpointsResponseTypeDef",
    {
        "Marker": str,
        "DBClusterEndpoints": List[
            ClientDescribeDbClusterEndpointsResponseDBClusterEndpointsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbClusterEndpointsResponseTypeDef(
    _ClientDescribeDbClusterEndpointsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterEndpoints` `Response`

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribeDBClusterEndpoints`` request.
      If this parameter is specified, the response includes only records beyond the marker, up to
      the value specified by ``MaxRecords`` .

    - **DBClusterEndpoints** *(list) --*

      Contains the details of the endpoints associated with the cluster and matching any filter
      conditions.

      - *(dict) --*

        This data type represents the information you need to connect to an Amazon Aurora DB
        cluster. This data type is used as a response element in the following actions:

        * ``CreateDBClusterEndpoint``

        * ``DescribeDBClusterEndpoints``

        * ``ModifyDBClusterEndpoint``

        * ``DeleteDBClusterEndpoint``

        For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

        - **DBClusterEndpointIdentifier** *(string) --*

          The identifier associated with the endpoint. This parameter is stored as a lowercase
          string.

        - **DBClusterIdentifier** *(string) --*

          The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
          is stored as a lowercase string.

        - **DBClusterEndpointResourceIdentifier** *(string) --*

          A unique system-generated identifier for an endpoint. It remains the same for the whole
          life of the endpoint.

        - **Endpoint** *(string) --*

          The DNS address of the endpoint.

        - **Status** *(string) --*

          The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
          ``modifying`` .

        - **EndpointType** *(string) --*

          The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

        - **CustomEndpointType** *(string) --*

          The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

        - **StaticMembers** *(list) --*

          List of DB instance identifiers that are part of the custom endpoint group.

          - *(string) --*

        - **ExcludedMembers** *(list) --*

          List of DB instance identifiers that aren't part of the custom endpoint group. All other
          eligible instances are reachable through the custom endpoint. Only relevant if the list
          of static members is empty.

          - *(string) --*

        - **DBClusterEndpointArn** *(string) --*

          The Amazon Resource Name (ARN) for the endpoint.
    """


_ClientDescribeDbClusterParameterGroupsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbClusterParameterGroupsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeDbClusterParameterGroupsFiltersTypeDef(
    _ClientDescribeDbClusterParameterGroupsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterParameterGroups` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbClusterParameterGroupsResponseDBClusterParameterGroupsTypeDef = TypedDict(
    "_ClientDescribeDbClusterParameterGroupsResponseDBClusterParameterGroupsTypeDef",
    {
        "DBClusterParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBClusterParameterGroupArn": str,
    },
    total=False,
)


class ClientDescribeDbClusterParameterGroupsResponseDBClusterParameterGroupsTypeDef(
    _ClientDescribeDbClusterParameterGroupsResponseDBClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterParameterGroupsResponse` `DBClusterParameterGroups`

    Contains the details of an Amazon RDS DB cluster parameter group.

    This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
    action.

    - **DBClusterParameterGroupName** *(string) --*

      Provides the name of the DB cluster parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB cluster parameter group
      is compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB cluster parameter group.

    - **DBClusterParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_ClientDescribeDbClusterParameterGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeDbClusterParameterGroupsResponseTypeDef",
    {
        "Marker": str,
        "DBClusterParameterGroups": List[
            ClientDescribeDbClusterParameterGroupsResponseDBClusterParameterGroupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbClusterParameterGroupsResponseTypeDef(
    _ClientDescribeDbClusterParameterGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterParameterGroups` `Response`

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribeDBClusterParameterGroups``
      request. If this parameter is specified, the response includes only records beyond the
      marker, up to the value specified by ``MaxRecords`` .

    - **DBClusterParameterGroups** *(list) --*

      A list of DB cluster parameter groups.

      - *(dict) --*

        Contains the details of an Amazon RDS DB cluster parameter group.

        This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
        action.

        - **DBClusterParameterGroupName** *(string) --*

          Provides the name of the DB cluster parameter group.

        - **DBParameterGroupFamily** *(string) --*

          Provides the name of the DB parameter group family that this DB cluster parameter group
          is compatible with.

        - **Description** *(string) --*

          Provides the customer-specified description for this DB cluster parameter group.

        - **DBClusterParameterGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_ClientDescribeDbClusterParametersFiltersTypeDef = TypedDict(
    "_ClientDescribeDbClusterParametersFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeDbClusterParametersFiltersTypeDef(
    _ClientDescribeDbClusterParametersFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterParameters` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbClusterParametersResponseParametersTypeDef = TypedDict(
    "_ClientDescribeDbClusterParametersResponseParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientDescribeDbClusterParametersResponseParametersTypeDef(
    _ClientDescribeDbClusterParametersResponseParametersTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterParametersResponse` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientDescribeDbClusterParametersResponseTypeDef = TypedDict(
    "_ClientDescribeDbClusterParametersResponseTypeDef",
    {
        "Parameters": List[ClientDescribeDbClusterParametersResponseParametersTypeDef],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeDbClusterParametersResponseTypeDef(
    _ClientDescribeDbClusterParametersResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterParameters` `Response`

    Provides details about a DB cluster parameter group including the parameters in the DB cluster
    parameter group.

    - **Parameters** *(list) --*

      Provides a list of parameters for the DB cluster parameter group.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
        ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*

    - **Marker** *(string) --*

      An optional pagination token provided by a previous DescribeDBClusterParameters request. If
      this parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .
    """


_ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef = TypedDict(
    "_ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef",
    {"AttributeName": str, "AttributeValues": List[str]},
    total=False,
)


class ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef(
    _ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResult` `DBClusterSnapshotAttributes`

    Contains the name and values of a manual DB cluster snapshot attribute.

    Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore
    a manual DB cluster snapshot. For more information, see the
    ``ModifyDBClusterSnapshotAttribute`` API action.

    - **AttributeName** *(string) --*

      The name of the manual DB cluster snapshot attribute.

      The attribute named ``restore`` refers to the list of AWS accounts that have permission
      to copy or restore the manual DB cluster snapshot. For more information, see the
      ``ModifyDBClusterSnapshotAttribute`` API action.

    - **AttributeValues** *(list) --*

      The value(s) for the manual DB cluster snapshot attribute.

      If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
      of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster
      snapshot. If a value of ``all`` is in the list, then the manual DB cluster snapshot is
      public and available for any AWS account to copy or restore.

      - *(string) --*
    """


_ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultTypeDef = TypedDict(
    "_ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultTypeDef",
    {
        "DBClusterSnapshotIdentifier": str,
        "DBClusterSnapshotAttributes": List[
            ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultTypeDef(
    _ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterSnapshotAttributesResponse` `DBClusterSnapshotAttributesResult`

    Contains the results of a successful call to the ``DescribeDBClusterSnapshotAttributes`` API
    action.

    Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or
    restore a manual DB cluster snapshot. For more information, see the
    ``ModifyDBClusterSnapshotAttribute`` API action.

    - **DBClusterSnapshotIdentifier** *(string) --*

      The identifier of the manual DB cluster snapshot that the attributes apply to.

    - **DBClusterSnapshotAttributes** *(list) --*

      The list of attributes and values for the manual DB cluster snapshot.

      - *(dict) --*

        Contains the name and values of a manual DB cluster snapshot attribute.

        Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore
        a manual DB cluster snapshot. For more information, see the
        ``ModifyDBClusterSnapshotAttribute`` API action.

        - **AttributeName** *(string) --*

          The name of the manual DB cluster snapshot attribute.

          The attribute named ``restore`` refers to the list of AWS accounts that have permission
          to copy or restore the manual DB cluster snapshot. For more information, see the
          ``ModifyDBClusterSnapshotAttribute`` API action.

        - **AttributeValues** *(list) --*

          The value(s) for the manual DB cluster snapshot attribute.

          If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
          of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster
          snapshot. If a value of ``all`` is in the list, then the manual DB cluster snapshot is
          public and available for any AWS account to copy or restore.

          - *(string) --*
    """


_ClientDescribeDbClusterSnapshotAttributesResponseTypeDef = TypedDict(
    "_ClientDescribeDbClusterSnapshotAttributesResponseTypeDef",
    {
        "DBClusterSnapshotAttributesResult": ClientDescribeDbClusterSnapshotAttributesResponseDBClusterSnapshotAttributesResultTypeDef
    },
    total=False,
)


class ClientDescribeDbClusterSnapshotAttributesResponseTypeDef(
    _ClientDescribeDbClusterSnapshotAttributesResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterSnapshotAttributes` `Response`

    - **DBClusterSnapshotAttributesResult** *(dict) --*

      Contains the results of a successful call to the ``DescribeDBClusterSnapshotAttributes`` API
      action.

      Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or
      restore a manual DB cluster snapshot. For more information, see the
      ``ModifyDBClusterSnapshotAttribute`` API action.

      - **DBClusterSnapshotIdentifier** *(string) --*

        The identifier of the manual DB cluster snapshot that the attributes apply to.

      - **DBClusterSnapshotAttributes** *(list) --*

        The list of attributes and values for the manual DB cluster snapshot.

        - *(dict) --*

          Contains the name and values of a manual DB cluster snapshot attribute.

          Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore
          a manual DB cluster snapshot. For more information, see the
          ``ModifyDBClusterSnapshotAttribute`` API action.

          - **AttributeName** *(string) --*

            The name of the manual DB cluster snapshot attribute.

            The attribute named ``restore`` refers to the list of AWS accounts that have permission
            to copy or restore the manual DB cluster snapshot. For more information, see the
            ``ModifyDBClusterSnapshotAttribute`` API action.

          - **AttributeValues** *(list) --*

            The value(s) for the manual DB cluster snapshot attribute.

            If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
            of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster
            snapshot. If a value of ``all`` is in the list, then the manual DB cluster snapshot is
            public and available for any AWS account to copy or restore.

            - *(string) --*
    """


_ClientDescribeDbClusterSnapshotsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbClusterSnapshotsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeDbClusterSnapshotsFiltersTypeDef(
    _ClientDescribeDbClusterSnapshotsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterSnapshots` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbClusterSnapshotsResponseDBClusterSnapshotsTypeDef = TypedDict(
    "_ClientDescribeDbClusterSnapshotsResponseDBClusterSnapshotsTypeDef",
    {
        "AvailabilityZones": List[str],
        "DBClusterSnapshotIdentifier": str,
        "DBClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "VpcId": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "PercentProgress": int,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DBClusterSnapshotArn": str,
        "SourceDBClusterSnapshotArn": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class ClientDescribeDbClusterSnapshotsResponseDBClusterSnapshotsTypeDef(
    _ClientDescribeDbClusterSnapshotsResponseDBClusterSnapshotsTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterSnapshotsResponse` `DBClusterSnapshots`

    Contains the details for an Amazon RDS DB cluster snapshot

    This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
      can be restored.

      - *(string) --*

    - **DBClusterSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB cluster snapshot.

    - **DBClusterIdentifier** *(string) --*

      Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
      created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB cluster snapshot.

    - **Port** *(integer) --*

      Specifies the port that the DB cluster was listening on at the time of the snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB cluster snapshot.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB cluster snapshot.

    - **EngineVersion** *(string) --*

      Provides the version of the database engine for this DB cluster snapshot.

    - **LicenseModel** *(string) --*

      Provides the license model information for this DB cluster snapshot.

    - **SnapshotType** *(string) --*

      Provides the type of the DB cluster snapshot.

    - **PercentProgress** *(integer) --*

      Specifies the percentage of the estimated data that has been transferred.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
      snapshot.

    - **DBClusterSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster snapshot.

    - **SourceDBClusterSnapshotArn** *(string) --*

      If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
      Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_ClientDescribeDbClusterSnapshotsResponseTypeDef = TypedDict(
    "_ClientDescribeDbClusterSnapshotsResponseTypeDef",
    {
        "Marker": str,
        "DBClusterSnapshots": List[
            ClientDescribeDbClusterSnapshotsResponseDBClusterSnapshotsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbClusterSnapshotsResponseTypeDef(
    _ClientDescribeDbClusterSnapshotsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbClusterSnapshots` `Response`

    Provides a list of DB cluster snapshots for the user as the result of a call to the
    ``DescribeDBClusterSnapshots`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribeDBClusterSnapshots`` request.
      If this parameter is specified, the response includes only records beyond the marker, up to
      the value specified by ``MaxRecords`` .

    - **DBClusterSnapshots** *(list) --*

      Provides a list of DB cluster snapshots for the user.

      - *(dict) --*

        Contains the details for an Amazon RDS DB cluster snapshot

        This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

        - **AvailabilityZones** *(list) --*

          Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
          can be restored.

          - *(string) --*

        - **DBClusterSnapshotIdentifier** *(string) --*

          Specifies the identifier for the DB cluster snapshot.

        - **DBClusterIdentifier** *(string) --*

          Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
          created from.

        - **SnapshotCreateTime** *(datetime) --*

          Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

        - **Engine** *(string) --*

          Specifies the name of the database engine.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size in gibibytes (GiB).

        - **Status** *(string) --*

          Specifies the status of this DB cluster snapshot.

        - **Port** *(integer) --*

          Specifies the port that the DB cluster was listening on at the time of the snapshot.

        - **VpcId** *(string) --*

          Provides the VPC ID associated with the DB cluster snapshot.

        - **ClusterCreateTime** *(datetime) --*

          Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

        - **MasterUsername** *(string) --*

          Provides the master username for the DB cluster snapshot.

        - **EngineVersion** *(string) --*

          Provides the version of the database engine for this DB cluster snapshot.

        - **LicenseModel** *(string) --*

          Provides the license model information for this DB cluster snapshot.

        - **SnapshotType** *(string) --*

          Provides the type of the DB cluster snapshot.

        - **PercentProgress** *(integer) --*

          Specifies the percentage of the estimated data that has been transferred.

        - **StorageEncrypted** *(boolean) --*

          Specifies whether the DB cluster snapshot is encrypted.

        - **KmsKeyId** *(string) --*

          If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
          snapshot.

        - **DBClusterSnapshotArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB cluster snapshot.

        - **SourceDBClusterSnapshotArn** *(string) --*

          If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
          Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.
    """


_ClientDescribeDbClustersFiltersTypeDef = TypedDict(
    "_ClientDescribeDbClustersFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbClustersFiltersTypeDef(_ClientDescribeDbClustersFiltersTypeDef):
    """
    Type definition for `ClientDescribeDbClusters` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbClustersResponseDBClustersAssociatedRolesTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseDBClustersAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientDescribeDbClustersResponseDBClustersAssociatedRolesTypeDef(
    _ClientDescribeDbClustersResponseDBClustersAssociatedRolesTypeDef
):
    """
    Type definition for `ClientDescribeDbClustersResponseDBClusters` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The
      Status property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB
      cluster is unable to assume the IAM role in order to access other AWS services on
      your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientDescribeDbClustersResponseDBClustersDBClusterMembersTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseDBClustersDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientDescribeDbClustersResponseDBClustersDBClusterMembersTypeDef(
    _ClientDescribeDbClustersResponseDBClustersDBClusterMembersTypeDef
):
    """
    Type definition for `ClientDescribeDbClustersResponseDBClusters` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB
      cluster and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the
      primary instance after a failure of the existing primary instance. For more
      information, see `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientDescribeDbClustersResponseDBClustersDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseDBClustersDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientDescribeDbClustersResponseDBClustersDBClusterOptionGroupMembershipsTypeDef(
    _ClientDescribeDbClustersResponseDBClustersDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientDescribeDbClustersResponseDBClusters` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientDescribeDbClustersResponseDBClustersScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseDBClustersScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientDescribeDbClustersResponseDBClustersScalingConfigurationInfoTypeDef(
    _ClientDescribeDbClustersResponseDBClustersScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientDescribeDbClustersResponseDBClusters` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
    in the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in
      ``serverless`` mode is paused. A DB cluster can be paused only when it's idle (it has
      no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientDescribeDbClustersResponseDBClustersVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseDBClustersVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDescribeDbClustersResponseDBClustersVpcSecurityGroupsTypeDef(
    _ClientDescribeDbClustersResponseDBClustersVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbClustersResponseDBClusters` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDescribeDbClustersResponseDBClustersTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseDBClustersTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientDescribeDbClustersResponseDBClustersDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientDescribeDbClustersResponseDBClustersDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientDescribeDbClustersResponseDBClustersVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientDescribeDbClustersResponseDBClustersAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientDescribeDbClustersResponseDBClustersScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientDescribeDbClustersResponseDBClustersTypeDef(
    _ClientDescribeDbClustersResponseDBClustersTypeDef
):
    """
    Type definition for `ClientDescribeDbClustersResponse` `DBClusters`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the
      allocated storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always
      returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically
      adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned
      for the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster
      load-balances connections across the Aurora Replicas that are available in a DB cluster.
      As clients request new connections to the reader endpoint, Aurora distributes the
      connection requests among the Aurora Replicas in the DB cluster. This functionality can
      help balance your read workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload
      to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB
          cluster and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the
          primary instance after a failure of the existing primary instance. For more
          information, see `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB
      cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The
          Status property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB
          cluster is unable to assume the IAM role in order to access other AWS services on
          your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when
      the cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
      in the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
      in the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in
        ``serverless`` mode is paused. A DB cluster can be paused only when it's idle (it has
        no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be
      deleted when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientDescribeDbClustersResponseTypeDef = TypedDict(
    "_ClientDescribeDbClustersResponseTypeDef",
    {
        "Marker": str,
        "DBClusters": List[ClientDescribeDbClustersResponseDBClustersTypeDef],
    },
    total=False,
)


class ClientDescribeDbClustersResponseTypeDef(_ClientDescribeDbClustersResponseTypeDef):
    """
    Type definition for `ClientDescribeDbClusters` `Response`

    Contains the result of a successful invocation of the ``DescribeDBClusters`` action.

    - **Marker** *(string) --*

      A pagination token that can be used in a subsequent DescribeDBClusters request.

    - **DBClusters** *(list) --*

      Contains a list of DB clusters for the user.

      - *(dict) --*

        Contains the details of an Amazon Aurora DB cluster.

        This data type is used as a response element in the ``DescribeDBClusters`` ,
        ``StopDBCluster`` , and ``StartDBCluster`` actions.

        - **AllocatedStorage** *(integer) --*

          For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the
          allocated storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always
          returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically
          adjusts as needed.

        - **AvailabilityZones** *(list) --*

          Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
          created.

          - *(string) --*

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the number of days for which automatic DB snapshots are retained.

        - **CharacterSetName** *(string) --*

          If present, specifies the name of the character set that this cluster is associated with.

        - **DatabaseName** *(string) --*

          Contains the name of the initial database of this DB cluster that was provided at create
          time, if one was specified when the DB cluster was created. This same name is returned
          for the life of the DB cluster.

        - **DBClusterIdentifier** *(string) --*

          Contains a user-supplied DB cluster identifier. This identifier is the unique key that
          identifies a DB cluster.

        - **DBClusterParameterGroup** *(string) --*

          Specifies the name of the DB cluster parameter group for the DB cluster.

        - **DBSubnetGroup** *(string) --*

          Specifies information on the subnet group associated with the DB cluster, including the
          name, description, and subnets in the subnet group.

        - **Status** *(string) --*

          Specifies the current state of this DB cluster.

        - **PercentProgress** *(string) --*

          Specifies the progress of the operation as a percentage.

        - **EarliestRestorableTime** *(datetime) --*

          The earliest time to which a database can be restored with point-in-time restore.

        - **Endpoint** *(string) --*

          Specifies the connection endpoint for the primary instance of the DB cluster.

        - **ReaderEndpoint** *(string) --*

          The reader endpoint for the DB cluster. The reader endpoint for a DB cluster
          load-balances connections across the Aurora Replicas that are available in a DB cluster.
          As clients request new connections to the reader endpoint, Aurora distributes the
          connection requests among the Aurora Replicas in the DB cluster. This functionality can
          help balance your read workload across multiple Aurora Replicas in your DB cluster.

          If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
          the primary instance, your connection is dropped. To continue sending your read workload
          to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

        - **CustomEndpoints** *(list) --*

          Identifies all custom endpoints associated with the cluster.

          - *(string) --*

        - **MultiAZ** *(boolean) --*

          Specifies whether the DB cluster has instances in multiple Availability Zones.

        - **Engine** *(string) --*

          Provides the name of the database engine to be used for this DB cluster.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LatestRestorableTime** *(datetime) --*

          Specifies the latest time to which a database can be restored with point-in-time restore.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **MasterUsername** *(string) --*

          Contains the master username for the DB cluster.

        - **DBClusterOptionGroupMemberships** *(list) --*

          Provides the list of option group memberships for this DB cluster.

          - *(dict) --*

            Contains status information for a DB cluster option group.

            - **DBClusterOptionGroupName** *(string) --*

              Specifies the name of the DB cluster option group.

            - **Status** *(string) --*

              Specifies the status of the DB cluster option group.

        - **PreferredBackupWindow** *(string) --*

          Specifies the daily time range during which automated backups are created if automated
          backups are enabled, as determined by the ``BackupRetentionPeriod`` .

        - **PreferredMaintenanceWindow** *(string) --*

          Specifies the weekly time range during which system maintenance can occur, in Universal
          Coordinated Time (UTC).

        - **ReplicationSourceIdentifier** *(string) --*

          Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

        - **ReadReplicaIdentifiers** *(list) --*

          Contains one or more identifiers of the Read Replicas associated with this DB cluster.

          - *(string) --*

        - **DBClusterMembers** *(list) --*

          Provides the list of instances that make up the DB cluster.

          - *(dict) --*

            Contains information about an instance that is part of a DB cluster.

            - **DBInstanceIdentifier** *(string) --*

              Specifies the instance identifier for this member of the DB cluster.

            - **IsClusterWriter** *(boolean) --*

              Value that is ``true`` if the cluster member is the primary instance for the DB
              cluster and ``false`` otherwise.

            - **DBClusterParameterGroupStatus** *(string) --*

              Specifies the status of the DB cluster parameter group for this member of the DB
              cluster.

            - **PromotionTier** *(integer) --*

              A value that specifies the order in which an Aurora Replica is promoted to the
              primary instance after a failure of the existing primary instance. For more
              information, see `Fault Tolerance for an Aurora DB Cluster
              <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
              in the *Amazon Aurora User Guide* .

        - **VpcSecurityGroups** *(list) --*

          Provides a list of VPC security groups that the DB cluster belongs to.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

        - **StorageEncrypted** *(boolean) --*

          Specifies whether the DB cluster is encrypted.

        - **KmsKeyId** *(string) --*

          If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB
          cluster.

        - **DbClusterResourceId** *(string) --*

          The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found
          in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB cluster.

        - **AssociatedRoles** *(list) --*

          Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
          with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
          the DB cluster to access other AWS services on your behalf.

          - *(dict) --*

            Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
            cluster.

            - **RoleArn** *(string) --*

              The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

            - **Status** *(string) --*

              Describes the state of association between the IAM role and the DB cluster. The
              Status property returns one of the following values:

              * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
              access other AWS services on your behalf.

              * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

              * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB
              cluster is unable to assume the IAM role in order to access other AWS services on
              your behalf.

            - **FeatureName** *(string) --*

              The name of the feature associated with the AWS Identity and Access Management (IAM)
              role. For the list of supported feature names, see  DBEngineVersion .

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
          accounts to database accounts is enabled.

        - **CloneGroupId** *(string) --*

          Identifies the clone group to which the DB cluster is associated.

        - **ClusterCreateTime** *(datetime) --*

          Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

        - **EarliestBacktrackTime** *(datetime) --*

          The earliest time to which a DB cluster can be backtracked.

        - **BacktrackWindow** *(integer) --*

          The target backtrack window, in seconds. If this value is set to 0, backtracking is
          disabled for the DB cluster. Otherwise, backtracking is enabled.

        - **BacktrackConsumedChangeRecords** *(integer) --*

          The number of change records stored for Backtrack.

        - **EnabledCloudwatchLogsExports** *(list) --*

          A list of log types that this DB cluster is configured to export to CloudWatch Logs.

          Log types vary by DB engine. For information about the log types for each DB engine, see
          `Amazon RDS Database Log Files
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
          the *Amazon Aurora User Guide.*

          - *(string) --*

        - **Capacity** *(integer) --*

          The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when
          the cluster is paused.

          For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
          in the *Amazon Aurora User Guide* .

        - **EngineMode** *(string) --*

          The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
          ``parallelquery`` , ``global`` , or ``multimaster`` .

        - **ScalingConfigurationInfo** *(dict) --*

          Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

          For more information, see `Using Amazon Aurora Serverless
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
          in the *Amazon Aurora User Guide* .

          - **MinCapacity** *(integer) --*

            The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

          - **MaxCapacity** *(integer) --*

            The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

          - **AutoPause** *(boolean) --*

            A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
            ``serverless`` DB engine mode.

            When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
            automatically resumes.

          - **SecondsUntilAutoPause** *(integer) --*

            The remaining amount of time, in seconds, before the Aurora DB cluster in
            ``serverless`` mode is paused. A DB cluster can be paused only when it's idle (it has
            no connections).

          - **TimeoutAction** *(string) --*

            The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
            ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

        - **DeletionProtection** *(boolean) --*

          Indicates if the DB cluster has deletion protection enabled. The database can't be
          deleted when deletion protection is enabled.

        - **HttpEndpointEnabled** *(boolean) --*

          A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
          enabled.

          When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
          queries on the Aurora Serverless DB cluster. You can also query your database from inside
          the RDS console with the query editor.

          For more information, see `Using the Data API for Aurora Serverless
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
          *Amazon Aurora User Guide* .

        - **ActivityStreamMode** *(string) --*

          The mode of the database activity stream. Database events such as a change or access
          generate an activity stream event. The database session can handle these events either
          synchronously or asynchronously.

        - **ActivityStreamStatus** *(string) --*

          The status of the database activity stream.

        - **ActivityStreamKmsKeyId** *(string) --*

          The AWS KMS key identifier used for encrypting messages in the database activity stream.

        - **ActivityStreamKinesisStreamName** *(string) --*

          The name of the Amazon Kinesis data stream used for the database activity stream.

        - **CopyTagsToSnapshot** *(boolean) --*

          Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

        - **CrossAccountClone** *(boolean) --*

          Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
          account.
    """


_ClientDescribeDbEngineVersionsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbEngineVersionsFiltersTypeDef(
    _ClientDescribeDbEngineVersionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersions` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbEngineVersionsResponseDBEngineVersionsDefaultCharacterSetTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsResponseDBEngineVersionsDefaultCharacterSetTypeDef",
    {"CharacterSetName": str, "CharacterSetDescription": str},
    total=False,
)


class ClientDescribeDbEngineVersionsResponseDBEngineVersionsDefaultCharacterSetTypeDef(
    _ClientDescribeDbEngineVersionsResponseDBEngineVersionsDefaultCharacterSetTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersionsResponseDBEngineVersions` `DefaultCharacterSet`

    The default character set for new instances of this engine version, if the
    ``CharacterSetName`` parameter of the CreateDBInstance API isn't specified.

    - **CharacterSetName** *(string) --*

      The name of the character set.

    - **CharacterSetDescription** *(string) --*

      The description of the character set.
    """


_ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedCharacterSetsTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedCharacterSetsTypeDef",
    {"CharacterSetName": str, "CharacterSetDescription": str},
    total=False,
)


class ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedCharacterSetsTypeDef(
    _ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedCharacterSetsTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersionsResponseDBEngineVersions` `SupportedCharacterSets`

    This data type is used as a response element in the action ``DescribeDBEngineVersions``
    .

    - **CharacterSetName** *(string) --*

      The name of the character set.

    - **CharacterSetDescription** *(string) --*

      The description of the character set.
    """


_ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedTimezonesTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedTimezonesTypeDef",
    {"TimezoneName": str},
    total=False,
)


class ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedTimezonesTypeDef(
    _ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedTimezonesTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersionsResponseDBEngineVersions` `SupportedTimezones`

    A time zone associated with a ``DBInstance`` or a ``DBSnapshot`` . This data type is an
    element in the response to the ``DescribeDBInstances`` , the ``DescribeDBSnapshots`` ,
    and the ``DescribeDBEngineVersions`` actions.

    - **TimezoneName** *(string) --*

      The name of the time zone.
    """


_ClientDescribeDbEngineVersionsResponseDBEngineVersionsValidUpgradeTargetTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsResponseDBEngineVersionsValidUpgradeTargetTypeDef",
    {
        "Engine": str,
        "EngineVersion": str,
        "Description": str,
        "AutoUpgrade": bool,
        "IsMajorVersionUpgrade": bool,
    },
    total=False,
)


class ClientDescribeDbEngineVersionsResponseDBEngineVersionsValidUpgradeTargetTypeDef(
    _ClientDescribeDbEngineVersionsResponseDBEngineVersionsValidUpgradeTargetTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersionsResponseDBEngineVersions` `ValidUpgradeTarget`

    The version of the database engine that a DB instance can be upgraded to.

    - **Engine** *(string) --*

      The name of the upgrade target database engine.

    - **EngineVersion** *(string) --*

      The version number of the upgrade target database engine.

    - **Description** *(string) --*

      The version of the database engine that a DB instance can be upgraded to.

    - **AutoUpgrade** *(boolean) --*

      A value that indicates whether the target version is applied to any source DB
      instances that have ``AutoMinorVersionUpgrade`` set to true.

    - **IsMajorVersionUpgrade** *(boolean) --*

      A value that indicates whether a database engine is upgraded to a major version.
    """


_ClientDescribeDbEngineVersionsResponseDBEngineVersionsTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsResponseDBEngineVersionsTypeDef",
    {
        "Engine": str,
        "EngineVersion": str,
        "DBParameterGroupFamily": str,
        "DBEngineDescription": str,
        "DBEngineVersionDescription": str,
        "DefaultCharacterSet": ClientDescribeDbEngineVersionsResponseDBEngineVersionsDefaultCharacterSetTypeDef,
        "SupportedCharacterSets": List[
            ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedCharacterSetsTypeDef
        ],
        "ValidUpgradeTarget": List[
            ClientDescribeDbEngineVersionsResponseDBEngineVersionsValidUpgradeTargetTypeDef
        ],
        "SupportedTimezones": List[
            ClientDescribeDbEngineVersionsResponseDBEngineVersionsSupportedTimezonesTypeDef
        ],
        "ExportableLogTypes": List[str],
        "SupportsLogExportsToCloudwatchLogs": bool,
        "SupportsReadReplica": bool,
        "SupportedEngineModes": List[str],
        "SupportedFeatureNames": List[str],
        "Status": str,
    },
    total=False,
)


class ClientDescribeDbEngineVersionsResponseDBEngineVersionsTypeDef(
    _ClientDescribeDbEngineVersionsResponseDBEngineVersionsTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersionsResponse` `DBEngineVersions`

    This data type is used as a response element in the action ``DescribeDBEngineVersions`` .

    - **Engine** *(string) --*

      The name of the database engine.

    - **EngineVersion** *(string) --*

      The version number of the database engine.

    - **DBParameterGroupFamily** *(string) --*

      The name of the DB parameter group family for the database engine.

    - **DBEngineDescription** *(string) --*

      The description of the database engine.

    - **DBEngineVersionDescription** *(string) --*

      The description of the database engine version.

    - **DefaultCharacterSet** *(dict) --*

      The default character set for new instances of this engine version, if the
      ``CharacterSetName`` parameter of the CreateDBInstance API isn't specified.

      - **CharacterSetName** *(string) --*

        The name of the character set.

      - **CharacterSetDescription** *(string) --*

        The description of the character set.

    - **SupportedCharacterSets** *(list) --*

      A list of the character sets supported by this engine for the ``CharacterSetName``
      parameter of the ``CreateDBInstance`` action.

      - *(dict) --*

        This data type is used as a response element in the action ``DescribeDBEngineVersions``
        .

        - **CharacterSetName** *(string) --*

          The name of the character set.

        - **CharacterSetDescription** *(string) --*

          The description of the character set.

    - **ValidUpgradeTarget** *(list) --*

      A list of engine versions that this database engine version can be upgraded to.

      - *(dict) --*

        The version of the database engine that a DB instance can be upgraded to.

        - **Engine** *(string) --*

          The name of the upgrade target database engine.

        - **EngineVersion** *(string) --*

          The version number of the upgrade target database engine.

        - **Description** *(string) --*

          The version of the database engine that a DB instance can be upgraded to.

        - **AutoUpgrade** *(boolean) --*

          A value that indicates whether the target version is applied to any source DB
          instances that have ``AutoMinorVersionUpgrade`` set to true.

        - **IsMajorVersionUpgrade** *(boolean) --*

          A value that indicates whether a database engine is upgraded to a major version.

    - **SupportedTimezones** *(list) --*

      A list of the time zones supported by this engine for the ``Timezone`` parameter of the
      ``CreateDBInstance`` action.

      - *(dict) --*

        A time zone associated with a ``DBInstance`` or a ``DBSnapshot`` . This data type is an
        element in the response to the ``DescribeDBInstances`` , the ``DescribeDBSnapshots`` ,
        and the ``DescribeDBEngineVersions`` actions.

        - **TimezoneName** *(string) --*

          The name of the time zone.

    - **ExportableLogTypes** *(list) --*

      The types of logs that the database engine has available for export to CloudWatch Logs.

      - *(string) --*

    - **SupportsLogExportsToCloudwatchLogs** *(boolean) --*

      A value that indicates whether the engine version supports exporting the log types
      specified by ExportableLogTypes to CloudWatch Logs.

    - **SupportsReadReplica** *(boolean) --*

      Indicates whether the database engine version supports Read Replicas.

    - **SupportedEngineModes** *(list) --*

      A list of the supported DB engine modes.

      - *(string) --*

    - **SupportedFeatureNames** *(list) --*

      A list of features supported by the DB engine. Supported feature names include the
      following.

      * s3Import

      - *(string) --*

    - **Status** *(string) --*

      The status of the DB engine version, either ``available`` or ``deprecated`` .
    """


_ClientDescribeDbEngineVersionsResponseTypeDef = TypedDict(
    "_ClientDescribeDbEngineVersionsResponseTypeDef",
    {
        "Marker": str,
        "DBEngineVersions": List[
            ClientDescribeDbEngineVersionsResponseDBEngineVersionsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbEngineVersionsResponseTypeDef(
    _ClientDescribeDbEngineVersionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbEngineVersions` `Response`

    Contains the result of a successful invocation of the ``DescribeDBEngineVersions`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBEngineVersions** *(list) --*

      A list of ``DBEngineVersion`` elements.

      - *(dict) --*

        This data type is used as a response element in the action ``DescribeDBEngineVersions`` .

        - **Engine** *(string) --*

          The name of the database engine.

        - **EngineVersion** *(string) --*

          The version number of the database engine.

        - **DBParameterGroupFamily** *(string) --*

          The name of the DB parameter group family for the database engine.

        - **DBEngineDescription** *(string) --*

          The description of the database engine.

        - **DBEngineVersionDescription** *(string) --*

          The description of the database engine version.

        - **DefaultCharacterSet** *(dict) --*

          The default character set for new instances of this engine version, if the
          ``CharacterSetName`` parameter of the CreateDBInstance API isn't specified.

          - **CharacterSetName** *(string) --*

            The name of the character set.

          - **CharacterSetDescription** *(string) --*

            The description of the character set.

        - **SupportedCharacterSets** *(list) --*

          A list of the character sets supported by this engine for the ``CharacterSetName``
          parameter of the ``CreateDBInstance`` action.

          - *(dict) --*

            This data type is used as a response element in the action ``DescribeDBEngineVersions``
            .

            - **CharacterSetName** *(string) --*

              The name of the character set.

            - **CharacterSetDescription** *(string) --*

              The description of the character set.

        - **ValidUpgradeTarget** *(list) --*

          A list of engine versions that this database engine version can be upgraded to.

          - *(dict) --*

            The version of the database engine that a DB instance can be upgraded to.

            - **Engine** *(string) --*

              The name of the upgrade target database engine.

            - **EngineVersion** *(string) --*

              The version number of the upgrade target database engine.

            - **Description** *(string) --*

              The version of the database engine that a DB instance can be upgraded to.

            - **AutoUpgrade** *(boolean) --*

              A value that indicates whether the target version is applied to any source DB
              instances that have ``AutoMinorVersionUpgrade`` set to true.

            - **IsMajorVersionUpgrade** *(boolean) --*

              A value that indicates whether a database engine is upgraded to a major version.

        - **SupportedTimezones** *(list) --*

          A list of the time zones supported by this engine for the ``Timezone`` parameter of the
          ``CreateDBInstance`` action.

          - *(dict) --*

            A time zone associated with a ``DBInstance`` or a ``DBSnapshot`` . This data type is an
            element in the response to the ``DescribeDBInstances`` , the ``DescribeDBSnapshots`` ,
            and the ``DescribeDBEngineVersions`` actions.

            - **TimezoneName** *(string) --*

              The name of the time zone.

        - **ExportableLogTypes** *(list) --*

          The types of logs that the database engine has available for export to CloudWatch Logs.

          - *(string) --*

        - **SupportsLogExportsToCloudwatchLogs** *(boolean) --*

          A value that indicates whether the engine version supports exporting the log types
          specified by ExportableLogTypes to CloudWatch Logs.

        - **SupportsReadReplica** *(boolean) --*

          Indicates whether the database engine version supports Read Replicas.

        - **SupportedEngineModes** *(list) --*

          A list of the supported DB engine modes.

          - *(string) --*

        - **SupportedFeatureNames** *(list) --*

          A list of features supported by the DB engine. Supported feature names include the
          following.

          * s3Import

          - *(string) --*

        - **Status** *(string) --*

          The status of the DB engine version, either ``available`` or ``deprecated`` .
    """


_ClientDescribeDbInstanceAutomatedBackupsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbInstanceAutomatedBackupsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeDbInstanceAutomatedBackupsFiltersTypeDef(
    _ClientDescribeDbInstanceAutomatedBackupsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbInstanceAutomatedBackups` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef = TypedDict(
    "_ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef",
    {"EarliestTime": datetime, "LatestTime": datetime},
    total=False,
)


class ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef(
    _ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef
):
    """
    Type definition for `ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackups` `RestoreWindow`

    Earliest and latest time an instance can be restored to.

    - **EarliestTime** *(datetime) --*

      The earliest time you can restore an instance to.

    - **LatestTime** *(datetime) --*

      The latest time you can restore an instance to.
    """


_ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsTypeDef = TypedDict(
    "_ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsTypeDef",
    {
        "DBInstanceArn": str,
        "DbiResourceId": str,
        "Region": str,
        "DBInstanceIdentifier": str,
        "RestoreWindow": ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "Engine": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupName": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "StorageType": str,
        "KmsKeyId": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsTypeDef(
    _ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstanceAutomatedBackupsResponse` `DBInstanceAutomatedBackups`

    An automated backup of a DB instance. It it consists of system backups, transaction logs,
    and the database instance properties that existed at the time you deleted the source
    instance.

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the automated backup.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to
      an AWS Region.

    - **Region** *(string) --*

      The AWS Region associated with the automated backup.

    - **DBInstanceIdentifier** *(string) --*

      The customer id of the instance that is/was associated with the automated backup.

    - **RestoreWindow** *(dict) --*

      Earliest and latest time an instance can be restored to.

      - **EarliestTime** *(datetime) --*

        The earliest time you can restore an instance to.

      - **LatestTime** *(datetime) --*

        The latest time you can restore an instance to.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Provides a list of status information for an automated backup:

      * ``active`` - automated backups for current instances

      * ``retained`` - automated backups for deleted instances

      * ``creating`` - automated backups that are waiting for the first automated snapshot to
      be available.

    - **Port** *(integer) --*

      The port number that the automated backup used for connections.

      Default: Inherits from the source DB instance

      Valid Values: ``1150-65535``

    - **AvailabilityZone** *(string) --*

      The Availability Zone that the automated backup was created in. For information on AWS
      Regions and Availability Zones, see `Regions and Availability Zones
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html>`__
      .

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB instance

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time that the DB instance was created.

    - **MasterUsername** *(string) --*

      The license model of an automated backup.

    - **Engine** *(string) --*

      The name of the database engine for this automated backup.

    - **EngineVersion** *(string) --*

      The version of the database engine for the automated backup.

    - **LicenseModel** *(string) --*

      License model information for the automated backup.

    - **Iops** *(integer) --*

      The IOPS (I/O operations per second) value for the automated backup.

    - **OptionGroupName** *(string) --*

      The option group the automated backup is associated with. If omitted, the default option
      group for the engine specified is used.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the automated backup is associated for TDE
      encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the automated backup is encrypted.

    - **StorageType** *(string) --*

      Specifies the storage type associated with the automated backup.

    - **KmsKeyId** *(string) --*

      The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name
      (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

    - **Timezone** *(string) --*

      The time zone of the automated backup. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_ClientDescribeDbInstanceAutomatedBackupsResponseTypeDef = TypedDict(
    "_ClientDescribeDbInstanceAutomatedBackupsResponseTypeDef",
    {
        "Marker": str,
        "DBInstanceAutomatedBackups": List[
            ClientDescribeDbInstanceAutomatedBackupsResponseDBInstanceAutomatedBackupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbInstanceAutomatedBackupsResponseTypeDef(
    _ClientDescribeDbInstanceAutomatedBackupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbInstanceAutomatedBackups` `Response`

    Contains the result of a successful invocation of the ``DescribeDBInstanceAutomatedBackups``
    action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBInstanceAutomatedBackups** *(list) --*

      A list of ``DBInstanceAutomatedBackup`` instances.

      - *(dict) --*

        An automated backup of a DB instance. It it consists of system backups, transaction logs,
        and the database instance properties that existed at the time you deleted the source
        instance.

        - **DBInstanceArn** *(string) --*

          The Amazon Resource Name (ARN) for the automated backup.

        - **DbiResourceId** *(string) --*

          The identifier for the source DB instance, which can't be changed and which is unique to
          an AWS Region.

        - **Region** *(string) --*

          The AWS Region associated with the automated backup.

        - **DBInstanceIdentifier** *(string) --*

          The customer id of the instance that is/was associated with the automated backup.

        - **RestoreWindow** *(dict) --*

          Earliest and latest time an instance can be restored to.

          - **EarliestTime** *(datetime) --*

            The earliest time you can restore an instance to.

          - **LatestTime** *(datetime) --*

            The latest time you can restore an instance to.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size in gibibytes (GiB).

        - **Status** *(string) --*

          Provides a list of status information for an automated backup:

          * ``active`` - automated backups for current instances

          * ``retained`` - automated backups for deleted instances

          * ``creating`` - automated backups that are waiting for the first automated snapshot to
          be available.

        - **Port** *(integer) --*

          The port number that the automated backup used for connections.

          Default: Inherits from the source DB instance

          Valid Values: ``1150-65535``

        - **AvailabilityZone** *(string) --*

          The Availability Zone that the automated backup was created in. For information on AWS
          Regions and Availability Zones, see `Regions and Availability Zones
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html>`__
          .

        - **VpcId** *(string) --*

          Provides the VPC ID associated with the DB instance

        - **InstanceCreateTime** *(datetime) --*

          Provides the date and time that the DB instance was created.

        - **MasterUsername** *(string) --*

          The license model of an automated backup.

        - **Engine** *(string) --*

          The name of the database engine for this automated backup.

        - **EngineVersion** *(string) --*

          The version of the database engine for the automated backup.

        - **LicenseModel** *(string) --*

          License model information for the automated backup.

        - **Iops** *(integer) --*

          The IOPS (I/O operations per second) value for the automated backup.

        - **OptionGroupName** *(string) --*

          The option group the automated backup is associated with. If omitted, the default option
          group for the engine specified is used.

        - **TdeCredentialArn** *(string) --*

          The ARN from the key store with which the automated backup is associated for TDE
          encryption.

        - **Encrypted** *(boolean) --*

          Specifies whether the automated backup is encrypted.

        - **StorageType** *(string) --*

          Specifies the storage type associated with the automated backup.

        - **KmsKeyId** *(string) --*

          The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name
          (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

        - **Timezone** *(string) --*

          The time zone of the automated backup. In most cases, the ``Timezone`` element is empty.
          ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
          with a time zone specified.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.
    """


_ClientDescribeDbInstancesFiltersTypeDef = TypedDict(
    "_ClientDescribeDbInstancesFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbInstancesFiltersTypeDef(_ClientDescribeDbInstancesFiltersTypeDef):
    """
    Type definition for `ClientDescribeDbInstances` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbInstancesResponseDBInstancesAssociatedRolesTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesAssociatedRolesTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesAssociatedRolesTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB
      instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The
      Status property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on
      your behalf.
    """


_ClientDescribeDbInstancesResponseDBInstancesDBParameterGroupsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesDBParameterGroupsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientDescribeDbInstancesResponseDBInstancesDBSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesDBSecurityGroupsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientDescribeDbInstancesResponseDBInstancesDomainMembershipsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesDomainMembershipsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesDomainMembershipsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientDescribeDbInstancesResponseDBInstancesEndpointTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesEndpointTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesEndpointTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientDescribeDbInstancesResponseDBInstancesListenerEndpointTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesListenerEndpointTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesListenerEndpointTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientDescribeDbInstancesResponseDBInstancesOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesOptionGroupMembershipsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are:
      ``in-sync`` , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply``
      , ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the
    ``Name`` parameter. To specify the number of threads per core, use the
    ``threadsPerCore`` feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when
    you call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling
    the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
    for the ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or
      is currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the
      DB instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or
      is currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the
        ``Name`` parameter. To specify the number of threads per core, use the
        ``threadsPerCore`` feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when
        you call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling
        the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
        for the ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientDescribeDbInstancesResponseDBInstancesProcessorFeaturesTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesProcessorFeaturesTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientDescribeDbInstancesResponseDBInstancesStatusInfosTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesStatusInfosTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesStatusInfosTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in
      an error state, this value is blank.
    """


_ClientDescribeDbInstancesResponseDBInstancesVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesVpcSecurityGroupsTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponseDBInstances` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDescribeDbInstancesResponseDBInstancesTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseDBInstancesTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientDescribeDbInstancesResponseDBInstancesEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientDescribeDbInstancesResponseDBInstancesDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientDescribeDbInstancesResponseDBInstancesVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientDescribeDbInstancesResponseDBInstancesDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientDescribeDbInstancesResponseDBInstancesDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientDescribeDbInstancesResponseDBInstancesPendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientDescribeDbInstancesResponseDBInstancesOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            ClientDescribeDbInstancesResponseDBInstancesStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientDescribeDbInstancesResponseDBInstancesDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientDescribeDbInstancesResponseDBInstancesProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientDescribeDbInstancesResponseDBInstancesAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientDescribeDbInstancesResponseDBInstancesListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientDescribeDbInstancesResponseDBInstancesTypeDef(
    _ClientDescribeDbInstancesResponseDBInstancesTypeDef
):
    """
    Type definition for `ClientDescribeDbInstancesResponse` `DBInstances`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned
      for the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the
      returned parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or
        is currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the
        DB instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or
        is currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the
          ``Name`` parameter. To specify the number of threads per core, use the
          ``threadsPerCore`` feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when
          you call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling
          the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
          for the ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an
      RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown.
      This output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are:
          ``in-sync`` , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply``
          , ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public
      IP address. A value of false specifies an internal instance with a DNS name that resolves
      to a private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in
          an error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this
      value for an Aurora DB instance has no effect on the DB cluster setting. For more
      information, see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected
      for the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or
      731 (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be
      deleted when deletion protection is enabled. For more information, see `Deleting a DB
      Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB
          instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The
          Status property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on
          your behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB
      instance.
    """


_ClientDescribeDbInstancesResponseTypeDef = TypedDict(
    "_ClientDescribeDbInstancesResponseTypeDef",
    {
        "Marker": str,
        "DBInstances": List[ClientDescribeDbInstancesResponseDBInstancesTypeDef],
    },
    total=False,
)


class ClientDescribeDbInstancesResponseTypeDef(
    _ClientDescribeDbInstancesResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbInstances` `Response`

    Contains the result of a successful invocation of the ``DescribeDBInstances`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBInstances** *(list) --*

      A list of ``DBInstance`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB instance.

        This data type is used as a response element in the ``DescribeDBInstances`` action.

        - **DBInstanceIdentifier** *(string) --*

          Contains a user-supplied database identifier. This identifier is the unique key that
          identifies a DB instance.

        - **DBInstanceClass** *(string) --*

          Contains the name of the compute and memory capacity class of the DB instance.

        - **Engine** *(string) --*

          Provides the name of the database engine to be used for this DB instance.

        - **DBInstanceStatus** *(string) --*

          Specifies the current state of this database.

        - **MasterUsername** *(string) --*

          Contains the master username for the DB instance.

        - **DBName** *(string) --*

          The meaning of this parameter differs according to the database engine you use.

           **MySQL, MariaDB, SQL Server, PostgreSQL**

          Contains the name of the initial database of this instance that was provided at create
          time, if one was specified when the DB instance was created. This same name is returned
          for the life of the DB instance.

          Type: String

           **Oracle**

          Contains the Oracle System ID (SID) of the created DB instance. Not shown when the
          returned parameters do not apply to an Oracle DB instance.

        - **Endpoint** *(dict) --*

          Specifies the connection endpoint.

          - **Address** *(string) --*

            Specifies the DNS address of the DB instance.

          - **Port** *(integer) --*

            Specifies the port that the database engine is listening on.

          - **HostedZoneId** *(string) --*

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size specified in gibibytes.

        - **InstanceCreateTime** *(datetime) --*

          Provides the date and time the DB instance was created.

        - **PreferredBackupWindow** *(string) --*

          Specifies the daily time range during which automated backups are created if automated
          backups are enabled, as determined by the ``BackupRetentionPeriod`` .

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the number of days for which automatic DB snapshots are retained.

        - **DBSecurityGroups** *(list) --*

          A list of DB security group elements containing ``DBSecurityGroup.Name`` and
          ``DBSecurityGroup.Status`` subelements.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroups** *(list) --*

          Provides a list of VPC security group elements that the DB instance belongs to.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

        - **DBParameterGroups** *(list) --*

          Provides the list of DB parameter groups applied to this DB instance.

          - *(dict) --*

            The status of the DB parameter group.

            This data type is used as a response element in the following actions:

            * ``CreateDBInstance``

            * ``CreateDBInstanceReadReplica``

            * ``DeleteDBInstance``

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            - **DBParameterGroupName** *(string) --*

              The name of the DB parameter group.

            - **ParameterApplyStatus** *(string) --*

              The status of parameter updates.

        - **AvailabilityZone** *(string) --*

          Specifies the name of the Availability Zone the DB instance is located in.

        - **DBSubnetGroup** *(dict) --*

          Specifies information on the subnet group associated with the DB instance, including the
          name, description, and subnets in the subnet group.

          - **DBSubnetGroupName** *(string) --*

            The name of the DB subnet group.

          - **DBSubnetGroupDescription** *(string) --*

            Provides the description of the DB subnet group.

          - **VpcId** *(string) --*

            Provides the VpcId of the DB subnet group.

          - **SubnetGroupStatus** *(string) --*

            Provides the status of the DB subnet group.

          - **Subnets** *(list) --*

            Contains a list of ``Subnet`` elements.

            - *(dict) --*

              This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

              - **SubnetIdentifier** *(string) --*

                Specifies the identifier of the subnet.

              - **SubnetAvailabilityZone** *(dict) --*

                Contains Availability Zone information.

                This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

                - **Name** *(string) --*

                  The name of the Availability Zone.

              - **SubnetStatus** *(string) --*

                Specifies the status of the subnet.

          - **DBSubnetGroupArn** *(string) --*

            The Amazon Resource Name (ARN) for the DB subnet group.

        - **PreferredMaintenanceWindow** *(string) --*

          Specifies the weekly time range during which system maintenance can occur, in Universal
          Coordinated Time (UTC).

        - **PendingModifiedValues** *(dict) --*

          Specifies that changes to the DB instance are pending. This element is only included when
          changes are pending. Specific changes are identified by subelements.

          - **DBInstanceClass** *(string) --*

            Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
            currently being applied.

          - **AllocatedStorage** *(integer) --*

            Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or
            is currently being applied.

          - **MasterUserPassword** *(string) --*

            Contains the pending or currently-in-progress change of the master credentials for the
            DB instance.

          - **Port** *(integer) --*

            Specifies the pending port for the DB instance.

          - **BackupRetentionPeriod** *(integer) --*

            Specifies the pending number of days for which automated backups are retained.

          - **MultiAZ** *(boolean) --*

            Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

          - **EngineVersion** *(string) --*

            Indicates the database engine version.

          - **LicenseModel** *(string) --*

            The license model for the DB instance.

            Valid values: ``license-included`` | ``bring-your-own-license`` |
            ``general-public-license``

          - **Iops** *(integer) --*

            Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
            currently being applied.

          - **DBInstanceIdentifier** *(string) --*

            Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or
            is currently being applied.

          - **StorageType** *(string) --*

            Specifies the storage type to be associated with the DB instance.

          - **CACertificateIdentifier** *(string) --*

            Specifies the identifier of the CA certificate for the DB instance.

          - **DBSubnetGroupName** *(string) --*

            The new DB subnet group for the DB instance.

          - **PendingCloudwatchLogsExports** *(dict) --*

            A list of the log types whose configuration is still pending. In other words, these log
            types are in the process of being activated or deactivated.

            - **LogTypesToEnable** *(list) --*

              Log types that are in the process of being deactivated. After they are deactivated,
              these log types aren't exported to CloudWatch Logs.

              - *(string) --*

            - **LogTypesToDisable** *(list) --*

              Log types that are in the process of being enabled. After they are enabled, these log
              types are exported to CloudWatch Logs.

              - *(string) --*

          - **ProcessorFeatures** *(list) --*

            The number of CPU cores and the number of threads per core for the DB instance class of
            the DB instance.

            - *(dict) --*

              Contains the processor features of a DB instance class.

              To specify the number of CPU cores, use the ``coreCount`` feature name for the
              ``Name`` parameter. To specify the number of threads per core, use the
              ``threadsPerCore`` feature name for the ``Name`` parameter.

              You can set the processor features of the DB instance class for a DB instance when
              you call one of the following actions:

              * ``CreateDBInstance``

              * ``ModifyDBInstance``

              * ``RestoreDBInstanceFromDBSnapshot``

              * ``RestoreDBInstanceFromS3``

              * ``RestoreDBInstanceToPointInTime``

              You can view the valid processor values for a particular instance class by calling
              the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
              for the ``DBInstanceClass`` parameter.

              In addition, you can use the following actions for DB instance class processor
              information:

              * ``DescribeDBInstances``

              * ``DescribeDBSnapshots``

              * ``DescribeValidDBInstanceModifications``

              For more information, see `Configuring the Processor of the DB Instance Class
              <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
              in the *Amazon RDS User Guide.*

              - **Name** *(string) --*

                The name of the processor feature. Valid names are ``coreCount`` and
                ``threadsPerCore`` .

              - **Value** *(string) --*

                The value of a processor feature name.

        - **LatestRestorableTime** *(datetime) --*

          Specifies the latest time to which a database can be restored with point-in-time restore.

        - **MultiAZ** *(boolean) --*

          Specifies if the DB instance is a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **AutoMinorVersionUpgrade** *(boolean) --*

          Indicates that minor version patches are applied automatically.

        - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

          Contains the identifier of the source DB instance if this DB instance is a Read Replica.

        - **ReadReplicaDBInstanceIdentifiers** *(list) --*

          Contains one or more identifiers of the Read Replicas associated with this DB instance.

          - *(string) --*

        - **ReadReplicaDBClusterIdentifiers** *(list) --*

          Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
          replicated as a Read Replica. For example, when you create an Aurora Read Replica of an
          RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown.
          This output does not contain information about cross region Aurora Read Replicas.

          .. note::

            Currently, each RDS DB instance can have only one Aurora Read Replica.

          - *(string) --*

        - **LicenseModel** *(string) --*

          License model information for this DB instance.

        - **Iops** *(integer) --*

          Specifies the Provisioned IOPS (I/O operations per second) value.

        - **OptionGroupMemberships** *(list) --*

          Provides the list of option group memberships for this DB instance.

          - *(dict) --*

            Provides information on the option groups the DB instance is a member of.

            - **OptionGroupName** *(string) --*

              The name of the option group that the instance belongs to.

            - **Status** *(string) --*

              The status of the DB instance's option group membership. Valid values are:
              ``in-sync`` , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply``
              , ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

        - **CharacterSetName** *(string) --*

          If present, specifies the name of the character set that this instance is associated with.

        - **SecondaryAvailabilityZone** *(string) --*

          If present, specifies the name of the secondary Availability Zone for a DB instance with
          multi-AZ support.

        - **PubliclyAccessible** *(boolean) --*

          Specifies the accessibility options for the DB instance. A value of true specifies an
          Internet-facing instance with a publicly resolvable DNS name, which resolves to a public
          IP address. A value of false specifies an internal instance with a DNS name that resolves
          to a private IP address.

        - **StatusInfos** *(list) --*

          The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

          - *(dict) --*

            Provides a list of status information for a DB instance.

            - **StatusType** *(string) --*

              This value is currently "read replication."

            - **Normal** *(boolean) --*

              Boolean value that is true if the instance is operating normally, or false if the
              instance is in an error state.

            - **Status** *(string) --*

              Status of the DB instance. For a StatusType of Read Replica, the values can be
              replicating, replication stop point set, replication stop point reached, error,
              stopped, or terminated.

            - **Message** *(string) --*

              Details of the error if there is an error for the instance. If the instance isn't in
              an error state, this value is blank.

        - **StorageType** *(string) --*

          Specifies the storage type associated with DB instance.

        - **TdeCredentialArn** *(string) --*

          The ARN from the key store with which the instance is associated for TDE encryption.

        - **DbInstancePort** *(integer) --*

          Specifies the port that the DB instance listens on. If the DB instance is part of a DB
          cluster, this can be a different port than the DB cluster port.

        - **DBClusterIdentifier** *(string) --*

          If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
          the DB instance is a member of.

        - **StorageEncrypted** *(boolean) --*

          Specifies whether the DB instance is encrypted.

        - **KmsKeyId** *(string) --*

          If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

        - **DbiResourceId** *(string) --*

          The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
          in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

        - **CACertificateIdentifier** *(string) --*

          The identifier of the CA certificate for this DB instance.

        - **DomainMemberships** *(list) --*

          The Active Directory Domain membership records associated with the DB instance.

          - *(dict) --*

            An Active Directory Domain membership record associated with the DB instance.

            - **Domain** *(string) --*

              The identifier of the Active Directory Domain.

            - **Status** *(string) --*

              The status of the DB instance's Active Directory Domain membership, such as joined,
              pending-join, failed etc).

            - **FQDN** *(string) --*

              The fully qualified domain name of the Active Directory Domain.

            - **IAMRoleName** *(string) --*

              The name of the IAM role to be used when making API calls to the Directory Service.

        - **CopyTagsToSnapshot** *(boolean) --*

          Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

           **Amazon Aurora**

          Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this
          value for an Aurora DB instance has no effect on the DB cluster setting. For more
          information, see ``DBCluster`` .

        - **MonitoringInterval** *(integer) --*

          The interval, in seconds, between points when Enhanced Monitoring metrics are collected
          for the DB instance.

        - **EnhancedMonitoringResourceArn** *(string) --*

          The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
          Enhanced Monitoring metrics data for the DB instance.

        - **MonitoringRoleArn** *(string) --*

          The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
          CloudWatch Logs.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

        - **DBInstanceArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB instance.

        - **Timezone** *(string) --*

          The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
          ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
          with a time zone specified.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.

          IAM database authentication can be enabled for the following database engines

          * For MySQL 5.6, minor version 5.6.34 or higher

          * For MySQL 5.7, minor version 5.7.16 or higher

          * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
          Type.

        - **PerformanceInsightsEnabled** *(boolean) --*

          True if Performance Insights is enabled for the DB instance, and otherwise false.

        - **PerformanceInsightsKMSKeyId** *(string) --*

          The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
          the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
          encryption key.

        - **PerformanceInsightsRetentionPeriod** *(integer) --*

          The amount of time, in days, to retain Performance Insights data. Valid values are 7 or
          731 (2 years).

        - **EnabledCloudwatchLogsExports** *(list) --*

          A list of log types that this DB instance is configured to export to CloudWatch Logs.

          Log types vary by DB engine. For information about the log types for each DB engine, see
          `Amazon RDS Database Log Files
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
          *Amazon RDS User Guide.*

          - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

        - **DeletionProtection** *(boolean) --*

          Indicates if the DB instance has deletion protection enabled. The database can't be
          deleted when deletion protection is enabled. For more information, see `Deleting a DB
          Instance
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

        - **AssociatedRoles** *(list) --*

          The AWS Identity and Access Management (IAM) roles associated with the DB instance.

          - *(dict) --*

            Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
            instance.

            - **RoleArn** *(string) --*

              The Amazon Resource Name (ARN) of the IAM role that is associated with the DB
              instance.

            - **FeatureName** *(string) --*

              The name of the feature associated with the AWS Identity and Access Management (IAM)
              role. For the list of supported feature names, see ``DBEngineVersion`` .

            - **Status** *(string) --*

              Describes the state of association between the IAM role and the DB instance. The
              Status property returns one of the following values:

              * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
              access other AWS services on your behalf.

              * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

              * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
              instance is unable to assume the IAM role in order to access other AWS services on
              your behalf.

        - **ListenerEndpoint** *(dict) --*

          Specifies the listener connection endpoint for SQL Server Always On.

          - **Address** *(string) --*

            Specifies the DNS address of the DB instance.

          - **Port** *(integer) --*

            Specifies the port that the database engine is listening on.

          - **HostedZoneId** *(string) --*

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

        - **MaxAllocatedStorage** *(integer) --*

          The upper limit to which Amazon RDS can automatically scale the storage of the DB
          instance.
    """


_ClientDescribeDbLogFilesFiltersTypeDef = TypedDict(
    "_ClientDescribeDbLogFilesFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbLogFilesFiltersTypeDef(_ClientDescribeDbLogFilesFiltersTypeDef):
    """
    Type definition for `ClientDescribeDbLogFiles` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbLogFilesResponseDescribeDBLogFilesTypeDef = TypedDict(
    "_ClientDescribeDbLogFilesResponseDescribeDBLogFilesTypeDef",
    {"LogFileName": str, "LastWritten": int, "Size": int},
    total=False,
)


class ClientDescribeDbLogFilesResponseDescribeDBLogFilesTypeDef(
    _ClientDescribeDbLogFilesResponseDescribeDBLogFilesTypeDef
):
    """
    Type definition for `ClientDescribeDbLogFilesResponse` `DescribeDBLogFiles`

    This data type is used as a response element to ``DescribeDBLogFiles`` .

    - **LogFileName** *(string) --*

      The name of the log file for the specified DB instance.

    - **LastWritten** *(integer) --*

      A POSIX timestamp when the last log entry was written.

    - **Size** *(integer) --*

      The size, in bytes, of the log file for the specified DB instance.
    """


_ClientDescribeDbLogFilesResponseTypeDef = TypedDict(
    "_ClientDescribeDbLogFilesResponseTypeDef",
    {
        "DescribeDBLogFiles": List[
            ClientDescribeDbLogFilesResponseDescribeDBLogFilesTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeDbLogFilesResponseTypeDef(_ClientDescribeDbLogFilesResponseTypeDef):
    """
    Type definition for `ClientDescribeDbLogFiles` `Response`

    The response from a call to ``DescribeDBLogFiles`` .

    - **DescribeDBLogFiles** *(list) --*

      The DB log files returned.

      - *(dict) --*

        This data type is used as a response element to ``DescribeDBLogFiles`` .

        - **LogFileName** *(string) --*

          The name of the log file for the specified DB instance.

        - **LastWritten** *(integer) --*

          A POSIX timestamp when the last log entry was written.

        - **Size** *(integer) --*

          The size, in bytes, of the log file for the specified DB instance.

    - **Marker** *(string) --*

      A pagination token that can be used in a subsequent DescribeDBLogFiles request.
    """


_ClientDescribeDbParameterGroupsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbParameterGroupsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbParameterGroupsFiltersTypeDef(
    _ClientDescribeDbParameterGroupsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbParameterGroups` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbParameterGroupsResponseDBParameterGroupsTypeDef = TypedDict(
    "_ClientDescribeDbParameterGroupsResponseDBParameterGroupsTypeDef",
    {
        "DBParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBParameterGroupArn": str,
    },
    total=False,
)


class ClientDescribeDbParameterGroupsResponseDBParameterGroupsTypeDef(
    _ClientDescribeDbParameterGroupsResponseDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbParameterGroupsResponse` `DBParameterGroups`

    Contains the details of an Amazon RDS DB parameter group.

    This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

    - **DBParameterGroupName** *(string) --*

      Provides the name of the DB parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB parameter group is
      compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB parameter group.

    - **DBParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB parameter group.
    """


_ClientDescribeDbParameterGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeDbParameterGroupsResponseTypeDef",
    {
        "Marker": str,
        "DBParameterGroups": List[
            ClientDescribeDbParameterGroupsResponseDBParameterGroupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbParameterGroupsResponseTypeDef(
    _ClientDescribeDbParameterGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbParameterGroups` `Response`

    Contains the result of a successful invocation of the ``DescribeDBParameterGroups`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBParameterGroups** *(list) --*

      A list of ``DBParameterGroup`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB parameter group.

        This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

        - **DBParameterGroupName** *(string) --*

          Provides the name of the DB parameter group.

        - **DBParameterGroupFamily** *(string) --*

          Provides the name of the DB parameter group family that this DB parameter group is
          compatible with.

        - **Description** *(string) --*

          Provides the customer-specified description for this DB parameter group.

        - **DBParameterGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB parameter group.
    """


_ClientDescribeDbParametersFiltersTypeDef = TypedDict(
    "_ClientDescribeDbParametersFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbParametersFiltersTypeDef(
    _ClientDescribeDbParametersFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbParameters` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbParametersResponseParametersTypeDef = TypedDict(
    "_ClientDescribeDbParametersResponseParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientDescribeDbParametersResponseParametersTypeDef(
    _ClientDescribeDbParametersResponseParametersTypeDef
):
    """
    Type definition for `ClientDescribeDbParametersResponse` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientDescribeDbParametersResponseTypeDef = TypedDict(
    "_ClientDescribeDbParametersResponseTypeDef",
    {
        "Parameters": List[ClientDescribeDbParametersResponseParametersTypeDef],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeDbParametersResponseTypeDef(
    _ClientDescribeDbParametersResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbParameters` `Response`

    Contains the result of a successful invocation of the ``DescribeDBParameters`` action.

    - **Parameters** *(list) --*

      A list of ``Parameter`` values.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
        ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .
    """


_ClientDescribeDbSecurityGroupsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbSecurityGroupsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbSecurityGroupsFiltersTypeDef(
    _ClientDescribeDbSecurityGroupsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbSecurityGroups` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupId": str,
        "EC2SecurityGroupOwnerId": str,
    },
    total=False,
)


class ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsEC2SecurityGroupsTypeDef(
    _ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbSecurityGroupsResponseDBSecurityGroups` `EC2SecurityGroups`

    This data type is used as a response element in the following actions:

    * ``AuthorizeDBSecurityGroupIngress``

    * ``DescribeDBSecurityGroups``

    * ``RevokeDBSecurityGroupIngress``

    - **Status** *(string) --*

      Provides the status of the EC2 security group. Status can be "authorizing",
      "authorized", "revoking", and "revoked".

    - **EC2SecurityGroupName** *(string) --*

      Specifies the name of the EC2 security group.

    - **EC2SecurityGroupId** *(string) --*

      Specifies the id of the EC2 security group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      Specifies the AWS ID of the owner of the EC2 security group specified in the
      ``EC2SecurityGroupName`` field.
    """


_ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsIPRangesTypeDef = TypedDict(
    "_ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsIPRangesTypeDef",
    {"Status": str, "CIDRIP": str},
    total=False,
)


class ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsIPRangesTypeDef(
    _ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsIPRangesTypeDef
):
    """
    Type definition for `ClientDescribeDbSecurityGroupsResponseDBSecurityGroups` `IPRanges`

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **Status** *(string) --*

      Specifies the status of the IP range. Status can be "authorizing", "authorized",
      "revoking", and "revoked".

    - **CIDRIP** *(string) --*

      Specifies the IP range.
    """


_ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsTypeDef",
    {
        "OwnerId": str,
        "DBSecurityGroupName": str,
        "DBSecurityGroupDescription": str,
        "VpcId": str,
        "EC2SecurityGroups": List[
            ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsIPRangesTypeDef
        ],
        "DBSecurityGroupArn": str,
    },
    total=False,
)


class ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsTypeDef(
    _ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbSecurityGroupsResponse` `DBSecurityGroups`

    Contains the details for an Amazon RDS DB security group.

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **OwnerId** *(string) --*

      Provides the AWS ID of the owner of a specific DB security group.

    - **DBSecurityGroupName** *(string) --*

      Specifies the name of the DB security group.

    - **DBSecurityGroupDescription** *(string) --*

      Provides the description of the DB security group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB security group.

    - **EC2SecurityGroups** *(list) --*

      Contains a list of ``EC2SecurityGroup`` elements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``AuthorizeDBSecurityGroupIngress``

        * ``DescribeDBSecurityGroups``

        * ``RevokeDBSecurityGroupIngress``

        - **Status** *(string) --*

          Provides the status of the EC2 security group. Status can be "authorizing",
          "authorized", "revoking", and "revoked".

        - **EC2SecurityGroupName** *(string) --*

          Specifies the name of the EC2 security group.

        - **EC2SecurityGroupId** *(string) --*

          Specifies the id of the EC2 security group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          Specifies the AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

    - **IPRanges** *(list) --*

      Contains a list of ``IPRange`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **Status** *(string) --*

          Specifies the status of the IP range. Status can be "authorizing", "authorized",
          "revoking", and "revoked".

        - **CIDRIP** *(string) --*

          Specifies the IP range.

    - **DBSecurityGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientDescribeDbSecurityGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeDbSecurityGroupsResponseTypeDef",
    {
        "Marker": str,
        "DBSecurityGroups": List[
            ClientDescribeDbSecurityGroupsResponseDBSecurityGroupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbSecurityGroupsResponseTypeDef(
    _ClientDescribeDbSecurityGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbSecurityGroups` `Response`

    Contains the result of a successful invocation of the ``DescribeDBSecurityGroups`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBSecurityGroups** *(list) --*

      A list of ``DBSecurityGroup`` instances.

      - *(dict) --*

        Contains the details for an Amazon RDS DB security group.

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **OwnerId** *(string) --*

          Provides the AWS ID of the owner of a specific DB security group.

        - **DBSecurityGroupName** *(string) --*

          Specifies the name of the DB security group.

        - **DBSecurityGroupDescription** *(string) --*

          Provides the description of the DB security group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB security group.

        - **EC2SecurityGroups** *(list) --*

          Contains a list of ``EC2SecurityGroup`` elements.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``AuthorizeDBSecurityGroupIngress``

            * ``DescribeDBSecurityGroups``

            * ``RevokeDBSecurityGroupIngress``

            - **Status** *(string) --*

              Provides the status of the EC2 security group. Status can be "authorizing",
              "authorized", "revoking", and "revoked".

            - **EC2SecurityGroupName** *(string) --*

              Specifies the name of the EC2 security group.

            - **EC2SecurityGroupId** *(string) --*

              Specifies the id of the EC2 security group.

            - **EC2SecurityGroupOwnerId** *(string) --*

              Specifies the AWS ID of the owner of the EC2 security group specified in the
              ``EC2SecurityGroupName`` field.

        - **IPRanges** *(list) --*

          Contains a list of ``IPRange`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

            - **Status** *(string) --*

              Specifies the status of the IP range. Status can be "authorizing", "authorized",
              "revoking", and "revoked".

            - **CIDRIP** *(string) --*

              Specifies the IP range.

        - **DBSecurityGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef",
    {"AttributeName": str, "AttributeValues": List[str]},
    total=False,
)


class ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef(
    _ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef
):
    """
    Type definition for `ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResult` `DBSnapshotAttributes`

    Contains the name and values of a manual DB snapshot attribute

    Manual DB snapshot attributes are used to authorize other AWS accounts to restore a
    manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API.

    - **AttributeName** *(string) --*

      The name of the manual DB snapshot attribute.

      The attribute named ``restore`` refers to the list of AWS accounts that have permission
      to copy or restore the manual DB cluster snapshot. For more information, see the
      ``ModifyDBSnapshotAttribute`` API action.

    - **AttributeValues** *(list) --*

      The value or values for the manual DB snapshot attribute.

      If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
      of IDs of the AWS accounts that are authorized to copy or restore the manual DB
      snapshot. If a value of ``all`` is in the list, then the manual DB snapshot is public
      and available for any AWS account to copy or restore.

      - *(string) --*
    """


_ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBSnapshotAttributes": List[
            ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultTypeDef(
    _ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultTypeDef
):
    """
    Type definition for `ClientDescribeDbSnapshotAttributesResponse` `DBSnapshotAttributesResult`

    Contains the results of a successful call to the ``DescribeDBSnapshotAttributes`` API action.

    Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a
    manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API action.

    - **DBSnapshotIdentifier** *(string) --*

      The identifier of the manual DB snapshot that the attributes apply to.

    - **DBSnapshotAttributes** *(list) --*

      The list of attributes and values for the manual DB snapshot.

      - *(dict) --*

        Contains the name and values of a manual DB snapshot attribute

        Manual DB snapshot attributes are used to authorize other AWS accounts to restore a
        manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API.

        - **AttributeName** *(string) --*

          The name of the manual DB snapshot attribute.

          The attribute named ``restore`` refers to the list of AWS accounts that have permission
          to copy or restore the manual DB cluster snapshot. For more information, see the
          ``ModifyDBSnapshotAttribute`` API action.

        - **AttributeValues** *(list) --*

          The value or values for the manual DB snapshot attribute.

          If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
          of IDs of the AWS accounts that are authorized to copy or restore the manual DB
          snapshot. If a value of ``all`` is in the list, then the manual DB snapshot is public
          and available for any AWS account to copy or restore.

          - *(string) --*
    """


_ClientDescribeDbSnapshotAttributesResponseTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotAttributesResponseTypeDef",
    {
        "DBSnapshotAttributesResult": ClientDescribeDbSnapshotAttributesResponseDBSnapshotAttributesResultTypeDef
    },
    total=False,
)


class ClientDescribeDbSnapshotAttributesResponseTypeDef(
    _ClientDescribeDbSnapshotAttributesResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbSnapshotAttributes` `Response`

    - **DBSnapshotAttributesResult** *(dict) --*

      Contains the results of a successful call to the ``DescribeDBSnapshotAttributes`` API action.

      Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a
      manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API action.

      - **DBSnapshotIdentifier** *(string) --*

        The identifier of the manual DB snapshot that the attributes apply to.

      - **DBSnapshotAttributes** *(list) --*

        The list of attributes and values for the manual DB snapshot.

        - *(dict) --*

          Contains the name and values of a manual DB snapshot attribute

          Manual DB snapshot attributes are used to authorize other AWS accounts to restore a
          manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API.

          - **AttributeName** *(string) --*

            The name of the manual DB snapshot attribute.

            The attribute named ``restore`` refers to the list of AWS accounts that have permission
            to copy or restore the manual DB cluster snapshot. For more information, see the
            ``ModifyDBSnapshotAttribute`` API action.

          - **AttributeValues** *(list) --*

            The value or values for the manual DB snapshot attribute.

            If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
            of IDs of the AWS accounts that are authorized to copy or restore the manual DB
            snapshot. If a value of ``all`` is in the list, then the manual DB snapshot is public
            and available for any AWS account to copy or restore.

            - *(string) --*
    """


_ClientDescribeDbSnapshotsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbSnapshotsFiltersTypeDef(_ClientDescribeDbSnapshotsFiltersTypeDef):
    """
    Type definition for `ClientDescribeDbSnapshots` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbSnapshotsResponseDBSnapshotsProcessorFeaturesTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotsResponseDBSnapshotsProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientDescribeDbSnapshotsResponseDBSnapshotsProcessorFeaturesTypeDef(
    _ClientDescribeDbSnapshotsResponseDBSnapshotsProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDescribeDbSnapshotsResponseDBSnapshots` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientDescribeDbSnapshotsResponseDBSnapshotsTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotsResponseDBSnapshotsTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBInstanceIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "Iops": int,
        "OptionGroupName": str,
        "PercentProgress": int,
        "SourceRegion": str,
        "SourceDBSnapshotIdentifier": str,
        "StorageType": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "DBSnapshotArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "ProcessorFeatures": List[
            ClientDescribeDbSnapshotsResponseDBSnapshotsProcessorFeaturesTypeDef
        ],
        "DbiResourceId": str,
    },
    total=False,
)


class ClientDescribeDbSnapshotsResponseDBSnapshotsTypeDef(
    _ClientDescribeDbSnapshotsResponseDBSnapshotsTypeDef
):
    """
    Type definition for `ClientDescribeDbSnapshotsResponse` `DBSnapshots`

    Contains the details of an Amazon RDS DB snapshot.

    This data type is used as a response element in the ``DescribeDBSnapshots`` action.

    - **DBSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB snapshot.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB snapshot.

    - **Port** *(integer) --*

      Specifies the port that the database engine was listening on at the time of the snapshot.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance was located in at the time of
      the DB snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB snapshot.

    - **InstanceCreateTime** *(datetime) --*

      Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB snapshot.

    - **EngineVersion** *(string) --*

      Specifies the version of the database engine.

    - **LicenseModel** *(string) --*

      License model information for the restored DB instance.

    - **SnapshotType** *(string) --*

      Provides the type of the DB snapshot.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at
      the time of the snapshot.

    - **OptionGroupName** *(string) --*

      Provides the option group name for the DB snapshot.

    - **PercentProgress** *(integer) --*

      The percentage of the estimated data that has been transferred.

    - **SourceRegion** *(string) --*

      The AWS Region that the DB snapshot was created in or copied from.

    - **SourceDBSnapshotIdentifier** *(string) --*

      The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
      has value in case of cross-customer or cross-region copy.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB snapshot.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which to associate the instance for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the DB snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

    - **DBSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB snapshot.

    - **Timezone** *(string) --*

      The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
      instances that were created with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance when the DB snapshot was created.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to
      an AWS Region.
    """


_ClientDescribeDbSnapshotsResponseTypeDef = TypedDict(
    "_ClientDescribeDbSnapshotsResponseTypeDef",
    {
        "Marker": str,
        "DBSnapshots": List[ClientDescribeDbSnapshotsResponseDBSnapshotsTypeDef],
    },
    total=False,
)


class ClientDescribeDbSnapshotsResponseTypeDef(
    _ClientDescribeDbSnapshotsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbSnapshots` `Response`

    Contains the result of a successful invocation of the ``DescribeDBSnapshots`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBSnapshots** *(list) --*

      A list of ``DBSnapshot`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB snapshot.

        This data type is used as a response element in the ``DescribeDBSnapshots`` action.

        - **DBSnapshotIdentifier** *(string) --*

          Specifies the identifier for the DB snapshot.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

        - **SnapshotCreateTime** *(datetime) --*

          Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

        - **Engine** *(string) --*

          Specifies the name of the database engine.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size in gibibytes (GiB).

        - **Status** *(string) --*

          Specifies the status of this DB snapshot.

        - **Port** *(integer) --*

          Specifies the port that the database engine was listening on at the time of the snapshot.

        - **AvailabilityZone** *(string) --*

          Specifies the name of the Availability Zone the DB instance was located in at the time of
          the DB snapshot.

        - **VpcId** *(string) --*

          Provides the VPC ID associated with the DB snapshot.

        - **InstanceCreateTime** *(datetime) --*

          Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

        - **MasterUsername** *(string) --*

          Provides the master username for the DB snapshot.

        - **EngineVersion** *(string) --*

          Specifies the version of the database engine.

        - **LicenseModel** *(string) --*

          License model information for the restored DB instance.

        - **SnapshotType** *(string) --*

          Provides the type of the DB snapshot.

        - **Iops** *(integer) --*

          Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at
          the time of the snapshot.

        - **OptionGroupName** *(string) --*

          Provides the option group name for the DB snapshot.

        - **PercentProgress** *(integer) --*

          The percentage of the estimated data that has been transferred.

        - **SourceRegion** *(string) --*

          The AWS Region that the DB snapshot was created in or copied from.

        - **SourceDBSnapshotIdentifier** *(string) --*

          The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
          has value in case of cross-customer or cross-region copy.

        - **StorageType** *(string) --*

          Specifies the storage type associated with DB snapshot.

        - **TdeCredentialArn** *(string) --*

          The ARN from the key store with which to associate the instance for TDE encryption.

        - **Encrypted** *(boolean) --*

          Specifies whether the DB snapshot is encrypted.

        - **KmsKeyId** *(string) --*

          If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

        - **DBSnapshotArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB snapshot.

        - **Timezone** *(string) --*

          The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
          ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
          instances that were created with a time zone specified.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance when the DB snapshot was created.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

        - **DbiResourceId** *(string) --*

          The identifier for the source DB instance, which can't be changed and which is unique to
          an AWS Region.
    """


_ClientDescribeDbSubnetGroupsFiltersTypeDef = TypedDict(
    "_ClientDescribeDbSubnetGroupsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeDbSubnetGroupsFiltersTypeDef(
    _ClientDescribeDbSubnetGroupsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeDbSubnetGroups` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsTypeDef = TypedDict(
    "_ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsTypeDef(
    _ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsTypeDef
):
    """
    Type definition for `ClientDescribeDbSubnetGroupsResponseDBSubnetGroups` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsTypeDef = TypedDict(
    "_ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsTypeDef(
    _ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsTypeDef
):
    """
    Type definition for `ClientDescribeDbSubnetGroupsResponse` `DBSubnetGroups`

    Contains the details of an Amazon RDS DB subnet group.

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientDescribeDbSubnetGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeDbSubnetGroupsResponseTypeDef",
    {
        "Marker": str,
        "DBSubnetGroups": List[
            ClientDescribeDbSubnetGroupsResponseDBSubnetGroupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDbSubnetGroupsResponseTypeDef(
    _ClientDescribeDbSubnetGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeDbSubnetGroups` `Response`

    Contains the result of a successful invocation of the ``DescribeDBSubnetGroups`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **DBSubnetGroups** *(list) --*

      A list of ``DBSubnetGroup`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB subnet group.

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientDescribeEngineDefaultClusterParametersFiltersTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultClusterParametersFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeEngineDefaultClusterParametersFiltersTypeDef(
    _ClientDescribeEngineDefaultClusterParametersFiltersTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultClusterParameters` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsParametersTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsParametersTypeDef(
    _ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsParametersTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultClusterParametersResponseEngineDefaults` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters``
    and ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being
      changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsTypeDef",
    {
        "DBParameterGroupFamily": str,
        "Marker": str,
        "Parameters": List[
            ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsParametersTypeDef
        ],
    },
    total=False,
)


class ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsTypeDef(
    _ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultClusterParametersResponse` `EngineDefaults`

    Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
    action.

    - **DBParameterGroupFamily** *(string) --*

      Specifies the name of the DB parameter group family that the engine default parameters
      apply to.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous EngineDefaults request. If this
      parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .

    - **Parameters** *(list) --*

      Contains a list of engine default parameters.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters``
        and ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being
          changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*
    """


_ClientDescribeEngineDefaultClusterParametersResponseTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultClusterParametersResponseTypeDef",
    {
        "EngineDefaults": ClientDescribeEngineDefaultClusterParametersResponseEngineDefaultsTypeDef
    },
    total=False,
)


class ClientDescribeEngineDefaultClusterParametersResponseTypeDef(
    _ClientDescribeEngineDefaultClusterParametersResponseTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultClusterParameters` `Response`

    - **EngineDefaults** *(dict) --*

      Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
      action.

      - **DBParameterGroupFamily** *(string) --*

        Specifies the name of the DB parameter group family that the engine default parameters
        apply to.

      - **Marker** *(string) --*

        An optional pagination token provided by a previous EngineDefaults request. If this
        parameter is specified, the response includes only records beyond the marker, up to the
        value specified by ``MaxRecords`` .

      - **Parameters** *(list) --*

        Contains a list of engine default parameters.

        - *(dict) --*

          This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
          ``ResetDBParameterGroup`` actions.

          This data type is used as a response element in the ``DescribeEngineDefaultParameters``
          and ``DescribeDBParameters`` actions.

          - **ParameterName** *(string) --*

            Specifies the name of the parameter.

          - **ParameterValue** *(string) --*

            Specifies the value of the parameter.

          - **Description** *(string) --*

            Provides a description of the parameter.

          - **Source** *(string) --*

            Indicates the source of the parameter value.

          - **ApplyType** *(string) --*

            Specifies the engine specific parameters type.

          - **DataType** *(string) --*

            Specifies the valid data type for the parameter.

          - **AllowedValues** *(string) --*

            Specifies the valid range of values for the parameter.

          - **IsModifiable** *(boolean) --*

            Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
            parameters have security or operational implications that prevent them from being
            changed.

          - **MinimumEngineVersion** *(string) --*

            The earliest engine version to which the parameter can apply.

          - **ApplyMethod** *(string) --*

            Indicates when to apply parameter updates.

          - **SupportedEngineModes** *(list) --*

            The valid DB engine modes.

            - *(string) --*
    """


_ClientDescribeEngineDefaultParametersFiltersTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultParametersFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeEngineDefaultParametersFiltersTypeDef(
    _ClientDescribeEngineDefaultParametersFiltersTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultParameters` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeEngineDefaultParametersResponseEngineDefaultsParametersTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultParametersResponseEngineDefaultsParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientDescribeEngineDefaultParametersResponseEngineDefaultsParametersTypeDef(
    _ClientDescribeEngineDefaultParametersResponseEngineDefaultsParametersTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultParametersResponseEngineDefaults` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters``
    and ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being
      changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientDescribeEngineDefaultParametersResponseEngineDefaultsTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultParametersResponseEngineDefaultsTypeDef",
    {
        "DBParameterGroupFamily": str,
        "Marker": str,
        "Parameters": List[
            ClientDescribeEngineDefaultParametersResponseEngineDefaultsParametersTypeDef
        ],
    },
    total=False,
)


class ClientDescribeEngineDefaultParametersResponseEngineDefaultsTypeDef(
    _ClientDescribeEngineDefaultParametersResponseEngineDefaultsTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultParametersResponse` `EngineDefaults`

    Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
    action.

    - **DBParameterGroupFamily** *(string) --*

      Specifies the name of the DB parameter group family that the engine default parameters
      apply to.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous EngineDefaults request. If this
      parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .

    - **Parameters** *(list) --*

      Contains a list of engine default parameters.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters``
        and ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being
          changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*
    """


_ClientDescribeEngineDefaultParametersResponseTypeDef = TypedDict(
    "_ClientDescribeEngineDefaultParametersResponseTypeDef",
    {
        "EngineDefaults": ClientDescribeEngineDefaultParametersResponseEngineDefaultsTypeDef
    },
    total=False,
)


class ClientDescribeEngineDefaultParametersResponseTypeDef(
    _ClientDescribeEngineDefaultParametersResponseTypeDef
):
    """
    Type definition for `ClientDescribeEngineDefaultParameters` `Response`

    - **EngineDefaults** *(dict) --*

      Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
      action.

      - **DBParameterGroupFamily** *(string) --*

        Specifies the name of the DB parameter group family that the engine default parameters
        apply to.

      - **Marker** *(string) --*

        An optional pagination token provided by a previous EngineDefaults request. If this
        parameter is specified, the response includes only records beyond the marker, up to the
        value specified by ``MaxRecords`` .

      - **Parameters** *(list) --*

        Contains a list of engine default parameters.

        - *(dict) --*

          This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
          ``ResetDBParameterGroup`` actions.

          This data type is used as a response element in the ``DescribeEngineDefaultParameters``
          and ``DescribeDBParameters`` actions.

          - **ParameterName** *(string) --*

            Specifies the name of the parameter.

          - **ParameterValue** *(string) --*

            Specifies the value of the parameter.

          - **Description** *(string) --*

            Provides a description of the parameter.

          - **Source** *(string) --*

            Indicates the source of the parameter value.

          - **ApplyType** *(string) --*

            Specifies the engine specific parameters type.

          - **DataType** *(string) --*

            Specifies the valid data type for the parameter.

          - **AllowedValues** *(string) --*

            Specifies the valid range of values for the parameter.

          - **IsModifiable** *(boolean) --*

            Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
            parameters have security or operational implications that prevent them from being
            changed.

          - **MinimumEngineVersion** *(string) --*

            The earliest engine version to which the parameter can apply.

          - **ApplyMethod** *(string) --*

            Indicates when to apply parameter updates.

          - **SupportedEngineModes** *(list) --*

            The valid DB engine modes.

            - *(string) --*
    """


_ClientDescribeEventCategoriesFiltersTypeDef = TypedDict(
    "_ClientDescribeEventCategoriesFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeEventCategoriesFiltersTypeDef(
    _ClientDescribeEventCategoriesFiltersTypeDef
):
    """
    Type definition for `ClientDescribeEventCategories` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef = TypedDict(
    "_ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef",
    {"SourceType": str, "EventCategories": List[str]},
    total=False,
)


class ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef(
    _ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef
):
    """
    Type definition for `ClientDescribeEventCategoriesResponse` `EventCategoriesMapList`

    Contains the results of a successful invocation of the ``DescribeEventCategories`` action.

    - **SourceType** *(string) --*

      The source type that the returned categories belong to

    - **EventCategories** *(list) --*

      The event categories for the specified source type

      - *(string) --*
    """


_ClientDescribeEventCategoriesResponseTypeDef = TypedDict(
    "_ClientDescribeEventCategoriesResponseTypeDef",
    {
        "EventCategoriesMapList": List[
            ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef
        ]
    },
    total=False,
)


class ClientDescribeEventCategoriesResponseTypeDef(
    _ClientDescribeEventCategoriesResponseTypeDef
):
    """
    Type definition for `ClientDescribeEventCategories` `Response`

    Data returned from the **DescribeEventCategories** action.

    - **EventCategoriesMapList** *(list) --*

      A list of EventCategoriesMap data types.

      - *(dict) --*

        Contains the results of a successful invocation of the ``DescribeEventCategories`` action.

        - **SourceType** *(string) --*

          The source type that the returned categories belong to

        - **EventCategories** *(list) --*

          The event categories for the specified source type

          - *(string) --*
    """


_ClientDescribeEventSubscriptionsFiltersTypeDef = TypedDict(
    "_ClientDescribeEventSubscriptionsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeEventSubscriptionsFiltersTypeDef(
    _ClientDescribeEventSubscriptionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeEventSubscriptions` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef = TypedDict(
    "_ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef(
    _ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef
):
    """
    Type definition for `ClientDescribeEventSubscriptionsResponse` `EventSubscriptionsList`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions``
    action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the
      subscription is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientDescribeEventSubscriptionsResponseTypeDef = TypedDict(
    "_ClientDescribeEventSubscriptionsResponseTypeDef",
    {
        "Marker": str,
        "EventSubscriptionsList": List[
            ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef
        ],
    },
    total=False,
)


class ClientDescribeEventSubscriptionsResponseTypeDef(
    _ClientDescribeEventSubscriptionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeEventSubscriptions` `Response`

    Data returned by the **DescribeEventSubscriptions** action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
      request. If this parameter is specified, the response includes only records beyond the
      marker, up to the value specified by ``MaxRecords`` .

    - **EventSubscriptionsList** *(list) --*

      A list of EventSubscriptions data types.

      - *(dict) --*

        Contains the results of a successful invocation of the ``DescribeEventSubscriptions``
        action.

        - **CustomerAwsId** *(string) --*

          The AWS customer account associated with the RDS event notification subscription.

        - **CustSubscriptionId** *(string) --*

          The RDS event notification subscription Id.

        - **SnsTopicArn** *(string) --*

          The topic ARN of the RDS event notification subscription.

        - **Status** *(string) --*

          The status of the RDS event notification subscription.

          Constraints:

          Can be one of the following: creating | modifying | deleting | active | no-permission |
          topic-not-exist

          The status "no-permission" indicates that RDS no longer has permission to post to the SNS
          topic. The status "topic-not-exist" indicates that the topic was deleted after the
          subscription was created.

        - **SubscriptionCreationTime** *(string) --*

          The time the RDS event notification subscription was created.

        - **SourceType** *(string) --*

          The source type for the RDS event notification subscription.

        - **SourceIdsList** *(list) --*

          A list of source IDs for the RDS event notification subscription.

          - *(string) --*

        - **EventCategoriesList** *(list) --*

          A list of event categories for the RDS event notification subscription.

          - *(string) --*

        - **Enabled** *(boolean) --*

          A Boolean value indicating if the subscription is enabled. True indicates the
          subscription is enabled.

        - **EventSubscriptionArn** *(string) --*

          The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientDescribeEventsFiltersTypeDef = TypedDict(
    "_ClientDescribeEventsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeEventsFiltersTypeDef(_ClientDescribeEventsFiltersTypeDef):
    """
    Type definition for `ClientDescribeEvents` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeEventsResponseEventsTypeDef = TypedDict(
    "_ClientDescribeEventsResponseEventsTypeDef",
    {
        "SourceIdentifier": str,
        "SourceType": str,
        "Message": str,
        "EventCategories": List[str],
        "Date": datetime,
        "SourceArn": str,
    },
    total=False,
)


class ClientDescribeEventsResponseEventsTypeDef(
    _ClientDescribeEventsResponseEventsTypeDef
):
    """
    Type definition for `ClientDescribeEventsResponse` `Events`

    This data type is used as a response element in the ``DescribeEvents`` action.

    - **SourceIdentifier** *(string) --*

      Provides the identifier for the source of the event.

    - **SourceType** *(string) --*

      Specifies the source type for this event.

    - **Message** *(string) --*

      Provides the text of this event.

    - **EventCategories** *(list) --*

      Specifies the category for the event.

      - *(string) --*

    - **Date** *(datetime) --*

      Specifies the date and time of the event.

    - **SourceArn** *(string) --*

      The Amazon Resource Name (ARN) for the event.
    """


_ClientDescribeEventsResponseTypeDef = TypedDict(
    "_ClientDescribeEventsResponseTypeDef",
    {"Marker": str, "Events": List[ClientDescribeEventsResponseEventsTypeDef]},
    total=False,
)


class ClientDescribeEventsResponseTypeDef(_ClientDescribeEventsResponseTypeDef):
    """
    Type definition for `ClientDescribeEvents` `Response`

    Contains the result of a successful invocation of the ``DescribeEvents`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous Events request. If this parameter is
      specified, the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **Events** *(list) --*

      A list of ``Event`` instances.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeEvents`` action.

        - **SourceIdentifier** *(string) --*

          Provides the identifier for the source of the event.

        - **SourceType** *(string) --*

          Specifies the source type for this event.

        - **Message** *(string) --*

          Provides the text of this event.

        - **EventCategories** *(list) --*

          Specifies the category for the event.

          - *(string) --*

        - **Date** *(datetime) --*

          Specifies the date and time of the event.

        - **SourceArn** *(string) --*

          The Amazon Resource Name (ARN) for the event.
    """


_ClientDescribeGlobalClustersFiltersTypeDef = TypedDict(
    "_ClientDescribeGlobalClustersFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeGlobalClustersFiltersTypeDef(
    _ClientDescribeGlobalClustersFiltersTypeDef
):
    """
    Type definition for `ClientDescribeGlobalClusters` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeGlobalClustersResponseGlobalClustersGlobalClusterMembersTypeDef = TypedDict(
    "_ClientDescribeGlobalClustersResponseGlobalClustersGlobalClusterMembersTypeDef",
    {"DBClusterArn": str, "Readers": List[str], "IsWriter": bool},
    total=False,
)


class ClientDescribeGlobalClustersResponseGlobalClustersGlobalClusterMembersTypeDef(
    _ClientDescribeGlobalClustersResponseGlobalClustersGlobalClusterMembersTypeDef
):
    """
    Type definition for `ClientDescribeGlobalClustersResponseGlobalClusters` `GlobalClusterMembers`

    A data structure with information about any primary and secondary clusters associated
    with an Aurora global database.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for each Aurora cluster.

    - **Readers** *(list) --*

      The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
      the Aurora global database.

      - *(string) --*

    - **IsWriter** *(boolean) --*

      Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
      capability) for the Aurora global database with which it is associated.
    """


_ClientDescribeGlobalClustersResponseGlobalClustersTypeDef = TypedDict(
    "_ClientDescribeGlobalClustersResponseGlobalClustersTypeDef",
    {
        "GlobalClusterIdentifier": str,
        "GlobalClusterResourceId": str,
        "GlobalClusterArn": str,
        "Status": str,
        "Engine": str,
        "EngineVersion": str,
        "DatabaseName": str,
        "StorageEncrypted": bool,
        "DeletionProtection": bool,
        "GlobalClusterMembers": List[
            ClientDescribeGlobalClustersResponseGlobalClustersGlobalClusterMembersTypeDef
        ],
    },
    total=False,
)


class ClientDescribeGlobalClustersResponseGlobalClustersTypeDef(
    _ClientDescribeGlobalClustersResponseGlobalClustersTypeDef
):
    """
    Type definition for `ClientDescribeGlobalClustersResponse` `GlobalClusters`

    A data type representing an Aurora global database.

    - **GlobalClusterIdentifier** *(string) --*

      Contains a user-supplied global database cluster identifier. This identifier is the
      unique key that identifies a global database cluster.

    - **GlobalClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the global database cluster. This
      identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
      cluster is accessed.

    - **GlobalClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the global database cluster.

    - **Status** *(string) --*

      Specifies the current state of this global database cluster.

    - **Engine** *(string) --*

      The Aurora database engine used by the global database cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **DatabaseName** *(string) --*

      The default database name within the new global database cluster.

    - **StorageEncrypted** *(boolean) --*

      The storage encryption setting for the global database cluster.

    - **DeletionProtection** *(boolean) --*

      The deletion protection setting for the new global database cluster.

    - **GlobalClusterMembers** *(list) --*

      The list of cluster IDs for secondary clusters within the global database cluster.
      Currently limited to 1 item.

      - *(dict) --*

        A data structure with information about any primary and secondary clusters associated
        with an Aurora global database.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for each Aurora cluster.

        - **Readers** *(list) --*

          The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
          the Aurora global database.

          - *(string) --*

        - **IsWriter** *(boolean) --*

          Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
          capability) for the Aurora global database with which it is associated.
    """


_ClientDescribeGlobalClustersResponseTypeDef = TypedDict(
    "_ClientDescribeGlobalClustersResponseTypeDef",
    {
        "Marker": str,
        "GlobalClusters": List[
            ClientDescribeGlobalClustersResponseGlobalClustersTypeDef
        ],
    },
    total=False,
)


class ClientDescribeGlobalClustersResponseTypeDef(
    _ClientDescribeGlobalClustersResponseTypeDef
):
    """
    Type definition for `ClientDescribeGlobalClusters` `Response`

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribeGlobalClusters`` request. If
      this parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .

    - **GlobalClusters** *(list) --*

      The list of global clusters returned by this request.

      - *(dict) --*

        A data type representing an Aurora global database.

        - **GlobalClusterIdentifier** *(string) --*

          Contains a user-supplied global database cluster identifier. This identifier is the
          unique key that identifies a global database cluster.

        - **GlobalClusterResourceId** *(string) --*

          The AWS Region-unique, immutable identifier for the global database cluster. This
          identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
          cluster is accessed.

        - **GlobalClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for the global database cluster.

        - **Status** *(string) --*

          Specifies the current state of this global database cluster.

        - **Engine** *(string) --*

          The Aurora database engine used by the global database cluster.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **DatabaseName** *(string) --*

          The default database name within the new global database cluster.

        - **StorageEncrypted** *(boolean) --*

          The storage encryption setting for the global database cluster.

        - **DeletionProtection** *(boolean) --*

          The deletion protection setting for the new global database cluster.

        - **GlobalClusterMembers** *(list) --*

          The list of cluster IDs for secondary clusters within the global database cluster.
          Currently limited to 1 item.

          - *(dict) --*

            A data structure with information about any primary and secondary clusters associated
            with an Aurora global database.

            - **DBClusterArn** *(string) --*

              The Amazon Resource Name (ARN) for each Aurora cluster.

            - **Readers** *(list) --*

              The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
              the Aurora global database.

              - *(string) --*

            - **IsWriter** *(boolean) --*

              Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
              capability) for the Aurora global database with which it is associated.
    """


_ClientDescribeInstallationMediaFiltersTypeDef = TypedDict(
    "_ClientDescribeInstallationMediaFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeInstallationMediaFiltersTypeDef(
    _ClientDescribeInstallationMediaFiltersTypeDef
):
    """
    Type definition for `ClientDescribeInstallationMedia` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeInstallationMediaResponseInstallationMediaFailureCauseTypeDef = TypedDict(
    "_ClientDescribeInstallationMediaResponseInstallationMediaFailureCauseTypeDef",
    {"Message": str},
    total=False,
)


class ClientDescribeInstallationMediaResponseInstallationMediaFailureCauseTypeDef(
    _ClientDescribeInstallationMediaResponseInstallationMediaFailureCauseTypeDef
):
    """
    Type definition for `ClientDescribeInstallationMediaResponseInstallationMedia` `FailureCause`

    If an installation media failure occurred, the cause of the failure.

    - **Message** *(string) --*

      The reason that an installation media import failed.
    """


_ClientDescribeInstallationMediaResponseInstallationMediaTypeDef = TypedDict(
    "_ClientDescribeInstallationMediaResponseInstallationMediaTypeDef",
    {
        "InstallationMediaId": str,
        "CustomAvailabilityZoneId": str,
        "Engine": str,
        "EngineVersion": str,
        "EngineInstallationMediaPath": str,
        "OSInstallationMediaPath": str,
        "Status": str,
        "FailureCause": ClientDescribeInstallationMediaResponseInstallationMediaFailureCauseTypeDef,
    },
    total=False,
)


class ClientDescribeInstallationMediaResponseInstallationMediaTypeDef(
    _ClientDescribeInstallationMediaResponseInstallationMediaTypeDef
):
    """
    Type definition for `ClientDescribeInstallationMediaResponse` `InstallationMedia`

    Contains the installation media for a DB engine that requires an on-premises customer
    provided license, such as Microsoft SQL Server.

    - **InstallationMediaId** *(string) --*

      The installation medium ID.

    - **CustomAvailabilityZoneId** *(string) --*

      The custom Availability Zone (AZ) that contains the installation media.

    - **Engine** *(string) --*

      The DB engine.

    - **EngineVersion** *(string) --*

      The engine version of the DB engine.

    - **EngineInstallationMediaPath** *(string) --*

      The path to the installation medium for the DB engine.

    - **OSInstallationMediaPath** *(string) --*

      The path to the installation medium for the operating system associated with the DB
      engine.

    - **Status** *(string) --*

      The status of the installation medium.

    - **FailureCause** *(dict) --*

      If an installation media failure occurred, the cause of the failure.

      - **Message** *(string) --*

        The reason that an installation media import failed.
    """


_ClientDescribeInstallationMediaResponseTypeDef = TypedDict(
    "_ClientDescribeInstallationMediaResponseTypeDef",
    {
        "Marker": str,
        "InstallationMedia": List[
            ClientDescribeInstallationMediaResponseInstallationMediaTypeDef
        ],
    },
    total=False,
)


class ClientDescribeInstallationMediaResponseTypeDef(
    _ClientDescribeInstallationMediaResponseTypeDef
):
    """
    Type definition for `ClientDescribeInstallationMedia` `Response`

    - **Marker** *(string) --*

      An optional pagination token provided by a previous  DescribeInstallationMedia request. If
      this parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .

    - **InstallationMedia** *(list) --*

      The list of  InstallationMedia objects for the AWS account.

      - *(dict) --*

        Contains the installation media for a DB engine that requires an on-premises customer
        provided license, such as Microsoft SQL Server.

        - **InstallationMediaId** *(string) --*

          The installation medium ID.

        - **CustomAvailabilityZoneId** *(string) --*

          The custom Availability Zone (AZ) that contains the installation media.

        - **Engine** *(string) --*

          The DB engine.

        - **EngineVersion** *(string) --*

          The engine version of the DB engine.

        - **EngineInstallationMediaPath** *(string) --*

          The path to the installation medium for the DB engine.

        - **OSInstallationMediaPath** *(string) --*

          The path to the installation medium for the operating system associated with the DB
          engine.

        - **Status** *(string) --*

          The status of the installation medium.

        - **FailureCause** *(dict) --*

          If an installation media failure occurred, the cause of the failure.

          - **Message** *(string) --*

            The reason that an installation media import failed.
    """


_ClientDescribeOptionGroupOptionsFiltersTypeDef = TypedDict(
    "_ClientDescribeOptionGroupOptionsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeOptionGroupOptionsFiltersTypeDef(
    _ClientDescribeOptionGroupOptionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupOptions` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef = TypedDict(
    "_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef",
    {"AllowedValue": str, "MinimumEngineVersion": str},
    total=False,
)


class ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef(
    _ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettings` `MinimumEngineVersionPerAllowedValue`

    The minimum DB engine version required for each corresponding allowed value for an
    option setting.

    - **AllowedValue** *(string) --*

      The allowed value for an option setting.

    - **MinimumEngineVersion** *(string) --*

      The minimum DB engine version required for the allowed value.
    """


_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef",
    {
        "SettingName": str,
        "SettingDescription": str,
        "DefaultValue": str,
        "ApplyType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsRequired": bool,
        "MinimumEngineVersionPerAllowedValue": List[
            ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef
        ],
    },
    total=False,
)


class ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef(
    _ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupOptionsResponseOptionGroupOptions` `OptionGroupOptionSettings`

    Option group option settings are used to display settings available for each option
    with their default values and other information. These values are used with the
    DescribeOptionGroupOptions action.

    - **SettingName** *(string) --*

      The name of the option group option.

    - **SettingDescription** *(string) --*

      The description of the option group option.

    - **DefaultValue** *(string) --*

      The default value for the option group option.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type for the option group option.

    - **AllowedValues** *(string) --*

      Indicates the acceptable values for the option group option.

    - **IsModifiable** *(boolean) --*

      Boolean value where true indicates that this option group option can be changed from
      the default value.

    - **IsRequired** *(boolean) --*

      Boolean value where true indicates that a value must be specified for this option
      setting of the option group option.

    - **MinimumEngineVersionPerAllowedValue** *(list) --*

      The minimum DB engine version required for the corresponding allowed value for this
      option setting.

      - *(dict) --*

        The minimum DB engine version required for each corresponding allowed value for an
        option setting.

        - **AllowedValue** *(string) --*

          The allowed value for an option setting.

        - **MinimumEngineVersion** *(string) --*

          The minimum DB engine version required for the allowed value.
    """


_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef",
    {"Version": str, "IsDefault": bool},
    total=False,
)


class ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef(
    _ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupOptionsResponseOptionGroupOptions` `OptionGroupOptionVersions`

    The version for an option. Option group option versions are returned by the
    ``DescribeOptionGroupOptions`` action.

    - **Version** *(string) --*

      The version of the option.

    - **IsDefault** *(boolean) --*

      True if the version is the default version of the option, and otherwise false.
    """


_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsTypeDef",
    {
        "Name": str,
        "Description": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "MinimumRequiredMinorEngineVersion": str,
        "PortRequired": bool,
        "DefaultPort": int,
        "OptionsDependedOn": List[str],
        "OptionsConflictsWith": List[str],
        "Persistent": bool,
        "Permanent": bool,
        "RequiresAutoMinorEngineVersionUpgrade": bool,
        "VpcOnly": bool,
        "SupportsOptionVersionDowngrade": bool,
        "OptionGroupOptionSettings": List[
            ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef
        ],
        "OptionGroupOptionVersions": List[
            ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsTypeDef(
    _ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupOptionsResponse` `OptionGroupOptions`

    Available option.

    - **Name** *(string) --*

      The name of the option.

    - **Description** *(string) --*

      The description of the option.

    - **EngineName** *(string) --*

      The name of the engine that this option can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version that the option is available for.

    - **MinimumRequiredMinorEngineVersion** *(string) --*

      The minimum required engine version for the option to be applied.

    - **PortRequired** *(boolean) --*

      Specifies whether the option requires a port.

    - **DefaultPort** *(integer) --*

      If the option requires a port, specifies the default port for the option.

    - **OptionsDependedOn** *(list) --*

      The options that are prerequisites for this option.

      - *(string) --*

    - **OptionsConflictsWith** *(list) --*

      The options that conflict with this option.

      - *(string) --*

    - **Persistent** *(boolean) --*

      Persistent options can't be removed from an option group while DB instances are
      associated with the option group. If you disassociate all DB instances from the option
      group, your can remove the persistent option from the option group.

    - **Permanent** *(boolean) --*

      Permanent options can never be removed from an option group. An option group containing a
      permanent option can't be removed from a DB instance.

    - **RequiresAutoMinorEngineVersionUpgrade** *(boolean) --*

      If true, you must enable the Auto Minor Version Upgrade setting for your DB instance
      before you can use this option. You can enable Auto Minor Version Upgrade when you first
      create your DB instance, or by modifying your DB instance later.

    - **VpcOnly** *(boolean) --*

      If true, you can only use this option with a DB instance that is in a VPC.

    - **SupportsOptionVersionDowngrade** *(boolean) --*

      If true, you can change the option to an earlier version of the option. This only applies
      to options that have different versions available.

    - **OptionGroupOptionSettings** *(list) --*

      The option settings that are available (and the default value) for each option in an
      option group.

      - *(dict) --*

        Option group option settings are used to display settings available for each option
        with their default values and other information. These values are used with the
        DescribeOptionGroupOptions action.

        - **SettingName** *(string) --*

          The name of the option group option.

        - **SettingDescription** *(string) --*

          The description of the option group option.

        - **DefaultValue** *(string) --*

          The default value for the option group option.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type for the option group option.

        - **AllowedValues** *(string) --*

          Indicates the acceptable values for the option group option.

        - **IsModifiable** *(boolean) --*

          Boolean value where true indicates that this option group option can be changed from
          the default value.

        - **IsRequired** *(boolean) --*

          Boolean value where true indicates that a value must be specified for this option
          setting of the option group option.

        - **MinimumEngineVersionPerAllowedValue** *(list) --*

          The minimum DB engine version required for the corresponding allowed value for this
          option setting.

          - *(dict) --*

            The minimum DB engine version required for each corresponding allowed value for an
            option setting.

            - **AllowedValue** *(string) --*

              The allowed value for an option setting.

            - **MinimumEngineVersion** *(string) --*

              The minimum DB engine version required for the allowed value.

    - **OptionGroupOptionVersions** *(list) --*

      The versions that are available for the option.

      - *(dict) --*

        The version for an option. Option group option versions are returned by the
        ``DescribeOptionGroupOptions`` action.

        - **Version** *(string) --*

          The version of the option.

        - **IsDefault** *(boolean) --*

          True if the version is the default version of the option, and otherwise false.
    """


_ClientDescribeOptionGroupOptionsResponseTypeDef = TypedDict(
    "_ClientDescribeOptionGroupOptionsResponseTypeDef",
    {
        "OptionGroupOptions": List[
            ClientDescribeOptionGroupOptionsResponseOptionGroupOptionsTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeOptionGroupOptionsResponseTypeDef(
    _ClientDescribeOptionGroupOptionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupOptions` `Response`

    - **OptionGroupOptions** *(list) --*

      List of available option group options.

      - *(dict) --*

        Available option.

        - **Name** *(string) --*

          The name of the option.

        - **Description** *(string) --*

          The description of the option.

        - **EngineName** *(string) --*

          The name of the engine that this option can be applied to.

        - **MajorEngineVersion** *(string) --*

          Indicates the major engine version that the option is available for.

        - **MinimumRequiredMinorEngineVersion** *(string) --*

          The minimum required engine version for the option to be applied.

        - **PortRequired** *(boolean) --*

          Specifies whether the option requires a port.

        - **DefaultPort** *(integer) --*

          If the option requires a port, specifies the default port for the option.

        - **OptionsDependedOn** *(list) --*

          The options that are prerequisites for this option.

          - *(string) --*

        - **OptionsConflictsWith** *(list) --*

          The options that conflict with this option.

          - *(string) --*

        - **Persistent** *(boolean) --*

          Persistent options can't be removed from an option group while DB instances are
          associated with the option group. If you disassociate all DB instances from the option
          group, your can remove the persistent option from the option group.

        - **Permanent** *(boolean) --*

          Permanent options can never be removed from an option group. An option group containing a
          permanent option can't be removed from a DB instance.

        - **RequiresAutoMinorEngineVersionUpgrade** *(boolean) --*

          If true, you must enable the Auto Minor Version Upgrade setting for your DB instance
          before you can use this option. You can enable Auto Minor Version Upgrade when you first
          create your DB instance, or by modifying your DB instance later.

        - **VpcOnly** *(boolean) --*

          If true, you can only use this option with a DB instance that is in a VPC.

        - **SupportsOptionVersionDowngrade** *(boolean) --*

          If true, you can change the option to an earlier version of the option. This only applies
          to options that have different versions available.

        - **OptionGroupOptionSettings** *(list) --*

          The option settings that are available (and the default value) for each option in an
          option group.

          - *(dict) --*

            Option group option settings are used to display settings available for each option
            with their default values and other information. These values are used with the
            DescribeOptionGroupOptions action.

            - **SettingName** *(string) --*

              The name of the option group option.

            - **SettingDescription** *(string) --*

              The description of the option group option.

            - **DefaultValue** *(string) --*

              The default value for the option group option.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type for the option group option.

            - **AllowedValues** *(string) --*

              Indicates the acceptable values for the option group option.

            - **IsModifiable** *(boolean) --*

              Boolean value where true indicates that this option group option can be changed from
              the default value.

            - **IsRequired** *(boolean) --*

              Boolean value where true indicates that a value must be specified for this option
              setting of the option group option.

            - **MinimumEngineVersionPerAllowedValue** *(list) --*

              The minimum DB engine version required for the corresponding allowed value for this
              option setting.

              - *(dict) --*

                The minimum DB engine version required for each corresponding allowed value for an
                option setting.

                - **AllowedValue** *(string) --*

                  The allowed value for an option setting.

                - **MinimumEngineVersion** *(string) --*

                  The minimum DB engine version required for the allowed value.

        - **OptionGroupOptionVersions** *(list) --*

          The versions that are available for the option.

          - *(dict) --*

            The version for an option. Option group option versions are returned by the
            ``DescribeOptionGroupOptions`` action.

            - **Version** *(string) --*

              The version of the option.

            - **IsDefault** *(boolean) --*

              True if the version is the default version of the option, and otherwise false.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .
    """


_ClientDescribeOptionGroupsFiltersTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeOptionGroupsFiltersTypeDef(
    _ClientDescribeOptionGroupsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroups` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientDescribeOptionGroupsResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef(
    _ClientDescribeOptionGroupsResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupsResponseOptionGroupsListOptions` `DBSecurityGroupMemberships`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsOptionSettingsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsOptionSettingsTypeDef",
    {
        "Name": str,
        "Value": str,
        "DefaultValue": str,
        "Description": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsCollection": bool,
    },
    total=False,
)


class ClientDescribeOptionGroupsResponseOptionGroupsListOptionsOptionSettingsTypeDef(
    _ClientDescribeOptionGroupsResponseOptionGroupsListOptionsOptionSettingsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupsResponseOptionGroupsListOptions` `OptionSettings`

    Option settings are the actual settings being applied or configured for that
    option. It is used when you modify an option group or describe option groups. For
    example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
    SQLNET.ENCRYPTION_SERVER that can have several different values.

    - **Name** *(string) --*

      The name of the option that has settings that you can set.

    - **Value** *(string) --*

      The current value of the option setting.

    - **DefaultValue** *(string) --*

      The default value of the option setting.

    - **Description** *(string) --*

      The description of the option setting.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type.

    - **DataType** *(string) --*

      The data type of the option setting.

    - **AllowedValues** *(string) --*

      The allowed values of the option setting.

    - **IsModifiable** *(boolean) --*

      A Boolean value that, when true, indicates the option setting can be modified
      from the default.

    - **IsCollection** *(boolean) --*

      Indicates if the option setting is part of a collection.
    """


_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDescribeOptionGroupsResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef(
    _ClientDescribeOptionGroupsResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupsResponseOptionGroupsListOptions` `VpcSecurityGroupMemberships`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsResponseOptionGroupsListOptionsTypeDef",
    {
        "OptionName": str,
        "OptionDescription": str,
        "Persistent": bool,
        "Permanent": bool,
        "Port": int,
        "OptionVersion": str,
        "OptionSettings": List[
            ClientDescribeOptionGroupsResponseOptionGroupsListOptionsOptionSettingsTypeDef
        ],
        "DBSecurityGroupMemberships": List[
            ClientDescribeOptionGroupsResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef
        ],
        "VpcSecurityGroupMemberships": List[
            ClientDescribeOptionGroupsResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeOptionGroupsResponseOptionGroupsListOptionsTypeDef(
    _ClientDescribeOptionGroupsResponseOptionGroupsListOptionsTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupsResponseOptionGroupsList` `Options`

    Option details.

    - **OptionName** *(string) --*

      The name of the option.

    - **OptionDescription** *(string) --*

      The description of the option.

    - **Persistent** *(boolean) --*

      Indicate if this option is persistent.

    - **Permanent** *(boolean) --*

      Indicate if this option is permanent.

    - **Port** *(integer) --*

      If required, the port configured for this option to use.

    - **OptionVersion** *(string) --*

      The version of the option.

    - **OptionSettings** *(list) --*

      The option settings for this option.

      - *(dict) --*

        Option settings are the actual settings being applied or configured for that
        option. It is used when you modify an option group or describe option groups. For
        example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
        SQLNET.ENCRYPTION_SERVER that can have several different values.

        - **Name** *(string) --*

          The name of the option that has settings that you can set.

        - **Value** *(string) --*

          The current value of the option setting.

        - **DefaultValue** *(string) --*

          The default value of the option setting.

        - **Description** *(string) --*

          The description of the option setting.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type.

        - **DataType** *(string) --*

          The data type of the option setting.

        - **AllowedValues** *(string) --*

          The allowed values of the option setting.

        - **IsModifiable** *(boolean) --*

          A Boolean value that, when true, indicates the option setting can be modified
          from the default.

        - **IsCollection** *(boolean) --*

          Indicates if the option setting is part of a collection.

    - **DBSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this DB security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this VPC security group allows access
      to the port.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.
    """


_ClientDescribeOptionGroupsResponseOptionGroupsListTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsResponseOptionGroupsListTypeDef",
    {
        "OptionGroupName": str,
        "OptionGroupDescription": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "Options": List[
            ClientDescribeOptionGroupsResponseOptionGroupsListOptionsTypeDef
        ],
        "AllowsVpcAndNonVpcInstanceMemberships": bool,
        "VpcId": str,
        "OptionGroupArn": str,
    },
    total=False,
)


class ClientDescribeOptionGroupsResponseOptionGroupsListTypeDef(
    _ClientDescribeOptionGroupsResponseOptionGroupsListTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroupsResponse` `OptionGroupsList`

    - **OptionGroupName** *(string) --*

      Specifies the name of the option group.

    - **OptionGroupDescription** *(string) --*

      Provides a description of the option group.

    - **EngineName** *(string) --*

      Indicates the name of the engine that this option group can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version associated with this option group.

    - **Options** *(list) --*

      Indicates what options are available in the option group.

      - *(dict) --*

        Option details.

        - **OptionName** *(string) --*

          The name of the option.

        - **OptionDescription** *(string) --*

          The description of the option.

        - **Persistent** *(boolean) --*

          Indicate if this option is persistent.

        - **Permanent** *(boolean) --*

          Indicate if this option is permanent.

        - **Port** *(integer) --*

          If required, the port configured for this option to use.

        - **OptionVersion** *(string) --*

          The version of the option.

        - **OptionSettings** *(list) --*

          The option settings for this option.

          - *(dict) --*

            Option settings are the actual settings being applied or configured for that
            option. It is used when you modify an option group or describe option groups. For
            example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
            SQLNET.ENCRYPTION_SERVER that can have several different values.

            - **Name** *(string) --*

              The name of the option that has settings that you can set.

            - **Value** *(string) --*

              The current value of the option setting.

            - **DefaultValue** *(string) --*

              The default value of the option setting.

            - **Description** *(string) --*

              The description of the option setting.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type.

            - **DataType** *(string) --*

              The data type of the option setting.

            - **AllowedValues** *(string) --*

              The allowed values of the option setting.

            - **IsModifiable** *(boolean) --*

              A Boolean value that, when true, indicates the option setting can be modified
              from the default.

            - **IsCollection** *(boolean) --*

              Indicates if the option setting is part of a collection.

        - **DBSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this DB security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this VPC security group allows access
          to the port.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

    - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

      Indicates whether this option group can be applied to both VPC and non-VPC instances. The
      value ``true`` indicates the option group can be applied to both VPC and non-VPC
      instances.

    - **VpcId** *(string) --*

      If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
      **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
      option group can be applied to both VPC and non-VPC instances. If this field contains a
      value, then this option group can only be applied to instances that are in the VPC
      indicated by this field.

    - **OptionGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the option group.
    """


_ClientDescribeOptionGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeOptionGroupsResponseTypeDef",
    {
        "OptionGroupsList": List[
            ClientDescribeOptionGroupsResponseOptionGroupsListTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeOptionGroupsResponseTypeDef(
    _ClientDescribeOptionGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeOptionGroups` `Response`

    List of option groups.

    - **OptionGroupsList** *(list) --*

      List of option groups.

      - *(dict) --*

        - **OptionGroupName** *(string) --*

          Specifies the name of the option group.

        - **OptionGroupDescription** *(string) --*

          Provides a description of the option group.

        - **EngineName** *(string) --*

          Indicates the name of the engine that this option group can be applied to.

        - **MajorEngineVersion** *(string) --*

          Indicates the major engine version associated with this option group.

        - **Options** *(list) --*

          Indicates what options are available in the option group.

          - *(dict) --*

            Option details.

            - **OptionName** *(string) --*

              The name of the option.

            - **OptionDescription** *(string) --*

              The description of the option.

            - **Persistent** *(boolean) --*

              Indicate if this option is persistent.

            - **Permanent** *(boolean) --*

              Indicate if this option is permanent.

            - **Port** *(integer) --*

              If required, the port configured for this option to use.

            - **OptionVersion** *(string) --*

              The version of the option.

            - **OptionSettings** *(list) --*

              The option settings for this option.

              - *(dict) --*

                Option settings are the actual settings being applied or configured for that
                option. It is used when you modify an option group or describe option groups. For
                example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
                SQLNET.ENCRYPTION_SERVER that can have several different values.

                - **Name** *(string) --*

                  The name of the option that has settings that you can set.

                - **Value** *(string) --*

                  The current value of the option setting.

                - **DefaultValue** *(string) --*

                  The default value of the option setting.

                - **Description** *(string) --*

                  The description of the option setting.

                - **ApplyType** *(string) --*

                  The DB engine specific parameter type.

                - **DataType** *(string) --*

                  The data type of the option setting.

                - **AllowedValues** *(string) --*

                  The allowed values of the option setting.

                - **IsModifiable** *(boolean) --*

                  A Boolean value that, when true, indicates the option setting can be modified
                  from the default.

                - **IsCollection** *(boolean) --*

                  Indicates if the option setting is part of a collection.

            - **DBSecurityGroupMemberships** *(list) --*

              If the option requires access to a port, then this DB security group allows access to
              the port.

              - *(dict) --*

                This data type is used as a response element in the following actions:

                * ``ModifyDBInstance``

                * ``RebootDBInstance``

                * ``RestoreDBInstanceFromDBSnapshot``

                * ``RestoreDBInstanceToPointInTime``

                - **DBSecurityGroupName** *(string) --*

                  The name of the DB security group.

                - **Status** *(string) --*

                  The status of the DB security group.

            - **VpcSecurityGroupMemberships** *(list) --*

              If the option requires access to a port, then this VPC security group allows access
              to the port.

              - *(dict) --*

                This data type is used as a response element for queries on VPC security group
                membership.

                - **VpcSecurityGroupId** *(string) --*

                  The name of the VPC security group.

                - **Status** *(string) --*

                  The status of the VPC security group.

        - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

          Indicates whether this option group can be applied to both VPC and non-VPC instances. The
          value ``true`` indicates the option group can be applied to both VPC and non-VPC
          instances.

        - **VpcId** *(string) --*

          If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
          **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
          option group can be applied to both VPC and non-VPC instances. If this field contains a
          value, then this option group can only be applied to instances that are in the VPC
          indicated by this field.

        - **OptionGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the option group.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .
    """


_ClientDescribeOrderableDbInstanceOptionsFiltersTypeDef = TypedDict(
    "_ClientDescribeOrderableDbInstanceOptionsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeOrderableDbInstanceOptionsFiltersTypeDef(
    _ClientDescribeOrderableDbInstanceOptionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeOrderableDbInstanceOptions` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef = TypedDict(
    "_ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef",
    {"Name": str},
    total=False,
)


class ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef(
    _ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef
):
    """
    Type definition for `ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptions` `AvailabilityZones`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef = TypedDict(
    "_ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef",
    {"Name": str, "DefaultValue": str, "AllowedValues": str},
    total=False,
)


class ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef(
    _ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptions` `AvailableProcessorFeatures`

    Contains the available processor feature information for the DB instance class of a DB
    instance.

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **DefaultValue** *(string) --*

      The default value for the processor feature of the DB instance class.

    - **AllowedValues** *(string) --*

      The allowed values for the processor feature of the DB instance class.
    """


_ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsTypeDef = TypedDict(
    "_ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsTypeDef",
    {
        "Engine": str,
        "EngineVersion": str,
        "DBInstanceClass": str,
        "LicenseModel": str,
        "AvailabilityZones": List[
            ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef
        ],
        "MultiAZCapable": bool,
        "ReadReplicaCapable": bool,
        "Vpc": bool,
        "SupportsStorageEncryption": bool,
        "StorageType": str,
        "SupportsIops": bool,
        "SupportsEnhancedMonitoring": bool,
        "SupportsIAMDatabaseAuthentication": bool,
        "SupportsPerformanceInsights": bool,
        "MinStorageSize": int,
        "MaxStorageSize": int,
        "MinIopsPerDbInstance": int,
        "MaxIopsPerDbInstance": int,
        "MinIopsPerGib": float,
        "MaxIopsPerGib": float,
        "AvailableProcessorFeatures": List[
            ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef
        ],
        "SupportedEngineModes": List[str],
        "SupportsStorageAutoscaling": bool,
        "SupportsKerberosAuthentication": bool,
    },
    total=False,
)


class ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsTypeDef(
    _ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsTypeDef
):
    """
    Type definition for `ClientDescribeOrderableDbInstanceOptionsResponse` `OrderableDBInstanceOptions`

    Contains a list of available options for a DB instance.

    This data type is used as a response element in the ``DescribeOrderableDBInstanceOptions``
    action.

    - **Engine** *(string) --*

      The engine type of a DB instance.

    - **EngineVersion** *(string) --*

      The engine version of a DB instance.

    - **DBInstanceClass** *(string) --*

      The DB instance class for a DB instance.

    - **LicenseModel** *(string) --*

      The license model for a DB instance.

    - **AvailabilityZones** *(list) --*

      A list of Availability Zones for a DB instance.

      - *(dict) --*

        Contains Availability Zone information.

        This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

        - **Name** *(string) --*

          The name of the Availability Zone.

    - **MultiAZCapable** *(boolean) --*

      Indicates whether a DB instance is Multi-AZ capable.

    - **ReadReplicaCapable** *(boolean) --*

      Indicates whether a DB instance can have a Read Replica.

    - **Vpc** *(boolean) --*

      Indicates whether a DB instance is in a VPC.

    - **SupportsStorageEncryption** *(boolean) --*

      Indicates whether a DB instance supports encrypted storage.

    - **StorageType** *(string) --*

      Indicates the storage type for a DB instance.

    - **SupportsIops** *(boolean) --*

      Indicates whether a DB instance supports provisioned IOPS.

    - **SupportsEnhancedMonitoring** *(boolean) --*

      Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60
      seconds.

    - **SupportsIAMDatabaseAuthentication** *(boolean) --*

      Indicates whether a DB instance supports IAM database authentication.

    - **SupportsPerformanceInsights** *(boolean) --*

      True if a DB instance supports Performance Insights, otherwise false.

    - **MinStorageSize** *(integer) --*

      Minimum storage size for a DB instance.

    - **MaxStorageSize** *(integer) --*

      Maximum storage size for a DB instance.

    - **MinIopsPerDbInstance** *(integer) --*

      Minimum total provisioned IOPS for a DB instance.

    - **MaxIopsPerDbInstance** *(integer) --*

      Maximum total provisioned IOPS for a DB instance.

    - **MinIopsPerGib** *(float) --*

      Minimum provisioned IOPS per GiB for a DB instance.

    - **MaxIopsPerGib** *(float) --*

      Maximum provisioned IOPS per GiB for a DB instance.

    - **AvailableProcessorFeatures** *(list) --*

      A list of the available processor features for the DB instance class of a DB instance.

      - *(dict) --*

        Contains the available processor feature information for the DB instance class of a DB
        instance.

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **DefaultValue** *(string) --*

          The default value for the processor feature of the DB instance class.

        - **AllowedValues** *(string) --*

          The allowed values for the processor feature of the DB instance class.

    - **SupportedEngineModes** *(list) --*

      A list of the supported DB engine modes.

      - *(string) --*

    - **SupportsStorageAutoscaling** *(boolean) --*

      Whether or not Amazon RDS can automatically scale storage for DB instances that use the
      specified instance class.

    - **SupportsKerberosAuthentication** *(boolean) --*

      Whether a DB instance supports Kerberos Authentication.
    """


_ClientDescribeOrderableDbInstanceOptionsResponseTypeDef = TypedDict(
    "_ClientDescribeOrderableDbInstanceOptionsResponseTypeDef",
    {
        "OrderableDBInstanceOptions": List[
            ClientDescribeOrderableDbInstanceOptionsResponseOrderableDBInstanceOptionsTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeOrderableDbInstanceOptionsResponseTypeDef(
    _ClientDescribeOrderableDbInstanceOptionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeOrderableDbInstanceOptions` `Response`

    Contains the result of a successful invocation of the ``DescribeOrderableDBInstanceOptions``
    action.

    - **OrderableDBInstanceOptions** *(list) --*

      An ``OrderableDBInstanceOption`` structure containing information about orderable options for
      the DB instance.

      - *(dict) --*

        Contains a list of available options for a DB instance.

        This data type is used as a response element in the ``DescribeOrderableDBInstanceOptions``
        action.

        - **Engine** *(string) --*

          The engine type of a DB instance.

        - **EngineVersion** *(string) --*

          The engine version of a DB instance.

        - **DBInstanceClass** *(string) --*

          The DB instance class for a DB instance.

        - **LicenseModel** *(string) --*

          The license model for a DB instance.

        - **AvailabilityZones** *(list) --*

          A list of Availability Zones for a DB instance.

          - *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

        - **MultiAZCapable** *(boolean) --*

          Indicates whether a DB instance is Multi-AZ capable.

        - **ReadReplicaCapable** *(boolean) --*

          Indicates whether a DB instance can have a Read Replica.

        - **Vpc** *(boolean) --*

          Indicates whether a DB instance is in a VPC.

        - **SupportsStorageEncryption** *(boolean) --*

          Indicates whether a DB instance supports encrypted storage.

        - **StorageType** *(string) --*

          Indicates the storage type for a DB instance.

        - **SupportsIops** *(boolean) --*

          Indicates whether a DB instance supports provisioned IOPS.

        - **SupportsEnhancedMonitoring** *(boolean) --*

          Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60
          seconds.

        - **SupportsIAMDatabaseAuthentication** *(boolean) --*

          Indicates whether a DB instance supports IAM database authentication.

        - **SupportsPerformanceInsights** *(boolean) --*

          True if a DB instance supports Performance Insights, otherwise false.

        - **MinStorageSize** *(integer) --*

          Minimum storage size for a DB instance.

        - **MaxStorageSize** *(integer) --*

          Maximum storage size for a DB instance.

        - **MinIopsPerDbInstance** *(integer) --*

          Minimum total provisioned IOPS for a DB instance.

        - **MaxIopsPerDbInstance** *(integer) --*

          Maximum total provisioned IOPS for a DB instance.

        - **MinIopsPerGib** *(float) --*

          Minimum provisioned IOPS per GiB for a DB instance.

        - **MaxIopsPerGib** *(float) --*

          Maximum provisioned IOPS per GiB for a DB instance.

        - **AvailableProcessorFeatures** *(list) --*

          A list of the available processor features for the DB instance class of a DB instance.

          - *(dict) --*

            Contains the available processor feature information for the DB instance class of a DB
            instance.

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **DefaultValue** *(string) --*

              The default value for the processor feature of the DB instance class.

            - **AllowedValues** *(string) --*

              The allowed values for the processor feature of the DB instance class.

        - **SupportedEngineModes** *(list) --*

          A list of the supported DB engine modes.

          - *(string) --*

        - **SupportsStorageAutoscaling** *(boolean) --*

          Whether or not Amazon RDS can automatically scale storage for DB instances that use the
          specified instance class.

        - **SupportsKerberosAuthentication** *(boolean) --*

          Whether a DB instance supports Kerberos Authentication.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous OrderableDBInstanceOptions request. If
      this parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .
    """


_ClientDescribePendingMaintenanceActionsFiltersTypeDef = TypedDict(
    "_ClientDescribePendingMaintenanceActionsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribePendingMaintenanceActionsFiltersTypeDef(
    _ClientDescribePendingMaintenanceActionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribePendingMaintenanceActions` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef = TypedDict(
    "_ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef",
    {
        "Action": str,
        "AutoAppliedAfterDate": datetime,
        "ForcedApplyDate": datetime,
        "OptInStatus": str,
        "CurrentApplyDate": datetime,
        "Description": str,
    },
    total=False,
)


class ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef(
    _ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef
):
    """
    Type definition for `ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActions` `PendingMaintenanceActionDetails`

    Provides information about a pending maintenance action for a resource.

    - **Action** *(string) --*

      The type of pending maintenance action that is available for the resource. Valid
      actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

    - **AutoAppliedAfterDate** *(datetime) --*

      The date of the maintenance window when the action is applied. The maintenance action
      is applied to the resource during its first maintenance window after this date.

    - **ForcedApplyDate** *(datetime) --*

      The date when the maintenance action is automatically applied. The maintenance action
      is applied to the resource on this date regardless of the maintenance window for the
      resource.

    - **OptInStatus** *(string) --*

      Indicates the type of opt-in request that has been received for the resource.

    - **CurrentApplyDate** *(datetime) --*

      The effective date when the pending maintenance action is applied to the resource.
      This date takes into account opt-in requests received from the
      ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
      ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
      and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

    - **Description** *(string) --*

      A description providing more detail about the maintenance action.
    """


_ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsTypeDef = TypedDict(
    "_ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsTypeDef",
    {
        "ResourceIdentifier": str,
        "PendingMaintenanceActionDetails": List[
            ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef
        ],
    },
    total=False,
)


class ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsTypeDef(
    _ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsTypeDef
):
    """
    Type definition for `ClientDescribePendingMaintenanceActionsResponse` `PendingMaintenanceActions`

    Describes the pending maintenance actions for a resource.

    - **ResourceIdentifier** *(string) --*

      The ARN of the resource that has pending maintenance actions.

    - **PendingMaintenanceActionDetails** *(list) --*

      A list that provides details about the pending maintenance actions for the resource.

      - *(dict) --*

        Provides information about a pending maintenance action for a resource.

        - **Action** *(string) --*

          The type of pending maintenance action that is available for the resource. Valid
          actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

        - **AutoAppliedAfterDate** *(datetime) --*

          The date of the maintenance window when the action is applied. The maintenance action
          is applied to the resource during its first maintenance window after this date.

        - **ForcedApplyDate** *(datetime) --*

          The date when the maintenance action is automatically applied. The maintenance action
          is applied to the resource on this date regardless of the maintenance window for the
          resource.

        - **OptInStatus** *(string) --*

          Indicates the type of opt-in request that has been received for the resource.

        - **CurrentApplyDate** *(datetime) --*

          The effective date when the pending maintenance action is applied to the resource.
          This date takes into account opt-in requests received from the
          ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
          ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
          and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

        - **Description** *(string) --*

          A description providing more detail about the maintenance action.
    """


_ClientDescribePendingMaintenanceActionsResponseTypeDef = TypedDict(
    "_ClientDescribePendingMaintenanceActionsResponseTypeDef",
    {
        "PendingMaintenanceActions": List[
            ClientDescribePendingMaintenanceActionsResponsePendingMaintenanceActionsTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribePendingMaintenanceActionsResponseTypeDef(
    _ClientDescribePendingMaintenanceActionsResponseTypeDef
):
    """
    Type definition for `ClientDescribePendingMaintenanceActions` `Response`

    Data returned from the **DescribePendingMaintenanceActions** action.

    - **PendingMaintenanceActions** *(list) --*

      A list of the pending maintenance actions for the resource.

      - *(dict) --*

        Describes the pending maintenance actions for a resource.

        - **ResourceIdentifier** *(string) --*

          The ARN of the resource that has pending maintenance actions.

        - **PendingMaintenanceActionDetails** *(list) --*

          A list that provides details about the pending maintenance actions for the resource.

          - *(dict) --*

            Provides information about a pending maintenance action for a resource.

            - **Action** *(string) --*

              The type of pending maintenance action that is available for the resource. Valid
              actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

            - **AutoAppliedAfterDate** *(datetime) --*

              The date of the maintenance window when the action is applied. The maintenance action
              is applied to the resource during its first maintenance window after this date.

            - **ForcedApplyDate** *(datetime) --*

              The date when the maintenance action is automatically applied. The maintenance action
              is applied to the resource on this date regardless of the maintenance window for the
              resource.

            - **OptInStatus** *(string) --*

              Indicates the type of opt-in request that has been received for the resource.

            - **CurrentApplyDate** *(datetime) --*

              The effective date when the pending maintenance action is applied to the resource.
              This date takes into account opt-in requests received from the
              ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
              ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
              and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

            - **Description** *(string) --*

              A description providing more detail about the maintenance action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous ``DescribePendingMaintenanceActions``
      request. If this parameter is specified, the response includes only records beyond the
      marker, up to a number of records specified by ``MaxRecords`` .
    """


_ClientDescribeReservedDbInstancesFiltersTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeReservedDbInstancesFiltersTypeDef(
    _ClientDescribeReservedDbInstancesFiltersTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstances` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeReservedDbInstancesOfferingsFiltersTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesOfferingsFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class ClientDescribeReservedDbInstancesOfferingsFiltersTypeDef(
    _ClientDescribeReservedDbInstancesOfferingsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstancesOfferings` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsRecurringChargesTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsRecurringChargesTypeDef(
    _ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsRecurringChargesTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferings` `RecurringCharges`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``DescribeReservedDBInstancesOfferings`` actions.

    - **RecurringChargeAmount** *(float) --*

      The amount of the recurring charge.

    - **RecurringChargeFrequency** *(string) --*

      The frequency of the recurring charge.
    """


_ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsTypeDef",
    {
        "ReservedDBInstancesOfferingId": str,
        "DBInstanceClass": str,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "ProductDescription": str,
        "OfferingType": str,
        "MultiAZ": bool,
        "RecurringCharges": List[
            ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsRecurringChargesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsTypeDef(
    _ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstancesOfferingsResponse` `ReservedDBInstancesOfferings`

    This data type is used as a response element in the
    ``DescribeReservedDBInstancesOfferings`` action.

    - **ReservedDBInstancesOfferingId** *(string) --*

      The offering identifier.

    - **DBInstanceClass** *(string) --*

      The DB instance class for the reserved DB instance.

    - **Duration** *(integer) --*

      The duration of the offering in seconds.

    - **FixedPrice** *(float) --*

      The fixed price charged for this offering.

    - **UsagePrice** *(float) --*

      The hourly price charged for this offering.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved DB instance offering.

    - **ProductDescription** *(string) --*

      The database engine used by the offering.

    - **OfferingType** *(string) --*

      The offering type.

    - **MultiAZ** *(boolean) --*

      Indicates if the offering applies to Multi-AZ deployments.

    - **RecurringCharges** *(list) --*

      The recurring price charged to run this reserved DB instance.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``DescribeReservedDBInstancesOfferings`` actions.

        - **RecurringChargeAmount** *(float) --*

          The amount of the recurring charge.

        - **RecurringChargeFrequency** *(string) --*

          The frequency of the recurring charge.
    """


_ClientDescribeReservedDbInstancesOfferingsResponseTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesOfferingsResponseTypeDef",
    {
        "Marker": str,
        "ReservedDBInstancesOfferings": List[
            ClientDescribeReservedDbInstancesOfferingsResponseReservedDBInstancesOfferingsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeReservedDbInstancesOfferingsResponseTypeDef(
    _ClientDescribeReservedDbInstancesOfferingsResponseTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstancesOfferings` `Response`

    Contains the result of a successful invocation of the ``DescribeReservedDBInstancesOfferings``
    action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **ReservedDBInstancesOfferings** *(list) --*

      A list of reserved DB instance offerings.

      - *(dict) --*

        This data type is used as a response element in the
        ``DescribeReservedDBInstancesOfferings`` action.

        - **ReservedDBInstancesOfferingId** *(string) --*

          The offering identifier.

        - **DBInstanceClass** *(string) --*

          The DB instance class for the reserved DB instance.

        - **Duration** *(integer) --*

          The duration of the offering in seconds.

        - **FixedPrice** *(float) --*

          The fixed price charged for this offering.

        - **UsagePrice** *(float) --*

          The hourly price charged for this offering.

        - **CurrencyCode** *(string) --*

          The currency code for the reserved DB instance offering.

        - **ProductDescription** *(string) --*

          The database engine used by the offering.

        - **OfferingType** *(string) --*

          The offering type.

        - **MultiAZ** *(boolean) --*

          Indicates if the offering applies to Multi-AZ deployments.

        - **RecurringCharges** *(list) --*

          The recurring price charged to run this reserved DB instance.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeReservedDBInstances`` and
            ``DescribeReservedDBInstancesOfferings`` actions.

            - **RecurringChargeAmount** *(float) --*

              The amount of the recurring charge.

            - **RecurringChargeFrequency** *(string) --*

              The frequency of the recurring charge.
    """


_ClientDescribeReservedDbInstancesResponseReservedDBInstancesRecurringChargesTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesResponseReservedDBInstancesRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientDescribeReservedDbInstancesResponseReservedDBInstancesRecurringChargesTypeDef(
    _ClientDescribeReservedDbInstancesResponseReservedDBInstancesRecurringChargesTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstancesResponseReservedDBInstances` `RecurringCharges`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``DescribeReservedDBInstancesOfferings`` actions.

    - **RecurringChargeAmount** *(float) --*

      The amount of the recurring charge.

    - **RecurringChargeFrequency** *(string) --*

      The frequency of the recurring charge.
    """


_ClientDescribeReservedDbInstancesResponseReservedDBInstancesTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesResponseReservedDBInstancesTypeDef",
    {
        "ReservedDBInstanceId": str,
        "ReservedDBInstancesOfferingId": str,
        "DBInstanceClass": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "DBInstanceCount": int,
        "ProductDescription": str,
        "OfferingType": str,
        "MultiAZ": bool,
        "State": str,
        "RecurringCharges": List[
            ClientDescribeReservedDbInstancesResponseReservedDBInstancesRecurringChargesTypeDef
        ],
        "ReservedDBInstanceArn": str,
        "LeaseId": str,
    },
    total=False,
)


class ClientDescribeReservedDbInstancesResponseReservedDBInstancesTypeDef(
    _ClientDescribeReservedDbInstancesResponseReservedDBInstancesTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstancesResponse` `ReservedDBInstances`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``PurchaseReservedDBInstancesOffering`` actions.

    - **ReservedDBInstanceId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedDBInstancesOfferingId** *(string) --*

      The offering identifier.

    - **DBInstanceClass** *(string) --*

      The DB instance class for the reserved DB instance.

    - **StartTime** *(datetime) --*

      The time the reservation started.

    - **Duration** *(integer) --*

      The duration of the reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed price charged for this reserved DB instance.

    - **UsagePrice** *(float) --*

      The hourly price charged for this reserved DB instance.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved DB instance.

    - **DBInstanceCount** *(integer) --*

      The number of reserved DB instances.

    - **ProductDescription** *(string) --*

      The description of the reserved DB instance.

    - **OfferingType** *(string) --*

      The offering type of this reserved DB instance.

    - **MultiAZ** *(boolean) --*

      Indicates if the reservation applies to Multi-AZ deployments.

    - **State** *(string) --*

      The state of the reserved DB instance.

    - **RecurringCharges** *(list) --*

      The recurring price charged to run this reserved DB instance.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``DescribeReservedDBInstancesOfferings`` actions.

        - **RecurringChargeAmount** *(float) --*

          The amount of the recurring charge.

        - **RecurringChargeFrequency** *(string) --*

          The frequency of the recurring charge.

    - **ReservedDBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the reserved DB instance.

    - **LeaseId** *(string) --*

      The unique identifier for the lease associated with the reserved DB instance.

      .. note::

        AWS Support might request the lease ID for an issue related to a reserved DB instance.
    """


_ClientDescribeReservedDbInstancesResponseTypeDef = TypedDict(
    "_ClientDescribeReservedDbInstancesResponseTypeDef",
    {
        "Marker": str,
        "ReservedDBInstances": List[
            ClientDescribeReservedDbInstancesResponseReservedDBInstancesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeReservedDbInstancesResponseTypeDef(
    _ClientDescribeReservedDbInstancesResponseTypeDef
):
    """
    Type definition for `ClientDescribeReservedDbInstances` `Response`

    Contains the result of a successful invocation of the ``DescribeReservedDBInstances`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **ReservedDBInstances** *(list) --*

      A list of reserved DB instances.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``PurchaseReservedDBInstancesOffering`` actions.

        - **ReservedDBInstanceId** *(string) --*

          The unique identifier for the reservation.

        - **ReservedDBInstancesOfferingId** *(string) --*

          The offering identifier.

        - **DBInstanceClass** *(string) --*

          The DB instance class for the reserved DB instance.

        - **StartTime** *(datetime) --*

          The time the reservation started.

        - **Duration** *(integer) --*

          The duration of the reservation in seconds.

        - **FixedPrice** *(float) --*

          The fixed price charged for this reserved DB instance.

        - **UsagePrice** *(float) --*

          The hourly price charged for this reserved DB instance.

        - **CurrencyCode** *(string) --*

          The currency code for the reserved DB instance.

        - **DBInstanceCount** *(integer) --*

          The number of reserved DB instances.

        - **ProductDescription** *(string) --*

          The description of the reserved DB instance.

        - **OfferingType** *(string) --*

          The offering type of this reserved DB instance.

        - **MultiAZ** *(boolean) --*

          Indicates if the reservation applies to Multi-AZ deployments.

        - **State** *(string) --*

          The state of the reserved DB instance.

        - **RecurringCharges** *(list) --*

          The recurring price charged to run this reserved DB instance.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeReservedDBInstances`` and
            ``DescribeReservedDBInstancesOfferings`` actions.

            - **RecurringChargeAmount** *(float) --*

              The amount of the recurring charge.

            - **RecurringChargeFrequency** *(string) --*

              The frequency of the recurring charge.

        - **ReservedDBInstanceArn** *(string) --*

          The Amazon Resource Name (ARN) for the reserved DB instance.

        - **LeaseId** *(string) --*

          The unique identifier for the lease associated with the reserved DB instance.

          .. note::

            AWS Support might request the lease ID for an issue related to a reserved DB instance.
    """


_ClientDescribeSourceRegionsFiltersTypeDef = TypedDict(
    "_ClientDescribeSourceRegionsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeSourceRegionsFiltersTypeDef(
    _ClientDescribeSourceRegionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeSourceRegions` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientDescribeSourceRegionsResponseSourceRegionsTypeDef = TypedDict(
    "_ClientDescribeSourceRegionsResponseSourceRegionsTypeDef",
    {"RegionName": str, "Endpoint": str, "Status": str},
    total=False,
)


class ClientDescribeSourceRegionsResponseSourceRegionsTypeDef(
    _ClientDescribeSourceRegionsResponseSourceRegionsTypeDef
):
    """
    Type definition for `ClientDescribeSourceRegionsResponse` `SourceRegions`

    Contains an AWS Region name as the result of a successful call to the
    ``DescribeSourceRegions`` action.

    - **RegionName** *(string) --*

      The name of the source AWS Region.

    - **Endpoint** *(string) --*

      The endpoint for the source AWS Region endpoint.

    - **Status** *(string) --*

      The status of the source AWS Region.
    """


_ClientDescribeSourceRegionsResponseTypeDef = TypedDict(
    "_ClientDescribeSourceRegionsResponseTypeDef",
    {
        "Marker": str,
        "SourceRegions": List[ClientDescribeSourceRegionsResponseSourceRegionsTypeDef],
    },
    total=False,
)


class ClientDescribeSourceRegionsResponseTypeDef(
    _ClientDescribeSourceRegionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeSourceRegions` `Response`

    Contains the result of a successful invocation of the ``DescribeSourceRegions`` action.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous request. If this parameter is specified,
      the response includes only records beyond the marker, up to the value specified by
      ``MaxRecords`` .

    - **SourceRegions** *(list) --*

      A list of SourceRegion instances that contains each source AWS Region that the current AWS
      Region can get a Read Replica or a DB snapshot from.

      - *(dict) --*

        Contains an AWS Region name as the result of a successful call to the
        ``DescribeSourceRegions`` action.

        - **RegionName** *(string) --*

          The name of the source AWS Region.

        - **Endpoint** *(string) --*

          The endpoint for the source AWS Region endpoint.

        - **Status** *(string) --*

          The status of the source AWS Region.
    """


_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageIopsToStorageRatioTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageIopsToStorageRatioTypeDef",
    {"From": float, "To": float},
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageIopsToStorageRatioTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageIopsToStorageRatioTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorage` `IopsToStorageRatio`

    A range of double values.

    - **From** *(float) --*

      The minimum value in the range.

    - **To** *(float) --*

      The maximum value in the range.
    """


_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageProvisionedIopsTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageProvisionedIopsTypeDef",
    {"From": int, "To": int, "Step": int},
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageProvisionedIopsTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageProvisionedIopsTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorage` `ProvisionedIops`

    A range of integer values.

    - **From** *(integer) --*

      The minimum value in the range.

    - **To** *(integer) --*

      The maximum value in the range.

    - **Step** *(integer) --*

      The step value for the range. For example, if you have a range of 5,000 to 10,000,
      with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
      Even though 7,500 is within the range, it isn't a valid value for the range. The
      valid values are 5,000, 6,000, 7,000, 8,000...
    """


_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageStorageSizeTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageStorageSizeTypeDef",
    {"From": int, "To": int, "Step": int},
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageStorageSizeTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageStorageSizeTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorage` `StorageSize`

    A range of integer values.

    - **From** *(integer) --*

      The minimum value in the range.

    - **To** *(integer) --*

      The maximum value in the range.

    - **Step** *(integer) --*

      The step value for the range. For example, if you have a range of 5,000 to 10,000,
      with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
      Even though 7,500 is within the range, it isn't a valid value for the range. The
      valid values are 5,000, 6,000, 7,000, 8,000...
    """


_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageTypeDef",
    {
        "StorageType": str,
        "StorageSize": List[
            ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageStorageSizeTypeDef
        ],
        "ProvisionedIops": List[
            ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageProvisionedIopsTypeDef
        ],
        "IopsToStorageRatio": List[
            ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageIopsToStorageRatioTypeDef
        ],
        "SupportsStorageAutoscaling": bool,
    },
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessage` `Storage`

    Information about valid modifications that you can make to your DB instance. Contains the
    result of a successful call to the ``DescribeValidDBInstanceModifications`` action.

    - **StorageType** *(string) --*

      The valid storage types for your DB instance. For example, gp2, io1.

    - **StorageSize** *(list) --*

      The valid range of storage in gibibytes. For example, 100 to 16384.

      - *(dict) --*

        A range of integer values.

        - **From** *(integer) --*

          The minimum value in the range.

        - **To** *(integer) --*

          The maximum value in the range.

        - **Step** *(integer) --*

          The step value for the range. For example, if you have a range of 5,000 to 10,000,
          with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
          Even though 7,500 is within the range, it isn't a valid value for the range. The
          valid values are 5,000, 6,000, 7,000, 8,000...

    - **ProvisionedIops** *(list) --*

      The valid range of provisioned IOPS. For example, 1000-20000.

      - *(dict) --*

        A range of integer values.

        - **From** *(integer) --*

          The minimum value in the range.

        - **To** *(integer) --*

          The maximum value in the range.

        - **Step** *(integer) --*

          The step value for the range. For example, if you have a range of 5,000 to 10,000,
          with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
          Even though 7,500 is within the range, it isn't a valid value for the range. The
          valid values are 5,000, 6,000, 7,000, 8,000...

    - **IopsToStorageRatio** *(list) --*

      The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example,
      3-10, which means that provisioned IOPS can be between 3 and 10 times storage.

      - *(dict) --*

        A range of double values.

        - **From** *(float) --*

          The minimum value in the range.

        - **To** *(float) --*

          The maximum value in the range.

    - **SupportsStorageAutoscaling** *(boolean) --*

      Whether or not Amazon RDS can automatically scale storage for DB instances that use the
      new instance class.
    """


_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageValidProcessorFeaturesTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageValidProcessorFeaturesTypeDef",
    {"Name": str, "DefaultValue": str, "AllowedValues": str},
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageValidProcessorFeaturesTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageValidProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessage` `ValidProcessorFeatures`

    Contains the available processor feature information for the DB instance class of a DB
    instance.

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **DefaultValue** *(string) --*

      The default value for the processor feature of the DB instance class.

    - **AllowedValues** *(string) --*

      The allowed values for the processor feature of the DB instance class.
    """


_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageTypeDef",
    {
        "Storage": List[
            ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageStorageTypeDef
        ],
        "ValidProcessorFeatures": List[
            ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageValidProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModificationsResponse` `ValidDBInstanceModificationsMessage`

    Information about valid modifications that you can make to your DB instance. Contains the
    result of a successful call to the ``DescribeValidDBInstanceModifications`` action. You can
    use this information when you call ``ModifyDBInstance`` .

    - **Storage** *(list) --*

      Valid storage options for your DB instance.

      - *(dict) --*

        Information about valid modifications that you can make to your DB instance. Contains the
        result of a successful call to the ``DescribeValidDBInstanceModifications`` action.

        - **StorageType** *(string) --*

          The valid storage types for your DB instance. For example, gp2, io1.

        - **StorageSize** *(list) --*

          The valid range of storage in gibibytes. For example, 100 to 16384.

          - *(dict) --*

            A range of integer values.

            - **From** *(integer) --*

              The minimum value in the range.

            - **To** *(integer) --*

              The maximum value in the range.

            - **Step** *(integer) --*

              The step value for the range. For example, if you have a range of 5,000 to 10,000,
              with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
              Even though 7,500 is within the range, it isn't a valid value for the range. The
              valid values are 5,000, 6,000, 7,000, 8,000...

        - **ProvisionedIops** *(list) --*

          The valid range of provisioned IOPS. For example, 1000-20000.

          - *(dict) --*

            A range of integer values.

            - **From** *(integer) --*

              The minimum value in the range.

            - **To** *(integer) --*

              The maximum value in the range.

            - **Step** *(integer) --*

              The step value for the range. For example, if you have a range of 5,000 to 10,000,
              with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
              Even though 7,500 is within the range, it isn't a valid value for the range. The
              valid values are 5,000, 6,000, 7,000, 8,000...

        - **IopsToStorageRatio** *(list) --*

          The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example,
          3-10, which means that provisioned IOPS can be between 3 and 10 times storage.

          - *(dict) --*

            A range of double values.

            - **From** *(float) --*

              The minimum value in the range.

            - **To** *(float) --*

              The maximum value in the range.

        - **SupportsStorageAutoscaling** *(boolean) --*

          Whether or not Amazon RDS can automatically scale storage for DB instances that use the
          new instance class.

    - **ValidProcessorFeatures** *(list) --*

      Valid processor features for your DB instance.

      - *(dict) --*

        Contains the available processor feature information for the DB instance class of a DB
        instance.

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **DefaultValue** *(string) --*

          The default value for the processor feature of the DB instance class.

        - **AllowedValues** *(string) --*

          The allowed values for the processor feature of the DB instance class.
    """


_ClientDescribeValidDbInstanceModificationsResponseTypeDef = TypedDict(
    "_ClientDescribeValidDbInstanceModificationsResponseTypeDef",
    {
        "ValidDBInstanceModificationsMessage": ClientDescribeValidDbInstanceModificationsResponseValidDBInstanceModificationsMessageTypeDef
    },
    total=False,
)


class ClientDescribeValidDbInstanceModificationsResponseTypeDef(
    _ClientDescribeValidDbInstanceModificationsResponseTypeDef
):
    """
    Type definition for `ClientDescribeValidDbInstanceModifications` `Response`

    - **ValidDBInstanceModificationsMessage** *(dict) --*

      Information about valid modifications that you can make to your DB instance. Contains the
      result of a successful call to the ``DescribeValidDBInstanceModifications`` action. You can
      use this information when you call ``ModifyDBInstance`` .

      - **Storage** *(list) --*

        Valid storage options for your DB instance.

        - *(dict) --*

          Information about valid modifications that you can make to your DB instance. Contains the
          result of a successful call to the ``DescribeValidDBInstanceModifications`` action.

          - **StorageType** *(string) --*

            The valid storage types for your DB instance. For example, gp2, io1.

          - **StorageSize** *(list) --*

            The valid range of storage in gibibytes. For example, 100 to 16384.

            - *(dict) --*

              A range of integer values.

              - **From** *(integer) --*

                The minimum value in the range.

              - **To** *(integer) --*

                The maximum value in the range.

              - **Step** *(integer) --*

                The step value for the range. For example, if you have a range of 5,000 to 10,000,
                with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
                Even though 7,500 is within the range, it isn't a valid value for the range. The
                valid values are 5,000, 6,000, 7,000, 8,000...

          - **ProvisionedIops** *(list) --*

            The valid range of provisioned IOPS. For example, 1000-20000.

            - *(dict) --*

              A range of integer values.

              - **From** *(integer) --*

                The minimum value in the range.

              - **To** *(integer) --*

                The maximum value in the range.

              - **Step** *(integer) --*

                The step value for the range. For example, if you have a range of 5,000 to 10,000,
                with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
                Even though 7,500 is within the range, it isn't a valid value for the range. The
                valid values are 5,000, 6,000, 7,000, 8,000...

          - **IopsToStorageRatio** *(list) --*

            The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example,
            3-10, which means that provisioned IOPS can be between 3 and 10 times storage.

            - *(dict) --*

              A range of double values.

              - **From** *(float) --*

                The minimum value in the range.

              - **To** *(float) --*

                The maximum value in the range.

          - **SupportsStorageAutoscaling** *(boolean) --*

            Whether or not Amazon RDS can automatically scale storage for DB instances that use the
            new instance class.

      - **ValidProcessorFeatures** *(list) --*

        Valid processor features for your DB instance.

        - *(dict) --*

          Contains the available processor feature information for the DB instance class of a DB
          instance.

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **DefaultValue** *(string) --*

            The default value for the processor feature of the DB instance class.

          - **AllowedValues** *(string) --*

            The allowed values for the processor feature of the DB instance class.
    """


_ClientDownloadDbLogFilePortionResponseTypeDef = TypedDict(
    "_ClientDownloadDbLogFilePortionResponseTypeDef",
    {"LogFileData": str, "Marker": str, "AdditionalDataPending": bool},
    total=False,
)


class ClientDownloadDbLogFilePortionResponseTypeDef(
    _ClientDownloadDbLogFilePortionResponseTypeDef
):
    """
    Type definition for `ClientDownloadDbLogFilePortion` `Response`

    This data type is used as a response element to ``DownloadDBLogFilePortion`` .

    - **LogFileData** *(string) --*

      Entries from the specified log file.

    - **Marker** *(string) --*

      A pagination token that can be used in a subsequent DownloadDBLogFilePortion request.

    - **AdditionalDataPending** *(boolean) --*

      Boolean value that if true, indicates there is more data to be downloaded.
    """


_ClientFailoverDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientFailoverDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientFailoverDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientFailoverDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientFailoverDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientFailoverDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientFailoverDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientFailoverDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientFailoverDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientFailoverDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientFailoverDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientFailoverDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientFailoverDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientFailoverDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientFailoverDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientFailoverDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientFailoverDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientFailoverDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientFailoverDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientFailoverDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientFailoverDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientFailoverDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientFailoverDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientFailoverDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientFailoverDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientFailoverDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientFailoverDbClusterResponseDBClusterTypeDef(
    _ClientFailoverDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientFailoverDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientFailoverDbClusterResponseTypeDef = TypedDict(
    "_ClientFailoverDbClusterResponseTypeDef",
    {"DBCluster": ClientFailoverDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientFailoverDbClusterResponseTypeDef(_ClientFailoverDbClusterResponseTypeDef):
    """
    Type definition for `ClientFailoverDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientImportInstallationMediaResponseFailureCauseTypeDef = TypedDict(
    "_ClientImportInstallationMediaResponseFailureCauseTypeDef",
    {"Message": str},
    total=False,
)


class ClientImportInstallationMediaResponseFailureCauseTypeDef(
    _ClientImportInstallationMediaResponseFailureCauseTypeDef
):
    """
    Type definition for `ClientImportInstallationMediaResponse` `FailureCause`

    If an installation media failure occurred, the cause of the failure.

    - **Message** *(string) --*

      The reason that an installation media import failed.
    """


_ClientImportInstallationMediaResponseTypeDef = TypedDict(
    "_ClientImportInstallationMediaResponseTypeDef",
    {
        "InstallationMediaId": str,
        "CustomAvailabilityZoneId": str,
        "Engine": str,
        "EngineVersion": str,
        "EngineInstallationMediaPath": str,
        "OSInstallationMediaPath": str,
        "Status": str,
        "FailureCause": ClientImportInstallationMediaResponseFailureCauseTypeDef,
    },
    total=False,
)


class ClientImportInstallationMediaResponseTypeDef(
    _ClientImportInstallationMediaResponseTypeDef
):
    """
    Type definition for `ClientImportInstallationMedia` `Response`

    Contains the installation media for a DB engine that requires an on-premises customer provided
    license, such as Microsoft SQL Server.

    - **InstallationMediaId** *(string) --*

      The installation medium ID.

    - **CustomAvailabilityZoneId** *(string) --*

      The custom Availability Zone (AZ) that contains the installation media.

    - **Engine** *(string) --*

      The DB engine.

    - **EngineVersion** *(string) --*

      The engine version of the DB engine.

    - **EngineInstallationMediaPath** *(string) --*

      The path to the installation medium for the DB engine.

    - **OSInstallationMediaPath** *(string) --*

      The path to the installation medium for the operating system associated with the DB engine.

    - **Status** *(string) --*

      The status of the installation medium.

    - **FailureCause** *(dict) --*

      If an installation media failure occurred, the cause of the failure.

      - **Message** *(string) --*

        The reason that an installation media import failed.
    """


_ClientListTagsForResourceFiltersTypeDef = TypedDict(
    "_ClientListTagsForResourceFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientListTagsForResourceFiltersTypeDef(_ClientListTagsForResourceFiltersTypeDef):
    """
    Type definition for `ClientListTagsForResource` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_ClientListTagsForResourceResponseTagListTypeDef = TypedDict(
    "_ClientListTagsForResourceResponseTagListTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientListTagsForResourceResponseTagListTypeDef(
    _ClientListTagsForResourceResponseTagListTypeDef
):
    """
    Type definition for `ClientListTagsForResourceResponse` `TagList`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only
      contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+',
      '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only
      contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+',
      '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientListTagsForResourceResponseTypeDef = TypedDict(
    "_ClientListTagsForResourceResponseTypeDef",
    {"TagList": List[ClientListTagsForResourceResponseTagListTypeDef]},
    total=False,
)


class ClientListTagsForResourceResponseTypeDef(
    _ClientListTagsForResourceResponseTypeDef
):
    """
    Type definition for `ClientListTagsForResource` `Response`

    - **TagList** *(list) --*

      List of tags returned by the ListTagsForResource operation.

      - *(dict) --*

        Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

        - **Key** *(string) --*

          A key is the required name of the tag. The string value can be from 1 to 128 Unicode
          characters in length and can't be prefixed with "aws:" or "rds:". The string can only
          contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+',
          '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

        - **Value** *(string) --*

          A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
          characters in length and can't be prefixed with "aws:" or "rds:". The string can only
          contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+',
          '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientModifyCurrentDbClusterCapacityResponseTypeDef = TypedDict(
    "_ClientModifyCurrentDbClusterCapacityResponseTypeDef",
    {
        "DBClusterIdentifier": str,
        "PendingCapacity": int,
        "CurrentCapacity": int,
        "SecondsBeforeTimeout": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientModifyCurrentDbClusterCapacityResponseTypeDef(
    _ClientModifyCurrentDbClusterCapacityResponseTypeDef
):
    """
    Type definition for `ClientModifyCurrentDbClusterCapacity` `Response`

    - **DBClusterIdentifier** *(string) --*

      A user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB
      cluster.

    - **PendingCapacity** *(integer) --*

      A value that specifies the capacity that the DB cluster scales to next.

    - **CurrentCapacity** *(integer) --*

      The current capacity of the DB cluster.

    - **SecondsBeforeTimeout** *(integer) --*

      The number of seconds before a call to ``ModifyCurrentDBClusterCapacity`` times out.

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientModifyDbClusterCloudwatchLogsExportConfigurationTypeDef = TypedDict(
    "_ClientModifyDbClusterCloudwatchLogsExportConfigurationTypeDef",
    {"EnableLogTypes": List[str], "DisableLogTypes": List[str]},
    total=False,
)


class ClientModifyDbClusterCloudwatchLogsExportConfigurationTypeDef(
    _ClientModifyDbClusterCloudwatchLogsExportConfigurationTypeDef
):
    """
    Type definition for `ClientModifyDbCluster` `CloudwatchLogsExportConfiguration`

    The configuration setting for the log types to be enabled for export to CloudWatch Logs for a
    specific DB cluster.

    - **EnableLogTypes** *(list) --*

      The list of log types to enable.

      - *(string) --*

    - **DisableLogTypes** *(list) --*

      The list of log types to disable.

      - *(string) --*
    """


_ClientModifyDbClusterEndpointResponseTypeDef = TypedDict(
    "_ClientModifyDbClusterEndpointResponseTypeDef",
    {
        "DBClusterEndpointIdentifier": str,
        "DBClusterIdentifier": str,
        "DBClusterEndpointResourceIdentifier": str,
        "Endpoint": str,
        "Status": str,
        "EndpointType": str,
        "CustomEndpointType": str,
        "StaticMembers": List[str],
        "ExcludedMembers": List[str],
        "DBClusterEndpointArn": str,
    },
    total=False,
)


class ClientModifyDbClusterEndpointResponseTypeDef(
    _ClientModifyDbClusterEndpointResponseTypeDef
):
    """
    Type definition for `ClientModifyDbClusterEndpoint` `Response`

    This data type represents the information you need to connect to an Amazon Aurora DB cluster.
    This data type is used as a response element in the following actions:

    * ``CreateDBClusterEndpoint``

    * ``DescribeDBClusterEndpoints``

    * ``ModifyDBClusterEndpoint``

    * ``DeleteDBClusterEndpoint``

    For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

    - **DBClusterEndpointIdentifier** *(string) --*

      The identifier associated with the endpoint. This parameter is stored as a lowercase string.

    - **DBClusterIdentifier** *(string) --*

      The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is
      stored as a lowercase string.

    - **DBClusterEndpointResourceIdentifier** *(string) --*

      A unique system-generated identifier for an endpoint. It remains the same for the whole life
      of the endpoint.

    - **Endpoint** *(string) --*

      The DNS address of the endpoint.

    - **Status** *(string) --*

      The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
      ``modifying`` .

    - **EndpointType** *(string) --*

      The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

    - **CustomEndpointType** *(string) --*

      The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

    - **StaticMembers** *(list) --*

      List of DB instance identifiers that are part of the custom endpoint group.

      - *(string) --*

    - **ExcludedMembers** *(list) --*

      List of DB instance identifiers that aren't part of the custom endpoint group. All other
      eligible instances are reachable through the custom endpoint. Only relevant if the list of
      static members is empty.

      - *(string) --*

    - **DBClusterEndpointArn** *(string) --*

      The Amazon Resource Name (ARN) for the endpoint.
    """


_ClientModifyDbClusterParameterGroupParametersTypeDef = TypedDict(
    "_ClientModifyDbClusterParameterGroupParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientModifyDbClusterParameterGroupParametersTypeDef(
    _ClientModifyDbClusterParameterGroupParametersTypeDef
):
    """
    Type definition for `ClientModifyDbClusterParameterGroup` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientModifyDbClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientModifyDbClusterParameterGroupResponseTypeDef",
    {"DBClusterParameterGroupName": str},
    total=False,
)


class ClientModifyDbClusterParameterGroupResponseTypeDef(
    _ClientModifyDbClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientModifyDbClusterParameterGroup` `Response`

    - **DBClusterParameterGroupName** *(string) --*

      The name of the DB cluster parameter group.

      Constraints:

      * Must be 1 to 255 letters or numbers.

      * First character must be a letter

      * Can't end with a hyphen or contain two consecutive hyphens

      .. note::

        This value is stored as a lowercase string.
    """


_ClientModifyDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientModifyDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientModifyDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientModifyDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientModifyDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientModifyDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientModifyDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientModifyDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientModifyDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientModifyDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientModifyDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientModifyDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientModifyDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientModifyDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientModifyDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientModifyDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientModifyDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientModifyDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientModifyDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientModifyDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientModifyDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientModifyDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientModifyDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientModifyDbClusterResponseDBClusterTypeDef(
    _ClientModifyDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientModifyDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientModifyDbClusterResponseTypeDef = TypedDict(
    "_ClientModifyDbClusterResponseTypeDef",
    {"DBCluster": ClientModifyDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientModifyDbClusterResponseTypeDef(_ClientModifyDbClusterResponseTypeDef):
    """
    Type definition for `ClientModifyDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientModifyDbClusterScalingConfigurationTypeDef = TypedDict(
    "_ClientModifyDbClusterScalingConfigurationTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientModifyDbClusterScalingConfigurationTypeDef(
    _ClientModifyDbClusterScalingConfigurationTypeDef
):
    """
    Type definition for `ClientModifyDbCluster` `ScalingConfiguration`

    The scaling properties of the DB cluster. You can only modify scaling properties for DB clusters
    in ``serverless`` DB engine mode.

    - **MinCapacity** *(integer) --*

      The minimum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      For Aurora MySQL, valid capacity values are ``1`` , ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``128`` , and ``256`` .

      For Aurora PostgreSQL, valid capacity values are ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``192`` , and ``384`` .

      The minimum capacity must be less than or equal to the maximum capacity.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      For Aurora MySQL, valid capacity values are ``1`` , ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``128`` , and ``256`` .

      For Aurora PostgreSQL, valid capacity values are ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``192`` , and ``384`` .

      The maximum capacity must be greater than or equal to the minimum capacity.

    - **AutoPause** *(boolean) --*

      A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in
      ``serverless`` DB engine mode. A DB cluster can be paused only when it's idle (it has no
      connections).

      .. note::

        If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a
        snapshot. In this case, the DB cluster is restored when there is a request to connect to it.

    - **SecondsUntilAutoPause** *(integer) --*

      The time, in seconds, before an Aurora DB cluster in ``serverless`` mode is paused.

    - **TimeoutAction** *(string) --*

      The action to take when the timeout is reached, either ``ForceApplyCapacityChange`` or
      ``RollbackCapacityChange`` .

       ``ForceApplyCapacityChange`` sets the capacity to the specified value as soon as possible.

       ``RollbackCapacityChange`` , the default, ignores the capacity change if a scaling point isn't
       found in the timeout period.

      .. warning::

        If you specify ``ForceApplyCapacityChange`` , connections that prevent Aurora Serverless from
        finding a scaling point might be dropped.

      For more information, see `Autoscaling for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef = TypedDict(
    "_ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef",
    {"AttributeName": str, "AttributeValues": List[str]},
    total=False,
)


class ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef(
    _ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef
):
    """
    Type definition for `ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResult` `DBClusterSnapshotAttributes`

    Contains the name and values of a manual DB cluster snapshot attribute.

    Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore
    a manual DB cluster snapshot. For more information, see the
    ``ModifyDBClusterSnapshotAttribute`` API action.

    - **AttributeName** *(string) --*

      The name of the manual DB cluster snapshot attribute.

      The attribute named ``restore`` refers to the list of AWS accounts that have permission
      to copy or restore the manual DB cluster snapshot. For more information, see the
      ``ModifyDBClusterSnapshotAttribute`` API action.

    - **AttributeValues** *(list) --*

      The value(s) for the manual DB cluster snapshot attribute.

      If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
      of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster
      snapshot. If a value of ``all`` is in the list, then the manual DB cluster snapshot is
      public and available for any AWS account to copy or restore.

      - *(string) --*
    """


_ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultTypeDef = TypedDict(
    "_ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultTypeDef",
    {
        "DBClusterSnapshotIdentifier": str,
        "DBClusterSnapshotAttributes": List[
            ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultDBClusterSnapshotAttributesTypeDef
        ],
    },
    total=False,
)


class ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultTypeDef(
    _ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultTypeDef
):
    """
    Type definition for `ClientModifyDbClusterSnapshotAttributeResponse` `DBClusterSnapshotAttributesResult`

    Contains the results of a successful call to the ``DescribeDBClusterSnapshotAttributes`` API
    action.

    Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or
    restore a manual DB cluster snapshot. For more information, see the
    ``ModifyDBClusterSnapshotAttribute`` API action.

    - **DBClusterSnapshotIdentifier** *(string) --*

      The identifier of the manual DB cluster snapshot that the attributes apply to.

    - **DBClusterSnapshotAttributes** *(list) --*

      The list of attributes and values for the manual DB cluster snapshot.

      - *(dict) --*

        Contains the name and values of a manual DB cluster snapshot attribute.

        Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore
        a manual DB cluster snapshot. For more information, see the
        ``ModifyDBClusterSnapshotAttribute`` API action.

        - **AttributeName** *(string) --*

          The name of the manual DB cluster snapshot attribute.

          The attribute named ``restore`` refers to the list of AWS accounts that have permission
          to copy or restore the manual DB cluster snapshot. For more information, see the
          ``ModifyDBClusterSnapshotAttribute`` API action.

        - **AttributeValues** *(list) --*

          The value(s) for the manual DB cluster snapshot attribute.

          If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
          of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster
          snapshot. If a value of ``all`` is in the list, then the manual DB cluster snapshot is
          public and available for any AWS account to copy or restore.

          - *(string) --*
    """


_ClientModifyDbClusterSnapshotAttributeResponseTypeDef = TypedDict(
    "_ClientModifyDbClusterSnapshotAttributeResponseTypeDef",
    {
        "DBClusterSnapshotAttributesResult": ClientModifyDbClusterSnapshotAttributeResponseDBClusterSnapshotAttributesResultTypeDef
    },
    total=False,
)


class ClientModifyDbClusterSnapshotAttributeResponseTypeDef(
    _ClientModifyDbClusterSnapshotAttributeResponseTypeDef
):
    """
    Type definition for `ClientModifyDbClusterSnapshotAttribute` `Response`

    - **DBClusterSnapshotAttributesResult** *(dict) --*

      Contains the results of a successful call to the ``DescribeDBClusterSnapshotAttributes`` API
      action.

      Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or
      restore a manual DB cluster snapshot. For more information, see the
      ``ModifyDBClusterSnapshotAttribute`` API action.

      - **DBClusterSnapshotIdentifier** *(string) --*

        The identifier of the manual DB cluster snapshot that the attributes apply to.

      - **DBClusterSnapshotAttributes** *(list) --*

        The list of attributes and values for the manual DB cluster snapshot.

        - *(dict) --*

          Contains the name and values of a manual DB cluster snapshot attribute.

          Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore
          a manual DB cluster snapshot. For more information, see the
          ``ModifyDBClusterSnapshotAttribute`` API action.

          - **AttributeName** *(string) --*

            The name of the manual DB cluster snapshot attribute.

            The attribute named ``restore`` refers to the list of AWS accounts that have permission
            to copy or restore the manual DB cluster snapshot. For more information, see the
            ``ModifyDBClusterSnapshotAttribute`` API action.

          - **AttributeValues** *(list) --*

            The value(s) for the manual DB cluster snapshot attribute.

            If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
            of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster
            snapshot. If a value of ``all`` is in the list, then the manual DB cluster snapshot is
            public and available for any AWS account to copy or restore.

            - *(string) --*
    """


_ClientModifyDbInstanceCloudwatchLogsExportConfigurationTypeDef = TypedDict(
    "_ClientModifyDbInstanceCloudwatchLogsExportConfigurationTypeDef",
    {"EnableLogTypes": List[str], "DisableLogTypes": List[str]},
    total=False,
)


class ClientModifyDbInstanceCloudwatchLogsExportConfigurationTypeDef(
    _ClientModifyDbInstanceCloudwatchLogsExportConfigurationTypeDef
):
    """
    Type definition for `ClientModifyDbInstance` `CloudwatchLogsExportConfiguration`

    The configuration setting for the log types to be enabled for export to CloudWatch Logs for a
    specific DB instance.

    A change to the ``CloudwatchLogsExportConfiguration`` parameter is always applied to the DB
    instance immediately. Therefore, the ``ApplyImmediately`` parameter has no effect.

    - **EnableLogTypes** *(list) --*

      The list of log types to enable.

      - *(string) --*

    - **DisableLogTypes** *(list) --*

      The list of log types to disable.

      - *(string) --*
    """


_ClientModifyDbInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientModifyDbInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientModifyDbInstanceProcessorFeaturesTypeDef(
    _ClientModifyDbInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientModifyDbInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature name
    for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you call one
    of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientModifyDbInstanceResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceAssociatedRolesTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientModifyDbInstanceResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientModifyDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientModifyDbInstanceResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceDomainMembershipsTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientModifyDbInstanceResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceEndpointTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientModifyDbInstanceResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceListenerEndpointTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientModifyDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientModifyDbInstanceResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientModifyDbInstanceResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceStatusInfosTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientModifyDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyDbInstanceResponseDBInstanceTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientModifyDbInstanceResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientModifyDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientModifyDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientModifyDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientModifyDbInstanceResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientModifyDbInstanceResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientModifyDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[ClientModifyDbInstanceResponseDBInstanceStatusInfosTypeDef],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientModifyDbInstanceResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientModifyDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientModifyDbInstanceResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientModifyDbInstanceResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientModifyDbInstanceResponseDBInstanceTypeDef(
    _ClientModifyDbInstanceResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientModifyDbInstanceResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientModifyDbInstanceResponseTypeDef = TypedDict(
    "_ClientModifyDbInstanceResponseTypeDef",
    {"DBInstance": ClientModifyDbInstanceResponseDBInstanceTypeDef},
    total=False,
)


class ClientModifyDbInstanceResponseTypeDef(_ClientModifyDbInstanceResponseTypeDef):
    """
    Type definition for `ClientModifyDbInstance` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientModifyDbParameterGroupParametersTypeDef = TypedDict(
    "_ClientModifyDbParameterGroupParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientModifyDbParameterGroupParametersTypeDef(
    _ClientModifyDbParameterGroupParametersTypeDef
):
    """
    Type definition for `ClientModifyDbParameterGroup` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientModifyDbParameterGroupResponseTypeDef = TypedDict(
    "_ClientModifyDbParameterGroupResponseTypeDef",
    {"DBParameterGroupName": str},
    total=False,
)


class ClientModifyDbParameterGroupResponseTypeDef(
    _ClientModifyDbParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientModifyDbParameterGroup` `Response`

    Contains the result of a successful invocation of the ``ModifyDBParameterGroup`` or
    ``ResetDBParameterGroup`` action.

    - **DBParameterGroupName** *(string) --*

      Provides the name of the DB parameter group.
    """


_ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef = TypedDict(
    "_ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef",
    {"AttributeName": str, "AttributeValues": List[str]},
    total=False,
)


class ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef(
    _ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef
):
    """
    Type definition for `ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResult` `DBSnapshotAttributes`

    Contains the name and values of a manual DB snapshot attribute

    Manual DB snapshot attributes are used to authorize other AWS accounts to restore a
    manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API.

    - **AttributeName** *(string) --*

      The name of the manual DB snapshot attribute.

      The attribute named ``restore`` refers to the list of AWS accounts that have permission
      to copy or restore the manual DB cluster snapshot. For more information, see the
      ``ModifyDBSnapshotAttribute`` API action.

    - **AttributeValues** *(list) --*

      The value or values for the manual DB snapshot attribute.

      If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
      of IDs of the AWS accounts that are authorized to copy or restore the manual DB
      snapshot. If a value of ``all`` is in the list, then the manual DB snapshot is public
      and available for any AWS account to copy or restore.

      - *(string) --*
    """


_ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultTypeDef = TypedDict(
    "_ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBSnapshotAttributes": List[
            ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultDBSnapshotAttributesTypeDef
        ],
    },
    total=False,
)


class ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultTypeDef(
    _ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultTypeDef
):
    """
    Type definition for `ClientModifyDbSnapshotAttributeResponse` `DBSnapshotAttributesResult`

    Contains the results of a successful call to the ``DescribeDBSnapshotAttributes`` API action.

    Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a
    manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API action.

    - **DBSnapshotIdentifier** *(string) --*

      The identifier of the manual DB snapshot that the attributes apply to.

    - **DBSnapshotAttributes** *(list) --*

      The list of attributes and values for the manual DB snapshot.

      - *(dict) --*

        Contains the name and values of a manual DB snapshot attribute

        Manual DB snapshot attributes are used to authorize other AWS accounts to restore a
        manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API.

        - **AttributeName** *(string) --*

          The name of the manual DB snapshot attribute.

          The attribute named ``restore`` refers to the list of AWS accounts that have permission
          to copy or restore the manual DB cluster snapshot. For more information, see the
          ``ModifyDBSnapshotAttribute`` API action.

        - **AttributeValues** *(list) --*

          The value or values for the manual DB snapshot attribute.

          If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
          of IDs of the AWS accounts that are authorized to copy or restore the manual DB
          snapshot. If a value of ``all`` is in the list, then the manual DB snapshot is public
          and available for any AWS account to copy or restore.

          - *(string) --*
    """


_ClientModifyDbSnapshotAttributeResponseTypeDef = TypedDict(
    "_ClientModifyDbSnapshotAttributeResponseTypeDef",
    {
        "DBSnapshotAttributesResult": ClientModifyDbSnapshotAttributeResponseDBSnapshotAttributesResultTypeDef
    },
    total=False,
)


class ClientModifyDbSnapshotAttributeResponseTypeDef(
    _ClientModifyDbSnapshotAttributeResponseTypeDef
):
    """
    Type definition for `ClientModifyDbSnapshotAttribute` `Response`

    - **DBSnapshotAttributesResult** *(dict) --*

      Contains the results of a successful call to the ``DescribeDBSnapshotAttributes`` API action.

      Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a
      manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API action.

      - **DBSnapshotIdentifier** *(string) --*

        The identifier of the manual DB snapshot that the attributes apply to.

      - **DBSnapshotAttributes** *(list) --*

        The list of attributes and values for the manual DB snapshot.

        - *(dict) --*

          Contains the name and values of a manual DB snapshot attribute

          Manual DB snapshot attributes are used to authorize other AWS accounts to restore a
          manual DB snapshot. For more information, see the ``ModifyDBSnapshotAttribute`` API.

          - **AttributeName** *(string) --*

            The name of the manual DB snapshot attribute.

            The attribute named ``restore`` refers to the list of AWS accounts that have permission
            to copy or restore the manual DB cluster snapshot. For more information, see the
            ``ModifyDBSnapshotAttribute`` API action.

          - **AttributeValues** *(list) --*

            The value or values for the manual DB snapshot attribute.

            If the ``AttributeName`` field is set to ``restore`` , then this element returns a list
            of IDs of the AWS accounts that are authorized to copy or restore the manual DB
            snapshot. If a value of ``all`` is in the list, then the manual DB snapshot is public
            and available for any AWS account to copy or restore.

            - *(string) --*
    """


_ClientModifyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef = TypedDict(
    "_ClientModifyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientModifyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef(
    _ClientModifyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientModifyDbSnapshotResponseDBSnapshot` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientModifyDbSnapshotResponseDBSnapshotTypeDef = TypedDict(
    "_ClientModifyDbSnapshotResponseDBSnapshotTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBInstanceIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "Iops": int,
        "OptionGroupName": str,
        "PercentProgress": int,
        "SourceRegion": str,
        "SourceDBSnapshotIdentifier": str,
        "StorageType": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "DBSnapshotArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "ProcessorFeatures": List[
            ClientModifyDbSnapshotResponseDBSnapshotProcessorFeaturesTypeDef
        ],
        "DbiResourceId": str,
    },
    total=False,
)


class ClientModifyDbSnapshotResponseDBSnapshotTypeDef(
    _ClientModifyDbSnapshotResponseDBSnapshotTypeDef
):
    """
    Type definition for `ClientModifyDbSnapshotResponse` `DBSnapshot`

    Contains the details of an Amazon RDS DB snapshot.

    This data type is used as a response element in the ``DescribeDBSnapshots`` action.

    - **DBSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB snapshot.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB snapshot.

    - **Port** *(integer) --*

      Specifies the port that the database engine was listening on at the time of the snapshot.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance was located in at the time of
      the DB snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB snapshot.

    - **InstanceCreateTime** *(datetime) --*

      Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB snapshot.

    - **EngineVersion** *(string) --*

      Specifies the version of the database engine.

    - **LicenseModel** *(string) --*

      License model information for the restored DB instance.

    - **SnapshotType** *(string) --*

      Provides the type of the DB snapshot.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
      time of the snapshot.

    - **OptionGroupName** *(string) --*

      Provides the option group name for the DB snapshot.

    - **PercentProgress** *(integer) --*

      The percentage of the estimated data that has been transferred.

    - **SourceRegion** *(string) --*

      The AWS Region that the DB snapshot was created in or copied from.

    - **SourceDBSnapshotIdentifier** *(string) --*

      The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
      has value in case of cross-customer or cross-region copy.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB snapshot.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which to associate the instance for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the DB snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

    - **DBSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB snapshot.

    - **Timezone** *(string) --*

      The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
      instances that were created with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance when the DB snapshot was created.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to an
      AWS Region.
    """


_ClientModifyDbSnapshotResponseTypeDef = TypedDict(
    "_ClientModifyDbSnapshotResponseTypeDef",
    {"DBSnapshot": ClientModifyDbSnapshotResponseDBSnapshotTypeDef},
    total=False,
)


class ClientModifyDbSnapshotResponseTypeDef(_ClientModifyDbSnapshotResponseTypeDef):
    """
    Type definition for `ClientModifyDbSnapshot` `Response`

    - **DBSnapshot** *(dict) --*

      Contains the details of an Amazon RDS DB snapshot.

      This data type is used as a response element in the ``DescribeDBSnapshots`` action.

      - **DBSnapshotIdentifier** *(string) --*

        Specifies the identifier for the DB snapshot.

      - **DBInstanceIdentifier** *(string) --*

        Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

      - **SnapshotCreateTime** *(datetime) --*

        Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **Engine** *(string) --*

        Specifies the name of the database engine.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size in gibibytes (GiB).

      - **Status** *(string) --*

        Specifies the status of this DB snapshot.

      - **Port** *(integer) --*

        Specifies the port that the database engine was listening on at the time of the snapshot.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance was located in at the time of
        the DB snapshot.

      - **VpcId** *(string) --*

        Provides the VPC ID associated with the DB snapshot.

      - **InstanceCreateTime** *(datetime) --*

        Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

      - **MasterUsername** *(string) --*

        Provides the master username for the DB snapshot.

      - **EngineVersion** *(string) --*

        Specifies the version of the database engine.

      - **LicenseModel** *(string) --*

        License model information for the restored DB instance.

      - **SnapshotType** *(string) --*

        Provides the type of the DB snapshot.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the
        time of the snapshot.

      - **OptionGroupName** *(string) --*

        Provides the option group name for the DB snapshot.

      - **PercentProgress** *(integer) --*

        The percentage of the estimated data that has been transferred.

      - **SourceRegion** *(string) --*

        The AWS Region that the DB snapshot was created in or copied from.

      - **SourceDBSnapshotIdentifier** *(string) --*

        The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
        has value in case of cross-customer or cross-region copy.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB snapshot.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which to associate the instance for TDE encryption.

      - **Encrypted** *(boolean) --*

        Specifies whether the DB snapshot is encrypted.

      - **KmsKeyId** *(string) --*

        If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

      - **DBSnapshotArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB snapshot.

      - **Timezone** *(string) --*

        The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
        instances that were created with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance when the DB snapshot was created.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DbiResourceId** *(string) --*

        The identifier for the source DB instance, which can't be changed and which is unique to an
        AWS Region.
    """


_ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef(
    _ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientModifyDbSubnetGroupResponseDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientModifyDbSubnetGroupResponseDBSubnetGroupTypeDef = TypedDict(
    "_ClientModifyDbSubnetGroupResponseDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[ClientModifyDbSubnetGroupResponseDBSubnetGroupSubnetsTypeDef],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientModifyDbSubnetGroupResponseDBSubnetGroupTypeDef(
    _ClientModifyDbSubnetGroupResponseDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientModifyDbSubnetGroupResponse` `DBSubnetGroup`

    Contains the details of an Amazon RDS DB subnet group.

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientModifyDbSubnetGroupResponseTypeDef = TypedDict(
    "_ClientModifyDbSubnetGroupResponseTypeDef",
    {"DBSubnetGroup": ClientModifyDbSubnetGroupResponseDBSubnetGroupTypeDef},
    total=False,
)


class ClientModifyDbSubnetGroupResponseTypeDef(
    _ClientModifyDbSubnetGroupResponseTypeDef
):
    """
    Type definition for `ClientModifyDbSubnetGroup` `Response`

    - **DBSubnetGroup** *(dict) --*

      Contains the details of an Amazon RDS DB subnet group.

      This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef(
    _ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientModifyEventSubscriptionResponse` `EventSubscription`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the subscription
      is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientModifyEventSubscriptionResponseTypeDef = TypedDict(
    "_ClientModifyEventSubscriptionResponseTypeDef",
    {
        "EventSubscription": ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef
    },
    total=False,
)


class ClientModifyEventSubscriptionResponseTypeDef(
    _ClientModifyEventSubscriptionResponseTypeDef
):
    """
    Type definition for `ClientModifyEventSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the RDS event notification subscription.

      - **CustSubscriptionId** *(string) --*

        The RDS event notification subscription Id.

      - **SnsTopicArn** *(string) --*

        The topic ARN of the RDS event notification subscription.

      - **Status** *(string) --*

        The status of the RDS event notification subscription.

        Constraints:

        Can be one of the following: creating | modifying | deleting | active | no-permission |
        topic-not-exist

        The status "no-permission" indicates that RDS no longer has permission to post to the SNS
        topic. The status "topic-not-exist" indicates that the topic was deleted after the
        subscription was created.

      - **SubscriptionCreationTime** *(string) --*

        The time the RDS event notification subscription was created.

      - **SourceType** *(string) --*

        The source type for the RDS event notification subscription.

      - **SourceIdsList** *(list) --*

        A list of source IDs for the RDS event notification subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        A list of event categories for the RDS event notification subscription.

        - *(string) --*

      - **Enabled** *(boolean) --*

        A Boolean value indicating if the subscription is enabled. True indicates the subscription
        is enabled.

      - **EventSubscriptionArn** *(string) --*

        The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientModifyGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef = TypedDict(
    "_ClientModifyGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    {"DBClusterArn": str, "Readers": List[str], "IsWriter": bool},
    total=False,
)


class ClientModifyGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef(
    _ClientModifyGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
):
    """
    Type definition for `ClientModifyGlobalClusterResponseGlobalCluster` `GlobalClusterMembers`

    A data structure with information about any primary and secondary clusters associated
    with an Aurora global database.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for each Aurora cluster.

    - **Readers** *(list) --*

      The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
      Aurora global database.

      - *(string) --*

    - **IsWriter** *(boolean) --*

      Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
      capability) for the Aurora global database with which it is associated.
    """


_ClientModifyGlobalClusterResponseGlobalClusterTypeDef = TypedDict(
    "_ClientModifyGlobalClusterResponseGlobalClusterTypeDef",
    {
        "GlobalClusterIdentifier": str,
        "GlobalClusterResourceId": str,
        "GlobalClusterArn": str,
        "Status": str,
        "Engine": str,
        "EngineVersion": str,
        "DatabaseName": str,
        "StorageEncrypted": bool,
        "DeletionProtection": bool,
        "GlobalClusterMembers": List[
            ClientModifyGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
        ],
    },
    total=False,
)


class ClientModifyGlobalClusterResponseGlobalClusterTypeDef(
    _ClientModifyGlobalClusterResponseGlobalClusterTypeDef
):
    """
    Type definition for `ClientModifyGlobalClusterResponse` `GlobalCluster`

    A data type representing an Aurora global database.

    - **GlobalClusterIdentifier** *(string) --*

      Contains a user-supplied global database cluster identifier. This identifier is the unique
      key that identifies a global database cluster.

    - **GlobalClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the global database cluster. This
      identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
      cluster is accessed.

    - **GlobalClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the global database cluster.

    - **Status** *(string) --*

      Specifies the current state of this global database cluster.

    - **Engine** *(string) --*

      The Aurora database engine used by the global database cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **DatabaseName** *(string) --*

      The default database name within the new global database cluster.

    - **StorageEncrypted** *(boolean) --*

      The storage encryption setting for the global database cluster.

    - **DeletionProtection** *(boolean) --*

      The deletion protection setting for the new global database cluster.

    - **GlobalClusterMembers** *(list) --*

      The list of cluster IDs for secondary clusters within the global database cluster.
      Currently limited to 1 item.

      - *(dict) --*

        A data structure with information about any primary and secondary clusters associated
        with an Aurora global database.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for each Aurora cluster.

        - **Readers** *(list) --*

          The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
          Aurora global database.

          - *(string) --*

        - **IsWriter** *(boolean) --*

          Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
          capability) for the Aurora global database with which it is associated.
    """


_ClientModifyGlobalClusterResponseTypeDef = TypedDict(
    "_ClientModifyGlobalClusterResponseTypeDef",
    {"GlobalCluster": ClientModifyGlobalClusterResponseGlobalClusterTypeDef},
    total=False,
)


class ClientModifyGlobalClusterResponseTypeDef(
    _ClientModifyGlobalClusterResponseTypeDef
):
    """
    Type definition for `ClientModifyGlobalCluster` `Response`

    - **GlobalCluster** *(dict) --*

      A data type representing an Aurora global database.

      - **GlobalClusterIdentifier** *(string) --*

        Contains a user-supplied global database cluster identifier. This identifier is the unique
        key that identifies a global database cluster.

      - **GlobalClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the global database cluster. This
        identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
        cluster is accessed.

      - **GlobalClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the global database cluster.

      - **Status** *(string) --*

        Specifies the current state of this global database cluster.

      - **Engine** *(string) --*

        The Aurora database engine used by the global database cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **DatabaseName** *(string) --*

        The default database name within the new global database cluster.

      - **StorageEncrypted** *(boolean) --*

        The storage encryption setting for the global database cluster.

      - **DeletionProtection** *(boolean) --*

        The deletion protection setting for the new global database cluster.

      - **GlobalClusterMembers** *(list) --*

        The list of cluster IDs for secondary clusters within the global database cluster.
        Currently limited to 1 item.

        - *(dict) --*

          A data structure with information about any primary and secondary clusters associated
          with an Aurora global database.

          - **DBClusterArn** *(string) --*

            The Amazon Resource Name (ARN) for each Aurora cluster.

          - **Readers** *(list) --*

            The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
            Aurora global database.

            - *(string) --*

          - **IsWriter** *(boolean) --*

            Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
            capability) for the Aurora global database with which it is associated.
    """


_ClientModifyOptionGroupOptionsToIncludeOptionSettingsTypeDef = TypedDict(
    "_ClientModifyOptionGroupOptionsToIncludeOptionSettingsTypeDef",
    {
        "Name": str,
        "Value": str,
        "DefaultValue": str,
        "Description": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsCollection": bool,
    },
    total=False,
)


class ClientModifyOptionGroupOptionsToIncludeOptionSettingsTypeDef(
    _ClientModifyOptionGroupOptionsToIncludeOptionSettingsTypeDef
):
    """
    Type definition for `ClientModifyOptionGroupOptionsToInclude` `OptionSettings`

    Option settings are the actual settings being applied or configured for that option. It is
    used when you modify an option group or describe option groups. For example, the
    NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can
    have several different values.

    - **Name** *(string) --*

      The name of the option that has settings that you can set.

    - **Value** *(string) --*

      The current value of the option setting.

    - **DefaultValue** *(string) --*

      The default value of the option setting.

    - **Description** *(string) --*

      The description of the option setting.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type.

    - **DataType** *(string) --*

      The data type of the option setting.

    - **AllowedValues** *(string) --*

      The allowed values of the option setting.

    - **IsModifiable** *(boolean) --*

      A Boolean value that, when true, indicates the option setting can be modified from the
      default.

    - **IsCollection** *(boolean) --*

      Indicates if the option setting is part of a collection.
    """


_RequiredClientModifyOptionGroupOptionsToIncludeTypeDef = TypedDict(
    "_RequiredClientModifyOptionGroupOptionsToIncludeTypeDef", {"OptionName": str}
)
_OptionalClientModifyOptionGroupOptionsToIncludeTypeDef = TypedDict(
    "_OptionalClientModifyOptionGroupOptionsToIncludeTypeDef",
    {
        "Port": int,
        "OptionVersion": str,
        "DBSecurityGroupMemberships": List[str],
        "VpcSecurityGroupMemberships": List[str],
        "OptionSettings": List[
            ClientModifyOptionGroupOptionsToIncludeOptionSettingsTypeDef
        ],
    },
    total=False,
)


class ClientModifyOptionGroupOptionsToIncludeTypeDef(
    _RequiredClientModifyOptionGroupOptionsToIncludeTypeDef,
    _OptionalClientModifyOptionGroupOptionsToIncludeTypeDef,
):
    """
    Type definition for `ClientModifyOptionGroup` `OptionsToInclude`

    A list of all available options

    - **OptionName** *(string) --* **[REQUIRED]**

      The configuration of options to include in a group.

    - **Port** *(integer) --*

      The optional port for the option.

    - **OptionVersion** *(string) --*

      The version for the option.

    - **DBSecurityGroupMemberships** *(list) --*

      A list of DBSecurityGroupMembership name strings used for this option.

      - *(string) --*

    - **VpcSecurityGroupMemberships** *(list) --*

      A list of VpcSecurityGroupMembership name strings used for this option.

      - *(string) --*

    - **OptionSettings** *(list) --*

      The option settings to include in an option group.

      - *(dict) --*

        Option settings are the actual settings being applied or configured for that option. It is
        used when you modify an option group or describe option groups. For example, the
        NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can
        have several different values.

        - **Name** *(string) --*

          The name of the option that has settings that you can set.

        - **Value** *(string) --*

          The current value of the option setting.

        - **DefaultValue** *(string) --*

          The default value of the option setting.

        - **Description** *(string) --*

          The description of the option setting.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type.

        - **DataType** *(string) --*

          The data type of the option setting.

        - **AllowedValues** *(string) --*

          The allowed values of the option setting.

        - **IsModifiable** *(boolean) --*

          A Boolean value that, when true, indicates the option setting can be modified from the
          default.

        - **IsCollection** *(boolean) --*

          Indicates if the option setting is part of a collection.
    """


_ClientModifyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientModifyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef(
    _ClientModifyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientModifyOptionGroupResponseOptionGroupOptions` `DBSecurityGroupMemberships`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientModifyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef = TypedDict(
    "_ClientModifyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef",
    {
        "Name": str,
        "Value": str,
        "DefaultValue": str,
        "Description": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsCollection": bool,
    },
    total=False,
)


class ClientModifyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef(
    _ClientModifyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef
):
    """
    Type definition for `ClientModifyOptionGroupResponseOptionGroupOptions` `OptionSettings`

    Option settings are the actual settings being applied or configured for that option.
    It is used when you modify an option group or describe option groups. For example,
    the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
    that can have several different values.

    - **Name** *(string) --*

      The name of the option that has settings that you can set.

    - **Value** *(string) --*

      The current value of the option setting.

    - **DefaultValue** *(string) --*

      The default value of the option setting.

    - **Description** *(string) --*

      The description of the option setting.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type.

    - **DataType** *(string) --*

      The data type of the option setting.

    - **AllowedValues** *(string) --*

      The allowed values of the option setting.

    - **IsModifiable** *(boolean) --*

      A Boolean value that, when true, indicates the option setting can be modified from
      the default.

    - **IsCollection** *(boolean) --*

      Indicates if the option setting is part of a collection.
    """


_ClientModifyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef = TypedDict(
    "_ClientModifyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef(
    _ClientModifyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `ClientModifyOptionGroupResponseOptionGroupOptions` `VpcSecurityGroupMemberships`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyOptionGroupResponseOptionGroupOptionsTypeDef = TypedDict(
    "_ClientModifyOptionGroupResponseOptionGroupOptionsTypeDef",
    {
        "OptionName": str,
        "OptionDescription": str,
        "Persistent": bool,
        "Permanent": bool,
        "Port": int,
        "OptionVersion": str,
        "OptionSettings": List[
            ClientModifyOptionGroupResponseOptionGroupOptionsOptionSettingsTypeDef
        ],
        "DBSecurityGroupMemberships": List[
            ClientModifyOptionGroupResponseOptionGroupOptionsDBSecurityGroupMembershipsTypeDef
        ],
        "VpcSecurityGroupMemberships": List[
            ClientModifyOptionGroupResponseOptionGroupOptionsVpcSecurityGroupMembershipsTypeDef
        ],
    },
    total=False,
)


class ClientModifyOptionGroupResponseOptionGroupOptionsTypeDef(
    _ClientModifyOptionGroupResponseOptionGroupOptionsTypeDef
):
    """
    Type definition for `ClientModifyOptionGroupResponseOptionGroup` `Options`

    Option details.

    - **OptionName** *(string) --*

      The name of the option.

    - **OptionDescription** *(string) --*

      The description of the option.

    - **Persistent** *(boolean) --*

      Indicate if this option is persistent.

    - **Permanent** *(boolean) --*

      Indicate if this option is permanent.

    - **Port** *(integer) --*

      If required, the port configured for this option to use.

    - **OptionVersion** *(string) --*

      The version of the option.

    - **OptionSettings** *(list) --*

      The option settings for this option.

      - *(dict) --*

        Option settings are the actual settings being applied or configured for that option.
        It is used when you modify an option group or describe option groups. For example,
        the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
        that can have several different values.

        - **Name** *(string) --*

          The name of the option that has settings that you can set.

        - **Value** *(string) --*

          The current value of the option setting.

        - **DefaultValue** *(string) --*

          The default value of the option setting.

        - **Description** *(string) --*

          The description of the option setting.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type.

        - **DataType** *(string) --*

          The data type of the option setting.

        - **AllowedValues** *(string) --*

          The allowed values of the option setting.

        - **IsModifiable** *(boolean) --*

          A Boolean value that, when true, indicates the option setting can be modified from
          the default.

        - **IsCollection** *(boolean) --*

          Indicates if the option setting is part of a collection.

    - **DBSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this DB security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this VPC security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.
    """


_ClientModifyOptionGroupResponseOptionGroupTypeDef = TypedDict(
    "_ClientModifyOptionGroupResponseOptionGroupTypeDef",
    {
        "OptionGroupName": str,
        "OptionGroupDescription": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "Options": List[ClientModifyOptionGroupResponseOptionGroupOptionsTypeDef],
        "AllowsVpcAndNonVpcInstanceMemberships": bool,
        "VpcId": str,
        "OptionGroupArn": str,
    },
    total=False,
)


class ClientModifyOptionGroupResponseOptionGroupTypeDef(
    _ClientModifyOptionGroupResponseOptionGroupTypeDef
):
    """
    Type definition for `ClientModifyOptionGroupResponse` `OptionGroup`

    - **OptionGroupName** *(string) --*

      Specifies the name of the option group.

    - **OptionGroupDescription** *(string) --*

      Provides a description of the option group.

    - **EngineName** *(string) --*

      Indicates the name of the engine that this option group can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version associated with this option group.

    - **Options** *(list) --*

      Indicates what options are available in the option group.

      - *(dict) --*

        Option details.

        - **OptionName** *(string) --*

          The name of the option.

        - **OptionDescription** *(string) --*

          The description of the option.

        - **Persistent** *(boolean) --*

          Indicate if this option is persistent.

        - **Permanent** *(boolean) --*

          Indicate if this option is permanent.

        - **Port** *(integer) --*

          If required, the port configured for this option to use.

        - **OptionVersion** *(string) --*

          The version of the option.

        - **OptionSettings** *(list) --*

          The option settings for this option.

          - *(dict) --*

            Option settings are the actual settings being applied or configured for that option.
            It is used when you modify an option group or describe option groups. For example,
            the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
            that can have several different values.

            - **Name** *(string) --*

              The name of the option that has settings that you can set.

            - **Value** *(string) --*

              The current value of the option setting.

            - **DefaultValue** *(string) --*

              The default value of the option setting.

            - **Description** *(string) --*

              The description of the option setting.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type.

            - **DataType** *(string) --*

              The data type of the option setting.

            - **AllowedValues** *(string) --*

              The allowed values of the option setting.

            - **IsModifiable** *(boolean) --*

              A Boolean value that, when true, indicates the option setting can be modified from
              the default.

            - **IsCollection** *(boolean) --*

              Indicates if the option setting is part of a collection.

        - **DBSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this DB security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this VPC security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

    - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

      Indicates whether this option group can be applied to both VPC and non-VPC instances. The
      value ``true`` indicates the option group can be applied to both VPC and non-VPC instances.

    - **VpcId** *(string) --*

      If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
      **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
      option group can be applied to both VPC and non-VPC instances. If this field contains a
      value, then this option group can only be applied to instances that are in the VPC
      indicated by this field.

    - **OptionGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the option group.
    """


_ClientModifyOptionGroupResponseTypeDef = TypedDict(
    "_ClientModifyOptionGroupResponseTypeDef",
    {"OptionGroup": ClientModifyOptionGroupResponseOptionGroupTypeDef},
    total=False,
)


class ClientModifyOptionGroupResponseTypeDef(_ClientModifyOptionGroupResponseTypeDef):
    """
    Type definition for `ClientModifyOptionGroup` `Response`

    - **OptionGroup** *(dict) --*

      - **OptionGroupName** *(string) --*

        Specifies the name of the option group.

      - **OptionGroupDescription** *(string) --*

        Provides a description of the option group.

      - **EngineName** *(string) --*

        Indicates the name of the engine that this option group can be applied to.

      - **MajorEngineVersion** *(string) --*

        Indicates the major engine version associated with this option group.

      - **Options** *(list) --*

        Indicates what options are available in the option group.

        - *(dict) --*

          Option details.

          - **OptionName** *(string) --*

            The name of the option.

          - **OptionDescription** *(string) --*

            The description of the option.

          - **Persistent** *(boolean) --*

            Indicate if this option is persistent.

          - **Permanent** *(boolean) --*

            Indicate if this option is permanent.

          - **Port** *(integer) --*

            If required, the port configured for this option to use.

          - **OptionVersion** *(string) --*

            The version of the option.

          - **OptionSettings** *(list) --*

            The option settings for this option.

            - *(dict) --*

              Option settings are the actual settings being applied or configured for that option.
              It is used when you modify an option group or describe option groups. For example,
              the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER
              that can have several different values.

              - **Name** *(string) --*

                The name of the option that has settings that you can set.

              - **Value** *(string) --*

                The current value of the option setting.

              - **DefaultValue** *(string) --*

                The default value of the option setting.

              - **Description** *(string) --*

                The description of the option setting.

              - **ApplyType** *(string) --*

                The DB engine specific parameter type.

              - **DataType** *(string) --*

                The data type of the option setting.

              - **AllowedValues** *(string) --*

                The allowed values of the option setting.

              - **IsModifiable** *(boolean) --*

                A Boolean value that, when true, indicates the option setting can be modified from
                the default.

              - **IsCollection** *(boolean) --*

                Indicates if the option setting is part of a collection.

          - **DBSecurityGroupMemberships** *(list) --*

            If the option requires access to a port, then this DB security group allows access to
            the port.

            - *(dict) --*

              This data type is used as a response element in the following actions:

              * ``ModifyDBInstance``

              * ``RebootDBInstance``

              * ``RestoreDBInstanceFromDBSnapshot``

              * ``RestoreDBInstanceToPointInTime``

              - **DBSecurityGroupName** *(string) --*

                The name of the DB security group.

              - **Status** *(string) --*

                The status of the DB security group.

          - **VpcSecurityGroupMemberships** *(list) --*

            If the option requires access to a port, then this VPC security group allows access to
            the port.

            - *(dict) --*

              This data type is used as a response element for queries on VPC security group
              membership.

              - **VpcSecurityGroupId** *(string) --*

                The name of the VPC security group.

              - **Status** *(string) --*

                The status of the VPC security group.

      - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

        Indicates whether this option group can be applied to both VPC and non-VPC instances. The
        value ``true`` indicates the option group can be applied to both VPC and non-VPC instances.

      - **VpcId** *(string) --*

        If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
        **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
        option group can be applied to both VPC and non-VPC instances. If this field contains a
        value, then this option group can only be applied to instances that are in the VPC
        indicated by this field.

      - **OptionGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the option group.
    """


_ClientPromoteReadReplicaDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientPromoteReadReplicaDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientPromoteReadReplicaDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientPromoteReadReplicaDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientPromoteReadReplicaDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientPromoteReadReplicaDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientPromoteReadReplicaDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientPromoteReadReplicaDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseDBClusterTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientPromoteReadReplicaDbClusterResponseTypeDef = TypedDict(
    "_ClientPromoteReadReplicaDbClusterResponseTypeDef",
    {"DBCluster": ClientPromoteReadReplicaDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientPromoteReadReplicaDbClusterResponseTypeDef(
    _ClientPromoteReadReplicaDbClusterResponseTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientPromoteReadReplicaResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceAssociatedRolesTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientPromoteReadReplicaResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientPromoteReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientPromoteReadReplicaResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceDomainMembershipsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientPromoteReadReplicaResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceEndpointTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientPromoteReadReplicaResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceListenerEndpointTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientPromoteReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientPromoteReadReplicaResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientPromoteReadReplicaResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceStatusInfosTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientPromoteReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientPromoteReadReplicaResponseDBInstanceTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientPromoteReadReplicaResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientPromoteReadReplicaResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientPromoteReadReplicaResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientPromoteReadReplicaResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientPromoteReadReplicaResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientPromoteReadReplicaResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientPromoteReadReplicaResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            ClientPromoteReadReplicaResponseDBInstanceStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientPromoteReadReplicaResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientPromoteReadReplicaResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientPromoteReadReplicaResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientPromoteReadReplicaResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientPromoteReadReplicaResponseDBInstanceTypeDef(
    _ClientPromoteReadReplicaResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientPromoteReadReplicaResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientPromoteReadReplicaResponseTypeDef = TypedDict(
    "_ClientPromoteReadReplicaResponseTypeDef",
    {"DBInstance": ClientPromoteReadReplicaResponseDBInstanceTypeDef},
    total=False,
)


class ClientPromoteReadReplicaResponseTypeDef(_ClientPromoteReadReplicaResponseTypeDef):
    """
    Type definition for `ClientPromoteReadReplica` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceRecurringChargesTypeDef = TypedDict(
    "_ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceRecurringChargesTypeDef(
    _ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceRecurringChargesTypeDef
):
    """
    Type definition for `ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstance` `RecurringCharges`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``DescribeReservedDBInstancesOfferings`` actions.

    - **RecurringChargeAmount** *(float) --*

      The amount of the recurring charge.

    - **RecurringChargeFrequency** *(string) --*

      The frequency of the recurring charge.
    """


_ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceTypeDef = TypedDict(
    "_ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceTypeDef",
    {
        "ReservedDBInstanceId": str,
        "ReservedDBInstancesOfferingId": str,
        "DBInstanceClass": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "DBInstanceCount": int,
        "ProductDescription": str,
        "OfferingType": str,
        "MultiAZ": bool,
        "State": str,
        "RecurringCharges": List[
            ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceRecurringChargesTypeDef
        ],
        "ReservedDBInstanceArn": str,
        "LeaseId": str,
    },
    total=False,
)


class ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceTypeDef(
    _ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceTypeDef
):
    """
    Type definition for `ClientPurchaseReservedDbInstancesOfferingResponse` `ReservedDBInstance`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``PurchaseReservedDBInstancesOffering`` actions.

    - **ReservedDBInstanceId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedDBInstancesOfferingId** *(string) --*

      The offering identifier.

    - **DBInstanceClass** *(string) --*

      The DB instance class for the reserved DB instance.

    - **StartTime** *(datetime) --*

      The time the reservation started.

    - **Duration** *(integer) --*

      The duration of the reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed price charged for this reserved DB instance.

    - **UsagePrice** *(float) --*

      The hourly price charged for this reserved DB instance.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved DB instance.

    - **DBInstanceCount** *(integer) --*

      The number of reserved DB instances.

    - **ProductDescription** *(string) --*

      The description of the reserved DB instance.

    - **OfferingType** *(string) --*

      The offering type of this reserved DB instance.

    - **MultiAZ** *(boolean) --*

      Indicates if the reservation applies to Multi-AZ deployments.

    - **State** *(string) --*

      The state of the reserved DB instance.

    - **RecurringCharges** *(list) --*

      The recurring price charged to run this reserved DB instance.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``DescribeReservedDBInstancesOfferings`` actions.

        - **RecurringChargeAmount** *(float) --*

          The amount of the recurring charge.

        - **RecurringChargeFrequency** *(string) --*

          The frequency of the recurring charge.

    - **ReservedDBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the reserved DB instance.

    - **LeaseId** *(string) --*

      The unique identifier for the lease associated with the reserved DB instance.

      .. note::

        AWS Support might request the lease ID for an issue related to a reserved DB instance.
    """


_ClientPurchaseReservedDbInstancesOfferingResponseTypeDef = TypedDict(
    "_ClientPurchaseReservedDbInstancesOfferingResponseTypeDef",
    {
        "ReservedDBInstance": ClientPurchaseReservedDbInstancesOfferingResponseReservedDBInstanceTypeDef
    },
    total=False,
)


class ClientPurchaseReservedDbInstancesOfferingResponseTypeDef(
    _ClientPurchaseReservedDbInstancesOfferingResponseTypeDef
):
    """
    Type definition for `ClientPurchaseReservedDbInstancesOffering` `Response`

    - **ReservedDBInstance** *(dict) --*

      This data type is used as a response element in the ``DescribeReservedDBInstances`` and
      ``PurchaseReservedDBInstancesOffering`` actions.

      - **ReservedDBInstanceId** *(string) --*

        The unique identifier for the reservation.

      - **ReservedDBInstancesOfferingId** *(string) --*

        The offering identifier.

      - **DBInstanceClass** *(string) --*

        The DB instance class for the reserved DB instance.

      - **StartTime** *(datetime) --*

        The time the reservation started.

      - **Duration** *(integer) --*

        The duration of the reservation in seconds.

      - **FixedPrice** *(float) --*

        The fixed price charged for this reserved DB instance.

      - **UsagePrice** *(float) --*

        The hourly price charged for this reserved DB instance.

      - **CurrencyCode** *(string) --*

        The currency code for the reserved DB instance.

      - **DBInstanceCount** *(integer) --*

        The number of reserved DB instances.

      - **ProductDescription** *(string) --*

        The description of the reserved DB instance.

      - **OfferingType** *(string) --*

        The offering type of this reserved DB instance.

      - **MultiAZ** *(boolean) --*

        Indicates if the reservation applies to Multi-AZ deployments.

      - **State** *(string) --*

        The state of the reserved DB instance.

      - **RecurringCharges** *(list) --*

        The recurring price charged to run this reserved DB instance.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeReservedDBInstances`` and
          ``DescribeReservedDBInstancesOfferings`` actions.

          - **RecurringChargeAmount** *(float) --*

            The amount of the recurring charge.

          - **RecurringChargeFrequency** *(string) --*

            The frequency of the recurring charge.

      - **ReservedDBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the reserved DB instance.

      - **LeaseId** *(string) --*

        The unique identifier for the lease associated with the reserved DB instance.

        .. note::

          AWS Support might request the lease ID for an issue related to a reserved DB instance.
    """


_ClientPurchaseReservedDbInstancesOfferingTagsTypeDef = TypedDict(
    "_ClientPurchaseReservedDbInstancesOfferingTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientPurchaseReservedDbInstancesOfferingTagsTypeDef(
    _ClientPurchaseReservedDbInstancesOfferingTagsTypeDef
):
    """
    Type definition for `ClientPurchaseReservedDbInstancesOffering` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRebootDbInstanceResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceAssociatedRolesTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientRebootDbInstanceResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientRebootDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientRebootDbInstanceResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceDomainMembershipsTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientRebootDbInstanceResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceEndpointTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRebootDbInstanceResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceListenerEndpointTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRebootDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientRebootDbInstanceResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRebootDbInstanceResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceStatusInfosTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientRebootDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRebootDbInstanceResponseDBInstanceTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRebootDbInstanceResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientRebootDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRebootDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientRebootDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientRebootDbInstanceResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRebootDbInstanceResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientRebootDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[ClientRebootDbInstanceResponseDBInstanceStatusInfosTypeDef],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientRebootDbInstanceResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientRebootDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientRebootDbInstanceResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientRebootDbInstanceResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientRebootDbInstanceResponseDBInstanceTypeDef(
    _ClientRebootDbInstanceResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientRebootDbInstanceResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRebootDbInstanceResponseTypeDef = TypedDict(
    "_ClientRebootDbInstanceResponseTypeDef",
    {"DBInstance": ClientRebootDbInstanceResponseDBInstanceTypeDef},
    total=False,
)


class ClientRebootDbInstanceResponseTypeDef(_ClientRebootDbInstanceResponseTypeDef):
    """
    Type definition for `ClientRebootDbInstance` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRemoveFromGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef = TypedDict(
    "_ClientRemoveFromGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef",
    {"DBClusterArn": str, "Readers": List[str], "IsWriter": bool},
    total=False,
)


class ClientRemoveFromGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef(
    _ClientRemoveFromGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
):
    """
    Type definition for `ClientRemoveFromGlobalClusterResponseGlobalCluster` `GlobalClusterMembers`

    A data structure with information about any primary and secondary clusters associated
    with an Aurora global database.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for each Aurora cluster.

    - **Readers** *(list) --*

      The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
      Aurora global database.

      - *(string) --*

    - **IsWriter** *(boolean) --*

      Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
      capability) for the Aurora global database with which it is associated.
    """


_ClientRemoveFromGlobalClusterResponseGlobalClusterTypeDef = TypedDict(
    "_ClientRemoveFromGlobalClusterResponseGlobalClusterTypeDef",
    {
        "GlobalClusterIdentifier": str,
        "GlobalClusterResourceId": str,
        "GlobalClusterArn": str,
        "Status": str,
        "Engine": str,
        "EngineVersion": str,
        "DatabaseName": str,
        "StorageEncrypted": bool,
        "DeletionProtection": bool,
        "GlobalClusterMembers": List[
            ClientRemoveFromGlobalClusterResponseGlobalClusterGlobalClusterMembersTypeDef
        ],
    },
    total=False,
)


class ClientRemoveFromGlobalClusterResponseGlobalClusterTypeDef(
    _ClientRemoveFromGlobalClusterResponseGlobalClusterTypeDef
):
    """
    Type definition for `ClientRemoveFromGlobalClusterResponse` `GlobalCluster`

    A data type representing an Aurora global database.

    - **GlobalClusterIdentifier** *(string) --*

      Contains a user-supplied global database cluster identifier. This identifier is the unique
      key that identifies a global database cluster.

    - **GlobalClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the global database cluster. This
      identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
      cluster is accessed.

    - **GlobalClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the global database cluster.

    - **Status** *(string) --*

      Specifies the current state of this global database cluster.

    - **Engine** *(string) --*

      The Aurora database engine used by the global database cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **DatabaseName** *(string) --*

      The default database name within the new global database cluster.

    - **StorageEncrypted** *(boolean) --*

      The storage encryption setting for the global database cluster.

    - **DeletionProtection** *(boolean) --*

      The deletion protection setting for the new global database cluster.

    - **GlobalClusterMembers** *(list) --*

      The list of cluster IDs for secondary clusters within the global database cluster.
      Currently limited to 1 item.

      - *(dict) --*

        A data structure with information about any primary and secondary clusters associated
        with an Aurora global database.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for each Aurora cluster.

        - **Readers** *(list) --*

          The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
          Aurora global database.

          - *(string) --*

        - **IsWriter** *(boolean) --*

          Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
          capability) for the Aurora global database with which it is associated.
    """


_ClientRemoveFromGlobalClusterResponseTypeDef = TypedDict(
    "_ClientRemoveFromGlobalClusterResponseTypeDef",
    {"GlobalCluster": ClientRemoveFromGlobalClusterResponseGlobalClusterTypeDef},
    total=False,
)


class ClientRemoveFromGlobalClusterResponseTypeDef(
    _ClientRemoveFromGlobalClusterResponseTypeDef
):
    """
    Type definition for `ClientRemoveFromGlobalCluster` `Response`

    - **GlobalCluster** *(dict) --*

      A data type representing an Aurora global database.

      - **GlobalClusterIdentifier** *(string) --*

        Contains a user-supplied global database cluster identifier. This identifier is the unique
        key that identifies a global database cluster.

      - **GlobalClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the global database cluster. This
        identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
        cluster is accessed.

      - **GlobalClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the global database cluster.

      - **Status** *(string) --*

        Specifies the current state of this global database cluster.

      - **Engine** *(string) --*

        The Aurora database engine used by the global database cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **DatabaseName** *(string) --*

        The default database name within the new global database cluster.

      - **StorageEncrypted** *(boolean) --*

        The storage encryption setting for the global database cluster.

      - **DeletionProtection** *(boolean) --*

        The deletion protection setting for the new global database cluster.

      - **GlobalClusterMembers** *(list) --*

        The list of cluster IDs for secondary clusters within the global database cluster.
        Currently limited to 1 item.

        - *(dict) --*

          A data structure with information about any primary and secondary clusters associated
          with an Aurora global database.

          - **DBClusterArn** *(string) --*

            The Amazon Resource Name (ARN) for each Aurora cluster.

          - **Readers** *(list) --*

            The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the
            Aurora global database.

            - *(string) --*

          - **IsWriter** *(boolean) --*

            Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
            capability) for the Aurora global database with which it is associated.
    """


_ClientRemoveSourceIdentifierFromSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientRemoveSourceIdentifierFromSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class ClientRemoveSourceIdentifierFromSubscriptionResponseEventSubscriptionTypeDef(
    _ClientRemoveSourceIdentifierFromSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientRemoveSourceIdentifierFromSubscriptionResponse` `EventSubscription`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the subscription
      is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientRemoveSourceIdentifierFromSubscriptionResponseTypeDef = TypedDict(
    "_ClientRemoveSourceIdentifierFromSubscriptionResponseTypeDef",
    {
        "EventSubscription": ClientRemoveSourceIdentifierFromSubscriptionResponseEventSubscriptionTypeDef
    },
    total=False,
)


class ClientRemoveSourceIdentifierFromSubscriptionResponseTypeDef(
    _ClientRemoveSourceIdentifierFromSubscriptionResponseTypeDef
):
    """
    Type definition for `ClientRemoveSourceIdentifierFromSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Contains the results of a successful invocation of the ``DescribeEventSubscriptions`` action.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the RDS event notification subscription.

      - **CustSubscriptionId** *(string) --*

        The RDS event notification subscription Id.

      - **SnsTopicArn** *(string) --*

        The topic ARN of the RDS event notification subscription.

      - **Status** *(string) --*

        The status of the RDS event notification subscription.

        Constraints:

        Can be one of the following: creating | modifying | deleting | active | no-permission |
        topic-not-exist

        The status "no-permission" indicates that RDS no longer has permission to post to the SNS
        topic. The status "topic-not-exist" indicates that the topic was deleted after the
        subscription was created.

      - **SubscriptionCreationTime** *(string) --*

        The time the RDS event notification subscription was created.

      - **SourceType** *(string) --*

        The source type for the RDS event notification subscription.

      - **SourceIdsList** *(list) --*

        A list of source IDs for the RDS event notification subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        A list of event categories for the RDS event notification subscription.

        - *(string) --*

      - **Enabled** *(boolean) --*

        A Boolean value indicating if the subscription is enabled. True indicates the subscription
        is enabled.

      - **EventSubscriptionArn** *(string) --*

        The Amazon Resource Name (ARN) for the event subscription.
    """


_ClientResetDbClusterParameterGroupParametersTypeDef = TypedDict(
    "_ClientResetDbClusterParameterGroupParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientResetDbClusterParameterGroupParametersTypeDef(
    _ClientResetDbClusterParameterGroupParametersTypeDef
):
    """
    Type definition for `ClientResetDbClusterParameterGroup` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientResetDbClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientResetDbClusterParameterGroupResponseTypeDef",
    {"DBClusterParameterGroupName": str},
    total=False,
)


class ClientResetDbClusterParameterGroupResponseTypeDef(
    _ClientResetDbClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientResetDbClusterParameterGroup` `Response`

    - **DBClusterParameterGroupName** *(string) --*

      The name of the DB cluster parameter group.

      Constraints:

      * Must be 1 to 255 letters or numbers.

      * First character must be a letter

      * Can't end with a hyphen or contain two consecutive hyphens

      .. note::

        This value is stored as a lowercase string.
    """


_ClientResetDbParameterGroupParametersTypeDef = TypedDict(
    "_ClientResetDbParameterGroupParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class ClientResetDbParameterGroupParametersTypeDef(
    _ClientResetDbParameterGroupParametersTypeDef
):
    """
    Type definition for `ClientResetDbParameterGroup` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_ClientResetDbParameterGroupResponseTypeDef = TypedDict(
    "_ClientResetDbParameterGroupResponseTypeDef",
    {"DBParameterGroupName": str},
    total=False,
)


class ClientResetDbParameterGroupResponseTypeDef(
    _ClientResetDbParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientResetDbParameterGroup` `Response`

    Contains the result of a successful invocation of the ``ModifyDBParameterGroup`` or
    ``ResetDBParameterGroup`` action.

    - **DBParameterGroupName** *(string) --*

      Provides the name of the DB parameter group.
    """


_ClientRestoreDbClusterFromS3ResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseDBClusterAssociatedRolesTypeDef(
    _ClientRestoreDbClusterFromS3ResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3ResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterMembersTypeDef(
    _ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3ResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3ResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientRestoreDbClusterFromS3ResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientRestoreDbClusterFromS3ResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3ResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientRestoreDbClusterFromS3ResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientRestoreDbClusterFromS3ResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3ResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreDbClusterFromS3ResponseDBClusterTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientRestoreDbClusterFromS3ResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreDbClusterFromS3ResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientRestoreDbClusterFromS3ResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientRestoreDbClusterFromS3ResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseDBClusterTypeDef(
    _ClientRestoreDbClusterFromS3ResponseDBClusterTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3Response` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientRestoreDbClusterFromS3ResponseTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3ResponseTypeDef",
    {"DBCluster": ClientRestoreDbClusterFromS3ResponseDBClusterTypeDef},
    total=False,
)


class ClientRestoreDbClusterFromS3ResponseTypeDef(
    _ClientRestoreDbClusterFromS3ResponseTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromS3` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientRestoreDbClusterFromS3TagsTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromS3TagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientRestoreDbClusterFromS3TagsTypeDef(_ClientRestoreDbClusterFromS3TagsTypeDef):
    """
    Type definition for `ClientRestoreDbClusterFromS3` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRestoreDbClusterFromSnapshotResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseDBClusterAssociatedRolesTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshotResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterMembersTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshotResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshotResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientRestoreDbClusterFromSnapshotResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshotResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientRestoreDbClusterFromSnapshotResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshotResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreDbClusterFromSnapshotResponseDBClusterTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientRestoreDbClusterFromSnapshotResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreDbClusterFromSnapshotResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientRestoreDbClusterFromSnapshotResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientRestoreDbClusterFromSnapshotResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseDBClusterTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseDBClusterTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshotResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientRestoreDbClusterFromSnapshotResponseTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotResponseTypeDef",
    {"DBCluster": ClientRestoreDbClusterFromSnapshotResponseDBClusterTypeDef},
    total=False,
)


class ClientRestoreDbClusterFromSnapshotResponseTypeDef(
    _ClientRestoreDbClusterFromSnapshotResponseTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshot` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientRestoreDbClusterFromSnapshotScalingConfigurationTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotScalingConfigurationTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientRestoreDbClusterFromSnapshotScalingConfigurationTypeDef(
    _ClientRestoreDbClusterFromSnapshotScalingConfigurationTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshot` `ScalingConfiguration`

    For DB clusters in ``serverless`` DB engine mode, the scaling properties of the DB cluster.

    - **MinCapacity** *(integer) --*

      The minimum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      For Aurora MySQL, valid capacity values are ``1`` , ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``128`` , and ``256`` .

      For Aurora PostgreSQL, valid capacity values are ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``192`` , and ``384`` .

      The minimum capacity must be less than or equal to the maximum capacity.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      For Aurora MySQL, valid capacity values are ``1`` , ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``128`` , and ``256`` .

      For Aurora PostgreSQL, valid capacity values are ``2`` , ``4`` , ``8`` , ``16`` , ``32`` ,
      ``64`` , ``192`` , and ``384`` .

      The maximum capacity must be greater than or equal to the minimum capacity.

    - **AutoPause** *(boolean) --*

      A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in
      ``serverless`` DB engine mode. A DB cluster can be paused only when it's idle (it has no
      connections).

      .. note::

        If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a
        snapshot. In this case, the DB cluster is restored when there is a request to connect to it.

    - **SecondsUntilAutoPause** *(integer) --*

      The time, in seconds, before an Aurora DB cluster in ``serverless`` mode is paused.

    - **TimeoutAction** *(string) --*

      The action to take when the timeout is reached, either ``ForceApplyCapacityChange`` or
      ``RollbackCapacityChange`` .

       ``ForceApplyCapacityChange`` sets the capacity to the specified value as soon as possible.

       ``RollbackCapacityChange`` , the default, ignores the capacity change if a scaling point isn't
       found in the timeout period.

      .. warning::

        If you specify ``ForceApplyCapacityChange`` , connections that prevent Aurora Serverless from
        finding a scaling point might be dropped.

      For more information, see `Autoscaling for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientRestoreDbClusterFromSnapshotTagsTypeDef = TypedDict(
    "_ClientRestoreDbClusterFromSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRestoreDbClusterFromSnapshotTagsTypeDef(
    _ClientRestoreDbClusterFromSnapshotTagsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterFromSnapshot` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRestoreDbClusterToPointInTimeResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseDBClusterAssociatedRolesTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTimeResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterMembersTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTimeResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTimeResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientRestoreDbClusterToPointInTimeResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTimeResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientRestoreDbClusterToPointInTimeResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTimeResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreDbClusterToPointInTimeResponseDBClusterTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientRestoreDbClusterToPointInTimeResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreDbClusterToPointInTimeResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientRestoreDbClusterToPointInTimeResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientRestoreDbClusterToPointInTimeResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseDBClusterTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseDBClusterTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTimeResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientRestoreDbClusterToPointInTimeResponseTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeResponseTypeDef",
    {"DBCluster": ClientRestoreDbClusterToPointInTimeResponseDBClusterTypeDef},
    total=False,
)


class ClientRestoreDbClusterToPointInTimeResponseTypeDef(
    _ClientRestoreDbClusterToPointInTimeResponseTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTime` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientRestoreDbClusterToPointInTimeTagsTypeDef = TypedDict(
    "_ClientRestoreDbClusterToPointInTimeTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRestoreDbClusterToPointInTimeTagsTypeDef(
    _ClientRestoreDbClusterToPointInTimeTagsTypeDef
):
    """
    Type definition for `ClientRestoreDbClusterToPointInTime` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRestoreDbInstanceFromDbSnapshotProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshot` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature name
    for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you call one
    of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceAssociatedRolesTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDomainMembershipsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceEndpointTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceListenerEndpointTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceStatusInfosTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshotResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRestoreDbInstanceFromDbSnapshotResponseTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotResponseTypeDef",
    {"DBInstance": ClientRestoreDbInstanceFromDbSnapshotResponseDBInstanceTypeDef},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotResponseTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotResponseTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshot` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRestoreDbInstanceFromDbSnapshotTagsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromDbSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromDbSnapshotTagsTypeDef(
    _ClientRestoreDbInstanceFromDbSnapshotTagsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromDbSnapshot` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRestoreDbInstanceFromS3ProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceFromS3ProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature name
    for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you call one
    of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceAssociatedRolesTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceDomainMembershipsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceEndpointTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceListenerEndpointTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceStatusInfosTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3ResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreDbInstanceFromS3ResponseDBInstanceTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRestoreDbInstanceFromS3ResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientRestoreDbInstanceFromS3ResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRestoreDbInstanceFromS3ResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientRestoreDbInstanceFromS3ResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientRestoreDbInstanceFromS3ResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseDBInstanceTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3Response` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRestoreDbInstanceFromS3ResponseTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3ResponseTypeDef",
    {"DBInstance": ClientRestoreDbInstanceFromS3ResponseDBInstanceTypeDef},
    total=False,
)


class ClientRestoreDbInstanceFromS3ResponseTypeDef(
    _ClientRestoreDbInstanceFromS3ResponseTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRestoreDbInstanceFromS3TagsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceFromS3TagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientRestoreDbInstanceFromS3TagsTypeDef(
    _ClientRestoreDbInstanceFromS3TagsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceFromS3` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRestoreDbInstanceToPointInTimeProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceToPointInTimeProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTime` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature name
    for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you call one
    of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceAssociatedRolesTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDomainMembershipsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceEndpointTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceListenerEndpointTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceStatusInfosTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRestoreDbInstanceToPointInTimeResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRestoreDbInstanceToPointInTimeResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientRestoreDbInstanceToPointInTimeResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientRestoreDbInstanceToPointInTimeResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseDBInstanceTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTimeResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRestoreDbInstanceToPointInTimeResponseTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeResponseTypeDef",
    {"DBInstance": ClientRestoreDbInstanceToPointInTimeResponseDBInstanceTypeDef},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeResponseTypeDef(
    _ClientRestoreDbInstanceToPointInTimeResponseTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTime` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientRestoreDbInstanceToPointInTimeTagsTypeDef = TypedDict(
    "_ClientRestoreDbInstanceToPointInTimeTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRestoreDbInstanceToPointInTimeTagsTypeDef(
    _ClientRestoreDbInstanceToPointInTimeTagsTypeDef
):
    """
    Type definition for `ClientRestoreDbInstanceToPointInTime` `Tags`

    Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

    - **Key** *(string) --*

      A key is the required name of the tag. The string value can be from 1 to 128 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

    - **Value** *(string) --*

      A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
      characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain
      only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java
      regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    """


_ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupId": str,
        "EC2SecurityGroupOwnerId": str,
    },
    total=False,
)


class ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef(
    _ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroup` `EC2SecurityGroups`

    This data type is used as a response element in the following actions:

    * ``AuthorizeDBSecurityGroupIngress``

    * ``DescribeDBSecurityGroups``

    * ``RevokeDBSecurityGroupIngress``

    - **Status** *(string) --*

      Provides the status of the EC2 security group. Status can be "authorizing",
      "authorized", "revoking", and "revoked".

    - **EC2SecurityGroupName** *(string) --*

      Specifies the name of the EC2 security group.

    - **EC2SecurityGroupId** *(string) --*

      Specifies the id of the EC2 security group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      Specifies the AWS ID of the owner of the EC2 security group specified in the
      ``EC2SecurityGroupName`` field.
    """


_ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef = TypedDict(
    "_ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef",
    {"Status": str, "CIDRIP": str},
    total=False,
)


class ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef(
    _ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef
):
    """
    Type definition for `ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroup` `IPRanges`

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **Status** *(string) --*

      Specifies the status of the IP range. Status can be "authorizing", "authorized",
      "revoking", and "revoked".

    - **CIDRIP** *(string) --*

      Specifies the IP range.
    """


_ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef = TypedDict(
    "_ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef",
    {
        "OwnerId": str,
        "DBSecurityGroupName": str,
        "DBSecurityGroupDescription": str,
        "VpcId": str,
        "EC2SecurityGroups": List[
            ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupIPRangesTypeDef
        ],
        "DBSecurityGroupArn": str,
    },
    total=False,
)


class ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef(
    _ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef
):
    """
    Type definition for `ClientRevokeDbSecurityGroupIngressResponse` `DBSecurityGroup`

    Contains the details for an Amazon RDS DB security group.

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **OwnerId** *(string) --*

      Provides the AWS ID of the owner of a specific DB security group.

    - **DBSecurityGroupName** *(string) --*

      Specifies the name of the DB security group.

    - **DBSecurityGroupDescription** *(string) --*

      Provides the description of the DB security group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB security group.

    - **EC2SecurityGroups** *(list) --*

      Contains a list of ``EC2SecurityGroup`` elements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``AuthorizeDBSecurityGroupIngress``

        * ``DescribeDBSecurityGroups``

        * ``RevokeDBSecurityGroupIngress``

        - **Status** *(string) --*

          Provides the status of the EC2 security group. Status can be "authorizing",
          "authorized", "revoking", and "revoked".

        - **EC2SecurityGroupName** *(string) --*

          Specifies the name of the EC2 security group.

        - **EC2SecurityGroupId** *(string) --*

          Specifies the id of the EC2 security group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          Specifies the AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

    - **IPRanges** *(list) --*

      Contains a list of ``IPRange`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **Status** *(string) --*

          Specifies the status of the IP range. Status can be "authorizing", "authorized",
          "revoking", and "revoked".

        - **CIDRIP** *(string) --*

          Specifies the IP range.

    - **DBSecurityGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientRevokeDbSecurityGroupIngressResponseTypeDef = TypedDict(
    "_ClientRevokeDbSecurityGroupIngressResponseTypeDef",
    {
        "DBSecurityGroup": ClientRevokeDbSecurityGroupIngressResponseDBSecurityGroupTypeDef
    },
    total=False,
)


class ClientRevokeDbSecurityGroupIngressResponseTypeDef(
    _ClientRevokeDbSecurityGroupIngressResponseTypeDef
):
    """
    Type definition for `ClientRevokeDbSecurityGroupIngress` `Response`

    - **DBSecurityGroup** *(dict) --*

      Contains the details for an Amazon RDS DB security group.

      This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

      - **OwnerId** *(string) --*

        Provides the AWS ID of the owner of a specific DB security group.

      - **DBSecurityGroupName** *(string) --*

        Specifies the name of the DB security group.

      - **DBSecurityGroupDescription** *(string) --*

        Provides the description of the DB security group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB security group.

      - **EC2SecurityGroups** *(list) --*

        Contains a list of ``EC2SecurityGroup`` elements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``AuthorizeDBSecurityGroupIngress``

          * ``DescribeDBSecurityGroups``

          * ``RevokeDBSecurityGroupIngress``

          - **Status** *(string) --*

            Provides the status of the EC2 security group. Status can be "authorizing",
            "authorized", "revoking", and "revoked".

          - **EC2SecurityGroupName** *(string) --*

            Specifies the name of the EC2 security group.

          - **EC2SecurityGroupId** *(string) --*

            Specifies the id of the EC2 security group.

          - **EC2SecurityGroupOwnerId** *(string) --*

            Specifies the AWS ID of the owner of the EC2 security group specified in the
            ``EC2SecurityGroupName`` field.

      - **IPRanges** *(list) --*

        Contains a list of ``IPRange`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

          - **Status** *(string) --*

            Specifies the status of the IP range. Status can be "authorizing", "authorized",
            "revoking", and "revoked".

          - **CIDRIP** *(string) --*

            Specifies the IP range.

      - **DBSecurityGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB security group.
    """


_ClientStartActivityStreamResponseTypeDef = TypedDict(
    "_ClientStartActivityStreamResponseTypeDef",
    {
        "KmsKeyId": str,
        "KinesisStreamName": str,
        "Status": str,
        "Mode": str,
        "ApplyImmediately": bool,
    },
    total=False,
)


class ClientStartActivityStreamResponseTypeDef(
    _ClientStartActivityStreamResponseTypeDef
):
    """
    Type definition for `ClientStartActivityStream` `Response`

    - **KmsKeyId** *(string) --*

      The AWS KMS key identifier for encryption of messages in the database activity stream.

    - **KinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream to be used for the database activity stream.

    - **Status** *(string) --*

      The status of the database activity stream.

    - **Mode** *(string) --*

      The mode of the database activity stream.

    - **ApplyImmediately** *(boolean) --*

      Indicates whether or not the database activity stream will start as soon as possible,
      regardless of the maintenance window for the database.
    """


_ClientStartDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientStartDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientStartDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientStartDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientStartDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientStartDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientStartDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientStartDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientStartDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientStartDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientStartDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientStartDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientStartDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientStartDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientStartDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientStartDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientStartDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientStartDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientStartDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientStartDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientStartDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientStartDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientStartDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientStartDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientStartDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientStartDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientStartDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientStartDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientStartDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientStartDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientStartDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientStartDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientStartDbClusterResponseDBClusterTypeDef(
    _ClientStartDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientStartDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientStartDbClusterResponseTypeDef = TypedDict(
    "_ClientStartDbClusterResponseTypeDef",
    {"DBCluster": ClientStartDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientStartDbClusterResponseTypeDef(_ClientStartDbClusterResponseTypeDef):
    """
    Type definition for `ClientStartDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientStartDbInstanceResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceAssociatedRolesTypeDef(
    _ClientStartDbInstanceResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientStartDbInstanceResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientStartDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientStartDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientStartDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientStartDbInstanceResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientStartDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientStartDbInstanceResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientStartDbInstanceResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceDomainMembershipsTypeDef(
    _ClientStartDbInstanceResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientStartDbInstanceResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceEndpointTypeDef(
    _ClientStartDbInstanceResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientStartDbInstanceResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceListenerEndpointTypeDef(
    _ClientStartDbInstanceResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientStartDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientStartDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientStartDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientStartDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientStartDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientStartDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientStartDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientStartDbInstanceResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientStartDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientStartDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientStartDbInstanceResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientStartDbInstanceResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientStartDbInstanceResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientStartDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientStartDbInstanceResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceStatusInfosTypeDef(
    _ClientStartDbInstanceResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientStartDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientStartDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientStartDbInstanceResponseDBInstanceTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientStartDbInstanceResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientStartDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientStartDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientStartDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientStartDbInstanceResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientStartDbInstanceResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientStartDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[ClientStartDbInstanceResponseDBInstanceStatusInfosTypeDef],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientStartDbInstanceResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientStartDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientStartDbInstanceResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientStartDbInstanceResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientStartDbInstanceResponseDBInstanceTypeDef(
    _ClientStartDbInstanceResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientStartDbInstanceResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientStartDbInstanceResponseTypeDef = TypedDict(
    "_ClientStartDbInstanceResponseTypeDef",
    {"DBInstance": ClientStartDbInstanceResponseDBInstanceTypeDef},
    total=False,
)


class ClientStartDbInstanceResponseTypeDef(_ClientStartDbInstanceResponseTypeDef):
    """
    Type definition for `ClientStartDbInstance` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientStopActivityStreamResponseTypeDef = TypedDict(
    "_ClientStopActivityStreamResponseTypeDef",
    {"KmsKeyId": str, "KinesisStreamName": str, "Status": str},
    total=False,
)


class ClientStopActivityStreamResponseTypeDef(_ClientStopActivityStreamResponseTypeDef):
    """
    Type definition for `ClientStopActivityStream` `Response`

    - **KmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **KinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **Status** *(string) --*

      The status of the database activity stream.
    """


_ClientStopDbClusterResponseDBClusterAssociatedRolesTypeDef = TypedDict(
    "_ClientStopDbClusterResponseDBClusterAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class ClientStopDbClusterResponseDBClusterAssociatedRolesTypeDef(
    _ClientStopDbClusterResponseDBClusterAssociatedRolesTypeDef
):
    """
    Type definition for `ClientStopDbClusterResponseDBCluster` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
      is unable to assume the IAM role in order to access other AWS services on your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_ClientStopDbClusterResponseDBClusterDBClusterMembersTypeDef = TypedDict(
    "_ClientStopDbClusterResponseDBClusterDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class ClientStopDbClusterResponseDBClusterDBClusterMembersTypeDef(
    _ClientStopDbClusterResponseDBClusterDBClusterMembersTypeDef
):
    """
    Type definition for `ClientStopDbClusterResponseDBCluster` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB cluster
      and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_ClientStopDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientStopDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class ClientStopDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef(
    _ClientStopDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientStopDbClusterResponseDBCluster` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_ClientStopDbClusterResponseDBClusterScalingConfigurationInfoTypeDef = TypedDict(
    "_ClientStopDbClusterResponseDBClusterScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class ClientStopDbClusterResponseDBClusterScalingConfigurationInfoTypeDef(
    _ClientStopDbClusterResponseDBClusterScalingConfigurationInfoTypeDef
):
    """
    Type definition for `ClientStopDbClusterResponseDBCluster` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
    the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
      mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_ClientStopDbClusterResponseDBClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientStopDbClusterResponseDBClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientStopDbClusterResponseDBClusterVpcSecurityGroupsTypeDef(
    _ClientStopDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientStopDbClusterResponseDBCluster` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientStopDbClusterResponseDBClusterTypeDef = TypedDict(
    "_ClientStopDbClusterResponseDBClusterTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            ClientStopDbClusterResponseDBClusterDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            ClientStopDbClusterResponseDBClusterDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientStopDbClusterResponseDBClusterVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            ClientStopDbClusterResponseDBClusterAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": ClientStopDbClusterResponseDBClusterScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class ClientStopDbClusterResponseDBClusterTypeDef(
    _ClientStopDbClusterResponseDBClusterTypeDef
):
    """
    Type definition for `ClientStopDbClusterResponse` `DBCluster`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
      storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
      Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned for
      the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
      connections across the Aurora Replicas that are available in a DB cluster. As clients
      request new connections to the reader endpoint, Aurora distributes the connection requests
      among the Aurora Replicas in the DB cluster. This functionality can help balance your read
      workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload to
      other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB cluster
          and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
      AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
          is unable to assume the IAM role in order to access other AWS services on your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
      cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
      the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
        mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_ClientStopDbClusterResponseTypeDef = TypedDict(
    "_ClientStopDbClusterResponseTypeDef",
    {"DBCluster": ClientStopDbClusterResponseDBClusterTypeDef},
    total=False,
)


class ClientStopDbClusterResponseTypeDef(_ClientStopDbClusterResponseTypeDef):
    """
    Type definition for `ClientStopDbCluster` `Response`

    - **DBCluster** *(dict) --*

      Contains the details of an Amazon Aurora DB cluster.

      This data type is used as a response element in the ``DescribeDBClusters`` ,
      ``StopDBCluster`` , and ``StartDBCluster`` actions.

      - **AllocatedStorage** *(integer) --*

        For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the allocated
        storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always returns 1, because
        Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.

      - **AvailabilityZones** *(list) --*

        Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
        created.

        - *(string) --*

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this cluster is associated with.

      - **DatabaseName** *(string) --*

        Contains the name of the initial database of this DB cluster that was provided at create
        time, if one was specified when the DB cluster was created. This same name is returned for
        the life of the DB cluster.

      - **DBClusterIdentifier** *(string) --*

        Contains a user-supplied DB cluster identifier. This identifier is the unique key that
        identifies a DB cluster.

      - **DBClusterParameterGroup** *(string) --*

        Specifies the name of the DB cluster parameter group for the DB cluster.

      - **DBSubnetGroup** *(string) --*

        Specifies information on the subnet group associated with the DB cluster, including the
        name, description, and subnets in the subnet group.

      - **Status** *(string) --*

        Specifies the current state of this DB cluster.

      - **PercentProgress** *(string) --*

        Specifies the progress of the operation as a percentage.

      - **EarliestRestorableTime** *(datetime) --*

        The earliest time to which a database can be restored with point-in-time restore.

      - **Endpoint** *(string) --*

        Specifies the connection endpoint for the primary instance of the DB cluster.

      - **ReaderEndpoint** *(string) --*

        The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
        connections across the Aurora Replicas that are available in a DB cluster. As clients
        request new connections to the reader endpoint, Aurora distributes the connection requests
        among the Aurora Replicas in the DB cluster. This functionality can help balance your read
        workload across multiple Aurora Replicas in your DB cluster.

        If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
        the primary instance, your connection is dropped. To continue sending your read workload to
        other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

      - **CustomEndpoints** *(list) --*

        Identifies all custom endpoints associated with the cluster.

        - *(string) --*

      - **MultiAZ** *(boolean) --*

        Specifies whether the DB cluster has instances in multiple Availability Zones.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB cluster.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB cluster.

      - **DBClusterOptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB cluster.

        - *(dict) --*

          Contains status information for a DB cluster option group.

          - **DBClusterOptionGroupName** *(string) --*

            Specifies the name of the DB cluster option group.

          - **Status** *(string) --*

            Specifies the status of the DB cluster option group.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **ReplicationSourceIdentifier** *(string) --*

        Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

      - **ReadReplicaIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB cluster.

        - *(string) --*

      - **DBClusterMembers** *(list) --*

        Provides the list of instances that make up the DB cluster.

        - *(dict) --*

          Contains information about an instance that is part of a DB cluster.

          - **DBInstanceIdentifier** *(string) --*

            Specifies the instance identifier for this member of the DB cluster.

          - **IsClusterWriter** *(boolean) --*

            Value that is ``true`` if the cluster member is the primary instance for the DB cluster
            and ``false`` otherwise.

          - **DBClusterParameterGroupStatus** *(string) --*

            Specifies the status of the DB cluster parameter group for this member of the DB
            cluster.

          - **PromotionTier** *(integer) --*

            A value that specifies the order in which an Aurora Replica is promoted to the primary
            instance after a failure of the existing primary instance. For more information, see
            `Fault Tolerance for an Aurora DB Cluster
            <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
            in the *Amazon Aurora User Guide* .

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security groups that the DB cluster belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB cluster is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB cluster.

      - **DbClusterResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in
        AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

      - **DBClusterArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB cluster.

      - **AssociatedRoles** *(list) --*

        Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
        with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
        the DB cluster to access other AWS services on your behalf.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          cluster.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

            * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB cluster
            is unable to assume the IAM role in order to access other AWS services on your behalf.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see  DBEngineVersion .

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
        accounts to database accounts is enabled.

      - **CloneGroupId** *(string) --*

        Identifies the clone group to which the DB cluster is associated.

      - **ClusterCreateTime** *(datetime) --*

        Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

      - **EarliestBacktrackTime** *(datetime) --*

        The earliest time to which a DB cluster can be backtracked.

      - **BacktrackWindow** *(integer) --*

        The target backtrack window, in seconds. If this value is set to 0, backtracking is
        disabled for the DB cluster. Otherwise, backtracking is enabled.

      - **BacktrackConsumedChangeRecords** *(integer) --*

        The number of change records stored for Backtrack.

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB cluster is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
        the *Amazon Aurora User Guide.*

        - *(string) --*

      - **Capacity** *(integer) --*

        The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the
        cluster is paused.

        For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

      - **EngineMode** *(string) --*

        The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
        ``parallelquery`` , ``global`` , or ``multimaster`` .

      - **ScalingConfigurationInfo** *(dict) --*

        Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

        For more information, see `Using Amazon Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__ in
        the *Amazon Aurora User Guide* .

        - **MinCapacity** *(integer) --*

          The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

        - **MaxCapacity** *(integer) --*

          The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

        - **AutoPause** *(boolean) --*

          A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
          ``serverless`` DB engine mode.

          When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
          automatically resumes.

        - **SecondsUntilAutoPause** *(integer) --*

          The remaining amount of time, in seconds, before the Aurora DB cluster in ``serverless``
          mode is paused. A DB cluster can be paused only when it's idle (it has no connections).

        - **TimeoutAction** *(string) --*

          The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
          ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB cluster has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled.

      - **HttpEndpointEnabled** *(boolean) --*

        A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
        enabled.

        When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
        queries on the Aurora Serverless DB cluster. You can also query your database from inside
        the RDS console with the query editor.

        For more information, see `Using the Data API for Aurora Serverless
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
        *Amazon Aurora User Guide* .

      - **ActivityStreamMode** *(string) --*

        The mode of the database activity stream. Database events such as a change or access
        generate an activity stream event. The database session can handle these events either
        synchronously or asynchronously.

      - **ActivityStreamStatus** *(string) --*

        The status of the database activity stream.

      - **ActivityStreamKmsKeyId** *(string) --*

        The AWS KMS key identifier used for encrypting messages in the database activity stream.

      - **ActivityStreamKinesisStreamName** *(string) --*

        The name of the Amazon Kinesis data stream used for the database activity stream.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

      - **CrossAccountClone** *(boolean) --*

        Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
        account.
    """


_ClientStopDbInstanceResponseDBInstanceAssociatedRolesTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceAssociatedRolesTypeDef(
    _ClientStopDbInstanceResponseDBInstanceAssociatedRolesTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The Status
      property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on your
      behalf.
    """


_ClientStopDbInstanceResponseDBInstanceDBParameterGroupsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceDBParameterGroupsTypeDef(
    _ClientStopDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_ClientStopDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef(
    _ClientStopDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef(
    _ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstanceDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_ClientStopDbInstanceResponseDBInstanceDBSubnetGroupTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            ClientStopDbInstanceResponseDBInstanceDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceDBSubnetGroupTypeDef(
    _ClientStopDbInstanceResponseDBInstanceDBSubnetGroupTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_ClientStopDbInstanceResponseDBInstanceDomainMembershipsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceDomainMembershipsTypeDef(
    _ClientStopDbInstanceResponseDBInstanceDomainMembershipsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_ClientStopDbInstanceResponseDBInstanceEndpointTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceEndpointTypeDef(
    _ClientStopDbInstanceResponseDBInstanceEndpointTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientStopDbInstanceResponseDBInstanceListenerEndpointTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceListenerEndpointTypeDef(
    _ClientStopDbInstanceResponseDBInstanceListenerEndpointTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_ClientStopDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef(
    _ClientStopDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are: ``in-sync``
      , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
      ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_ClientStopDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class ClientStopDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _ClientStopDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstancePendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_ClientStopDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef(
    _ClientStopDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstancePendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientStopDbInstanceResponseDBInstancePendingModifiedValuesTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstancePendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": ClientStopDbInstanceResponseDBInstancePendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            ClientStopDbInstanceResponseDBInstancePendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class ClientStopDbInstanceResponseDBInstancePendingModifiedValuesTypeDef(
    _ClientStopDbInstanceResponseDBInstancePendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
      currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the DB
      instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
      currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_ClientStopDbInstanceResponseDBInstanceProcessorFeaturesTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceProcessorFeaturesTypeDef(
    _ClientStopDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
    name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
      .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_ClientStopDbInstanceResponseDBInstanceStatusInfosTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceStatusInfosTypeDef(
    _ClientStopDbInstanceResponseDBInstanceStatusInfosTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in an
      error state, this value is blank.
    """


_ClientStopDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef(
    _ClientStopDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponseDBInstance` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientStopDbInstanceResponseDBInstanceTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseDBInstanceTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientStopDbInstanceResponseDBInstanceEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            ClientStopDbInstanceResponseDBInstanceDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientStopDbInstanceResponseDBInstanceVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            ClientStopDbInstanceResponseDBInstanceDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": ClientStopDbInstanceResponseDBInstanceDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientStopDbInstanceResponseDBInstancePendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            ClientStopDbInstanceResponseDBInstanceOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[ClientStopDbInstanceResponseDBInstanceStatusInfosTypeDef],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            ClientStopDbInstanceResponseDBInstanceDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            ClientStopDbInstanceResponseDBInstanceProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            ClientStopDbInstanceResponseDBInstanceAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": ClientStopDbInstanceResponseDBInstanceListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class ClientStopDbInstanceResponseDBInstanceTypeDef(
    _ClientStopDbInstanceResponseDBInstanceTypeDef
):
    """
    Type definition for `ClientStopDbInstanceResponse` `DBInstance`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned for
      the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
      parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
        currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the DB
        instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
        currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore``
          feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
      MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
      output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are: ``in-sync``
          , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
          ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
      address. A value of false specifies an internal instance with a DNS name that resolves to a
      private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in an
          error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
      for an Aurora DB instance has no effect on the DB cluster setting. For more information,
      see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
      the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see `Fault
      Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
      (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of the
      DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
        name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
          .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be deleted
      when deletion protection is enabled. For more information, see `Deleting a DB Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The Status
          property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on your
          behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_ClientStopDbInstanceResponseTypeDef = TypedDict(
    "_ClientStopDbInstanceResponseTypeDef",
    {"DBInstance": ClientStopDbInstanceResponseDBInstanceTypeDef},
    total=False,
)


class ClientStopDbInstanceResponseTypeDef(_ClientStopDbInstanceResponseTypeDef):
    """
    Type definition for `ClientStopDbInstance` `Response`

    - **DBInstance** *(dict) --*

      Contains the details of an Amazon RDS DB instance.

      This data type is used as a response element in the ``DescribeDBInstances`` action.

      - **DBInstanceIdentifier** *(string) --*

        Contains a user-supplied database identifier. This identifier is the unique key that
        identifies a DB instance.

      - **DBInstanceClass** *(string) --*

        Contains the name of the compute and memory capacity class of the DB instance.

      - **Engine** *(string) --*

        Provides the name of the database engine to be used for this DB instance.

      - **DBInstanceStatus** *(string) --*

        Specifies the current state of this database.

      - **MasterUsername** *(string) --*

        Contains the master username for the DB instance.

      - **DBName** *(string) --*

        The meaning of this parameter differs according to the database engine you use.

         **MySQL, MariaDB, SQL Server, PostgreSQL**

        Contains the name of the initial database of this instance that was provided at create
        time, if one was specified when the DB instance was created. This same name is returned for
        the life of the DB instance.

        Type: String

         **Oracle**

        Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned
        parameters do not apply to an Oracle DB instance.

      - **Endpoint** *(dict) --*

        Specifies the connection endpoint.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **AllocatedStorage** *(integer) --*

        Specifies the allocated storage size specified in gibibytes.

      - **InstanceCreateTime** *(datetime) --*

        Provides the date and time the DB instance was created.

      - **PreferredBackupWindow** *(string) --*

        Specifies the daily time range during which automated backups are created if automated
        backups are enabled, as determined by the ``BackupRetentionPeriod`` .

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the number of days for which automatic DB snapshots are retained.

      - **DBSecurityGroups** *(list) --*

        A list of DB security group elements containing ``DBSecurityGroup.Name`` and
        ``DBSecurityGroup.Status`` subelements.

        - *(dict) --*

          This data type is used as a response element in the following actions:

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceToPointInTime``

          - **DBSecurityGroupName** *(string) --*

            The name of the DB security group.

          - **Status** *(string) --*

            The status of the DB security group.

      - **VpcSecurityGroups** *(list) --*

        Provides a list of VPC security group elements that the DB instance belongs to.

        - *(dict) --*

          This data type is used as a response element for queries on VPC security group membership.

          - **VpcSecurityGroupId** *(string) --*

            The name of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **DBParameterGroups** *(list) --*

        Provides the list of DB parameter groups applied to this DB instance.

        - *(dict) --*

          The status of the DB parameter group.

          This data type is used as a response element in the following actions:

          * ``CreateDBInstance``

          * ``CreateDBInstanceReadReplica``

          * ``DeleteDBInstance``

          * ``ModifyDBInstance``

          * ``RebootDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          - **DBParameterGroupName** *(string) --*

            The name of the DB parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

      - **AvailabilityZone** *(string) --*

        Specifies the name of the Availability Zone the DB instance is located in.

      - **DBSubnetGroup** *(dict) --*

        Specifies information on the subnet group associated with the DB instance, including the
        name, description, and subnets in the subnet group.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

      - **PreferredMaintenanceWindow** *(string) --*

        Specifies the weekly time range during which system maintenance can occur, in Universal
        Coordinated Time (UTC).

      - **PendingModifiedValues** *(dict) --*

        Specifies that changes to the DB instance are pending. This element is only included when
        changes are pending. Specific changes are identified by subelements.

        - **DBInstanceClass** *(string) --*

          Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
          currently being applied.

        - **AllocatedStorage** *(integer) --*

          Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or is
          currently being applied.

        - **MasterUserPassword** *(string) --*

          Contains the pending or currently-in-progress change of the master credentials for the DB
          instance.

        - **Port** *(integer) --*

          Specifies the pending port for the DB instance.

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the pending number of days for which automated backups are retained.

        - **MultiAZ** *(boolean) --*

          Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LicenseModel** *(string) --*

          The license model for the DB instance.

          Valid values: ``license-included`` | ``bring-your-own-license`` |
          ``general-public-license``

        - **Iops** *(integer) --*

          Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
          currently being applied.

        - **DBInstanceIdentifier** *(string) --*

          Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or is
          currently being applied.

        - **StorageType** *(string) --*

          Specifies the storage type to be associated with the DB instance.

        - **CACertificateIdentifier** *(string) --*

          Specifies the identifier of the CA certificate for the DB instance.

        - **DBSubnetGroupName** *(string) --*

          The new DB subnet group for the DB instance.

        - **PendingCloudwatchLogsExports** *(dict) --*

          A list of the log types whose configuration is still pending. In other words, these log
          types are in the process of being activated or deactivated.

          - **LogTypesToEnable** *(list) --*

            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.

            - *(string) --*

          - **LogTypesToDisable** *(list) --*

            Log types that are in the process of being enabled. After they are enabled, these log
            types are exported to CloudWatch Logs.

            - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

      - **LatestRestorableTime** *(datetime) --*

        Specifies the latest time to which a database can be restored with point-in-time restore.

      - **MultiAZ** *(boolean) --*

        Specifies if the DB instance is a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **AutoMinorVersionUpgrade** *(boolean) --*

        Indicates that minor version patches are applied automatically.

      - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

        Contains the identifier of the source DB instance if this DB instance is a Read Replica.

      - **ReadReplicaDBInstanceIdentifiers** *(list) --*

        Contains one or more identifiers of the Read Replicas associated with this DB instance.

        - *(string) --*

      - **ReadReplicaDBClusterIdentifiers** *(list) --*

        Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
        replicated as a Read Replica. For example, when you create an Aurora Read Replica of an RDS
        MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown. This
        output does not contain information about cross region Aurora Read Replicas.

        .. note::

          Currently, each RDS DB instance can have only one Aurora Read Replica.

        - *(string) --*

      - **LicenseModel** *(string) --*

        License model information for this DB instance.

      - **Iops** *(integer) --*

        Specifies the Provisioned IOPS (I/O operations per second) value.

      - **OptionGroupMemberships** *(list) --*

        Provides the list of option group memberships for this DB instance.

        - *(dict) --*

          Provides information on the option groups the DB instance is a member of.

          - **OptionGroupName** *(string) --*

            The name of the option group that the instance belongs to.

          - **Status** *(string) --*

            The status of the DB instance's option group membership. Valid values are: ``in-sync``
            , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply`` ,
            ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

      - **CharacterSetName** *(string) --*

        If present, specifies the name of the character set that this instance is associated with.

      - **SecondaryAvailabilityZone** *(string) --*

        If present, specifies the name of the secondary Availability Zone for a DB instance with
        multi-AZ support.

      - **PubliclyAccessible** *(boolean) --*

        Specifies the accessibility options for the DB instance. A value of true specifies an
        Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP
        address. A value of false specifies an internal instance with a DNS name that resolves to a
        private IP address.

      - **StatusInfos** *(list) --*

        The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

        - *(dict) --*

          Provides a list of status information for a DB instance.

          - **StatusType** *(string) --*

            This value is currently "read replication."

          - **Normal** *(boolean) --*

            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.

          - **Status** *(string) --*

            Status of the DB instance. For a StatusType of Read Replica, the values can be
            replicating, replication stop point set, replication stop point reached, error,
            stopped, or terminated.

          - **Message** *(string) --*

            Details of the error if there is an error for the instance. If the instance isn't in an
            error state, this value is blank.

      - **StorageType** *(string) --*

        Specifies the storage type associated with DB instance.

      - **TdeCredentialArn** *(string) --*

        The ARN from the key store with which the instance is associated for TDE encryption.

      - **DbInstancePort** *(integer) --*

        Specifies the port that the DB instance listens on. If the DB instance is part of a DB
        cluster, this can be a different port than the DB cluster port.

      - **DBClusterIdentifier** *(string) --*

        If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
        the DB instance is a member of.

      - **StorageEncrypted** *(boolean) --*

        Specifies whether the DB instance is encrypted.

      - **KmsKeyId** *(string) --*

        If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

      - **DbiResourceId** *(string) --*

        The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
        in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

      - **CACertificateIdentifier** *(string) --*

        The identifier of the CA certificate for this DB instance.

      - **DomainMemberships** *(list) --*

        The Active Directory Domain membership records associated with the DB instance.

        - *(dict) --*

          An Active Directory Domain membership record associated with the DB instance.

          - **Domain** *(string) --*

            The identifier of the Active Directory Domain.

          - **Status** *(string) --*

            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).

          - **FQDN** *(string) --*

            The fully qualified domain name of the Active Directory Domain.

          - **IAMRoleName** *(string) --*

            The name of the IAM role to be used when making API calls to the Directory Service.

      - **CopyTagsToSnapshot** *(boolean) --*

        Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

         **Amazon Aurora**

        Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value
        for an Aurora DB instance has no effect on the DB cluster setting. For more information,
        see ``DBCluster`` .

      - **MonitoringInterval** *(integer) --*

        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
        the DB instance.

      - **EnhancedMonitoringResourceArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
        Enhanced Monitoring metrics data for the DB instance.

      - **MonitoringRoleArn** *(string) --*

        The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
        CloudWatch Logs.

      - **PromotionTier** *(integer) --*

        A value that specifies the order in which an Aurora Replica is promoted to the primary
        instance after a failure of the existing primary instance. For more information, see `Fault
        Tolerance for an Aurora DB Cluster
        <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
        in the *Amazon Aurora User Guide* .

      - **DBInstanceArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB instance.

      - **Timezone** *(string) --*

        The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
        ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
        with a time zone specified.

      - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

        True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
        is enabled, and otherwise false.

        IAM database authentication can be enabled for the following database engines

        * For MySQL 5.6, minor version 5.6.34 or higher

        * For MySQL 5.7, minor version 5.7.16 or higher

        * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
        Type.

      - **PerformanceInsightsEnabled** *(boolean) --*

        True if Performance Insights is enabled for the DB instance, and otherwise false.

      - **PerformanceInsightsKMSKeyId** *(string) --*

        The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
        the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
        encryption key.

      - **PerformanceInsightsRetentionPeriod** *(integer) --*

        The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731
        (2 years).

      - **EnabledCloudwatchLogsExports** *(list) --*

        A list of log types that this DB instance is configured to export to CloudWatch Logs.

        Log types vary by DB engine. For information about the log types for each DB engine, see
        `Amazon RDS Database Log Files
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
        *Amazon RDS User Guide.*

        - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of the
        DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
          parameter. To specify the number of threads per core, use the ``threadsPerCore`` feature
          name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when you
          call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling the
          ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
          ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``
            .

          - **Value** *(string) --*

            The value of a processor feature name.

      - **DeletionProtection** *(boolean) --*

        Indicates if the DB instance has deletion protection enabled. The database can't be deleted
        when deletion protection is enabled. For more information, see `Deleting a DB Instance
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

      - **AssociatedRoles** *(list) --*

        The AWS Identity and Access Management (IAM) roles associated with the DB instance.

        - *(dict) --*

          Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
          instance.

          - **RoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

          - **FeatureName** *(string) --*

            The name of the feature associated with the AWS Identity and Access Management (IAM)
            role. For the list of supported feature names, see ``DBEngineVersion`` .

          - **Status** *(string) --*

            Describes the state of association between the IAM role and the DB instance. The Status
            property returns one of the following values:

            * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
            access other AWS services on your behalf.

            * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

            * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
            instance is unable to assume the IAM role in order to access other AWS services on your
            behalf.

      - **ListenerEndpoint** *(dict) --*

        Specifies the listener connection endpoint for SQL Server Always On.

        - **Address** *(string) --*

          Specifies the DNS address of the DB instance.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

      - **MaxAllocatedStorage** *(integer) --*

        The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
    """


_DbClusterSnapshotAvailableWaitFiltersTypeDef = TypedDict(
    "_DbClusterSnapshotAvailableWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbClusterSnapshotAvailableWaitFiltersTypeDef(
    _DbClusterSnapshotAvailableWaitFiltersTypeDef
):
    """
    Type definition for `DbClusterSnapshotAvailableWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbClusterSnapshotAvailableWaitWaiterConfigTypeDef = TypedDict(
    "_DbClusterSnapshotAvailableWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbClusterSnapshotAvailableWaitWaiterConfigTypeDef(
    _DbClusterSnapshotAvailableWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbClusterSnapshotAvailableWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 30

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 60
    """


_DbClusterSnapshotDeletedWaitFiltersTypeDef = TypedDict(
    "_DbClusterSnapshotDeletedWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbClusterSnapshotDeletedWaitFiltersTypeDef(
    _DbClusterSnapshotDeletedWaitFiltersTypeDef
):
    """
    Type definition for `DbClusterSnapshotDeletedWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbClusterSnapshotDeletedWaitWaiterConfigTypeDef = TypedDict(
    "_DbClusterSnapshotDeletedWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbClusterSnapshotDeletedWaitWaiterConfigTypeDef(
    _DbClusterSnapshotDeletedWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbClusterSnapshotDeletedWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 30

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 60
    """


_DbInstanceAvailableWaitFiltersTypeDef = TypedDict(
    "_DbInstanceAvailableWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbInstanceAvailableWaitFiltersTypeDef(_DbInstanceAvailableWaitFiltersTypeDef):
    """
    Type definition for `DbInstanceAvailableWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbInstanceAvailableWaitWaiterConfigTypeDef = TypedDict(
    "_DbInstanceAvailableWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbInstanceAvailableWaitWaiterConfigTypeDef(
    _DbInstanceAvailableWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbInstanceAvailableWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 30

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 60
    """


_DbInstanceDeletedWaitFiltersTypeDef = TypedDict(
    "_DbInstanceDeletedWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbInstanceDeletedWaitFiltersTypeDef(_DbInstanceDeletedWaitFiltersTypeDef):
    """
    Type definition for `DbInstanceDeletedWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbInstanceDeletedWaitWaiterConfigTypeDef = TypedDict(
    "_DbInstanceDeletedWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbInstanceDeletedWaitWaiterConfigTypeDef(
    _DbInstanceDeletedWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbInstanceDeletedWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 30

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 60
    """


_DbSnapshotAvailableWaitFiltersTypeDef = TypedDict(
    "_DbSnapshotAvailableWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbSnapshotAvailableWaitFiltersTypeDef(_DbSnapshotAvailableWaitFiltersTypeDef):
    """
    Type definition for `DbSnapshotAvailableWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbSnapshotAvailableWaitWaiterConfigTypeDef = TypedDict(
    "_DbSnapshotAvailableWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbSnapshotAvailableWaitWaiterConfigTypeDef(
    _DbSnapshotAvailableWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbSnapshotAvailableWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 30

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 60
    """


_DbSnapshotCompletedWaitFiltersTypeDef = TypedDict(
    "_DbSnapshotCompletedWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbSnapshotCompletedWaitFiltersTypeDef(_DbSnapshotCompletedWaitFiltersTypeDef):
    """
    Type definition for `DbSnapshotCompletedWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbSnapshotCompletedWaitWaiterConfigTypeDef = TypedDict(
    "_DbSnapshotCompletedWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbSnapshotCompletedWaitWaiterConfigTypeDef(
    _DbSnapshotCompletedWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbSnapshotCompletedWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 15

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 40
    """


_DbSnapshotDeletedWaitFiltersTypeDef = TypedDict(
    "_DbSnapshotDeletedWaitFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DbSnapshotDeletedWaitFiltersTypeDef(_DbSnapshotDeletedWaitFiltersTypeDef):
    """
    Type definition for `DbSnapshotDeletedWait` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DbSnapshotDeletedWaitWaiterConfigTypeDef = TypedDict(
    "_DbSnapshotDeletedWaitWaiterConfigTypeDef",
    {"Delay": int, "MaxAttempts": int},
    total=False,
)


class DbSnapshotDeletedWaitWaiterConfigTypeDef(
    _DbSnapshotDeletedWaitWaiterConfigTypeDef
):
    """
    Type definition for `DbSnapshotDeletedWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 30

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 60
    """


_DescribeCertificatesPaginateFiltersTypeDef = TypedDict(
    "_DescribeCertificatesPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeCertificatesPaginateFiltersTypeDef(
    _DescribeCertificatesPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeCertificatesPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeCertificatesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeCertificatesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeCertificatesPaginatePaginationConfigTypeDef(
    _DescribeCertificatesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeCertificatesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeCertificatesPaginateResponseCertificatesTypeDef = TypedDict(
    "_DescribeCertificatesPaginateResponseCertificatesTypeDef",
    {
        "CertificateIdentifier": str,
        "CertificateType": str,
        "Thumbprint": str,
        "ValidFrom": datetime,
        "ValidTill": datetime,
        "CertificateArn": str,
    },
    total=False,
)


class DescribeCertificatesPaginateResponseCertificatesTypeDef(
    _DescribeCertificatesPaginateResponseCertificatesTypeDef
):
    """
    Type definition for `DescribeCertificatesPaginateResponse` `Certificates`

    A CA certificate for an AWS account.

    - **CertificateIdentifier** *(string) --*

      The unique key that identifies a certificate.

    - **CertificateType** *(string) --*

      The type of the certificate.

    - **Thumbprint** *(string) --*

      The thumbprint of the certificate.

    - **ValidFrom** *(datetime) --*

      The starting date from which the certificate is valid.

    - **ValidTill** *(datetime) --*

      The final date that the certificate continues to be valid.

    - **CertificateArn** *(string) --*

      The Amazon Resource Name (ARN) for the certificate.
    """


_DescribeCertificatesPaginateResponseTypeDef = TypedDict(
    "_DescribeCertificatesPaginateResponseTypeDef",
    {
        "Certificates": List[DescribeCertificatesPaginateResponseCertificatesTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeCertificatesPaginateResponseTypeDef(
    _DescribeCertificatesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeCertificatesPaginate` `Response`

    Data returned by the **DescribeCertificates** action.

    - **Certificates** *(list) --*

      The list of ``Certificate`` objects for the AWS account.

      - *(dict) --*

        A CA certificate for an AWS account.

        - **CertificateIdentifier** *(string) --*

          The unique key that identifies a certificate.

        - **CertificateType** *(string) --*

          The type of the certificate.

        - **Thumbprint** *(string) --*

          The thumbprint of the certificate.

        - **ValidFrom** *(datetime) --*

          The starting date from which the certificate is valid.

        - **ValidTill** *(datetime) --*

          The final date that the certificate continues to be valid.

        - **CertificateArn** *(string) --*

          The Amazon Resource Name (ARN) for the certificate.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeCustomAvailabilityZonesPaginateFiltersTypeDef = TypedDict(
    "_DescribeCustomAvailabilityZonesPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeCustomAvailabilityZonesPaginateFiltersTypeDef(
    _DescribeCustomAvailabilityZonesPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeCustomAvailabilityZonesPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeCustomAvailabilityZonesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeCustomAvailabilityZonesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeCustomAvailabilityZonesPaginatePaginationConfigTypeDef(
    _DescribeCustomAvailabilityZonesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeCustomAvailabilityZonesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesVpnDetailsTypeDef = TypedDict(
    "_DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesVpnDetailsTypeDef",
    {
        "VpnId": str,
        "VpnTunnelOriginatorIP": str,
        "VpnGatewayIp": str,
        "VpnPSK": str,
        "VpnName": str,
        "VpnState": str,
    },
    total=False,
)


class DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesVpnDetailsTypeDef(
    _DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesVpnDetailsTypeDef
):
    """
    Type definition for `DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZones` `VpnDetails`

    Information about the virtual private network (VPN) between the VMware vSphere cluster
    and the AWS website.

    - **VpnId** *(string) --*

      The ID of the VPN.

    - **VpnTunnelOriginatorIP** *(string) --*

      The IP address of network traffic from your on-premises data center. A custom AZ
      receives the network traffic.

    - **VpnGatewayIp** *(string) --*

      The IP address of network traffic from AWS to your on-premises data center.

    - **VpnPSK** *(string) --*

      The preshared key (PSK) for the VPN.

    - **VpnName** *(string) --*

      The name of the VPN.

    - **VpnState** *(string) --*

      The state of the VPN.
    """


_DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesTypeDef = TypedDict(
    "_DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesTypeDef",
    {
        "CustomAvailabilityZoneId": str,
        "CustomAvailabilityZoneName": str,
        "CustomAvailabilityZoneStatus": str,
        "VpnDetails": DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesVpnDetailsTypeDef,
    },
    total=False,
)


class DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesTypeDef(
    _DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesTypeDef
):
    """
    Type definition for `DescribeCustomAvailabilityZonesPaginateResponse` `CustomAvailabilityZones`

    A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware
    vSphere cluster.

    For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
    https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

    - **CustomAvailabilityZoneId** *(string) --*

      The identifier of the custom AZ.

      Amazon RDS generates a unique identifier when a custom AZ is created.

    - **CustomAvailabilityZoneName** *(string) --*

      The name of the custom AZ.

    - **CustomAvailabilityZoneStatus** *(string) --*

      The status of the custom AZ.

    - **VpnDetails** *(dict) --*

      Information about the virtual private network (VPN) between the VMware vSphere cluster
      and the AWS website.

      - **VpnId** *(string) --*

        The ID of the VPN.

      - **VpnTunnelOriginatorIP** *(string) --*

        The IP address of network traffic from your on-premises data center. A custom AZ
        receives the network traffic.

      - **VpnGatewayIp** *(string) --*

        The IP address of network traffic from AWS to your on-premises data center.

      - **VpnPSK** *(string) --*

        The preshared key (PSK) for the VPN.

      - **VpnName** *(string) --*

        The name of the VPN.

      - **VpnState** *(string) --*

        The state of the VPN.
    """


_DescribeCustomAvailabilityZonesPaginateResponseTypeDef = TypedDict(
    "_DescribeCustomAvailabilityZonesPaginateResponseTypeDef",
    {
        "CustomAvailabilityZones": List[
            DescribeCustomAvailabilityZonesPaginateResponseCustomAvailabilityZonesTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeCustomAvailabilityZonesPaginateResponseTypeDef(
    _DescribeCustomAvailabilityZonesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeCustomAvailabilityZonesPaginate` `Response`

    - **CustomAvailabilityZones** *(list) --*

      The list of  CustomAvailabilityZone objects for the AWS account.

      - *(dict) --*

        A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware
        vSphere cluster.

        For more information about RDS on VMware, see the ` *RDS on VMware User Guide.*
        https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

        - **CustomAvailabilityZoneId** *(string) --*

          The identifier of the custom AZ.

          Amazon RDS generates a unique identifier when a custom AZ is created.

        - **CustomAvailabilityZoneName** *(string) --*

          The name of the custom AZ.

        - **CustomAvailabilityZoneStatus** *(string) --*

          The status of the custom AZ.

        - **VpnDetails** *(dict) --*

          Information about the virtual private network (VPN) between the VMware vSphere cluster
          and the AWS website.

          - **VpnId** *(string) --*

            The ID of the VPN.

          - **VpnTunnelOriginatorIP** *(string) --*

            The IP address of network traffic from your on-premises data center. A custom AZ
            receives the network traffic.

          - **VpnGatewayIp** *(string) --*

            The IP address of network traffic from AWS to your on-premises data center.

          - **VpnPSK** *(string) --*

            The preshared key (PSK) for the VPN.

          - **VpnName** *(string) --*

            The name of the VPN.

          - **VpnState** *(string) --*

            The state of the VPN.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBClusterBacktracksPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBClusterBacktracksPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBClusterBacktracksPaginateFiltersTypeDef(
    _DescribeDBClusterBacktracksPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBClusterBacktracksPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBClusterBacktracksPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBClusterBacktracksPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBClusterBacktracksPaginatePaginationConfigTypeDef(
    _DescribeDBClusterBacktracksPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBClusterBacktracksPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBClusterBacktracksPaginateResponseDBClusterBacktracksTypeDef = TypedDict(
    "_DescribeDBClusterBacktracksPaginateResponseDBClusterBacktracksTypeDef",
    {
        "DBClusterIdentifier": str,
        "BacktrackIdentifier": str,
        "BacktrackTo": datetime,
        "BacktrackedFrom": datetime,
        "BacktrackRequestCreationTime": datetime,
        "Status": str,
    },
    total=False,
)


class DescribeDBClusterBacktracksPaginateResponseDBClusterBacktracksTypeDef(
    _DescribeDBClusterBacktracksPaginateResponseDBClusterBacktracksTypeDef
):
    """
    Type definition for `DescribeDBClusterBacktracksPaginateResponse` `DBClusterBacktracks`

    This data type is used as a response element in the ``DescribeDBClusterBacktracks`` action.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **BacktrackIdentifier** *(string) --*

      Contains the backtrack identifier.

    - **BacktrackTo** *(datetime) --*

      The timestamp of the time to which the DB cluster was backtracked.

    - **BacktrackedFrom** *(datetime) --*

      The timestamp of the time from which the DB cluster was backtracked.

    - **BacktrackRequestCreationTime** *(datetime) --*

      The timestamp of the time at which the backtrack was requested.

    - **Status** *(string) --*

      The status of the backtrack. This property returns one of the following values:

      * ``applying`` - The backtrack is currently being applied to or rolled back from the DB
      cluster.

      * ``completed`` - The backtrack has successfully been applied to or rolled back from the
      DB cluster.

      * ``failed`` - An error occurred while the backtrack was applied to or rolled back from
      the DB cluster.

      * ``pending`` - The backtrack is currently pending application to or rollback from the DB
      cluster.
    """


_DescribeDBClusterBacktracksPaginateResponseTypeDef = TypedDict(
    "_DescribeDBClusterBacktracksPaginateResponseTypeDef",
    {
        "DBClusterBacktracks": List[
            DescribeDBClusterBacktracksPaginateResponseDBClusterBacktracksTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBClusterBacktracksPaginateResponseTypeDef(
    _DescribeDBClusterBacktracksPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBClusterBacktracksPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBClusterBacktracks`` action.

    - **DBClusterBacktracks** *(list) --*

      Contains a list of backtracks for the user.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBClusterBacktracks`` action.

        - **DBClusterIdentifier** *(string) --*

          Contains a user-supplied DB cluster identifier. This identifier is the unique key that
          identifies a DB cluster.

        - **BacktrackIdentifier** *(string) --*

          Contains the backtrack identifier.

        - **BacktrackTo** *(datetime) --*

          The timestamp of the time to which the DB cluster was backtracked.

        - **BacktrackedFrom** *(datetime) --*

          The timestamp of the time from which the DB cluster was backtracked.

        - **BacktrackRequestCreationTime** *(datetime) --*

          The timestamp of the time at which the backtrack was requested.

        - **Status** *(string) --*

          The status of the backtrack. This property returns one of the following values:

          * ``applying`` - The backtrack is currently being applied to or rolled back from the DB
          cluster.

          * ``completed`` - The backtrack has successfully been applied to or rolled back from the
          DB cluster.

          * ``failed`` - An error occurred while the backtrack was applied to or rolled back from
          the DB cluster.

          * ``pending`` - The backtrack is currently pending application to or rollback from the DB
          cluster.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBClusterEndpointsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBClusterEndpointsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBClusterEndpointsPaginateFiltersTypeDef(
    _DescribeDBClusterEndpointsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBClusterEndpointsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBClusterEndpointsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBClusterEndpointsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBClusterEndpointsPaginatePaginationConfigTypeDef(
    _DescribeDBClusterEndpointsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBClusterEndpointsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBClusterEndpointsPaginateResponseDBClusterEndpointsTypeDef = TypedDict(
    "_DescribeDBClusterEndpointsPaginateResponseDBClusterEndpointsTypeDef",
    {
        "DBClusterEndpointIdentifier": str,
        "DBClusterIdentifier": str,
        "DBClusterEndpointResourceIdentifier": str,
        "Endpoint": str,
        "Status": str,
        "EndpointType": str,
        "CustomEndpointType": str,
        "StaticMembers": List[str],
        "ExcludedMembers": List[str],
        "DBClusterEndpointArn": str,
    },
    total=False,
)


class DescribeDBClusterEndpointsPaginateResponseDBClusterEndpointsTypeDef(
    _DescribeDBClusterEndpointsPaginateResponseDBClusterEndpointsTypeDef
):
    """
    Type definition for `DescribeDBClusterEndpointsPaginateResponse` `DBClusterEndpoints`

    This data type represents the information you need to connect to an Amazon Aurora DB
    cluster. This data type is used as a response element in the following actions:

    * ``CreateDBClusterEndpoint``

    * ``DescribeDBClusterEndpoints``

    * ``ModifyDBClusterEndpoint``

    * ``DeleteDBClusterEndpoint``

    For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

    - **DBClusterEndpointIdentifier** *(string) --*

      The identifier associated with the endpoint. This parameter is stored as a lowercase
      string.

    - **DBClusterIdentifier** *(string) --*

      The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
      is stored as a lowercase string.

    - **DBClusterEndpointResourceIdentifier** *(string) --*

      A unique system-generated identifier for an endpoint. It remains the same for the whole
      life of the endpoint.

    - **Endpoint** *(string) --*

      The DNS address of the endpoint.

    - **Status** *(string) --*

      The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
      ``modifying`` .

    - **EndpointType** *(string) --*

      The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

    - **CustomEndpointType** *(string) --*

      The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

    - **StaticMembers** *(list) --*

      List of DB instance identifiers that are part of the custom endpoint group.

      - *(string) --*

    - **ExcludedMembers** *(list) --*

      List of DB instance identifiers that aren't part of the custom endpoint group. All other
      eligible instances are reachable through the custom endpoint. Only relevant if the list
      of static members is empty.

      - *(string) --*

    - **DBClusterEndpointArn** *(string) --*

      The Amazon Resource Name (ARN) for the endpoint.
    """


_DescribeDBClusterEndpointsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBClusterEndpointsPaginateResponseTypeDef",
    {
        "DBClusterEndpoints": List[
            DescribeDBClusterEndpointsPaginateResponseDBClusterEndpointsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBClusterEndpointsPaginateResponseTypeDef(
    _DescribeDBClusterEndpointsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBClusterEndpointsPaginate` `Response`

    - **DBClusterEndpoints** *(list) --*

      Contains the details of the endpoints associated with the cluster and matching any filter
      conditions.

      - *(dict) --*

        This data type represents the information you need to connect to an Amazon Aurora DB
        cluster. This data type is used as a response element in the following actions:

        * ``CreateDBClusterEndpoint``

        * ``DescribeDBClusterEndpoints``

        * ``ModifyDBClusterEndpoint``

        * ``DeleteDBClusterEndpoint``

        For the data structure that represents Amazon RDS DB instance endpoints, see ``Endpoint`` .

        - **DBClusterEndpointIdentifier** *(string) --*

          The identifier associated with the endpoint. This parameter is stored as a lowercase
          string.

        - **DBClusterIdentifier** *(string) --*

          The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
          is stored as a lowercase string.

        - **DBClusterEndpointResourceIdentifier** *(string) --*

          A unique system-generated identifier for an endpoint. It remains the same for the whole
          life of the endpoint.

        - **Endpoint** *(string) --*

          The DNS address of the endpoint.

        - **Status** *(string) --*

          The current status of the endpoint. One of: ``creating`` , ``available`` , ``deleting`` ,
          ``modifying`` .

        - **EndpointType** *(string) --*

          The type of the endpoint. One of: ``READER`` , ``WRITER`` , ``CUSTOM`` .

        - **CustomEndpointType** *(string) --*

          The type associated with a custom endpoint. One of: ``READER`` , ``WRITER`` , ``ANY`` .

        - **StaticMembers** *(list) --*

          List of DB instance identifiers that are part of the custom endpoint group.

          - *(string) --*

        - **ExcludedMembers** *(list) --*

          List of DB instance identifiers that aren't part of the custom endpoint group. All other
          eligible instances are reachable through the custom endpoint. Only relevant if the list
          of static members is empty.

          - *(string) --*

        - **DBClusterEndpointArn** *(string) --*

          The Amazon Resource Name (ARN) for the endpoint.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBClusterParameterGroupsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBClusterParameterGroupsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBClusterParameterGroupsPaginateFiltersTypeDef(
    _DescribeDBClusterParameterGroupsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBClusterParameterGroupsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBClusterParameterGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBClusterParameterGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBClusterParameterGroupsPaginatePaginationConfigTypeDef(
    _DescribeDBClusterParameterGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBClusterParameterGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBClusterParameterGroupsPaginateResponseDBClusterParameterGroupsTypeDef = TypedDict(
    "_DescribeDBClusterParameterGroupsPaginateResponseDBClusterParameterGroupsTypeDef",
    {
        "DBClusterParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBClusterParameterGroupArn": str,
    },
    total=False,
)


class DescribeDBClusterParameterGroupsPaginateResponseDBClusterParameterGroupsTypeDef(
    _DescribeDBClusterParameterGroupsPaginateResponseDBClusterParameterGroupsTypeDef
):
    """
    Type definition for `DescribeDBClusterParameterGroupsPaginateResponse` `DBClusterParameterGroups`

    Contains the details of an Amazon RDS DB cluster parameter group.

    This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
    action.

    - **DBClusterParameterGroupName** *(string) --*

      Provides the name of the DB cluster parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB cluster parameter group
      is compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB cluster parameter group.

    - **DBClusterParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster parameter group.
    """


_DescribeDBClusterParameterGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBClusterParameterGroupsPaginateResponseTypeDef",
    {
        "DBClusterParameterGroups": List[
            DescribeDBClusterParameterGroupsPaginateResponseDBClusterParameterGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBClusterParameterGroupsPaginateResponseTypeDef(
    _DescribeDBClusterParameterGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBClusterParameterGroupsPaginate` `Response`

    - **DBClusterParameterGroups** *(list) --*

      A list of DB cluster parameter groups.

      - *(dict) --*

        Contains the details of an Amazon RDS DB cluster parameter group.

        This data type is used as a response element in the ``DescribeDBClusterParameterGroups``
        action.

        - **DBClusterParameterGroupName** *(string) --*

          Provides the name of the DB cluster parameter group.

        - **DBParameterGroupFamily** *(string) --*

          Provides the name of the DB parameter group family that this DB cluster parameter group
          is compatible with.

        - **Description** *(string) --*

          Provides the customer-specified description for this DB cluster parameter group.

        - **DBClusterParameterGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB cluster parameter group.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBClusterParametersPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBClusterParametersPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBClusterParametersPaginateFiltersTypeDef(
    _DescribeDBClusterParametersPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBClusterParametersPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBClusterParametersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBClusterParametersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBClusterParametersPaginatePaginationConfigTypeDef(
    _DescribeDBClusterParametersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBClusterParametersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBClusterParametersPaginateResponseParametersTypeDef = TypedDict(
    "_DescribeDBClusterParametersPaginateResponseParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class DescribeDBClusterParametersPaginateResponseParametersTypeDef(
    _DescribeDBClusterParametersPaginateResponseParametersTypeDef
):
    """
    Type definition for `DescribeDBClusterParametersPaginateResponse` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_DescribeDBClusterParametersPaginateResponseTypeDef = TypedDict(
    "_DescribeDBClusterParametersPaginateResponseTypeDef",
    {
        "Parameters": List[
            DescribeDBClusterParametersPaginateResponseParametersTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBClusterParametersPaginateResponseTypeDef(
    _DescribeDBClusterParametersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBClusterParametersPaginate` `Response`

    Provides details about a DB cluster parameter group including the parameters in the DB cluster
    parameter group.

    - **Parameters** *(list) --*

      Provides a list of parameters for the DB cluster parameter group.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
        ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBClusterSnapshotsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBClusterSnapshotsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBClusterSnapshotsPaginateFiltersTypeDef(
    _DescribeDBClusterSnapshotsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBClusterSnapshotsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBClusterSnapshotsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBClusterSnapshotsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBClusterSnapshotsPaginatePaginationConfigTypeDef(
    _DescribeDBClusterSnapshotsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBClusterSnapshotsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBClusterSnapshotsPaginateResponseDBClusterSnapshotsTypeDef = TypedDict(
    "_DescribeDBClusterSnapshotsPaginateResponseDBClusterSnapshotsTypeDef",
    {
        "AvailabilityZones": List[str],
        "DBClusterSnapshotIdentifier": str,
        "DBClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "VpcId": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "PercentProgress": int,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DBClusterSnapshotArn": str,
        "SourceDBClusterSnapshotArn": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class DescribeDBClusterSnapshotsPaginateResponseDBClusterSnapshotsTypeDef(
    _DescribeDBClusterSnapshotsPaginateResponseDBClusterSnapshotsTypeDef
):
    """
    Type definition for `DescribeDBClusterSnapshotsPaginateResponse` `DBClusterSnapshots`

    Contains the details for an Amazon RDS DB cluster snapshot

    This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
      can be restored.

      - *(string) --*

    - **DBClusterSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB cluster snapshot.

    - **DBClusterIdentifier** *(string) --*

      Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
      created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB cluster snapshot.

    - **Port** *(integer) --*

      Specifies the port that the DB cluster was listening on at the time of the snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB cluster snapshot.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB cluster snapshot.

    - **EngineVersion** *(string) --*

      Provides the version of the database engine for this DB cluster snapshot.

    - **LicenseModel** *(string) --*

      Provides the license model information for this DB cluster snapshot.

    - **SnapshotType** *(string) --*

      Provides the type of the DB cluster snapshot.

    - **PercentProgress** *(integer) --*

      Specifies the percentage of the estimated data that has been transferred.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
      snapshot.

    - **DBClusterSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster snapshot.

    - **SourceDBClusterSnapshotArn** *(string) --*

      If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
      Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_DescribeDBClusterSnapshotsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBClusterSnapshotsPaginateResponseTypeDef",
    {
        "DBClusterSnapshots": List[
            DescribeDBClusterSnapshotsPaginateResponseDBClusterSnapshotsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBClusterSnapshotsPaginateResponseTypeDef(
    _DescribeDBClusterSnapshotsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBClusterSnapshotsPaginate` `Response`

    Provides a list of DB cluster snapshots for the user as the result of a call to the
    ``DescribeDBClusterSnapshots`` action.

    - **DBClusterSnapshots** *(list) --*

      Provides a list of DB cluster snapshots for the user.

      - *(dict) --*

        Contains the details for an Amazon RDS DB cluster snapshot

        This data type is used as a response element in the ``DescribeDBClusterSnapshots`` action.

        - **AvailabilityZones** *(list) --*

          Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot
          can be restored.

          - *(string) --*

        - **DBClusterSnapshotIdentifier** *(string) --*

          Specifies the identifier for the DB cluster snapshot.

        - **DBClusterIdentifier** *(string) --*

          Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was
          created from.

        - **SnapshotCreateTime** *(datetime) --*

          Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

        - **Engine** *(string) --*

          Specifies the name of the database engine.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size in gibibytes (GiB).

        - **Status** *(string) --*

          Specifies the status of this DB cluster snapshot.

        - **Port** *(integer) --*

          Specifies the port that the DB cluster was listening on at the time of the snapshot.

        - **VpcId** *(string) --*

          Provides the VPC ID associated with the DB cluster snapshot.

        - **ClusterCreateTime** *(datetime) --*

          Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

        - **MasterUsername** *(string) --*

          Provides the master username for the DB cluster snapshot.

        - **EngineVersion** *(string) --*

          Provides the version of the database engine for this DB cluster snapshot.

        - **LicenseModel** *(string) --*

          Provides the license model information for this DB cluster snapshot.

        - **SnapshotType** *(string) --*

          Provides the type of the DB cluster snapshot.

        - **PercentProgress** *(integer) --*

          Specifies the percentage of the estimated data that has been transferred.

        - **StorageEncrypted** *(boolean) --*

          Specifies whether the DB cluster snapshot is encrypted.

        - **KmsKeyId** *(string) --*

          If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB cluster
          snapshot.

        - **DBClusterSnapshotArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB cluster snapshot.

        - **SourceDBClusterSnapshotArn** *(string) --*

          If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
          Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBClustersPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBClustersPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeDBClustersPaginateFiltersTypeDef(
    _DescribeDBClustersPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBClustersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBClustersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBClustersPaginatePaginationConfigTypeDef(
    _DescribeDBClustersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBClustersPaginateResponseDBClustersAssociatedRolesTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseDBClustersAssociatedRolesTypeDef",
    {"RoleArn": str, "Status": str, "FeatureName": str},
    total=False,
)


class DescribeDBClustersPaginateResponseDBClustersAssociatedRolesTypeDef(
    _DescribeDBClustersPaginateResponseDBClustersAssociatedRolesTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginateResponseDBClusters` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    cluster.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB cluster. The
      Status property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

      * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB
      cluster is unable to assume the IAM role in order to access other AWS services on
      your behalf.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see  DBEngineVersion .
    """


_DescribeDBClustersPaginateResponseDBClustersDBClusterMembersTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseDBClustersDBClusterMembersTypeDef",
    {
        "DBInstanceIdentifier": str,
        "IsClusterWriter": bool,
        "DBClusterParameterGroupStatus": str,
        "PromotionTier": int,
    },
    total=False,
)


class DescribeDBClustersPaginateResponseDBClustersDBClusterMembersTypeDef(
    _DescribeDBClustersPaginateResponseDBClustersDBClusterMembersTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginateResponseDBClusters` `DBClusterMembers`

    Contains information about an instance that is part of a DB cluster.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the instance identifier for this member of the DB cluster.

    - **IsClusterWriter** *(boolean) --*

      Value that is ``true`` if the cluster member is the primary instance for the DB
      cluster and ``false`` otherwise.

    - **DBClusterParameterGroupStatus** *(string) --*

      Specifies the status of the DB cluster parameter group for this member of the DB
      cluster.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the
      primary instance after a failure of the existing primary instance. For more
      information, see `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .
    """


_DescribeDBClustersPaginateResponseDBClustersDBClusterOptionGroupMembershipsTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseDBClustersDBClusterOptionGroupMembershipsTypeDef",
    {"DBClusterOptionGroupName": str, "Status": str},
    total=False,
)


class DescribeDBClustersPaginateResponseDBClustersDBClusterOptionGroupMembershipsTypeDef(
    _DescribeDBClustersPaginateResponseDBClustersDBClusterOptionGroupMembershipsTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginateResponseDBClusters` `DBClusterOptionGroupMemberships`

    Contains status information for a DB cluster option group.

    - **DBClusterOptionGroupName** *(string) --*

      Specifies the name of the DB cluster option group.

    - **Status** *(string) --*

      Specifies the status of the DB cluster option group.
    """


_DescribeDBClustersPaginateResponseDBClustersScalingConfigurationInfoTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseDBClustersScalingConfigurationInfoTypeDef",
    {
        "MinCapacity": int,
        "MaxCapacity": int,
        "AutoPause": bool,
        "SecondsUntilAutoPause": int,
        "TimeoutAction": str,
    },
    total=False,
)


class DescribeDBClustersPaginateResponseDBClustersScalingConfigurationInfoTypeDef(
    _DescribeDBClustersPaginateResponseDBClustersScalingConfigurationInfoTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginateResponseDBClusters` `ScalingConfigurationInfo`

    Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

    For more information, see `Using Amazon Aurora Serverless
    <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
    in the *Amazon Aurora User Guide* .

    - **MinCapacity** *(integer) --*

      The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

    - **MaxCapacity** *(integer) --*

      The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

    - **AutoPause** *(boolean) --*

      A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
      ``serverless`` DB engine mode.

      When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
      automatically resumes.

    - **SecondsUntilAutoPause** *(integer) --*

      The remaining amount of time, in seconds, before the Aurora DB cluster in
      ``serverless`` mode is paused. A DB cluster can be paused only when it's idle (it has
      no connections).

    - **TimeoutAction** *(string) --*

      The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
      ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .
    """


_DescribeDBClustersPaginateResponseDBClustersVpcSecurityGroupsTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseDBClustersVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class DescribeDBClustersPaginateResponseDBClustersVpcSecurityGroupsTypeDef(
    _DescribeDBClustersPaginateResponseDBClustersVpcSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginateResponseDBClusters` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_DescribeDBClustersPaginateResponseDBClustersTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseDBClustersTypeDef",
    {
        "AllocatedStorage": int,
        "AvailabilityZones": List[str],
        "BackupRetentionPeriod": int,
        "CharacterSetName": str,
        "DatabaseName": str,
        "DBClusterIdentifier": str,
        "DBClusterParameterGroup": str,
        "DBSubnetGroup": str,
        "Status": str,
        "PercentProgress": str,
        "EarliestRestorableTime": datetime,
        "Endpoint": str,
        "ReaderEndpoint": str,
        "CustomEndpoints": List[str],
        "MultiAZ": bool,
        "Engine": str,
        "EngineVersion": str,
        "LatestRestorableTime": datetime,
        "Port": int,
        "MasterUsername": str,
        "DBClusterOptionGroupMemberships": List[
            DescribeDBClustersPaginateResponseDBClustersDBClusterOptionGroupMembershipsTypeDef
        ],
        "PreferredBackupWindow": str,
        "PreferredMaintenanceWindow": str,
        "ReplicationSourceIdentifier": str,
        "ReadReplicaIdentifiers": List[str],
        "DBClusterMembers": List[
            DescribeDBClustersPaginateResponseDBClustersDBClusterMembersTypeDef
        ],
        "VpcSecurityGroups": List[
            DescribeDBClustersPaginateResponseDBClustersVpcSecurityGroupsTypeDef
        ],
        "HostedZoneId": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbClusterResourceId": str,
        "DBClusterArn": str,
        "AssociatedRoles": List[
            DescribeDBClustersPaginateResponseDBClustersAssociatedRolesTypeDef
        ],
        "IAMDatabaseAuthenticationEnabled": bool,
        "CloneGroupId": str,
        "ClusterCreateTime": datetime,
        "EarliestBacktrackTime": datetime,
        "BacktrackWindow": int,
        "BacktrackConsumedChangeRecords": int,
        "EnabledCloudwatchLogsExports": List[str],
        "Capacity": int,
        "EngineMode": str,
        "ScalingConfigurationInfo": DescribeDBClustersPaginateResponseDBClustersScalingConfigurationInfoTypeDef,
        "DeletionProtection": bool,
        "HttpEndpointEnabled": bool,
        "ActivityStreamMode": str,
        "ActivityStreamStatus": str,
        "ActivityStreamKmsKeyId": str,
        "ActivityStreamKinesisStreamName": str,
        "CopyTagsToSnapshot": bool,
        "CrossAccountClone": bool,
    },
    total=False,
)


class DescribeDBClustersPaginateResponseDBClustersTypeDef(
    _DescribeDBClustersPaginateResponseDBClustersTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginateResponse` `DBClusters`

    Contains the details of an Amazon Aurora DB cluster.

    This data type is used as a response element in the ``DescribeDBClusters`` ,
    ``StopDBCluster`` , and ``StartDBCluster`` actions.

    - **AllocatedStorage** *(integer) --*

      For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the
      allocated storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always
      returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically
      adjusts as needed.

    - **AvailabilityZones** *(list) --*

      Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
      created.

      - *(string) --*

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this cluster is associated with.

    - **DatabaseName** *(string) --*

      Contains the name of the initial database of this DB cluster that was provided at create
      time, if one was specified when the DB cluster was created. This same name is returned
      for the life of the DB cluster.

    - **DBClusterIdentifier** *(string) --*

      Contains a user-supplied DB cluster identifier. This identifier is the unique key that
      identifies a DB cluster.

    - **DBClusterParameterGroup** *(string) --*

      Specifies the name of the DB cluster parameter group for the DB cluster.

    - **DBSubnetGroup** *(string) --*

      Specifies information on the subnet group associated with the DB cluster, including the
      name, description, and subnets in the subnet group.

    - **Status** *(string) --*

      Specifies the current state of this DB cluster.

    - **PercentProgress** *(string) --*

      Specifies the progress of the operation as a percentage.

    - **EarliestRestorableTime** *(datetime) --*

      The earliest time to which a database can be restored with point-in-time restore.

    - **Endpoint** *(string) --*

      Specifies the connection endpoint for the primary instance of the DB cluster.

    - **ReaderEndpoint** *(string) --*

      The reader endpoint for the DB cluster. The reader endpoint for a DB cluster
      load-balances connections across the Aurora Replicas that are available in a DB cluster.
      As clients request new connections to the reader endpoint, Aurora distributes the
      connection requests among the Aurora Replicas in the DB cluster. This functionality can
      help balance your read workload across multiple Aurora Replicas in your DB cluster.

      If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
      the primary instance, your connection is dropped. To continue sending your read workload
      to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

    - **CustomEndpoints** *(list) --*

      Identifies all custom endpoints associated with the cluster.

      - *(string) --*

    - **MultiAZ** *(boolean) --*

      Specifies whether the DB cluster has instances in multiple Availability Zones.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB cluster.

    - **DBClusterOptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB cluster.

      - *(dict) --*

        Contains status information for a DB cluster option group.

        - **DBClusterOptionGroupName** *(string) --*

          Specifies the name of the DB cluster option group.

        - **Status** *(string) --*

          Specifies the status of the DB cluster option group.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **ReplicationSourceIdentifier** *(string) --*

      Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

    - **ReadReplicaIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB cluster.

      - *(string) --*

    - **DBClusterMembers** *(list) --*

      Provides the list of instances that make up the DB cluster.

      - *(dict) --*

        Contains information about an instance that is part of a DB cluster.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the instance identifier for this member of the DB cluster.

        - **IsClusterWriter** *(boolean) --*

          Value that is ``true`` if the cluster member is the primary instance for the DB
          cluster and ``false`` otherwise.

        - **DBClusterParameterGroupStatus** *(string) --*

          Specifies the status of the DB cluster parameter group for this member of the DB
          cluster.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the
          primary instance after a failure of the existing primary instance. For more
          information, see `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security groups that the DB cluster belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB cluster is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB
      cluster.

    - **DbClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB cluster.

    - **AssociatedRoles** *(list) --*

      Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
      with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
      the DB cluster to access other AWS services on your behalf.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        cluster.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB cluster. The
          Status property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

          * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB
          cluster is unable to assume the IAM role in order to access other AWS services on
          your behalf.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see  DBEngineVersion .

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
      accounts to database accounts is enabled.

    - **CloneGroupId** *(string) --*

      Identifies the clone group to which the DB cluster is associated.

    - **ClusterCreateTime** *(datetime) --*

      Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

    - **EarliestBacktrackTime** *(datetime) --*

      The earliest time to which a DB cluster can be backtracked.

    - **BacktrackWindow** *(integer) --*

      The target backtrack window, in seconds. If this value is set to 0, backtracking is
      disabled for the DB cluster. Otherwise, backtracking is enabled.

    - **BacktrackConsumedChangeRecords** *(integer) --*

      The number of change records stored for Backtrack.

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB cluster is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
      the *Amazon Aurora User Guide.*

      - *(string) --*

    - **Capacity** *(integer) --*

      The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when
      the cluster is paused.

      For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
      in the *Amazon Aurora User Guide* .

    - **EngineMode** *(string) --*

      The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
      ``parallelquery`` , ``global`` , or ``multimaster`` .

    - **ScalingConfigurationInfo** *(dict) --*

      Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

      For more information, see `Using Amazon Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
      in the *Amazon Aurora User Guide* .

      - **MinCapacity** *(integer) --*

        The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

      - **MaxCapacity** *(integer) --*

        The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

      - **AutoPause** *(boolean) --*

        A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
        ``serverless`` DB engine mode.

        When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
        automatically resumes.

      - **SecondsUntilAutoPause** *(integer) --*

        The remaining amount of time, in seconds, before the Aurora DB cluster in
        ``serverless`` mode is paused. A DB cluster can be paused only when it's idle (it has
        no connections).

      - **TimeoutAction** *(string) --*

        The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
        ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB cluster has deletion protection enabled. The database can't be
      deleted when deletion protection is enabled.

    - **HttpEndpointEnabled** *(boolean) --*

      A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
      enabled.

      When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
      queries on the Aurora Serverless DB cluster. You can also query your database from inside
      the RDS console with the query editor.

      For more information, see `Using the Data API for Aurora Serverless
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
      *Amazon Aurora User Guide* .

    - **ActivityStreamMode** *(string) --*

      The mode of the database activity stream. Database events such as a change or access
      generate an activity stream event. The database session can handle these events either
      synchronously or asynchronously.

    - **ActivityStreamStatus** *(string) --*

      The status of the database activity stream.

    - **ActivityStreamKmsKeyId** *(string) --*

      The AWS KMS key identifier used for encrypting messages in the database activity stream.

    - **ActivityStreamKinesisStreamName** *(string) --*

      The name of the Amazon Kinesis data stream used for the database activity stream.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

    - **CrossAccountClone** *(boolean) --*

      Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
      account.
    """


_DescribeDBClustersPaginateResponseTypeDef = TypedDict(
    "_DescribeDBClustersPaginateResponseTypeDef",
    {
        "DBClusters": List[DescribeDBClustersPaginateResponseDBClustersTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBClustersPaginateResponseTypeDef(
    _DescribeDBClustersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBClustersPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBClusters`` action.

    - **DBClusters** *(list) --*

      Contains a list of DB clusters for the user.

      - *(dict) --*

        Contains the details of an Amazon Aurora DB cluster.

        This data type is used as a response element in the ``DescribeDBClusters`` ,
        ``StopDBCluster`` , and ``StartDBCluster`` actions.

        - **AllocatedStorage** *(integer) --*

          For all database engines except Amazon Aurora, ``AllocatedStorage`` specifies the
          allocated storage size in gibibytes (GiB). For Aurora, ``AllocatedStorage`` always
          returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically
          adjusts as needed.

        - **AvailabilityZones** *(list) --*

          Provides the list of Availability Zones (AZs) where instances in the DB cluster can be
          created.

          - *(string) --*

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the number of days for which automatic DB snapshots are retained.

        - **CharacterSetName** *(string) --*

          If present, specifies the name of the character set that this cluster is associated with.

        - **DatabaseName** *(string) --*

          Contains the name of the initial database of this DB cluster that was provided at create
          time, if one was specified when the DB cluster was created. This same name is returned
          for the life of the DB cluster.

        - **DBClusterIdentifier** *(string) --*

          Contains a user-supplied DB cluster identifier. This identifier is the unique key that
          identifies a DB cluster.

        - **DBClusterParameterGroup** *(string) --*

          Specifies the name of the DB cluster parameter group for the DB cluster.

        - **DBSubnetGroup** *(string) --*

          Specifies information on the subnet group associated with the DB cluster, including the
          name, description, and subnets in the subnet group.

        - **Status** *(string) --*

          Specifies the current state of this DB cluster.

        - **PercentProgress** *(string) --*

          Specifies the progress of the operation as a percentage.

        - **EarliestRestorableTime** *(datetime) --*

          The earliest time to which a database can be restored with point-in-time restore.

        - **Endpoint** *(string) --*

          Specifies the connection endpoint for the primary instance of the DB cluster.

        - **ReaderEndpoint** *(string) --*

          The reader endpoint for the DB cluster. The reader endpoint for a DB cluster
          load-balances connections across the Aurora Replicas that are available in a DB cluster.
          As clients request new connections to the reader endpoint, Aurora distributes the
          connection requests among the Aurora Replicas in the DB cluster. This functionality can
          help balance your read workload across multiple Aurora Replicas in your DB cluster.

          If a failover occurs, and the Aurora Replica that you are connected to is promoted to be
          the primary instance, your connection is dropped. To continue sending your read workload
          to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

        - **CustomEndpoints** *(list) --*

          Identifies all custom endpoints associated with the cluster.

          - *(string) --*

        - **MultiAZ** *(boolean) --*

          Specifies whether the DB cluster has instances in multiple Availability Zones.

        - **Engine** *(string) --*

          Provides the name of the database engine to be used for this DB cluster.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **LatestRestorableTime** *(datetime) --*

          Specifies the latest time to which a database can be restored with point-in-time restore.

        - **Port** *(integer) --*

          Specifies the port that the database engine is listening on.

        - **MasterUsername** *(string) --*

          Contains the master username for the DB cluster.

        - **DBClusterOptionGroupMemberships** *(list) --*

          Provides the list of option group memberships for this DB cluster.

          - *(dict) --*

            Contains status information for a DB cluster option group.

            - **DBClusterOptionGroupName** *(string) --*

              Specifies the name of the DB cluster option group.

            - **Status** *(string) --*

              Specifies the status of the DB cluster option group.

        - **PreferredBackupWindow** *(string) --*

          Specifies the daily time range during which automated backups are created if automated
          backups are enabled, as determined by the ``BackupRetentionPeriod`` .

        - **PreferredMaintenanceWindow** *(string) --*

          Specifies the weekly time range during which system maintenance can occur, in Universal
          Coordinated Time (UTC).

        - **ReplicationSourceIdentifier** *(string) --*

          Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.

        - **ReadReplicaIdentifiers** *(list) --*

          Contains one or more identifiers of the Read Replicas associated with this DB cluster.

          - *(string) --*

        - **DBClusterMembers** *(list) --*

          Provides the list of instances that make up the DB cluster.

          - *(dict) --*

            Contains information about an instance that is part of a DB cluster.

            - **DBInstanceIdentifier** *(string) --*

              Specifies the instance identifier for this member of the DB cluster.

            - **IsClusterWriter** *(boolean) --*

              Value that is ``true`` if the cluster member is the primary instance for the DB
              cluster and ``false`` otherwise.

            - **DBClusterParameterGroupStatus** *(string) --*

              Specifies the status of the DB cluster parameter group for this member of the DB
              cluster.

            - **PromotionTier** *(integer) --*

              A value that specifies the order in which an Aurora Replica is promoted to the
              primary instance after a failure of the existing primary instance. For more
              information, see `Fault Tolerance for an Aurora DB Cluster
              <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
              in the *Amazon Aurora User Guide* .

        - **VpcSecurityGroups** *(list) --*

          Provides a list of VPC security groups that the DB cluster belongs to.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

        - **HostedZoneId** *(string) --*

          Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

        - **StorageEncrypted** *(boolean) --*

          Specifies whether the DB cluster is encrypted.

        - **KmsKeyId** *(string) --*

          If ``StorageEncrypted`` is enabled, the AWS KMS key identifier for the encrypted DB
          cluster.

        - **DbClusterResourceId** *(string) --*

          The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found
          in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB cluster.

        - **AssociatedRoles** *(list) --*

          Provides a list of the AWS Identity and Access Management (IAM) roles that are associated
          with the DB cluster. IAM roles that are associated with a DB cluster grant permission for
          the DB cluster to access other AWS services on your behalf.

          - *(dict) --*

            Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
            cluster.

            - **RoleArn** *(string) --*

              The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

            - **Status** *(string) --*

              Describes the state of association between the IAM role and the DB cluster. The
              Status property returns one of the following values:

              * ``ACTIVE`` - the IAM role ARN is associated with the DB cluster and can be used to
              access other AWS services on your behalf.

              * ``PENDING`` - the IAM role ARN is being associated with the DB cluster.

              * ``INVALID`` - the IAM role ARN is associated with the DB cluster, but the DB
              cluster is unable to assume the IAM role in order to access other AWS services on
              your behalf.

            - **FeatureName** *(string) --*

              The name of the feature associated with the AWS Identity and Access Management (IAM)
              role. For the list of supported feature names, see  DBEngineVersion .

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          A value that indicates whether the mapping of AWS Identity and Access Management (IAM)
          accounts to database accounts is enabled.

        - **CloneGroupId** *(string) --*

          Identifies the clone group to which the DB cluster is associated.

        - **ClusterCreateTime** *(datetime) --*

          Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

        - **EarliestBacktrackTime** *(datetime) --*

          The earliest time to which a DB cluster can be backtracked.

        - **BacktrackWindow** *(integer) --*

          The target backtrack window, in seconds. If this value is set to 0, backtracking is
          disabled for the DB cluster. Otherwise, backtracking is enabled.

        - **BacktrackConsumedChangeRecords** *(integer) --*

          The number of change records stored for Backtrack.

        - **EnabledCloudwatchLogsExports** *(list) --*

          A list of log types that this DB cluster is configured to export to CloudWatch Logs.

          Log types vary by DB engine. For information about the log types for each DB engine, see
          `Amazon RDS Database Log Files
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html>`__ in
          the *Amazon Aurora User Guide.*

          - *(string) --*

        - **Capacity** *(integer) --*

          The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when
          the cluster is paused.

          For more information about Aurora Serverless, see `Using Amazon Aurora Serverless
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
          in the *Amazon Aurora User Guide* .

        - **EngineMode** *(string) --*

          The DB engine mode of the DB cluster, either ``provisioned`` , ``serverless`` ,
          ``parallelquery`` , ``global`` , or ``multimaster`` .

        - **ScalingConfigurationInfo** *(dict) --*

          Shows the scaling configuration for an Aurora DB cluster in ``serverless`` DB engine mode.

          For more information, see `Using Amazon Aurora Serverless
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html>`__
          in the *Amazon Aurora User Guide* .

          - **MinCapacity** *(integer) --*

            The maximum capacity for the Aurora DB cluster in ``serverless`` DB engine mode.

          - **MaxCapacity** *(integer) --*

            The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.

          - **AutoPause** *(boolean) --*

            A value that indicates whether automatic pause is allowed for the Aurora DB cluster in
            ``serverless`` DB engine mode.

            When the value is set to false for an Aurora Serverless DB cluster, the DB cluster
            automatically resumes.

          - **SecondsUntilAutoPause** *(integer) --*

            The remaining amount of time, in seconds, before the Aurora DB cluster in
            ``serverless`` mode is paused. A DB cluster can be paused only when it's idle (it has
            no connections).

          - **TimeoutAction** *(string) --*

            The timeout action of a call to ``ModifyCurrentDBClusterCapacity`` , either
            ``ForceApplyCapacityChange`` or ``RollbackCapacityChange`` .

        - **DeletionProtection** *(boolean) --*

          Indicates if the DB cluster has deletion protection enabled. The database can't be
          deleted when deletion protection is enabled.

        - **HttpEndpointEnabled** *(boolean) --*

          A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is
          enabled.

          When enabled, the HTTP endpoint provides a connectionless web service API for running SQL
          queries on the Aurora Serverless DB cluster. You can also query your database from inside
          the RDS console with the query editor.

          For more information, see `Using the Data API for Aurora Serverless
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html>`__ in the
          *Amazon Aurora User Guide* .

        - **ActivityStreamMode** *(string) --*

          The mode of the database activity stream. Database events such as a change or access
          generate an activity stream event. The database session can handle these events either
          synchronously or asynchronously.

        - **ActivityStreamStatus** *(string) --*

          The status of the database activity stream.

        - **ActivityStreamKmsKeyId** *(string) --*

          The AWS KMS key identifier used for encrypting messages in the database activity stream.

        - **ActivityStreamKinesisStreamName** *(string) --*

          The name of the Amazon Kinesis data stream used for the database activity stream.

        - **CopyTagsToSnapshot** *(boolean) --*

          Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

        - **CrossAccountClone** *(boolean) --*

          Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS
          account.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBEngineVersionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBEngineVersionsPaginateFiltersTypeDef(
    _DescribeDBEngineVersionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBEngineVersionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBEngineVersionsPaginatePaginationConfigTypeDef(
    _DescribeDBEngineVersionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsDefaultCharacterSetTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsDefaultCharacterSetTypeDef",
    {"CharacterSetName": str, "CharacterSetDescription": str},
    total=False,
)


class DescribeDBEngineVersionsPaginateResponseDBEngineVersionsDefaultCharacterSetTypeDef(
    _DescribeDBEngineVersionsPaginateResponseDBEngineVersionsDefaultCharacterSetTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginateResponseDBEngineVersions` `DefaultCharacterSet`

    The default character set for new instances of this engine version, if the
    ``CharacterSetName`` parameter of the CreateDBInstance API isn't specified.

    - **CharacterSetName** *(string) --*

      The name of the character set.

    - **CharacterSetDescription** *(string) --*

      The description of the character set.
    """


_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedCharacterSetsTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedCharacterSetsTypeDef",
    {"CharacterSetName": str, "CharacterSetDescription": str},
    total=False,
)


class DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedCharacterSetsTypeDef(
    _DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedCharacterSetsTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginateResponseDBEngineVersions` `SupportedCharacterSets`

    This data type is used as a response element in the action ``DescribeDBEngineVersions``
    .

    - **CharacterSetName** *(string) --*

      The name of the character set.

    - **CharacterSetDescription** *(string) --*

      The description of the character set.
    """


_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedTimezonesTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedTimezonesTypeDef",
    {"TimezoneName": str},
    total=False,
)


class DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedTimezonesTypeDef(
    _DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedTimezonesTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginateResponseDBEngineVersions` `SupportedTimezones`

    A time zone associated with a ``DBInstance`` or a ``DBSnapshot`` . This data type is an
    element in the response to the ``DescribeDBInstances`` , the ``DescribeDBSnapshots`` ,
    and the ``DescribeDBEngineVersions`` actions.

    - **TimezoneName** *(string) --*

      The name of the time zone.
    """


_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsValidUpgradeTargetTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsValidUpgradeTargetTypeDef",
    {
        "Engine": str,
        "EngineVersion": str,
        "Description": str,
        "AutoUpgrade": bool,
        "IsMajorVersionUpgrade": bool,
    },
    total=False,
)


class DescribeDBEngineVersionsPaginateResponseDBEngineVersionsValidUpgradeTargetTypeDef(
    _DescribeDBEngineVersionsPaginateResponseDBEngineVersionsValidUpgradeTargetTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginateResponseDBEngineVersions` `ValidUpgradeTarget`

    The version of the database engine that a DB instance can be upgraded to.

    - **Engine** *(string) --*

      The name of the upgrade target database engine.

    - **EngineVersion** *(string) --*

      The version number of the upgrade target database engine.

    - **Description** *(string) --*

      The version of the database engine that a DB instance can be upgraded to.

    - **AutoUpgrade** *(boolean) --*

      A value that indicates whether the target version is applied to any source DB
      instances that have ``AutoMinorVersionUpgrade`` set to true.

    - **IsMajorVersionUpgrade** *(boolean) --*

      A value that indicates whether a database engine is upgraded to a major version.
    """


_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateResponseDBEngineVersionsTypeDef",
    {
        "Engine": str,
        "EngineVersion": str,
        "DBParameterGroupFamily": str,
        "DBEngineDescription": str,
        "DBEngineVersionDescription": str,
        "DefaultCharacterSet": DescribeDBEngineVersionsPaginateResponseDBEngineVersionsDefaultCharacterSetTypeDef,
        "SupportedCharacterSets": List[
            DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedCharacterSetsTypeDef
        ],
        "ValidUpgradeTarget": List[
            DescribeDBEngineVersionsPaginateResponseDBEngineVersionsValidUpgradeTargetTypeDef
        ],
        "SupportedTimezones": List[
            DescribeDBEngineVersionsPaginateResponseDBEngineVersionsSupportedTimezonesTypeDef
        ],
        "ExportableLogTypes": List[str],
        "SupportsLogExportsToCloudwatchLogs": bool,
        "SupportsReadReplica": bool,
        "SupportedEngineModes": List[str],
        "SupportedFeatureNames": List[str],
        "Status": str,
    },
    total=False,
)


class DescribeDBEngineVersionsPaginateResponseDBEngineVersionsTypeDef(
    _DescribeDBEngineVersionsPaginateResponseDBEngineVersionsTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginateResponse` `DBEngineVersions`

    This data type is used as a response element in the action ``DescribeDBEngineVersions`` .

    - **Engine** *(string) --*

      The name of the database engine.

    - **EngineVersion** *(string) --*

      The version number of the database engine.

    - **DBParameterGroupFamily** *(string) --*

      The name of the DB parameter group family for the database engine.

    - **DBEngineDescription** *(string) --*

      The description of the database engine.

    - **DBEngineVersionDescription** *(string) --*

      The description of the database engine version.

    - **DefaultCharacterSet** *(dict) --*

      The default character set for new instances of this engine version, if the
      ``CharacterSetName`` parameter of the CreateDBInstance API isn't specified.

      - **CharacterSetName** *(string) --*

        The name of the character set.

      - **CharacterSetDescription** *(string) --*

        The description of the character set.

    - **SupportedCharacterSets** *(list) --*

      A list of the character sets supported by this engine for the ``CharacterSetName``
      parameter of the ``CreateDBInstance`` action.

      - *(dict) --*

        This data type is used as a response element in the action ``DescribeDBEngineVersions``
        .

        - **CharacterSetName** *(string) --*

          The name of the character set.

        - **CharacterSetDescription** *(string) --*

          The description of the character set.

    - **ValidUpgradeTarget** *(list) --*

      A list of engine versions that this database engine version can be upgraded to.

      - *(dict) --*

        The version of the database engine that a DB instance can be upgraded to.

        - **Engine** *(string) --*

          The name of the upgrade target database engine.

        - **EngineVersion** *(string) --*

          The version number of the upgrade target database engine.

        - **Description** *(string) --*

          The version of the database engine that a DB instance can be upgraded to.

        - **AutoUpgrade** *(boolean) --*

          A value that indicates whether the target version is applied to any source DB
          instances that have ``AutoMinorVersionUpgrade`` set to true.

        - **IsMajorVersionUpgrade** *(boolean) --*

          A value that indicates whether a database engine is upgraded to a major version.

    - **SupportedTimezones** *(list) --*

      A list of the time zones supported by this engine for the ``Timezone`` parameter of the
      ``CreateDBInstance`` action.

      - *(dict) --*

        A time zone associated with a ``DBInstance`` or a ``DBSnapshot`` . This data type is an
        element in the response to the ``DescribeDBInstances`` , the ``DescribeDBSnapshots`` ,
        and the ``DescribeDBEngineVersions`` actions.

        - **TimezoneName** *(string) --*

          The name of the time zone.

    - **ExportableLogTypes** *(list) --*

      The types of logs that the database engine has available for export to CloudWatch Logs.

      - *(string) --*

    - **SupportsLogExportsToCloudwatchLogs** *(boolean) --*

      A value that indicates whether the engine version supports exporting the log types
      specified by ExportableLogTypes to CloudWatch Logs.

    - **SupportsReadReplica** *(boolean) --*

      Indicates whether the database engine version supports Read Replicas.

    - **SupportedEngineModes** *(list) --*

      A list of the supported DB engine modes.

      - *(string) --*

    - **SupportedFeatureNames** *(list) --*

      A list of features supported by the DB engine. Supported feature names include the
      following.

      * s3Import

      - *(string) --*

    - **Status** *(string) --*

      The status of the DB engine version, either ``available`` or ``deprecated`` .
    """


_DescribeDBEngineVersionsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBEngineVersionsPaginateResponseTypeDef",
    {
        "DBEngineVersions": List[
            DescribeDBEngineVersionsPaginateResponseDBEngineVersionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBEngineVersionsPaginateResponseTypeDef(
    _DescribeDBEngineVersionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBEngineVersionsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBEngineVersions`` action.

    - **DBEngineVersions** *(list) --*

      A list of ``DBEngineVersion`` elements.

      - *(dict) --*

        This data type is used as a response element in the action ``DescribeDBEngineVersions`` .

        - **Engine** *(string) --*

          The name of the database engine.

        - **EngineVersion** *(string) --*

          The version number of the database engine.

        - **DBParameterGroupFamily** *(string) --*

          The name of the DB parameter group family for the database engine.

        - **DBEngineDescription** *(string) --*

          The description of the database engine.

        - **DBEngineVersionDescription** *(string) --*

          The description of the database engine version.

        - **DefaultCharacterSet** *(dict) --*

          The default character set for new instances of this engine version, if the
          ``CharacterSetName`` parameter of the CreateDBInstance API isn't specified.

          - **CharacterSetName** *(string) --*

            The name of the character set.

          - **CharacterSetDescription** *(string) --*

            The description of the character set.

        - **SupportedCharacterSets** *(list) --*

          A list of the character sets supported by this engine for the ``CharacterSetName``
          parameter of the ``CreateDBInstance`` action.

          - *(dict) --*

            This data type is used as a response element in the action ``DescribeDBEngineVersions``
            .

            - **CharacterSetName** *(string) --*

              The name of the character set.

            - **CharacterSetDescription** *(string) --*

              The description of the character set.

        - **ValidUpgradeTarget** *(list) --*

          A list of engine versions that this database engine version can be upgraded to.

          - *(dict) --*

            The version of the database engine that a DB instance can be upgraded to.

            - **Engine** *(string) --*

              The name of the upgrade target database engine.

            - **EngineVersion** *(string) --*

              The version number of the upgrade target database engine.

            - **Description** *(string) --*

              The version of the database engine that a DB instance can be upgraded to.

            - **AutoUpgrade** *(boolean) --*

              A value that indicates whether the target version is applied to any source DB
              instances that have ``AutoMinorVersionUpgrade`` set to true.

            - **IsMajorVersionUpgrade** *(boolean) --*

              A value that indicates whether a database engine is upgraded to a major version.

        - **SupportedTimezones** *(list) --*

          A list of the time zones supported by this engine for the ``Timezone`` parameter of the
          ``CreateDBInstance`` action.

          - *(dict) --*

            A time zone associated with a ``DBInstance`` or a ``DBSnapshot`` . This data type is an
            element in the response to the ``DescribeDBInstances`` , the ``DescribeDBSnapshots`` ,
            and the ``DescribeDBEngineVersions`` actions.

            - **TimezoneName** *(string) --*

              The name of the time zone.

        - **ExportableLogTypes** *(list) --*

          The types of logs that the database engine has available for export to CloudWatch Logs.

          - *(string) --*

        - **SupportsLogExportsToCloudwatchLogs** *(boolean) --*

          A value that indicates whether the engine version supports exporting the log types
          specified by ExportableLogTypes to CloudWatch Logs.

        - **SupportsReadReplica** *(boolean) --*

          Indicates whether the database engine version supports Read Replicas.

        - **SupportedEngineModes** *(list) --*

          A list of the supported DB engine modes.

          - *(string) --*

        - **SupportedFeatureNames** *(list) --*

          A list of features supported by the DB engine. Supported feature names include the
          following.

          * s3Import

          - *(string) --*

        - **Status** *(string) --*

          The status of the DB engine version, either ``available`` or ``deprecated`` .

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBInstanceAutomatedBackupsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBInstanceAutomatedBackupsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBInstanceAutomatedBackupsPaginateFiltersTypeDef(
    _DescribeDBInstanceAutomatedBackupsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBInstanceAutomatedBackupsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBInstanceAutomatedBackupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBInstanceAutomatedBackupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBInstanceAutomatedBackupsPaginatePaginationConfigTypeDef(
    _DescribeDBInstanceAutomatedBackupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBInstanceAutomatedBackupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef = TypedDict(
    "_DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef",
    {"EarliestTime": datetime, "LatestTime": datetime},
    total=False,
)


class DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef(
    _DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef
):
    """
    Type definition for `DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackups` `RestoreWindow`

    Earliest and latest time an instance can be restored to.

    - **EarliestTime** *(datetime) --*

      The earliest time you can restore an instance to.

    - **LatestTime** *(datetime) --*

      The latest time you can restore an instance to.
    """


_DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsTypeDef = TypedDict(
    "_DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsTypeDef",
    {
        "DBInstanceArn": str,
        "DbiResourceId": str,
        "Region": str,
        "DBInstanceIdentifier": str,
        "RestoreWindow": DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsRestoreWindowTypeDef,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "Engine": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupName": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "StorageType": str,
        "KmsKeyId": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
    },
    total=False,
)


class DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsTypeDef(
    _DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsTypeDef
):
    """
    Type definition for `DescribeDBInstanceAutomatedBackupsPaginateResponse` `DBInstanceAutomatedBackups`

    An automated backup of a DB instance. It it consists of system backups, transaction logs,
    and the database instance properties that existed at the time you deleted the source
    instance.

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the automated backup.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to
      an AWS Region.

    - **Region** *(string) --*

      The AWS Region associated with the automated backup.

    - **DBInstanceIdentifier** *(string) --*

      The customer id of the instance that is/was associated with the automated backup.

    - **RestoreWindow** *(dict) --*

      Earliest and latest time an instance can be restored to.

      - **EarliestTime** *(datetime) --*

        The earliest time you can restore an instance to.

      - **LatestTime** *(datetime) --*

        The latest time you can restore an instance to.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Provides a list of status information for an automated backup:

      * ``active`` - automated backups for current instances

      * ``retained`` - automated backups for deleted instances

      * ``creating`` - automated backups that are waiting for the first automated snapshot to
      be available.

    - **Port** *(integer) --*

      The port number that the automated backup used for connections.

      Default: Inherits from the source DB instance

      Valid Values: ``1150-65535``

    - **AvailabilityZone** *(string) --*

      The Availability Zone that the automated backup was created in. For information on AWS
      Regions and Availability Zones, see `Regions and Availability Zones
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html>`__
      .

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB instance

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time that the DB instance was created.

    - **MasterUsername** *(string) --*

      The license model of an automated backup.

    - **Engine** *(string) --*

      The name of the database engine for this automated backup.

    - **EngineVersion** *(string) --*

      The version of the database engine for the automated backup.

    - **LicenseModel** *(string) --*

      License model information for the automated backup.

    - **Iops** *(integer) --*

      The IOPS (I/O operations per second) value for the automated backup.

    - **OptionGroupName** *(string) --*

      The option group the automated backup is associated with. If omitted, the default option
      group for the engine specified is used.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the automated backup is associated for TDE
      encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the automated backup is encrypted.

    - **StorageType** *(string) --*

      Specifies the storage type associated with the automated backup.

    - **KmsKeyId** *(string) --*

      The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name
      (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

    - **Timezone** *(string) --*

      The time zone of the automated backup. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.
    """


_DescribeDBInstanceAutomatedBackupsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBInstanceAutomatedBackupsPaginateResponseTypeDef",
    {
        "DBInstanceAutomatedBackups": List[
            DescribeDBInstanceAutomatedBackupsPaginateResponseDBInstanceAutomatedBackupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBInstanceAutomatedBackupsPaginateResponseTypeDef(
    _DescribeDBInstanceAutomatedBackupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBInstanceAutomatedBackupsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBInstanceAutomatedBackups``
    action.

    - **DBInstanceAutomatedBackups** *(list) --*

      A list of ``DBInstanceAutomatedBackup`` instances.

      - *(dict) --*

        An automated backup of a DB instance. It it consists of system backups, transaction logs,
        and the database instance properties that existed at the time you deleted the source
        instance.

        - **DBInstanceArn** *(string) --*

          The Amazon Resource Name (ARN) for the automated backup.

        - **DbiResourceId** *(string) --*

          The identifier for the source DB instance, which can't be changed and which is unique to
          an AWS Region.

        - **Region** *(string) --*

          The AWS Region associated with the automated backup.

        - **DBInstanceIdentifier** *(string) --*

          The customer id of the instance that is/was associated with the automated backup.

        - **RestoreWindow** *(dict) --*

          Earliest and latest time an instance can be restored to.

          - **EarliestTime** *(datetime) --*

            The earliest time you can restore an instance to.

          - **LatestTime** *(datetime) --*

            The latest time you can restore an instance to.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size in gibibytes (GiB).

        - **Status** *(string) --*

          Provides a list of status information for an automated backup:

          * ``active`` - automated backups for current instances

          * ``retained`` - automated backups for deleted instances

          * ``creating`` - automated backups that are waiting for the first automated snapshot to
          be available.

        - **Port** *(integer) --*

          The port number that the automated backup used for connections.

          Default: Inherits from the source DB instance

          Valid Values: ``1150-65535``

        - **AvailabilityZone** *(string) --*

          The Availability Zone that the automated backup was created in. For information on AWS
          Regions and Availability Zones, see `Regions and Availability Zones
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html>`__
          .

        - **VpcId** *(string) --*

          Provides the VPC ID associated with the DB instance

        - **InstanceCreateTime** *(datetime) --*

          Provides the date and time that the DB instance was created.

        - **MasterUsername** *(string) --*

          The license model of an automated backup.

        - **Engine** *(string) --*

          The name of the database engine for this automated backup.

        - **EngineVersion** *(string) --*

          The version of the database engine for the automated backup.

        - **LicenseModel** *(string) --*

          License model information for the automated backup.

        - **Iops** *(integer) --*

          The IOPS (I/O operations per second) value for the automated backup.

        - **OptionGroupName** *(string) --*

          The option group the automated backup is associated with. If omitted, the default option
          group for the engine specified is used.

        - **TdeCredentialArn** *(string) --*

          The ARN from the key store with which the automated backup is associated for TDE
          encryption.

        - **Encrypted** *(boolean) --*

          Specifies whether the automated backup is encrypted.

        - **StorageType** *(string) --*

          Specifies the storage type associated with the automated backup.

        - **KmsKeyId** *(string) --*

          The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name
          (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

        - **Timezone** *(string) --*

          The time zone of the automated backup. In most cases, the ``Timezone`` element is empty.
          ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
          with a time zone specified.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBInstancesPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeDBInstancesPaginateFiltersTypeDef(
    _DescribeDBInstancesPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBInstancesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBInstancesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBInstancesPaginatePaginationConfigTypeDef(
    _DescribeDBInstancesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBInstancesPaginateResponseDBInstancesAssociatedRolesTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesAssociatedRolesTypeDef",
    {"RoleArn": str, "FeatureName": str, "Status": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesAssociatedRolesTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesAssociatedRolesTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `AssociatedRoles`

    Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
    instance.

    - **RoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role that is associated with the DB
      instance.

    - **FeatureName** *(string) --*

      The name of the feature associated with the AWS Identity and Access Management (IAM)
      role. For the list of supported feature names, see ``DBEngineVersion`` .

    - **Status** *(string) --*

      Describes the state of association between the IAM role and the DB instance. The
      Status property returns one of the following values:

      * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
      access other AWS services on your behalf.

      * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

      * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
      instance is unable to assume the IAM role in order to access other AWS services on
      your behalf.
    """


_DescribeDBInstancesPaginateResponseDBInstancesDBParameterGroupsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesDBParameterGroupsTypeDef",
    {"DBParameterGroupName": str, "ParameterApplyStatus": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesDBParameterGroupsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesDBParameterGroupsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `DBParameterGroups`

    The status of the DB parameter group.

    This data type is used as a response element in the following actions:

    * ``CreateDBInstance``

    * ``CreateDBInstanceReadReplica``

    * ``DeleteDBInstance``

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    - **DBParameterGroupName** *(string) --*

      The name of the DB parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.
    """


_DescribeDBInstancesPaginateResponseDBInstancesDBSecurityGroupsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesDBSecurityGroupsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesDBSecurityGroupsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesDBSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `DBSecurityGroups`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroup` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `DBSubnetGroup`

    Specifies information on the subnet group associated with the DB instance, including the
    name, description, and subnets in the subnet group.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_DescribeDBInstancesPaginateResponseDBInstancesDomainMembershipsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesDomainMembershipsTypeDef",
    {"Domain": str, "Status": str, "FQDN": str, "IAMRoleName": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesDomainMembershipsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesDomainMembershipsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `DomainMemberships`

    An Active Directory Domain membership record associated with the DB instance.

    - **Domain** *(string) --*

      The identifier of the Active Directory Domain.

    - **Status** *(string) --*

      The status of the DB instance's Active Directory Domain membership, such as joined,
      pending-join, failed etc).

    - **FQDN** *(string) --*

      The fully qualified domain name of the Active Directory Domain.

    - **IAMRoleName** *(string) --*

      The name of the IAM role to be used when making API calls to the Directory Service.
    """


_DescribeDBInstancesPaginateResponseDBInstancesEndpointTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesEndpointTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesEndpointTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `Endpoint`

    Specifies the connection endpoint.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_DescribeDBInstancesPaginateResponseDBInstancesListenerEndpointTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesListenerEndpointTypeDef",
    {"Address": str, "Port": int, "HostedZoneId": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesListenerEndpointTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesListenerEndpointTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `ListenerEndpoint`

    Specifies the listener connection endpoint for SQL Server Always On.

    - **Address** *(string) --*

      Specifies the DNS address of the DB instance.

    - **Port** *(integer) --*

      Specifies the port that the database engine is listening on.

    - **HostedZoneId** *(string) --*

      Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
    """


_DescribeDBInstancesPaginateResponseDBInstancesOptionGroupMembershipsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesOptionGroupMembershipsTypeDef",
    {"OptionGroupName": str, "Status": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesOptionGroupMembershipsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesOptionGroupMembershipsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `OptionGroupMemberships`

    Provides information on the option groups the DB instance is a member of.

    - **OptionGroupName** *(string) --*

      The name of the option group that the instance belongs to.

    - **Status** *(string) --*

      The status of the DB instance's option group membership. Valid values are:
      ``in-sync`` , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply``
      , ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .
    """


_DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef",
    {"LogTypesToEnable": List[str], "LogTypesToDisable": List[str]},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValues` `PendingCloudwatchLogsExports`

    A list of the log types whose configuration is still pending. In other words, these log
    types are in the process of being activated or deactivated.

    - **LogTypesToEnable** *(list) --*

      Log types that are in the process of being deactivated. After they are deactivated,
      these log types aren't exported to CloudWatch Logs.

      - *(string) --*

    - **LogTypesToDisable** *(list) --*

      Log types that are in the process of being enabled. After they are enabled, these log
      types are exported to CloudWatch Logs.

      - *(string) --*
    """


_DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValues` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the
    ``Name`` parameter. To specify the number of threads per core, use the
    ``threadsPerCore`` feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when
    you call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling
    the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
    for the ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesTypeDef",
    {
        "DBInstanceClass": str,
        "AllocatedStorage": int,
        "MasterUserPassword": str,
        "Port": int,
        "BackupRetentionPeriod": int,
        "MultiAZ": bool,
        "EngineVersion": str,
        "LicenseModel": str,
        "Iops": int,
        "DBInstanceIdentifier": str,
        "StorageType": str,
        "CACertificateIdentifier": str,
        "DBSubnetGroupName": str,
        "PendingCloudwatchLogsExports": DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesPendingCloudwatchLogsExportsTypeDef,
        "ProcessorFeatures": List[
            DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesProcessorFeaturesTypeDef
        ],
    },
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `PendingModifiedValues`

    Specifies that changes to the DB instance are pending. This element is only included when
    changes are pending. Specific changes are identified by subelements.

    - **DBInstanceClass** *(string) --*

      Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
      currently being applied.

    - **AllocatedStorage** *(integer) --*

      Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or
      is currently being applied.

    - **MasterUserPassword** *(string) --*

      Contains the pending or currently-in-progress change of the master credentials for the
      DB instance.

    - **Port** *(integer) --*

      Specifies the pending port for the DB instance.

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the pending number of days for which automated backups are retained.

    - **MultiAZ** *(boolean) --*

      Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **LicenseModel** *(string) --*

      The license model for the DB instance.

      Valid values: ``license-included`` | ``bring-your-own-license`` |
      ``general-public-license``

    - **Iops** *(integer) --*

      Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
      currently being applied.

    - **DBInstanceIdentifier** *(string) --*

      Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or
      is currently being applied.

    - **StorageType** *(string) --*

      Specifies the storage type to be associated with the DB instance.

    - **CACertificateIdentifier** *(string) --*

      Specifies the identifier of the CA certificate for the DB instance.

    - **DBSubnetGroupName** *(string) --*

      The new DB subnet group for the DB instance.

    - **PendingCloudwatchLogsExports** *(dict) --*

      A list of the log types whose configuration is still pending. In other words, these log
      types are in the process of being activated or deactivated.

      - **LogTypesToEnable** *(list) --*

        Log types that are in the process of being deactivated. After they are deactivated,
        these log types aren't exported to CloudWatch Logs.

        - *(string) --*

      - **LogTypesToDisable** *(list) --*

        Log types that are in the process of being enabled. After they are enabled, these log
        types are exported to CloudWatch Logs.

        - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the
        ``Name`` parameter. To specify the number of threads per core, use the
        ``threadsPerCore`` feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when
        you call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling
        the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
        for the ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.
    """


_DescribeDBInstancesPaginateResponseDBInstancesProcessorFeaturesTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesProcessorFeaturesTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesProcessorFeaturesTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_DescribeDBInstancesPaginateResponseDBInstancesStatusInfosTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesStatusInfosTypeDef",
    {"StatusType": str, "Normal": bool, "Status": str, "Message": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesStatusInfosTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesStatusInfosTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `StatusInfos`

    Provides a list of status information for a DB instance.

    - **StatusType** *(string) --*

      This value is currently "read replication."

    - **Normal** *(boolean) --*

      Boolean value that is true if the instance is operating normally, or false if the
      instance is in an error state.

    - **Status** *(string) --*

      Status of the DB instance. For a StatusType of Read Replica, the values can be
      replicating, replication stop point set, replication stop point reached, error,
      stopped, or terminated.

    - **Message** *(string) --*

      Details of the error if there is an error for the instance. If the instance isn't in
      an error state, this value is blank.
    """


_DescribeDBInstancesPaginateResponseDBInstancesVpcSecurityGroupsTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesVpcSecurityGroupsTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesVpcSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponseDBInstances` `VpcSecurityGroups`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_DescribeDBInstancesPaginateResponseDBInstancesTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseDBInstancesTypeDef",
    {
        "DBInstanceIdentifier": str,
        "DBInstanceClass": str,
        "Engine": str,
        "DBInstanceStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": DescribeDBInstancesPaginateResponseDBInstancesEndpointTypeDef,
        "AllocatedStorage": int,
        "InstanceCreateTime": datetime,
        "PreferredBackupWindow": str,
        "BackupRetentionPeriod": int,
        "DBSecurityGroups": List[
            DescribeDBInstancesPaginateResponseDBInstancesDBSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            DescribeDBInstancesPaginateResponseDBInstancesVpcSecurityGroupsTypeDef
        ],
        "DBParameterGroups": List[
            DescribeDBInstancesPaginateResponseDBInstancesDBParameterGroupsTypeDef
        ],
        "AvailabilityZone": str,
        "DBSubnetGroup": DescribeDBInstancesPaginateResponseDBInstancesDBSubnetGroupTypeDef,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": DescribeDBInstancesPaginateResponseDBInstancesPendingModifiedValuesTypeDef,
        "LatestRestorableTime": datetime,
        "MultiAZ": bool,
        "EngineVersion": str,
        "AutoMinorVersionUpgrade": bool,
        "ReadReplicaSourceDBInstanceIdentifier": str,
        "ReadReplicaDBInstanceIdentifiers": List[str],
        "ReadReplicaDBClusterIdentifiers": List[str],
        "LicenseModel": str,
        "Iops": int,
        "OptionGroupMemberships": List[
            DescribeDBInstancesPaginateResponseDBInstancesOptionGroupMembershipsTypeDef
        ],
        "CharacterSetName": str,
        "SecondaryAvailabilityZone": str,
        "PubliclyAccessible": bool,
        "StatusInfos": List[
            DescribeDBInstancesPaginateResponseDBInstancesStatusInfosTypeDef
        ],
        "StorageType": str,
        "TdeCredentialArn": str,
        "DbInstancePort": int,
        "DBClusterIdentifier": str,
        "StorageEncrypted": bool,
        "KmsKeyId": str,
        "DbiResourceId": str,
        "CACertificateIdentifier": str,
        "DomainMemberships": List[
            DescribeDBInstancesPaginateResponseDBInstancesDomainMembershipsTypeDef
        ],
        "CopyTagsToSnapshot": bool,
        "MonitoringInterval": int,
        "EnhancedMonitoringResourceArn": str,
        "MonitoringRoleArn": str,
        "PromotionTier": int,
        "DBInstanceArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "PerformanceInsightsEnabled": bool,
        "PerformanceInsightsKMSKeyId": str,
        "PerformanceInsightsRetentionPeriod": int,
        "EnabledCloudwatchLogsExports": List[str],
        "ProcessorFeatures": List[
            DescribeDBInstancesPaginateResponseDBInstancesProcessorFeaturesTypeDef
        ],
        "DeletionProtection": bool,
        "AssociatedRoles": List[
            DescribeDBInstancesPaginateResponseDBInstancesAssociatedRolesTypeDef
        ],
        "ListenerEndpoint": DescribeDBInstancesPaginateResponseDBInstancesListenerEndpointTypeDef,
        "MaxAllocatedStorage": int,
    },
    total=False,
)


class DescribeDBInstancesPaginateResponseDBInstancesTypeDef(
    _DescribeDBInstancesPaginateResponseDBInstancesTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginateResponse` `DBInstances`

    Contains the details of an Amazon RDS DB instance.

    This data type is used as a response element in the ``DescribeDBInstances`` action.

    - **DBInstanceIdentifier** *(string) --*

      Contains a user-supplied database identifier. This identifier is the unique key that
      identifies a DB instance.

    - **DBInstanceClass** *(string) --*

      Contains the name of the compute and memory capacity class of the DB instance.

    - **Engine** *(string) --*

      Provides the name of the database engine to be used for this DB instance.

    - **DBInstanceStatus** *(string) --*

      Specifies the current state of this database.

    - **MasterUsername** *(string) --*

      Contains the master username for the DB instance.

    - **DBName** *(string) --*

      The meaning of this parameter differs according to the database engine you use.

       **MySQL, MariaDB, SQL Server, PostgreSQL**

      Contains the name of the initial database of this instance that was provided at create
      time, if one was specified when the DB instance was created. This same name is returned
      for the life of the DB instance.

      Type: String

       **Oracle**

      Contains the Oracle System ID (SID) of the created DB instance. Not shown when the
      returned parameters do not apply to an Oracle DB instance.

    - **Endpoint** *(dict) --*

      Specifies the connection endpoint.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size specified in gibibytes.

    - **InstanceCreateTime** *(datetime) --*

      Provides the date and time the DB instance was created.

    - **PreferredBackupWindow** *(string) --*

      Specifies the daily time range during which automated backups are created if automated
      backups are enabled, as determined by the ``BackupRetentionPeriod`` .

    - **BackupRetentionPeriod** *(integer) --*

      Specifies the number of days for which automatic DB snapshots are retained.

    - **DBSecurityGroups** *(list) --*

      A list of DB security group elements containing ``DBSecurityGroup.Name`` and
      ``DBSecurityGroup.Status`` subelements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroups** *(list) --*

      Provides a list of VPC security group elements that the DB instance belongs to.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **DBParameterGroups** *(list) --*

      Provides the list of DB parameter groups applied to this DB instance.

      - *(dict) --*

        The status of the DB parameter group.

        This data type is used as a response element in the following actions:

        * ``CreateDBInstance``

        * ``CreateDBInstanceReadReplica``

        * ``DeleteDBInstance``

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        - **DBParameterGroupName** *(string) --*

          The name of the DB parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance is located in.

    - **DBSubnetGroup** *(dict) --*

      Specifies information on the subnet group associated with the DB instance, including the
      name, description, and subnets in the subnet group.

      - **DBSubnetGroupName** *(string) --*

        The name of the DB subnet group.

      - **DBSubnetGroupDescription** *(string) --*

        Provides the description of the DB subnet group.

      - **VpcId** *(string) --*

        Provides the VpcId of the DB subnet group.

      - **SubnetGroupStatus** *(string) --*

        Provides the status of the DB subnet group.

      - **Subnets** *(list) --*

        Contains a list of ``Subnet`` elements.

        - *(dict) --*

          This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

          - **SubnetIdentifier** *(string) --*

            Specifies the identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

          - **SubnetStatus** *(string) --*

            Specifies the status of the subnet.

      - **DBSubnetGroupArn** *(string) --*

        The Amazon Resource Name (ARN) for the DB subnet group.

    - **PreferredMaintenanceWindow** *(string) --*

      Specifies the weekly time range during which system maintenance can occur, in Universal
      Coordinated Time (UTC).

    - **PendingModifiedValues** *(dict) --*

      Specifies that changes to the DB instance are pending. This element is only included when
      changes are pending. Specific changes are identified by subelements.

      - **DBInstanceClass** *(string) --*

        Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
        currently being applied.

      - **AllocatedStorage** *(integer) --*

        Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or
        is currently being applied.

      - **MasterUserPassword** *(string) --*

        Contains the pending or currently-in-progress change of the master credentials for the
        DB instance.

      - **Port** *(integer) --*

        Specifies the pending port for the DB instance.

      - **BackupRetentionPeriod** *(integer) --*

        Specifies the pending number of days for which automated backups are retained.

      - **MultiAZ** *(boolean) --*

        Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

      - **EngineVersion** *(string) --*

        Indicates the database engine version.

      - **LicenseModel** *(string) --*

        The license model for the DB instance.

        Valid values: ``license-included`` | ``bring-your-own-license`` |
        ``general-public-license``

      - **Iops** *(integer) --*

        Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
        currently being applied.

      - **DBInstanceIdentifier** *(string) --*

        Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or
        is currently being applied.

      - **StorageType** *(string) --*

        Specifies the storage type to be associated with the DB instance.

      - **CACertificateIdentifier** *(string) --*

        Specifies the identifier of the CA certificate for the DB instance.

      - **DBSubnetGroupName** *(string) --*

        The new DB subnet group for the DB instance.

      - **PendingCloudwatchLogsExports** *(dict) --*

        A list of the log types whose configuration is still pending. In other words, these log
        types are in the process of being activated or deactivated.

        - **LogTypesToEnable** *(list) --*

          Log types that are in the process of being deactivated. After they are deactivated,
          these log types aren't exported to CloudWatch Logs.

          - *(string) --*

        - **LogTypesToDisable** *(list) --*

          Log types that are in the process of being enabled. After they are enabled, these log
          types are exported to CloudWatch Logs.

          - *(string) --*

      - **ProcessorFeatures** *(list) --*

        The number of CPU cores and the number of threads per core for the DB instance class of
        the DB instance.

        - *(dict) --*

          Contains the processor features of a DB instance class.

          To specify the number of CPU cores, use the ``coreCount`` feature name for the
          ``Name`` parameter. To specify the number of threads per core, use the
          ``threadsPerCore`` feature name for the ``Name`` parameter.

          You can set the processor features of the DB instance class for a DB instance when
          you call one of the following actions:

          * ``CreateDBInstance``

          * ``ModifyDBInstance``

          * ``RestoreDBInstanceFromDBSnapshot``

          * ``RestoreDBInstanceFromS3``

          * ``RestoreDBInstanceToPointInTime``

          You can view the valid processor values for a particular instance class by calling
          the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
          for the ``DBInstanceClass`` parameter.

          In addition, you can use the following actions for DB instance class processor
          information:

          * ``DescribeDBInstances``

          * ``DescribeDBSnapshots``

          * ``DescribeValidDBInstanceModifications``

          For more information, see `Configuring the Processor of the DB Instance Class
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
          in the *Amazon RDS User Guide.*

          - **Name** *(string) --*

            The name of the processor feature. Valid names are ``coreCount`` and
            ``threadsPerCore`` .

          - **Value** *(string) --*

            The value of a processor feature name.

    - **LatestRestorableTime** *(datetime) --*

      Specifies the latest time to which a database can be restored with point-in-time restore.

    - **MultiAZ** *(boolean) --*

      Specifies if the DB instance is a Multi-AZ deployment.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **AutoMinorVersionUpgrade** *(boolean) --*

      Indicates that minor version patches are applied automatically.

    - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

      Contains the identifier of the source DB instance if this DB instance is a Read Replica.

    - **ReadReplicaDBInstanceIdentifiers** *(list) --*

      Contains one or more identifiers of the Read Replicas associated with this DB instance.

      - *(string) --*

    - **ReadReplicaDBClusterIdentifiers** *(list) --*

      Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
      replicated as a Read Replica. For example, when you create an Aurora Read Replica of an
      RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown.
      This output does not contain information about cross region Aurora Read Replicas.

      .. note::

        Currently, each RDS DB instance can have only one Aurora Read Replica.

      - *(string) --*

    - **LicenseModel** *(string) --*

      License model information for this DB instance.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value.

    - **OptionGroupMemberships** *(list) --*

      Provides the list of option group memberships for this DB instance.

      - *(dict) --*

        Provides information on the option groups the DB instance is a member of.

        - **OptionGroupName** *(string) --*

          The name of the option group that the instance belongs to.

        - **Status** *(string) --*

          The status of the DB instance's option group membership. Valid values are:
          ``in-sync`` , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply``
          , ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

    - **CharacterSetName** *(string) --*

      If present, specifies the name of the character set that this instance is associated with.

    - **SecondaryAvailabilityZone** *(string) --*

      If present, specifies the name of the secondary Availability Zone for a DB instance with
      multi-AZ support.

    - **PubliclyAccessible** *(boolean) --*

      Specifies the accessibility options for the DB instance. A value of true specifies an
      Internet-facing instance with a publicly resolvable DNS name, which resolves to a public
      IP address. A value of false specifies an internal instance with a DNS name that resolves
      to a private IP address.

    - **StatusInfos** *(list) --*

      The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

      - *(dict) --*

        Provides a list of status information for a DB instance.

        - **StatusType** *(string) --*

          This value is currently "read replication."

        - **Normal** *(boolean) --*

          Boolean value that is true if the instance is operating normally, or false if the
          instance is in an error state.

        - **Status** *(string) --*

          Status of the DB instance. For a StatusType of Read Replica, the values can be
          replicating, replication stop point set, replication stop point reached, error,
          stopped, or terminated.

        - **Message** *(string) --*

          Details of the error if there is an error for the instance. If the instance isn't in
          an error state, this value is blank.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB instance.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which the instance is associated for TDE encryption.

    - **DbInstancePort** *(integer) --*

      Specifies the port that the DB instance listens on. If the DB instance is part of a DB
      cluster, this can be a different port than the DB cluster port.

    - **DBClusterIdentifier** *(string) --*

      If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
      the DB instance is a member of.

    - **StorageEncrypted** *(boolean) --*

      Specifies whether the DB instance is encrypted.

    - **KmsKeyId** *(string) --*

      If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

    - **DbiResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
      in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

    - **CACertificateIdentifier** *(string) --*

      The identifier of the CA certificate for this DB instance.

    - **DomainMemberships** *(list) --*

      The Active Directory Domain membership records associated with the DB instance.

      - *(dict) --*

        An Active Directory Domain membership record associated with the DB instance.

        - **Domain** *(string) --*

          The identifier of the Active Directory Domain.

        - **Status** *(string) --*

          The status of the DB instance's Active Directory Domain membership, such as joined,
          pending-join, failed etc).

        - **FQDN** *(string) --*

          The fully qualified domain name of the Active Directory Domain.

        - **IAMRoleName** *(string) --*

          The name of the IAM role to be used when making API calls to the Directory Service.

    - **CopyTagsToSnapshot** *(boolean) --*

      Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

       **Amazon Aurora**

      Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this
      value for an Aurora DB instance has no effect on the DB cluster setting. For more
      information, see ``DBCluster`` .

    - **MonitoringInterval** *(integer) --*

      The interval, in seconds, between points when Enhanced Monitoring metrics are collected
      for the DB instance.

    - **EnhancedMonitoringResourceArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
      Enhanced Monitoring metrics data for the DB instance.

    - **MonitoringRoleArn** *(string) --*

      The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
      CloudWatch Logs.

    - **PromotionTier** *(integer) --*

      A value that specifies the order in which an Aurora Replica is promoted to the primary
      instance after a failure of the existing primary instance. For more information, see
      `Fault Tolerance for an Aurora DB Cluster
      <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
      in the *Amazon Aurora User Guide* .

    - **DBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB instance.

    - **Timezone** *(string) --*

      The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
      with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

      IAM database authentication can be enabled for the following database engines

      * For MySQL 5.6, minor version 5.6.34 or higher

      * For MySQL 5.7, minor version 5.7.16 or higher

      * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
      Type.

    - **PerformanceInsightsEnabled** *(boolean) --*

      True if Performance Insights is enabled for the DB instance, and otherwise false.

    - **PerformanceInsightsKMSKeyId** *(string) --*

      The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
      the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
      encryption key.

    - **PerformanceInsightsRetentionPeriod** *(integer) --*

      The amount of time, in days, to retain Performance Insights data. Valid values are 7 or
      731 (2 years).

    - **EnabledCloudwatchLogsExports** *(list) --*

      A list of log types that this DB instance is configured to export to CloudWatch Logs.

      Log types vary by DB engine. For information about the log types for each DB engine, see
      `Amazon RDS Database Log Files
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
      *Amazon RDS User Guide.*

      - *(string) --*

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DeletionProtection** *(boolean) --*

      Indicates if the DB instance has deletion protection enabled. The database can't be
      deleted when deletion protection is enabled. For more information, see `Deleting a DB
      Instance
      <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

    - **AssociatedRoles** *(list) --*

      The AWS Identity and Access Management (IAM) roles associated with the DB instance.

      - *(dict) --*

        Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
        instance.

        - **RoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role that is associated with the DB
          instance.

        - **FeatureName** *(string) --*

          The name of the feature associated with the AWS Identity and Access Management (IAM)
          role. For the list of supported feature names, see ``DBEngineVersion`` .

        - **Status** *(string) --*

          Describes the state of association between the IAM role and the DB instance. The
          Status property returns one of the following values:

          * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
          access other AWS services on your behalf.

          * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

          * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
          instance is unable to assume the IAM role in order to access other AWS services on
          your behalf.

    - **ListenerEndpoint** *(dict) --*

      Specifies the listener connection endpoint for SQL Server Always On.

      - **Address** *(string) --*

        Specifies the DNS address of the DB instance.

      - **Port** *(integer) --*

        Specifies the port that the database engine is listening on.

      - **HostedZoneId** *(string) --*

        Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

    - **MaxAllocatedStorage** *(integer) --*

      The upper limit to which Amazon RDS can automatically scale the storage of the DB
      instance.
    """


_DescribeDBInstancesPaginateResponseTypeDef = TypedDict(
    "_DescribeDBInstancesPaginateResponseTypeDef",
    {
        "DBInstances": List[DescribeDBInstancesPaginateResponseDBInstancesTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBInstancesPaginateResponseTypeDef(
    _DescribeDBInstancesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBInstancesPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBInstances`` action.

    - **DBInstances** *(list) --*

      A list of ``DBInstance`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB instance.

        This data type is used as a response element in the ``DescribeDBInstances`` action.

        - **DBInstanceIdentifier** *(string) --*

          Contains a user-supplied database identifier. This identifier is the unique key that
          identifies a DB instance.

        - **DBInstanceClass** *(string) --*

          Contains the name of the compute and memory capacity class of the DB instance.

        - **Engine** *(string) --*

          Provides the name of the database engine to be used for this DB instance.

        - **DBInstanceStatus** *(string) --*

          Specifies the current state of this database.

        - **MasterUsername** *(string) --*

          Contains the master username for the DB instance.

        - **DBName** *(string) --*

          The meaning of this parameter differs according to the database engine you use.

           **MySQL, MariaDB, SQL Server, PostgreSQL**

          Contains the name of the initial database of this instance that was provided at create
          time, if one was specified when the DB instance was created. This same name is returned
          for the life of the DB instance.

          Type: String

           **Oracle**

          Contains the Oracle System ID (SID) of the created DB instance. Not shown when the
          returned parameters do not apply to an Oracle DB instance.

        - **Endpoint** *(dict) --*

          Specifies the connection endpoint.

          - **Address** *(string) --*

            Specifies the DNS address of the DB instance.

          - **Port** *(integer) --*

            Specifies the port that the database engine is listening on.

          - **HostedZoneId** *(string) --*

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size specified in gibibytes.

        - **InstanceCreateTime** *(datetime) --*

          Provides the date and time the DB instance was created.

        - **PreferredBackupWindow** *(string) --*

          Specifies the daily time range during which automated backups are created if automated
          backups are enabled, as determined by the ``BackupRetentionPeriod`` .

        - **BackupRetentionPeriod** *(integer) --*

          Specifies the number of days for which automatic DB snapshots are retained.

        - **DBSecurityGroups** *(list) --*

          A list of DB security group elements containing ``DBSecurityGroup.Name`` and
          ``DBSecurityGroup.Status`` subelements.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroups** *(list) --*

          Provides a list of VPC security group elements that the DB instance belongs to.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

        - **DBParameterGroups** *(list) --*

          Provides the list of DB parameter groups applied to this DB instance.

          - *(dict) --*

            The status of the DB parameter group.

            This data type is used as a response element in the following actions:

            * ``CreateDBInstance``

            * ``CreateDBInstanceReadReplica``

            * ``DeleteDBInstance``

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            - **DBParameterGroupName** *(string) --*

              The name of the DB parameter group.

            - **ParameterApplyStatus** *(string) --*

              The status of parameter updates.

        - **AvailabilityZone** *(string) --*

          Specifies the name of the Availability Zone the DB instance is located in.

        - **DBSubnetGroup** *(dict) --*

          Specifies information on the subnet group associated with the DB instance, including the
          name, description, and subnets in the subnet group.

          - **DBSubnetGroupName** *(string) --*

            The name of the DB subnet group.

          - **DBSubnetGroupDescription** *(string) --*

            Provides the description of the DB subnet group.

          - **VpcId** *(string) --*

            Provides the VpcId of the DB subnet group.

          - **SubnetGroupStatus** *(string) --*

            Provides the status of the DB subnet group.

          - **Subnets** *(list) --*

            Contains a list of ``Subnet`` elements.

            - *(dict) --*

              This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

              - **SubnetIdentifier** *(string) --*

                Specifies the identifier of the subnet.

              - **SubnetAvailabilityZone** *(dict) --*

                Contains Availability Zone information.

                This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

                - **Name** *(string) --*

                  The name of the Availability Zone.

              - **SubnetStatus** *(string) --*

                Specifies the status of the subnet.

          - **DBSubnetGroupArn** *(string) --*

            The Amazon Resource Name (ARN) for the DB subnet group.

        - **PreferredMaintenanceWindow** *(string) --*

          Specifies the weekly time range during which system maintenance can occur, in Universal
          Coordinated Time (UTC).

        - **PendingModifiedValues** *(dict) --*

          Specifies that changes to the DB instance are pending. This element is only included when
          changes are pending. Specific changes are identified by subelements.

          - **DBInstanceClass** *(string) --*

            Contains the new ``DBInstanceClass`` for the DB instance that will be applied or is
            currently being applied.

          - **AllocatedStorage** *(integer) --*

            Contains the new ``AllocatedStorage`` size for the DB instance that will be applied or
            is currently being applied.

          - **MasterUserPassword** *(string) --*

            Contains the pending or currently-in-progress change of the master credentials for the
            DB instance.

          - **Port** *(integer) --*

            Specifies the pending port for the DB instance.

          - **BackupRetentionPeriod** *(integer) --*

            Specifies the pending number of days for which automated backups are retained.

          - **MultiAZ** *(boolean) --*

            Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

          - **EngineVersion** *(string) --*

            Indicates the database engine version.

          - **LicenseModel** *(string) --*

            The license model for the DB instance.

            Valid values: ``license-included`` | ``bring-your-own-license`` |
            ``general-public-license``

          - **Iops** *(integer) --*

            Specifies the new Provisioned IOPS value for the DB instance that will be applied or is
            currently being applied.

          - **DBInstanceIdentifier** *(string) --*

            Contains the new ``DBInstanceIdentifier`` for the DB instance that will be applied or
            is currently being applied.

          - **StorageType** *(string) --*

            Specifies the storage type to be associated with the DB instance.

          - **CACertificateIdentifier** *(string) --*

            Specifies the identifier of the CA certificate for the DB instance.

          - **DBSubnetGroupName** *(string) --*

            The new DB subnet group for the DB instance.

          - **PendingCloudwatchLogsExports** *(dict) --*

            A list of the log types whose configuration is still pending. In other words, these log
            types are in the process of being activated or deactivated.

            - **LogTypesToEnable** *(list) --*

              Log types that are in the process of being deactivated. After they are deactivated,
              these log types aren't exported to CloudWatch Logs.

              - *(string) --*

            - **LogTypesToDisable** *(list) --*

              Log types that are in the process of being enabled. After they are enabled, these log
              types are exported to CloudWatch Logs.

              - *(string) --*

          - **ProcessorFeatures** *(list) --*

            The number of CPU cores and the number of threads per core for the DB instance class of
            the DB instance.

            - *(dict) --*

              Contains the processor features of a DB instance class.

              To specify the number of CPU cores, use the ``coreCount`` feature name for the
              ``Name`` parameter. To specify the number of threads per core, use the
              ``threadsPerCore`` feature name for the ``Name`` parameter.

              You can set the processor features of the DB instance class for a DB instance when
              you call one of the following actions:

              * ``CreateDBInstance``

              * ``ModifyDBInstance``

              * ``RestoreDBInstanceFromDBSnapshot``

              * ``RestoreDBInstanceFromS3``

              * ``RestoreDBInstanceToPointInTime``

              You can view the valid processor values for a particular instance class by calling
              the ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class
              for the ``DBInstanceClass`` parameter.

              In addition, you can use the following actions for DB instance class processor
              information:

              * ``DescribeDBInstances``

              * ``DescribeDBSnapshots``

              * ``DescribeValidDBInstanceModifications``

              For more information, see `Configuring the Processor of the DB Instance Class
              <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
              in the *Amazon RDS User Guide.*

              - **Name** *(string) --*

                The name of the processor feature. Valid names are ``coreCount`` and
                ``threadsPerCore`` .

              - **Value** *(string) --*

                The value of a processor feature name.

        - **LatestRestorableTime** *(datetime) --*

          Specifies the latest time to which a database can be restored with point-in-time restore.

        - **MultiAZ** *(boolean) --*

          Specifies if the DB instance is a Multi-AZ deployment.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **AutoMinorVersionUpgrade** *(boolean) --*

          Indicates that minor version patches are applied automatically.

        - **ReadReplicaSourceDBInstanceIdentifier** *(string) --*

          Contains the identifier of the source DB instance if this DB instance is a Read Replica.

        - **ReadReplicaDBInstanceIdentifiers** *(list) --*

          Contains one or more identifiers of the Read Replicas associated with this DB instance.

          - *(string) --*

        - **ReadReplicaDBClusterIdentifiers** *(list) --*

          Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is
          replicated as a Read Replica. For example, when you create an Aurora Read Replica of an
          RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora Read Replica is shown.
          This output does not contain information about cross region Aurora Read Replicas.

          .. note::

            Currently, each RDS DB instance can have only one Aurora Read Replica.

          - *(string) --*

        - **LicenseModel** *(string) --*

          License model information for this DB instance.

        - **Iops** *(integer) --*

          Specifies the Provisioned IOPS (I/O operations per second) value.

        - **OptionGroupMemberships** *(list) --*

          Provides the list of option group memberships for this DB instance.

          - *(dict) --*

            Provides information on the option groups the DB instance is a member of.

            - **OptionGroupName** *(string) --*

              The name of the option group that the instance belongs to.

            - **Status** *(string) --*

              The status of the DB instance's option group membership. Valid values are:
              ``in-sync`` , ``pending-apply`` , ``pending-removal`` , ``pending-maintenance-apply``
              , ``pending-maintenance-removal`` , ``applying`` , ``removing`` , and ``failed`` .

        - **CharacterSetName** *(string) --*

          If present, specifies the name of the character set that this instance is associated with.

        - **SecondaryAvailabilityZone** *(string) --*

          If present, specifies the name of the secondary Availability Zone for a DB instance with
          multi-AZ support.

        - **PubliclyAccessible** *(boolean) --*

          Specifies the accessibility options for the DB instance. A value of true specifies an
          Internet-facing instance with a publicly resolvable DNS name, which resolves to a public
          IP address. A value of false specifies an internal instance with a DNS name that resolves
          to a private IP address.

        - **StatusInfos** *(list) --*

          The status of a Read Replica. If the instance isn't a Read Replica, this is blank.

          - *(dict) --*

            Provides a list of status information for a DB instance.

            - **StatusType** *(string) --*

              This value is currently "read replication."

            - **Normal** *(boolean) --*

              Boolean value that is true if the instance is operating normally, or false if the
              instance is in an error state.

            - **Status** *(string) --*

              Status of the DB instance. For a StatusType of Read Replica, the values can be
              replicating, replication stop point set, replication stop point reached, error,
              stopped, or terminated.

            - **Message** *(string) --*

              Details of the error if there is an error for the instance. If the instance isn't in
              an error state, this value is blank.

        - **StorageType** *(string) --*

          Specifies the storage type associated with DB instance.

        - **TdeCredentialArn** *(string) --*

          The ARN from the key store with which the instance is associated for TDE encryption.

        - **DbInstancePort** *(integer) --*

          Specifies the port that the DB instance listens on. If the DB instance is part of a DB
          cluster, this can be a different port than the DB cluster port.

        - **DBClusterIdentifier** *(string) --*

          If the DB instance is a member of a DB cluster, contains the name of the DB cluster that
          the DB instance is a member of.

        - **StorageEncrypted** *(boolean) --*

          Specifies whether the DB instance is encrypted.

        - **KmsKeyId** *(string) --*

          If ``StorageEncrypted`` is true, the AWS KMS key identifier for the encrypted DB instance.

        - **DbiResourceId** *(string) --*

          The AWS Region-unique, immutable identifier for the DB instance. This identifier is found
          in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

        - **CACertificateIdentifier** *(string) --*

          The identifier of the CA certificate for this DB instance.

        - **DomainMemberships** *(list) --*

          The Active Directory Domain membership records associated with the DB instance.

          - *(dict) --*

            An Active Directory Domain membership record associated with the DB instance.

            - **Domain** *(string) --*

              The identifier of the Active Directory Domain.

            - **Status** *(string) --*

              The status of the DB instance's Active Directory Domain membership, such as joined,
              pending-join, failed etc).

            - **FQDN** *(string) --*

              The fully qualified domain name of the Active Directory Domain.

            - **IAMRoleName** *(string) --*

              The name of the IAM role to be used when making API calls to the Directory Service.

        - **CopyTagsToSnapshot** *(boolean) --*

          Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

           **Amazon Aurora**

          Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this
          value for an Aurora DB instance has no effect on the DB cluster setting. For more
          information, see ``DBCluster`` .

        - **MonitoringInterval** *(integer) --*

          The interval, in seconds, between points when Enhanced Monitoring metrics are collected
          for the DB instance.

        - **EnhancedMonitoringResourceArn** *(string) --*

          The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the
          Enhanced Monitoring metrics data for the DB instance.

        - **MonitoringRoleArn** *(string) --*

          The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon
          CloudWatch Logs.

        - **PromotionTier** *(integer) --*

          A value that specifies the order in which an Aurora Replica is promoted to the primary
          instance after a failure of the existing primary instance. For more information, see
          `Fault Tolerance for an Aurora DB Cluster
          <https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance>`__
          in the *Amazon Aurora User Guide* .

        - **DBInstanceArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB instance.

        - **Timezone** *(string) --*

          The time zone of the DB instance. In most cases, the ``Timezone`` element is empty.
          ``Timezone`` content appears only for Microsoft SQL Server DB instances that were created
          with a time zone specified.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.

          IAM database authentication can be enabled for the following database engines

          * For MySQL 5.6, minor version 5.6.34 or higher

          * For MySQL 5.7, minor version 5.7.16 or higher

          * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster
          Type.

        - **PerformanceInsightsEnabled** *(boolean) --*

          True if Performance Insights is enabled for the DB instance, and otherwise false.

        - **PerformanceInsightsKMSKeyId** *(string) --*

          The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is
          the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS
          encryption key.

        - **PerformanceInsightsRetentionPeriod** *(integer) --*

          The amount of time, in days, to retain Performance Insights data. Valid values are 7 or
          731 (2 years).

        - **EnabledCloudwatchLogsExports** *(list) --*

          A list of log types that this DB instance is configured to export to CloudWatch Logs.

          Log types vary by DB engine. For information about the log types for each DB engine, see
          `Amazon RDS Database Log Files
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html>`__ in the
          *Amazon RDS User Guide.*

          - *(string) --*

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

        - **DeletionProtection** *(boolean) --*

          Indicates if the DB instance has deletion protection enabled. The database can't be
          deleted when deletion protection is enabled. For more information, see `Deleting a DB
          Instance
          <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html>`__ .

        - **AssociatedRoles** *(list) --*

          The AWS Identity and Access Management (IAM) roles associated with the DB instance.

          - *(dict) --*

            Describes an AWS Identity and Access Management (IAM) role that is associated with a DB
            instance.

            - **RoleArn** *(string) --*

              The Amazon Resource Name (ARN) of the IAM role that is associated with the DB
              instance.

            - **FeatureName** *(string) --*

              The name of the feature associated with the AWS Identity and Access Management (IAM)
              role. For the list of supported feature names, see ``DBEngineVersion`` .

            - **Status** *(string) --*

              Describes the state of association between the IAM role and the DB instance. The
              Status property returns one of the following values:

              * ``ACTIVE`` - the IAM role ARN is associated with the DB instance and can be used to
              access other AWS services on your behalf.

              * ``PENDING`` - the IAM role ARN is being associated with the DB instance.

              * ``INVALID`` - the IAM role ARN is associated with the DB instance, but the DB
              instance is unable to assume the IAM role in order to access other AWS services on
              your behalf.

        - **ListenerEndpoint** *(dict) --*

          Specifies the listener connection endpoint for SQL Server Always On.

          - **Address** *(string) --*

            Specifies the DNS address of the DB instance.

          - **Port** *(integer) --*

            Specifies the port that the database engine is listening on.

          - **HostedZoneId** *(string) --*

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

        - **MaxAllocatedStorage** *(integer) --*

          The upper limit to which Amazon RDS can automatically scale the storage of the DB
          instance.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBLogFilesPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBLogFilesPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeDBLogFilesPaginateFiltersTypeDef(
    _DescribeDBLogFilesPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBLogFilesPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBLogFilesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBLogFilesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBLogFilesPaginatePaginationConfigTypeDef(
    _DescribeDBLogFilesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBLogFilesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBLogFilesPaginateResponseDescribeDBLogFilesTypeDef = TypedDict(
    "_DescribeDBLogFilesPaginateResponseDescribeDBLogFilesTypeDef",
    {"LogFileName": str, "LastWritten": int, "Size": int},
    total=False,
)


class DescribeDBLogFilesPaginateResponseDescribeDBLogFilesTypeDef(
    _DescribeDBLogFilesPaginateResponseDescribeDBLogFilesTypeDef
):
    """
    Type definition for `DescribeDBLogFilesPaginateResponse` `DescribeDBLogFiles`

    This data type is used as a response element to ``DescribeDBLogFiles`` .

    - **LogFileName** *(string) --*

      The name of the log file for the specified DB instance.

    - **LastWritten** *(integer) --*

      A POSIX timestamp when the last log entry was written.

    - **Size** *(integer) --*

      The size, in bytes, of the log file for the specified DB instance.
    """


_DescribeDBLogFilesPaginateResponseTypeDef = TypedDict(
    "_DescribeDBLogFilesPaginateResponseTypeDef",
    {
        "DescribeDBLogFiles": List[
            DescribeDBLogFilesPaginateResponseDescribeDBLogFilesTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBLogFilesPaginateResponseTypeDef(
    _DescribeDBLogFilesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBLogFilesPaginate` `Response`

    The response from a call to ``DescribeDBLogFiles`` .

    - **DescribeDBLogFiles** *(list) --*

      The DB log files returned.

      - *(dict) --*

        This data type is used as a response element to ``DescribeDBLogFiles`` .

        - **LogFileName** *(string) --*

          The name of the log file for the specified DB instance.

        - **LastWritten** *(integer) --*

          A POSIX timestamp when the last log entry was written.

        - **Size** *(integer) --*

          The size, in bytes, of the log file for the specified DB instance.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBParameterGroupsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBParameterGroupsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBParameterGroupsPaginateFiltersTypeDef(
    _DescribeDBParameterGroupsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBParameterGroupsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBParameterGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBParameterGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBParameterGroupsPaginatePaginationConfigTypeDef(
    _DescribeDBParameterGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBParameterGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBParameterGroupsPaginateResponseDBParameterGroupsTypeDef = TypedDict(
    "_DescribeDBParameterGroupsPaginateResponseDBParameterGroupsTypeDef",
    {
        "DBParameterGroupName": str,
        "DBParameterGroupFamily": str,
        "Description": str,
        "DBParameterGroupArn": str,
    },
    total=False,
)


class DescribeDBParameterGroupsPaginateResponseDBParameterGroupsTypeDef(
    _DescribeDBParameterGroupsPaginateResponseDBParameterGroupsTypeDef
):
    """
    Type definition for `DescribeDBParameterGroupsPaginateResponse` `DBParameterGroups`

    Contains the details of an Amazon RDS DB parameter group.

    This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

    - **DBParameterGroupName** *(string) --*

      Provides the name of the DB parameter group.

    - **DBParameterGroupFamily** *(string) --*

      Provides the name of the DB parameter group family that this DB parameter group is
      compatible with.

    - **Description** *(string) --*

      Provides the customer-specified description for this DB parameter group.

    - **DBParameterGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB parameter group.
    """


_DescribeDBParameterGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBParameterGroupsPaginateResponseTypeDef",
    {
        "DBParameterGroups": List[
            DescribeDBParameterGroupsPaginateResponseDBParameterGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBParameterGroupsPaginateResponseTypeDef(
    _DescribeDBParameterGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBParameterGroupsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBParameterGroups`` action.

    - **DBParameterGroups** *(list) --*

      A list of ``DBParameterGroup`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB parameter group.

        This data type is used as a response element in the ``DescribeDBParameterGroups`` action.

        - **DBParameterGroupName** *(string) --*

          Provides the name of the DB parameter group.

        - **DBParameterGroupFamily** *(string) --*

          Provides the name of the DB parameter group family that this DB parameter group is
          compatible with.

        - **Description** *(string) --*

          Provides the customer-specified description for this DB parameter group.

        - **DBParameterGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB parameter group.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBParametersPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBParametersPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeDBParametersPaginateFiltersTypeDef(
    _DescribeDBParametersPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBParametersPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBParametersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBParametersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBParametersPaginatePaginationConfigTypeDef(
    _DescribeDBParametersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBParametersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBParametersPaginateResponseParametersTypeDef = TypedDict(
    "_DescribeDBParametersPaginateResponseParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class DescribeDBParametersPaginateResponseParametersTypeDef(
    _DescribeDBParametersPaginateResponseParametersTypeDef
):
    """
    Type definition for `DescribeDBParametersPaginateResponse` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
    ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_DescribeDBParametersPaginateResponseTypeDef = TypedDict(
    "_DescribeDBParametersPaginateResponseTypeDef",
    {
        "Parameters": List[DescribeDBParametersPaginateResponseParametersTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBParametersPaginateResponseTypeDef(
    _DescribeDBParametersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBParametersPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBParameters`` action.

    - **Parameters** *(list) --*

      A list of ``Parameter`` values.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters`` and
        ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBSecurityGroupsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBSecurityGroupsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeDBSecurityGroupsPaginateFiltersTypeDef(
    _DescribeDBSecurityGroupsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBSecurityGroupsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBSecurityGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBSecurityGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBSecurityGroupsPaginatePaginationConfigTypeDef(
    _DescribeDBSecurityGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBSecurityGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsEC2SecurityGroupsTypeDef = TypedDict(
    "_DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupId": str,
        "EC2SecurityGroupOwnerId": str,
    },
    total=False,
)


class DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsEC2SecurityGroupsTypeDef(
    _DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsEC2SecurityGroupsTypeDef
):
    """
    Type definition for `DescribeDBSecurityGroupsPaginateResponseDBSecurityGroups` `EC2SecurityGroups`

    This data type is used as a response element in the following actions:

    * ``AuthorizeDBSecurityGroupIngress``

    * ``DescribeDBSecurityGroups``

    * ``RevokeDBSecurityGroupIngress``

    - **Status** *(string) --*

      Provides the status of the EC2 security group. Status can be "authorizing",
      "authorized", "revoking", and "revoked".

    - **EC2SecurityGroupName** *(string) --*

      Specifies the name of the EC2 security group.

    - **EC2SecurityGroupId** *(string) --*

      Specifies the id of the EC2 security group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      Specifies the AWS ID of the owner of the EC2 security group specified in the
      ``EC2SecurityGroupName`` field.
    """


_DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsIPRangesTypeDef = TypedDict(
    "_DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsIPRangesTypeDef",
    {"Status": str, "CIDRIP": str},
    total=False,
)


class DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsIPRangesTypeDef(
    _DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsIPRangesTypeDef
):
    """
    Type definition for `DescribeDBSecurityGroupsPaginateResponseDBSecurityGroups` `IPRanges`

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **Status** *(string) --*

      Specifies the status of the IP range. Status can be "authorizing", "authorized",
      "revoking", and "revoked".

    - **CIDRIP** *(string) --*

      Specifies the IP range.
    """


_DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsTypeDef = TypedDict(
    "_DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsTypeDef",
    {
        "OwnerId": str,
        "DBSecurityGroupName": str,
        "DBSecurityGroupDescription": str,
        "VpcId": str,
        "EC2SecurityGroups": List[
            DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsIPRangesTypeDef
        ],
        "DBSecurityGroupArn": str,
    },
    total=False,
)


class DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsTypeDef(
    _DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeDBSecurityGroupsPaginateResponse` `DBSecurityGroups`

    Contains the details for an Amazon RDS DB security group.

    This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

    - **OwnerId** *(string) --*

      Provides the AWS ID of the owner of a specific DB security group.

    - **DBSecurityGroupName** *(string) --*

      Specifies the name of the DB security group.

    - **DBSecurityGroupDescription** *(string) --*

      Provides the description of the DB security group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB security group.

    - **EC2SecurityGroups** *(list) --*

      Contains a list of ``EC2SecurityGroup`` elements.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``AuthorizeDBSecurityGroupIngress``

        * ``DescribeDBSecurityGroups``

        * ``RevokeDBSecurityGroupIngress``

        - **Status** *(string) --*

          Provides the status of the EC2 security group. Status can be "authorizing",
          "authorized", "revoking", and "revoked".

        - **EC2SecurityGroupName** *(string) --*

          Specifies the name of the EC2 security group.

        - **EC2SecurityGroupId** *(string) --*

          Specifies the id of the EC2 security group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          Specifies the AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

    - **IPRanges** *(list) --*

      Contains a list of ``IPRange`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **Status** *(string) --*

          Specifies the status of the IP range. Status can be "authorizing", "authorized",
          "revoking", and "revoked".

        - **CIDRIP** *(string) --*

          Specifies the IP range.

    - **DBSecurityGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB security group.
    """


_DescribeDBSecurityGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBSecurityGroupsPaginateResponseTypeDef",
    {
        "DBSecurityGroups": List[
            DescribeDBSecurityGroupsPaginateResponseDBSecurityGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBSecurityGroupsPaginateResponseTypeDef(
    _DescribeDBSecurityGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBSecurityGroupsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBSecurityGroups`` action.

    - **DBSecurityGroups** *(list) --*

      A list of ``DBSecurityGroup`` instances.

      - *(dict) --*

        Contains the details for an Amazon RDS DB security group.

        This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

        - **OwnerId** *(string) --*

          Provides the AWS ID of the owner of a specific DB security group.

        - **DBSecurityGroupName** *(string) --*

          Specifies the name of the DB security group.

        - **DBSecurityGroupDescription** *(string) --*

          Provides the description of the DB security group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB security group.

        - **EC2SecurityGroups** *(list) --*

          Contains a list of ``EC2SecurityGroup`` elements.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``AuthorizeDBSecurityGroupIngress``

            * ``DescribeDBSecurityGroups``

            * ``RevokeDBSecurityGroupIngress``

            - **Status** *(string) --*

              Provides the status of the EC2 security group. Status can be "authorizing",
              "authorized", "revoking", and "revoked".

            - **EC2SecurityGroupName** *(string) --*

              Specifies the name of the EC2 security group.

            - **EC2SecurityGroupId** *(string) --*

              Specifies the id of the EC2 security group.

            - **EC2SecurityGroupOwnerId** *(string) --*

              Specifies the AWS ID of the owner of the EC2 security group specified in the
              ``EC2SecurityGroupName`` field.

        - **IPRanges** *(list) --*

          Contains a list of ``IPRange`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSecurityGroups`` action.

            - **Status** *(string) --*

              Specifies the status of the IP range. Status can be "authorizing", "authorized",
              "revoking", and "revoked".

            - **CIDRIP** *(string) --*

              Specifies the IP range.

        - **DBSecurityGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB security group.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBSnapshotsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBSnapshotsPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeDBSnapshotsPaginateFiltersTypeDef(
    _DescribeDBSnapshotsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBSnapshotsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBSnapshotsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBSnapshotsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBSnapshotsPaginatePaginationConfigTypeDef(
    _DescribeDBSnapshotsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBSnapshotsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBSnapshotsPaginateResponseDBSnapshotsProcessorFeaturesTypeDef = TypedDict(
    "_DescribeDBSnapshotsPaginateResponseDBSnapshotsProcessorFeaturesTypeDef",
    {"Name": str, "Value": str},
    total=False,
)


class DescribeDBSnapshotsPaginateResponseDBSnapshotsProcessorFeaturesTypeDef(
    _DescribeDBSnapshotsPaginateResponseDBSnapshotsProcessorFeaturesTypeDef
):
    """
    Type definition for `DescribeDBSnapshotsPaginateResponseDBSnapshots` `ProcessorFeatures`

    Contains the processor features of a DB instance class.

    To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
    parameter. To specify the number of threads per core, use the ``threadsPerCore``
    feature name for the ``Name`` parameter.

    You can set the processor features of the DB instance class for a DB instance when you
    call one of the following actions:

    * ``CreateDBInstance``

    * ``ModifyDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceFromS3``

    * ``RestoreDBInstanceToPointInTime``

    You can view the valid processor values for a particular instance class by calling the
    ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
    ``DBInstanceClass`` parameter.

    In addition, you can use the following actions for DB instance class processor
    information:

    * ``DescribeDBInstances``

    * ``DescribeDBSnapshots``

    * ``DescribeValidDBInstanceModifications``

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **Value** *(string) --*

      The value of a processor feature name.
    """


_DescribeDBSnapshotsPaginateResponseDBSnapshotsTypeDef = TypedDict(
    "_DescribeDBSnapshotsPaginateResponseDBSnapshotsTypeDef",
    {
        "DBSnapshotIdentifier": str,
        "DBInstanceIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Engine": str,
        "AllocatedStorage": int,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "VpcId": str,
        "InstanceCreateTime": datetime,
        "MasterUsername": str,
        "EngineVersion": str,
        "LicenseModel": str,
        "SnapshotType": str,
        "Iops": int,
        "OptionGroupName": str,
        "PercentProgress": int,
        "SourceRegion": str,
        "SourceDBSnapshotIdentifier": str,
        "StorageType": str,
        "TdeCredentialArn": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "DBSnapshotArn": str,
        "Timezone": str,
        "IAMDatabaseAuthenticationEnabled": bool,
        "ProcessorFeatures": List[
            DescribeDBSnapshotsPaginateResponseDBSnapshotsProcessorFeaturesTypeDef
        ],
        "DbiResourceId": str,
    },
    total=False,
)


class DescribeDBSnapshotsPaginateResponseDBSnapshotsTypeDef(
    _DescribeDBSnapshotsPaginateResponseDBSnapshotsTypeDef
):
    """
    Type definition for `DescribeDBSnapshotsPaginateResponse` `DBSnapshots`

    Contains the details of an Amazon RDS DB snapshot.

    This data type is used as a response element in the ``DescribeDBSnapshots`` action.

    - **DBSnapshotIdentifier** *(string) --*

      Specifies the identifier for the DB snapshot.

    - **DBInstanceIdentifier** *(string) --*

      Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

    - **SnapshotCreateTime** *(datetime) --*

      Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **Engine** *(string) --*

      Specifies the name of the database engine.

    - **AllocatedStorage** *(integer) --*

      Specifies the allocated storage size in gibibytes (GiB).

    - **Status** *(string) --*

      Specifies the status of this DB snapshot.

    - **Port** *(integer) --*

      Specifies the port that the database engine was listening on at the time of the snapshot.

    - **AvailabilityZone** *(string) --*

      Specifies the name of the Availability Zone the DB instance was located in at the time of
      the DB snapshot.

    - **VpcId** *(string) --*

      Provides the VPC ID associated with the DB snapshot.

    - **InstanceCreateTime** *(datetime) --*

      Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

    - **MasterUsername** *(string) --*

      Provides the master username for the DB snapshot.

    - **EngineVersion** *(string) --*

      Specifies the version of the database engine.

    - **LicenseModel** *(string) --*

      License model information for the restored DB instance.

    - **SnapshotType** *(string) --*

      Provides the type of the DB snapshot.

    - **Iops** *(integer) --*

      Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at
      the time of the snapshot.

    - **OptionGroupName** *(string) --*

      Provides the option group name for the DB snapshot.

    - **PercentProgress** *(integer) --*

      The percentage of the estimated data that has been transferred.

    - **SourceRegion** *(string) --*

      The AWS Region that the DB snapshot was created in or copied from.

    - **SourceDBSnapshotIdentifier** *(string) --*

      The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
      has value in case of cross-customer or cross-region copy.

    - **StorageType** *(string) --*

      Specifies the storage type associated with DB snapshot.

    - **TdeCredentialArn** *(string) --*

      The ARN from the key store with which to associate the instance for TDE encryption.

    - **Encrypted** *(boolean) --*

      Specifies whether the DB snapshot is encrypted.

    - **KmsKeyId** *(string) --*

      If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

    - **DBSnapshotArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB snapshot.

    - **Timezone** *(string) --*

      The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
      ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
      instances that were created with a time zone specified.

    - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

      True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
      is enabled, and otherwise false.

    - **ProcessorFeatures** *(list) --*

      The number of CPU cores and the number of threads per core for the DB instance class of
      the DB instance when the DB snapshot was created.

      - *(dict) --*

        Contains the processor features of a DB instance class.

        To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
        parameter. To specify the number of threads per core, use the ``threadsPerCore``
        feature name for the ``Name`` parameter.

        You can set the processor features of the DB instance class for a DB instance when you
        call one of the following actions:

        * ``CreateDBInstance``

        * ``ModifyDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceFromS3``

        * ``RestoreDBInstanceToPointInTime``

        You can view the valid processor values for a particular instance class by calling the
        ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
        ``DBInstanceClass`` parameter.

        In addition, you can use the following actions for DB instance class processor
        information:

        * ``DescribeDBInstances``

        * ``DescribeDBSnapshots``

        * ``DescribeValidDBInstanceModifications``

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **Value** *(string) --*

          The value of a processor feature name.

    - **DbiResourceId** *(string) --*

      The identifier for the source DB instance, which can't be changed and which is unique to
      an AWS Region.
    """


_DescribeDBSnapshotsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBSnapshotsPaginateResponseTypeDef",
    {
        "DBSnapshots": List[DescribeDBSnapshotsPaginateResponseDBSnapshotsTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBSnapshotsPaginateResponseTypeDef(
    _DescribeDBSnapshotsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBSnapshotsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBSnapshots`` action.

    - **DBSnapshots** *(list) --*

      A list of ``DBSnapshot`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB snapshot.

        This data type is used as a response element in the ``DescribeDBSnapshots`` action.

        - **DBSnapshotIdentifier** *(string) --*

          Specifies the identifier for the DB snapshot.

        - **DBInstanceIdentifier** *(string) --*

          Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

        - **SnapshotCreateTime** *(datetime) --*

          Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

        - **Engine** *(string) --*

          Specifies the name of the database engine.

        - **AllocatedStorage** *(integer) --*

          Specifies the allocated storage size in gibibytes (GiB).

        - **Status** *(string) --*

          Specifies the status of this DB snapshot.

        - **Port** *(integer) --*

          Specifies the port that the database engine was listening on at the time of the snapshot.

        - **AvailabilityZone** *(string) --*

          Specifies the name of the Availability Zone the DB instance was located in at the time of
          the DB snapshot.

        - **VpcId** *(string) --*

          Provides the VPC ID associated with the DB snapshot.

        - **InstanceCreateTime** *(datetime) --*

          Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

        - **MasterUsername** *(string) --*

          Provides the master username for the DB snapshot.

        - **EngineVersion** *(string) --*

          Specifies the version of the database engine.

        - **LicenseModel** *(string) --*

          License model information for the restored DB instance.

        - **SnapshotType** *(string) --*

          Provides the type of the DB snapshot.

        - **Iops** *(integer) --*

          Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at
          the time of the snapshot.

        - **OptionGroupName** *(string) --*

          Provides the option group name for the DB snapshot.

        - **PercentProgress** *(integer) --*

          The percentage of the estimated data that has been transferred.

        - **SourceRegion** *(string) --*

          The AWS Region that the DB snapshot was created in or copied from.

        - **SourceDBSnapshotIdentifier** *(string) --*

          The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only
          has value in case of cross-customer or cross-region copy.

        - **StorageType** *(string) --*

          Specifies the storage type associated with DB snapshot.

        - **TdeCredentialArn** *(string) --*

          The ARN from the key store with which to associate the instance for TDE encryption.

        - **Encrypted** *(boolean) --*

          Specifies whether the DB snapshot is encrypted.

        - **KmsKeyId** *(string) --*

          If ``Encrypted`` is true, the AWS KMS key identifier for the encrypted DB snapshot.

        - **DBSnapshotArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB snapshot.

        - **Timezone** *(string) --*

          The time zone of the DB snapshot. In most cases, the ``Timezone`` element is empty.
          ``Timezone`` content appears only for snapshots taken from Microsoft SQL Server DB
          instances that were created with a time zone specified.

        - **IAMDatabaseAuthenticationEnabled** *(boolean) --*

          True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts
          is enabled, and otherwise false.

        - **ProcessorFeatures** *(list) --*

          The number of CPU cores and the number of threads per core for the DB instance class of
          the DB instance when the DB snapshot was created.

          - *(dict) --*

            Contains the processor features of a DB instance class.

            To specify the number of CPU cores, use the ``coreCount`` feature name for the ``Name``
            parameter. To specify the number of threads per core, use the ``threadsPerCore``
            feature name for the ``Name`` parameter.

            You can set the processor features of the DB instance class for a DB instance when you
            call one of the following actions:

            * ``CreateDBInstance``

            * ``ModifyDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceFromS3``

            * ``RestoreDBInstanceToPointInTime``

            You can view the valid processor values for a particular instance class by calling the
            ``DescribeOrderableDBInstanceOptions`` action and specifying the instance class for the
            ``DBInstanceClass`` parameter.

            In addition, you can use the following actions for DB instance class processor
            information:

            * ``DescribeDBInstances``

            * ``DescribeDBSnapshots``

            * ``DescribeValidDBInstanceModifications``

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **Value** *(string) --*

              The value of a processor feature name.

        - **DbiResourceId** *(string) --*

          The identifier for the source DB instance, which can't be changed and which is unique to
          an AWS Region.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDBSubnetGroupsPaginateFiltersTypeDef = TypedDict(
    "_DescribeDBSubnetGroupsPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeDBSubnetGroupsPaginateFiltersTypeDef(
    _DescribeDBSubnetGroupsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeDBSubnetGroupsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeDBSubnetGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDBSubnetGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDBSubnetGroupsPaginatePaginationConfigTypeDef(
    _DescribeDBSubnetGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDBSubnetGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    {"Name": str},
    total=False,
)


class DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef(
    _DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnets` `SubnetAvailabilityZone`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsTypeDef = TypedDict(
    "_DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsTypeDef(
    _DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsTypeDef
):
    """
    Type definition for `DescribeDBSubnetGroupsPaginateResponseDBSubnetGroups` `Subnets`

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **SubnetIdentifier** *(string) --*

      Specifies the identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      Contains Availability Zone information.

      This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

      - **Name** *(string) --*

        The name of the Availability Zone.

    - **SubnetStatus** *(string) --*

      Specifies the status of the subnet.
    """


_DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsTypeDef = TypedDict(
    "_DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsTypeDef",
    {
        "DBSubnetGroupName": str,
        "DBSubnetGroupDescription": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsSubnetsTypeDef
        ],
        "DBSubnetGroupArn": str,
    },
    total=False,
)


class DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsTypeDef(
    _DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsTypeDef
):
    """
    Type definition for `DescribeDBSubnetGroupsPaginateResponse` `DBSubnetGroups`

    Contains the details of an Amazon RDS DB subnet group.

    This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

    - **DBSubnetGroupName** *(string) --*

      The name of the DB subnet group.

    - **DBSubnetGroupDescription** *(string) --*

      Provides the description of the DB subnet group.

    - **VpcId** *(string) --*

      Provides the VpcId of the DB subnet group.

    - **SubnetGroupStatus** *(string) --*

      Provides the status of the DB subnet group.

    - **Subnets** *(list) --*

      Contains a list of ``Subnet`` elements.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **SubnetIdentifier** *(string) --*

          Specifies the identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          Contains Availability Zone information.

          This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

          - **Name** *(string) --*

            The name of the Availability Zone.

        - **SubnetStatus** *(string) --*

          Specifies the status of the subnet.

    - **DBSubnetGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the DB subnet group.
    """


_DescribeDBSubnetGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeDBSubnetGroupsPaginateResponseTypeDef",
    {
        "DBSubnetGroups": List[
            DescribeDBSubnetGroupsPaginateResponseDBSubnetGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeDBSubnetGroupsPaginateResponseTypeDef(
    _DescribeDBSubnetGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDBSubnetGroupsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeDBSubnetGroups`` action.

    - **DBSubnetGroups** *(list) --*

      A list of ``DBSubnetGroup`` instances.

      - *(dict) --*

        Contains the details of an Amazon RDS DB subnet group.

        This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

        - **DBSubnetGroupName** *(string) --*

          The name of the DB subnet group.

        - **DBSubnetGroupDescription** *(string) --*

          Provides the description of the DB subnet group.

        - **VpcId** *(string) --*

          Provides the VpcId of the DB subnet group.

        - **SubnetGroupStatus** *(string) --*

          Provides the status of the DB subnet group.

        - **Subnets** *(list) --*

          Contains a list of ``Subnet`` elements.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeDBSubnetGroups`` action.

            - **SubnetIdentifier** *(string) --*

              Specifies the identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              Contains Availability Zone information.

              This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

              - **Name** *(string) --*

                The name of the Availability Zone.

            - **SubnetStatus** *(string) --*

              Specifies the status of the subnet.

        - **DBSubnetGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the DB subnet group.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeEngineDefaultClusterParametersPaginateFiltersTypeDef = TypedDict(
    "_DescribeEngineDefaultClusterParametersPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeEngineDefaultClusterParametersPaginateFiltersTypeDef(
    _DescribeEngineDefaultClusterParametersPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeEngineDefaultClusterParametersPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeEngineDefaultClusterParametersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeEngineDefaultClusterParametersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeEngineDefaultClusterParametersPaginatePaginationConfigTypeDef(
    _DescribeEngineDefaultClusterParametersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeEngineDefaultClusterParametersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsParametersTypeDef = TypedDict(
    "_DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsParametersTypeDef(
    _DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsParametersTypeDef
):
    """
    Type definition for `DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaults` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters``
    and ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being
      changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsTypeDef = TypedDict(
    "_DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsTypeDef",
    {
        "DBParameterGroupFamily": str,
        "Marker": str,
        "Parameters": List[
            DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsParametersTypeDef
        ],
    },
    total=False,
)


class DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsTypeDef(
    _DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsTypeDef
):
    """
    Type definition for `DescribeEngineDefaultClusterParametersPaginateResponse` `EngineDefaults`

    Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
    action.

    - **DBParameterGroupFamily** *(string) --*

      Specifies the name of the DB parameter group family that the engine default parameters
      apply to.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous EngineDefaults request. If this
      parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .

    - **Parameters** *(list) --*

      Contains a list of engine default parameters.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters``
        and ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being
          changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*
    """


_DescribeEngineDefaultClusterParametersPaginateResponseTypeDef = TypedDict(
    "_DescribeEngineDefaultClusterParametersPaginateResponseTypeDef",
    {
        "EngineDefaults": DescribeEngineDefaultClusterParametersPaginateResponseEngineDefaultsTypeDef,
        "NextToken": str,
    },
    total=False,
)


class DescribeEngineDefaultClusterParametersPaginateResponseTypeDef(
    _DescribeEngineDefaultClusterParametersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeEngineDefaultClusterParametersPaginate` `Response`

    - **EngineDefaults** *(dict) --*

      Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
      action.

      - **DBParameterGroupFamily** *(string) --*

        Specifies the name of the DB parameter group family that the engine default parameters
        apply to.

      - **Marker** *(string) --*

        An optional pagination token provided by a previous EngineDefaults request. If this
        parameter is specified, the response includes only records beyond the marker, up to the
        value specified by ``MaxRecords`` .

      - **Parameters** *(list) --*

        Contains a list of engine default parameters.

        - *(dict) --*

          This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
          ``ResetDBParameterGroup`` actions.

          This data type is used as a response element in the ``DescribeEngineDefaultParameters``
          and ``DescribeDBParameters`` actions.

          - **ParameterName** *(string) --*

            Specifies the name of the parameter.

          - **ParameterValue** *(string) --*

            Specifies the value of the parameter.

          - **Description** *(string) --*

            Provides a description of the parameter.

          - **Source** *(string) --*

            Indicates the source of the parameter value.

          - **ApplyType** *(string) --*

            Specifies the engine specific parameters type.

          - **DataType** *(string) --*

            Specifies the valid data type for the parameter.

          - **AllowedValues** *(string) --*

            Specifies the valid range of values for the parameter.

          - **IsModifiable** *(boolean) --*

            Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
            parameters have security or operational implications that prevent them from being
            changed.

          - **MinimumEngineVersion** *(string) --*

            The earliest engine version to which the parameter can apply.

          - **ApplyMethod** *(string) --*

            Indicates when to apply parameter updates.

          - **SupportedEngineModes** *(list) --*

            The valid DB engine modes.

            - *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeEngineDefaultParametersPaginateFiltersTypeDef = TypedDict(
    "_DescribeEngineDefaultParametersPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeEngineDefaultParametersPaginateFiltersTypeDef(
    _DescribeEngineDefaultParametersPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeEngineDefaultParametersPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeEngineDefaultParametersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeEngineDefaultParametersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeEngineDefaultParametersPaginatePaginationConfigTypeDef(
    _DescribeEngineDefaultParametersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeEngineDefaultParametersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeEngineDefaultParametersPaginateResponseEngineDefaultsParametersTypeDef = TypedDict(
    "_DescribeEngineDefaultParametersPaginateResponseEngineDefaultsParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
        "ApplyMethod": str,
        "SupportedEngineModes": List[str],
    },
    total=False,
)


class DescribeEngineDefaultParametersPaginateResponseEngineDefaultsParametersTypeDef(
    _DescribeEngineDefaultParametersPaginateResponseEngineDefaultsParametersTypeDef
):
    """
    Type definition for `DescribeEngineDefaultParametersPaginateResponseEngineDefaults` `Parameters`

    This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
    ``ResetDBParameterGroup`` actions.

    This data type is used as a response element in the ``DescribeEngineDefaultParameters``
    and ``DescribeDBParameters`` actions.

    - **ParameterName** *(string) --*

      Specifies the name of the parameter.

    - **ParameterValue** *(string) --*

      Specifies the value of the parameter.

    - **Description** *(string) --*

      Provides a description of the parameter.

    - **Source** *(string) --*

      Indicates the source of the parameter value.

    - **ApplyType** *(string) --*

      Specifies the engine specific parameters type.

    - **DataType** *(string) --*

      Specifies the valid data type for the parameter.

    - **AllowedValues** *(string) --*

      Specifies the valid range of values for the parameter.

    - **IsModifiable** *(boolean) --*

      Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
      parameters have security or operational implications that prevent them from being
      changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.

    - **ApplyMethod** *(string) --*

      Indicates when to apply parameter updates.

    - **SupportedEngineModes** *(list) --*

      The valid DB engine modes.

      - *(string) --*
    """


_DescribeEngineDefaultParametersPaginateResponseEngineDefaultsTypeDef = TypedDict(
    "_DescribeEngineDefaultParametersPaginateResponseEngineDefaultsTypeDef",
    {
        "DBParameterGroupFamily": str,
        "Marker": str,
        "Parameters": List[
            DescribeEngineDefaultParametersPaginateResponseEngineDefaultsParametersTypeDef
        ],
    },
    total=False,
)


class DescribeEngineDefaultParametersPaginateResponseEngineDefaultsTypeDef(
    _DescribeEngineDefaultParametersPaginateResponseEngineDefaultsTypeDef
):
    """
    Type definition for `DescribeEngineDefaultParametersPaginateResponse` `EngineDefaults`

    Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
    action.

    - **DBParameterGroupFamily** *(string) --*

      Specifies the name of the DB parameter group family that the engine default parameters
      apply to.

    - **Marker** *(string) --*

      An optional pagination token provided by a previous EngineDefaults request. If this
      parameter is specified, the response includes only records beyond the marker, up to the
      value specified by ``MaxRecords`` .

    - **Parameters** *(list) --*

      Contains a list of engine default parameters.

      - *(dict) --*

        This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
        ``ResetDBParameterGroup`` actions.

        This data type is used as a response element in the ``DescribeEngineDefaultParameters``
        and ``DescribeDBParameters`` actions.

        - **ParameterName** *(string) --*

          Specifies the name of the parameter.

        - **ParameterValue** *(string) --*

          Specifies the value of the parameter.

        - **Description** *(string) --*

          Provides a description of the parameter.

        - **Source** *(string) --*

          Indicates the source of the parameter value.

        - **ApplyType** *(string) --*

          Specifies the engine specific parameters type.

        - **DataType** *(string) --*

          Specifies the valid data type for the parameter.

        - **AllowedValues** *(string) --*

          Specifies the valid range of values for the parameter.

        - **IsModifiable** *(boolean) --*

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
          parameters have security or operational implications that prevent them from being
          changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

        - **ApplyMethod** *(string) --*

          Indicates when to apply parameter updates.

        - **SupportedEngineModes** *(list) --*

          The valid DB engine modes.

          - *(string) --*
    """


_DescribeEngineDefaultParametersPaginateResponseTypeDef = TypedDict(
    "_DescribeEngineDefaultParametersPaginateResponseTypeDef",
    {
        "EngineDefaults": DescribeEngineDefaultParametersPaginateResponseEngineDefaultsTypeDef,
        "NextToken": str,
    },
    total=False,
)


class DescribeEngineDefaultParametersPaginateResponseTypeDef(
    _DescribeEngineDefaultParametersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeEngineDefaultParametersPaginate` `Response`

    - **EngineDefaults** *(dict) --*

      Contains the result of a successful invocation of the ``DescribeEngineDefaultParameters``
      action.

      - **DBParameterGroupFamily** *(string) --*

        Specifies the name of the DB parameter group family that the engine default parameters
        apply to.

      - **Marker** *(string) --*

        An optional pagination token provided by a previous EngineDefaults request. If this
        parameter is specified, the response includes only records beyond the marker, up to the
        value specified by ``MaxRecords`` .

      - **Parameters** *(list) --*

        Contains a list of engine default parameters.

        - *(dict) --*

          This data type is used as a request parameter in the ``ModifyDBParameterGroup`` and
          ``ResetDBParameterGroup`` actions.

          This data type is used as a response element in the ``DescribeEngineDefaultParameters``
          and ``DescribeDBParameters`` actions.

          - **ParameterName** *(string) --*

            Specifies the name of the parameter.

          - **ParameterValue** *(string) --*

            Specifies the value of the parameter.

          - **Description** *(string) --*

            Provides a description of the parameter.

          - **Source** *(string) --*

            Indicates the source of the parameter value.

          - **ApplyType** *(string) --*

            Specifies the engine specific parameters type.

          - **DataType** *(string) --*

            Specifies the valid data type for the parameter.

          - **AllowedValues** *(string) --*

            Specifies the valid range of values for the parameter.

          - **IsModifiable** *(boolean) --*

            Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some
            parameters have security or operational implications that prevent them from being
            changed.

          - **MinimumEngineVersion** *(string) --*

            The earliest engine version to which the parameter can apply.

          - **ApplyMethod** *(string) --*

            Indicates when to apply parameter updates.

          - **SupportedEngineModes** *(list) --*

            The valid DB engine modes.

            - *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeEventSubscriptionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeEventSubscriptionsPaginateFiltersTypeDef(
    _DescribeEventSubscriptionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeEventSubscriptionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeEventSubscriptionsPaginatePaginationConfigTypeDef(
    _DescribeEventSubscriptionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": str,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Enabled": bool,
        "EventSubscriptionArn": str,
    },
    total=False,
)


class DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef(
    _DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginateResponse` `EventSubscriptionsList`

    Contains the results of a successful invocation of the ``DescribeEventSubscriptions``
    action.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the RDS event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The RDS event notification subscription Id.

    - **SnsTopicArn** *(string) --*

      The topic ARN of the RDS event notification subscription.

    - **Status** *(string) --*

      The status of the RDS event notification subscription.

      Constraints:

      Can be one of the following: creating | modifying | deleting | active | no-permission |
      topic-not-exist

      The status "no-permission" indicates that RDS no longer has permission to post to the SNS
      topic. The status "topic-not-exist" indicates that the topic was deleted after the
      subscription was created.

    - **SubscriptionCreationTime** *(string) --*

      The time the RDS event notification subscription was created.

    - **SourceType** *(string) --*

      The source type for the RDS event notification subscription.

    - **SourceIdsList** *(list) --*

      A list of source IDs for the RDS event notification subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      A list of event categories for the RDS event notification subscription.

      - *(string) --*

    - **Enabled** *(boolean) --*

      A Boolean value indicating if the subscription is enabled. True indicates the
      subscription is enabled.

    - **EventSubscriptionArn** *(string) --*

      The Amazon Resource Name (ARN) for the event subscription.
    """


_DescribeEventSubscriptionsPaginateResponseTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginateResponseTypeDef",
    {
        "EventSubscriptionsList": List[
            DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeEventSubscriptionsPaginateResponseTypeDef(
    _DescribeEventSubscriptionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginate` `Response`

    Data returned by the **DescribeEventSubscriptions** action.

    - **EventSubscriptionsList** *(list) --*

      A list of EventSubscriptions data types.

      - *(dict) --*

        Contains the results of a successful invocation of the ``DescribeEventSubscriptions``
        action.

        - **CustomerAwsId** *(string) --*

          The AWS customer account associated with the RDS event notification subscription.

        - **CustSubscriptionId** *(string) --*

          The RDS event notification subscription Id.

        - **SnsTopicArn** *(string) --*

          The topic ARN of the RDS event notification subscription.

        - **Status** *(string) --*

          The status of the RDS event notification subscription.

          Constraints:

          Can be one of the following: creating | modifying | deleting | active | no-permission |
          topic-not-exist

          The status "no-permission" indicates that RDS no longer has permission to post to the SNS
          topic. The status "topic-not-exist" indicates that the topic was deleted after the
          subscription was created.

        - **SubscriptionCreationTime** *(string) --*

          The time the RDS event notification subscription was created.

        - **SourceType** *(string) --*

          The source type for the RDS event notification subscription.

        - **SourceIdsList** *(list) --*

          A list of source IDs for the RDS event notification subscription.

          - *(string) --*

        - **EventCategoriesList** *(list) --*

          A list of event categories for the RDS event notification subscription.

          - *(string) --*

        - **Enabled** *(boolean) --*

          A Boolean value indicating if the subscription is enabled. True indicates the
          subscription is enabled.

        - **EventSubscriptionArn** *(string) --*

          The Amazon Resource Name (ARN) for the event subscription.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeEventsPaginateFiltersTypeDef = TypedDict(
    "_DescribeEventsPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeEventsPaginateFiltersTypeDef(_DescribeEventsPaginateFiltersTypeDef):
    """
    Type definition for `DescribeEventsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeEventsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeEventsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeEventsPaginatePaginationConfigTypeDef(
    _DescribeEventsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeEventsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeEventsPaginateResponseEventsTypeDef = TypedDict(
    "_DescribeEventsPaginateResponseEventsTypeDef",
    {
        "SourceIdentifier": str,
        "SourceType": str,
        "Message": str,
        "EventCategories": List[str],
        "Date": datetime,
        "SourceArn": str,
    },
    total=False,
)


class DescribeEventsPaginateResponseEventsTypeDef(
    _DescribeEventsPaginateResponseEventsTypeDef
):
    """
    Type definition for `DescribeEventsPaginateResponse` `Events`

    This data type is used as a response element in the ``DescribeEvents`` action.

    - **SourceIdentifier** *(string) --*

      Provides the identifier for the source of the event.

    - **SourceType** *(string) --*

      Specifies the source type for this event.

    - **Message** *(string) --*

      Provides the text of this event.

    - **EventCategories** *(list) --*

      Specifies the category for the event.

      - *(string) --*

    - **Date** *(datetime) --*

      Specifies the date and time of the event.

    - **SourceArn** *(string) --*

      The Amazon Resource Name (ARN) for the event.
    """


_DescribeEventsPaginateResponseTypeDef = TypedDict(
    "_DescribeEventsPaginateResponseTypeDef",
    {"Events": List[DescribeEventsPaginateResponseEventsTypeDef], "NextToken": str},
    total=False,
)


class DescribeEventsPaginateResponseTypeDef(_DescribeEventsPaginateResponseTypeDef):
    """
    Type definition for `DescribeEventsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeEvents`` action.

    - **Events** *(list) --*

      A list of ``Event`` instances.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeEvents`` action.

        - **SourceIdentifier** *(string) --*

          Provides the identifier for the source of the event.

        - **SourceType** *(string) --*

          Specifies the source type for this event.

        - **Message** *(string) --*

          Provides the text of this event.

        - **EventCategories** *(list) --*

          Specifies the category for the event.

          - *(string) --*

        - **Date** *(datetime) --*

          Specifies the date and time of the event.

        - **SourceArn** *(string) --*

          The Amazon Resource Name (ARN) for the event.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeGlobalClustersPaginateFiltersTypeDef = TypedDict(
    "_DescribeGlobalClustersPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeGlobalClustersPaginateFiltersTypeDef(
    _DescribeGlobalClustersPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeGlobalClustersPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeGlobalClustersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeGlobalClustersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeGlobalClustersPaginatePaginationConfigTypeDef(
    _DescribeGlobalClustersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeGlobalClustersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeGlobalClustersPaginateResponseGlobalClustersGlobalClusterMembersTypeDef = TypedDict(
    "_DescribeGlobalClustersPaginateResponseGlobalClustersGlobalClusterMembersTypeDef",
    {"DBClusterArn": str, "Readers": List[str], "IsWriter": bool},
    total=False,
)


class DescribeGlobalClustersPaginateResponseGlobalClustersGlobalClusterMembersTypeDef(
    _DescribeGlobalClustersPaginateResponseGlobalClustersGlobalClusterMembersTypeDef
):
    """
    Type definition for `DescribeGlobalClustersPaginateResponseGlobalClusters` `GlobalClusterMembers`

    A data structure with information about any primary and secondary clusters associated
    with an Aurora global database.

    - **DBClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for each Aurora cluster.

    - **Readers** *(list) --*

      The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
      the Aurora global database.

      - *(string) --*

    - **IsWriter** *(boolean) --*

      Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
      capability) for the Aurora global database with which it is associated.
    """


_DescribeGlobalClustersPaginateResponseGlobalClustersTypeDef = TypedDict(
    "_DescribeGlobalClustersPaginateResponseGlobalClustersTypeDef",
    {
        "GlobalClusterIdentifier": str,
        "GlobalClusterResourceId": str,
        "GlobalClusterArn": str,
        "Status": str,
        "Engine": str,
        "EngineVersion": str,
        "DatabaseName": str,
        "StorageEncrypted": bool,
        "DeletionProtection": bool,
        "GlobalClusterMembers": List[
            DescribeGlobalClustersPaginateResponseGlobalClustersGlobalClusterMembersTypeDef
        ],
    },
    total=False,
)


class DescribeGlobalClustersPaginateResponseGlobalClustersTypeDef(
    _DescribeGlobalClustersPaginateResponseGlobalClustersTypeDef
):
    """
    Type definition for `DescribeGlobalClustersPaginateResponse` `GlobalClusters`

    A data type representing an Aurora global database.

    - **GlobalClusterIdentifier** *(string) --*

      Contains a user-supplied global database cluster identifier. This identifier is the
      unique key that identifies a global database cluster.

    - **GlobalClusterResourceId** *(string) --*

      The AWS Region-unique, immutable identifier for the global database cluster. This
      identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
      cluster is accessed.

    - **GlobalClusterArn** *(string) --*

      The Amazon Resource Name (ARN) for the global database cluster.

    - **Status** *(string) --*

      Specifies the current state of this global database cluster.

    - **Engine** *(string) --*

      The Aurora database engine used by the global database cluster.

    - **EngineVersion** *(string) --*

      Indicates the database engine version.

    - **DatabaseName** *(string) --*

      The default database name within the new global database cluster.

    - **StorageEncrypted** *(boolean) --*

      The storage encryption setting for the global database cluster.

    - **DeletionProtection** *(boolean) --*

      The deletion protection setting for the new global database cluster.

    - **GlobalClusterMembers** *(list) --*

      The list of cluster IDs for secondary clusters within the global database cluster.
      Currently limited to 1 item.

      - *(dict) --*

        A data structure with information about any primary and secondary clusters associated
        with an Aurora global database.

        - **DBClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for each Aurora cluster.

        - **Readers** *(list) --*

          The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
          the Aurora global database.

          - *(string) --*

        - **IsWriter** *(boolean) --*

          Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
          capability) for the Aurora global database with which it is associated.
    """


_DescribeGlobalClustersPaginateResponseTypeDef = TypedDict(
    "_DescribeGlobalClustersPaginateResponseTypeDef",
    {
        "GlobalClusters": List[
            DescribeGlobalClustersPaginateResponseGlobalClustersTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeGlobalClustersPaginateResponseTypeDef(
    _DescribeGlobalClustersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeGlobalClustersPaginate` `Response`

    - **GlobalClusters** *(list) --*

      The list of global clusters returned by this request.

      - *(dict) --*

        A data type representing an Aurora global database.

        - **GlobalClusterIdentifier** *(string) --*

          Contains a user-supplied global database cluster identifier. This identifier is the
          unique key that identifies a global database cluster.

        - **GlobalClusterResourceId** *(string) --*

          The AWS Region-unique, immutable identifier for the global database cluster. This
          identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB
          cluster is accessed.

        - **GlobalClusterArn** *(string) --*

          The Amazon Resource Name (ARN) for the global database cluster.

        - **Status** *(string) --*

          Specifies the current state of this global database cluster.

        - **Engine** *(string) --*

          The Aurora database engine used by the global database cluster.

        - **EngineVersion** *(string) --*

          Indicates the database engine version.

        - **DatabaseName** *(string) --*

          The default database name within the new global database cluster.

        - **StorageEncrypted** *(boolean) --*

          The storage encryption setting for the global database cluster.

        - **DeletionProtection** *(boolean) --*

          The deletion protection setting for the new global database cluster.

        - **GlobalClusterMembers** *(list) --*

          The list of cluster IDs for secondary clusters within the global database cluster.
          Currently limited to 1 item.

          - *(dict) --*

            A data structure with information about any primary and secondary clusters associated
            with an Aurora global database.

            - **DBClusterArn** *(string) --*

              The Amazon Resource Name (ARN) for each Aurora cluster.

            - **Readers** *(list) --*

              The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
              the Aurora global database.

              - *(string) --*

            - **IsWriter** *(boolean) --*

              Specifies whether the Aurora cluster is the primary cluster (that is, has read-write
              capability) for the Aurora global database with which it is associated.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeInstallationMediaPaginateFiltersTypeDef = TypedDict(
    "_DescribeInstallationMediaPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeInstallationMediaPaginateFiltersTypeDef(
    _DescribeInstallationMediaPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeInstallationMediaPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeInstallationMediaPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeInstallationMediaPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeInstallationMediaPaginatePaginationConfigTypeDef(
    _DescribeInstallationMediaPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeInstallationMediaPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeInstallationMediaPaginateResponseInstallationMediaFailureCauseTypeDef = TypedDict(
    "_DescribeInstallationMediaPaginateResponseInstallationMediaFailureCauseTypeDef",
    {"Message": str},
    total=False,
)


class DescribeInstallationMediaPaginateResponseInstallationMediaFailureCauseTypeDef(
    _DescribeInstallationMediaPaginateResponseInstallationMediaFailureCauseTypeDef
):
    """
    Type definition for `DescribeInstallationMediaPaginateResponseInstallationMedia` `FailureCause`

    If an installation media failure occurred, the cause of the failure.

    - **Message** *(string) --*

      The reason that an installation media import failed.
    """


_DescribeInstallationMediaPaginateResponseInstallationMediaTypeDef = TypedDict(
    "_DescribeInstallationMediaPaginateResponseInstallationMediaTypeDef",
    {
        "InstallationMediaId": str,
        "CustomAvailabilityZoneId": str,
        "Engine": str,
        "EngineVersion": str,
        "EngineInstallationMediaPath": str,
        "OSInstallationMediaPath": str,
        "Status": str,
        "FailureCause": DescribeInstallationMediaPaginateResponseInstallationMediaFailureCauseTypeDef,
    },
    total=False,
)


class DescribeInstallationMediaPaginateResponseInstallationMediaTypeDef(
    _DescribeInstallationMediaPaginateResponseInstallationMediaTypeDef
):
    """
    Type definition for `DescribeInstallationMediaPaginateResponse` `InstallationMedia`

    Contains the installation media for a DB engine that requires an on-premises customer
    provided license, such as Microsoft SQL Server.

    - **InstallationMediaId** *(string) --*

      The installation medium ID.

    - **CustomAvailabilityZoneId** *(string) --*

      The custom Availability Zone (AZ) that contains the installation media.

    - **Engine** *(string) --*

      The DB engine.

    - **EngineVersion** *(string) --*

      The engine version of the DB engine.

    - **EngineInstallationMediaPath** *(string) --*

      The path to the installation medium for the DB engine.

    - **OSInstallationMediaPath** *(string) --*

      The path to the installation medium for the operating system associated with the DB
      engine.

    - **Status** *(string) --*

      The status of the installation medium.

    - **FailureCause** *(dict) --*

      If an installation media failure occurred, the cause of the failure.

      - **Message** *(string) --*

        The reason that an installation media import failed.
    """


_DescribeInstallationMediaPaginateResponseTypeDef = TypedDict(
    "_DescribeInstallationMediaPaginateResponseTypeDef",
    {
        "InstallationMedia": List[
            DescribeInstallationMediaPaginateResponseInstallationMediaTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeInstallationMediaPaginateResponseTypeDef(
    _DescribeInstallationMediaPaginateResponseTypeDef
):
    """
    Type definition for `DescribeInstallationMediaPaginate` `Response`

    - **InstallationMedia** *(list) --*

      The list of  InstallationMedia objects for the AWS account.

      - *(dict) --*

        Contains the installation media for a DB engine that requires an on-premises customer
        provided license, such as Microsoft SQL Server.

        - **InstallationMediaId** *(string) --*

          The installation medium ID.

        - **CustomAvailabilityZoneId** *(string) --*

          The custom Availability Zone (AZ) that contains the installation media.

        - **Engine** *(string) --*

          The DB engine.

        - **EngineVersion** *(string) --*

          The engine version of the DB engine.

        - **EngineInstallationMediaPath** *(string) --*

          The path to the installation medium for the DB engine.

        - **OSInstallationMediaPath** *(string) --*

          The path to the installation medium for the operating system associated with the DB
          engine.

        - **Status** *(string) --*

          The status of the installation medium.

        - **FailureCause** *(dict) --*

          If an installation media failure occurred, the cause of the failure.

          - **Message** *(string) --*

            The reason that an installation media import failed.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeOptionGroupOptionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeOptionGroupOptionsPaginateFiltersTypeDef(
    _DescribeOptionGroupOptionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeOptionGroupOptionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeOptionGroupOptionsPaginatePaginationConfigTypeDef(
    _DescribeOptionGroupOptionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef",
    {"AllowedValue": str, "MinimumEngineVersion": str},
    total=False,
)


class DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef(
    _DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettings` `MinimumEngineVersionPerAllowedValue`

    The minimum DB engine version required for each corresponding allowed value for an
    option setting.

    - **AllowedValue** *(string) --*

      The allowed value for an option setting.

    - **MinimumEngineVersion** *(string) --*

      The minimum DB engine version required for the allowed value.
    """


_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef",
    {
        "SettingName": str,
        "SettingDescription": str,
        "DefaultValue": str,
        "ApplyType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsRequired": bool,
        "MinimumEngineVersionPerAllowedValue": List[
            DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValueTypeDef
        ],
    },
    total=False,
)


class DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef(
    _DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginateResponseOptionGroupOptions` `OptionGroupOptionSettings`

    Option group option settings are used to display settings available for each option
    with their default values and other information. These values are used with the
    DescribeOptionGroupOptions action.

    - **SettingName** *(string) --*

      The name of the option group option.

    - **SettingDescription** *(string) --*

      The description of the option group option.

    - **DefaultValue** *(string) --*

      The default value for the option group option.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type for the option group option.

    - **AllowedValues** *(string) --*

      Indicates the acceptable values for the option group option.

    - **IsModifiable** *(boolean) --*

      Boolean value where true indicates that this option group option can be changed from
      the default value.

    - **IsRequired** *(boolean) --*

      Boolean value where true indicates that a value must be specified for this option
      setting of the option group option.

    - **MinimumEngineVersionPerAllowedValue** *(list) --*

      The minimum DB engine version required for the corresponding allowed value for this
      option setting.

      - *(dict) --*

        The minimum DB engine version required for each corresponding allowed value for an
        option setting.

        - **AllowedValue** *(string) --*

          The allowed value for an option setting.

        - **MinimumEngineVersion** *(string) --*

          The minimum DB engine version required for the allowed value.
    """


_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef",
    {"Version": str, "IsDefault": bool},
    total=False,
)


class DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef(
    _DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginateResponseOptionGroupOptions` `OptionGroupOptionVersions`

    The version for an option. Option group option versions are returned by the
    ``DescribeOptionGroupOptions`` action.

    - **Version** *(string) --*

      The version of the option.

    - **IsDefault** *(boolean) --*

      True if the version is the default version of the option, and otherwise false.
    """


_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsTypeDef",
    {
        "Name": str,
        "Description": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "MinimumRequiredMinorEngineVersion": str,
        "PortRequired": bool,
        "DefaultPort": int,
        "OptionsDependedOn": List[str],
        "OptionsConflictsWith": List[str],
        "Persistent": bool,
        "Permanent": bool,
        "RequiresAutoMinorEngineVersionUpgrade": bool,
        "VpcOnly": bool,
        "SupportsOptionVersionDowngrade": bool,
        "OptionGroupOptionSettings": List[
            DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionSettingsTypeDef
        ],
        "OptionGroupOptionVersions": List[
            DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsOptionGroupOptionVersionsTypeDef
        ],
    },
    total=False,
)


class DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsTypeDef(
    _DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginateResponse` `OptionGroupOptions`

    Available option.

    - **Name** *(string) --*

      The name of the option.

    - **Description** *(string) --*

      The description of the option.

    - **EngineName** *(string) --*

      The name of the engine that this option can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version that the option is available for.

    - **MinimumRequiredMinorEngineVersion** *(string) --*

      The minimum required engine version for the option to be applied.

    - **PortRequired** *(boolean) --*

      Specifies whether the option requires a port.

    - **DefaultPort** *(integer) --*

      If the option requires a port, specifies the default port for the option.

    - **OptionsDependedOn** *(list) --*

      The options that are prerequisites for this option.

      - *(string) --*

    - **OptionsConflictsWith** *(list) --*

      The options that conflict with this option.

      - *(string) --*

    - **Persistent** *(boolean) --*

      Persistent options can't be removed from an option group while DB instances are
      associated with the option group. If you disassociate all DB instances from the option
      group, your can remove the persistent option from the option group.

    - **Permanent** *(boolean) --*

      Permanent options can never be removed from an option group. An option group containing a
      permanent option can't be removed from a DB instance.

    - **RequiresAutoMinorEngineVersionUpgrade** *(boolean) --*

      If true, you must enable the Auto Minor Version Upgrade setting for your DB instance
      before you can use this option. You can enable Auto Minor Version Upgrade when you first
      create your DB instance, or by modifying your DB instance later.

    - **VpcOnly** *(boolean) --*

      If true, you can only use this option with a DB instance that is in a VPC.

    - **SupportsOptionVersionDowngrade** *(boolean) --*

      If true, you can change the option to an earlier version of the option. This only applies
      to options that have different versions available.

    - **OptionGroupOptionSettings** *(list) --*

      The option settings that are available (and the default value) for each option in an
      option group.

      - *(dict) --*

        Option group option settings are used to display settings available for each option
        with their default values and other information. These values are used with the
        DescribeOptionGroupOptions action.

        - **SettingName** *(string) --*

          The name of the option group option.

        - **SettingDescription** *(string) --*

          The description of the option group option.

        - **DefaultValue** *(string) --*

          The default value for the option group option.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type for the option group option.

        - **AllowedValues** *(string) --*

          Indicates the acceptable values for the option group option.

        - **IsModifiable** *(boolean) --*

          Boolean value where true indicates that this option group option can be changed from
          the default value.

        - **IsRequired** *(boolean) --*

          Boolean value where true indicates that a value must be specified for this option
          setting of the option group option.

        - **MinimumEngineVersionPerAllowedValue** *(list) --*

          The minimum DB engine version required for the corresponding allowed value for this
          option setting.

          - *(dict) --*

            The minimum DB engine version required for each corresponding allowed value for an
            option setting.

            - **AllowedValue** *(string) --*

              The allowed value for an option setting.

            - **MinimumEngineVersion** *(string) --*

              The minimum DB engine version required for the allowed value.

    - **OptionGroupOptionVersions** *(list) --*

      The versions that are available for the option.

      - *(dict) --*

        The version for an option. Option group option versions are returned by the
        ``DescribeOptionGroupOptions`` action.

        - **Version** *(string) --*

          The version of the option.

        - **IsDefault** *(boolean) --*

          True if the version is the default version of the option, and otherwise false.
    """


_DescribeOptionGroupOptionsPaginateResponseTypeDef = TypedDict(
    "_DescribeOptionGroupOptionsPaginateResponseTypeDef",
    {
        "OptionGroupOptions": List[
            DescribeOptionGroupOptionsPaginateResponseOptionGroupOptionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeOptionGroupOptionsPaginateResponseTypeDef(
    _DescribeOptionGroupOptionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeOptionGroupOptionsPaginate` `Response`

    - **OptionGroupOptions** *(list) --*

      List of available option group options.

      - *(dict) --*

        Available option.

        - **Name** *(string) --*

          The name of the option.

        - **Description** *(string) --*

          The description of the option.

        - **EngineName** *(string) --*

          The name of the engine that this option can be applied to.

        - **MajorEngineVersion** *(string) --*

          Indicates the major engine version that the option is available for.

        - **MinimumRequiredMinorEngineVersion** *(string) --*

          The minimum required engine version for the option to be applied.

        - **PortRequired** *(boolean) --*

          Specifies whether the option requires a port.

        - **DefaultPort** *(integer) --*

          If the option requires a port, specifies the default port for the option.

        - **OptionsDependedOn** *(list) --*

          The options that are prerequisites for this option.

          - *(string) --*

        - **OptionsConflictsWith** *(list) --*

          The options that conflict with this option.

          - *(string) --*

        - **Persistent** *(boolean) --*

          Persistent options can't be removed from an option group while DB instances are
          associated with the option group. If you disassociate all DB instances from the option
          group, your can remove the persistent option from the option group.

        - **Permanent** *(boolean) --*

          Permanent options can never be removed from an option group. An option group containing a
          permanent option can't be removed from a DB instance.

        - **RequiresAutoMinorEngineVersionUpgrade** *(boolean) --*

          If true, you must enable the Auto Minor Version Upgrade setting for your DB instance
          before you can use this option. You can enable Auto Minor Version Upgrade when you first
          create your DB instance, or by modifying your DB instance later.

        - **VpcOnly** *(boolean) --*

          If true, you can only use this option with a DB instance that is in a VPC.

        - **SupportsOptionVersionDowngrade** *(boolean) --*

          If true, you can change the option to an earlier version of the option. This only applies
          to options that have different versions available.

        - **OptionGroupOptionSettings** *(list) --*

          The option settings that are available (and the default value) for each option in an
          option group.

          - *(dict) --*

            Option group option settings are used to display settings available for each option
            with their default values and other information. These values are used with the
            DescribeOptionGroupOptions action.

            - **SettingName** *(string) --*

              The name of the option group option.

            - **SettingDescription** *(string) --*

              The description of the option group option.

            - **DefaultValue** *(string) --*

              The default value for the option group option.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type for the option group option.

            - **AllowedValues** *(string) --*

              Indicates the acceptable values for the option group option.

            - **IsModifiable** *(boolean) --*

              Boolean value where true indicates that this option group option can be changed from
              the default value.

            - **IsRequired** *(boolean) --*

              Boolean value where true indicates that a value must be specified for this option
              setting of the option group option.

            - **MinimumEngineVersionPerAllowedValue** *(list) --*

              The minimum DB engine version required for the corresponding allowed value for this
              option setting.

              - *(dict) --*

                The minimum DB engine version required for each corresponding allowed value for an
                option setting.

                - **AllowedValue** *(string) --*

                  The allowed value for an option setting.

                - **MinimumEngineVersion** *(string) --*

                  The minimum DB engine version required for the allowed value.

        - **OptionGroupOptionVersions** *(list) --*

          The versions that are available for the option.

          - *(dict) --*

            The version for an option. Option group option versions are returned by the
            ``DescribeOptionGroupOptions`` action.

            - **Version** *(string) --*

              The version of the option.

            - **IsDefault** *(boolean) --*

              True if the version is the default version of the option, and otherwise false.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeOptionGroupsPaginateFiltersTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeOptionGroupsPaginateFiltersTypeDef(
    _DescribeOptionGroupsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeOptionGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeOptionGroupsPaginatePaginationConfigTypeDef(
    _DescribeOptionGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef",
    {"DBSecurityGroupName": str, "Status": str},
    total=False,
)


class DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef(
    _DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginateResponseOptionGroupsListOptions` `DBSecurityGroupMemberships`

    This data type is used as a response element in the following actions:

    * ``ModifyDBInstance``

    * ``RebootDBInstance``

    * ``RestoreDBInstanceFromDBSnapshot``

    * ``RestoreDBInstanceToPointInTime``

    - **DBSecurityGroupName** *(string) --*

      The name of the DB security group.

    - **Status** *(string) --*

      The status of the DB security group.
    """


_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsOptionSettingsTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsOptionSettingsTypeDef",
    {
        "Name": str,
        "Value": str,
        "DefaultValue": str,
        "Description": str,
        "ApplyType": str,
        "DataType": str,
        "AllowedValues": str,
        "IsModifiable": bool,
        "IsCollection": bool,
    },
    total=False,
)


class DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsOptionSettingsTypeDef(
    _DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsOptionSettingsTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginateResponseOptionGroupsListOptions` `OptionSettings`

    Option settings are the actual settings being applied or configured for that
    option. It is used when you modify an option group or describe option groups. For
    example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
    SQLNET.ENCRYPTION_SERVER that can have several different values.

    - **Name** *(string) --*

      The name of the option that has settings that you can set.

    - **Value** *(string) --*

      The current value of the option setting.

    - **DefaultValue** *(string) --*

      The default value of the option setting.

    - **Description** *(string) --*

      The description of the option setting.

    - **ApplyType** *(string) --*

      The DB engine specific parameter type.

    - **DataType** *(string) --*

      The data type of the option setting.

    - **AllowedValues** *(string) --*

      The allowed values of the option setting.

    - **IsModifiable** *(boolean) --*

      A Boolean value that, when true, indicates the option setting can be modified
      from the default.

    - **IsCollection** *(boolean) --*

      Indicates if the option setting is part of a collection.
    """


_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef(
    _DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginateResponseOptionGroupsListOptions` `VpcSecurityGroupMemberships`

    This data type is used as a response element for queries on VPC security group
    membership.

    - **VpcSecurityGroupId** *(string) --*

      The name of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsTypeDef",
    {
        "OptionName": str,
        "OptionDescription": str,
        "Persistent": bool,
        "Permanent": bool,
        "Port": int,
        "OptionVersion": str,
        "OptionSettings": List[
            DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsOptionSettingsTypeDef
        ],
        "DBSecurityGroupMemberships": List[
            DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsDBSecurityGroupMembershipsTypeDef
        ],
        "VpcSecurityGroupMemberships": List[
            DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsVpcSecurityGroupMembershipsTypeDef
        ],
    },
    total=False,
)


class DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsTypeDef(
    _DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginateResponseOptionGroupsList` `Options`

    Option details.

    - **OptionName** *(string) --*

      The name of the option.

    - **OptionDescription** *(string) --*

      The description of the option.

    - **Persistent** *(boolean) --*

      Indicate if this option is persistent.

    - **Permanent** *(boolean) --*

      Indicate if this option is permanent.

    - **Port** *(integer) --*

      If required, the port configured for this option to use.

    - **OptionVersion** *(string) --*

      The version of the option.

    - **OptionSettings** *(list) --*

      The option settings for this option.

      - *(dict) --*

        Option settings are the actual settings being applied or configured for that
        option. It is used when you modify an option group or describe option groups. For
        example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
        SQLNET.ENCRYPTION_SERVER that can have several different values.

        - **Name** *(string) --*

          The name of the option that has settings that you can set.

        - **Value** *(string) --*

          The current value of the option setting.

        - **DefaultValue** *(string) --*

          The default value of the option setting.

        - **Description** *(string) --*

          The description of the option setting.

        - **ApplyType** *(string) --*

          The DB engine specific parameter type.

        - **DataType** *(string) --*

          The data type of the option setting.

        - **AllowedValues** *(string) --*

          The allowed values of the option setting.

        - **IsModifiable** *(boolean) --*

          A Boolean value that, when true, indicates the option setting can be modified
          from the default.

        - **IsCollection** *(boolean) --*

          Indicates if the option setting is part of a collection.

    - **DBSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this DB security group allows access to
      the port.

      - *(dict) --*

        This data type is used as a response element in the following actions:

        * ``ModifyDBInstance``

        * ``RebootDBInstance``

        * ``RestoreDBInstanceFromDBSnapshot``

        * ``RestoreDBInstanceToPointInTime``

        - **DBSecurityGroupName** *(string) --*

          The name of the DB security group.

        - **Status** *(string) --*

          The status of the DB security group.

    - **VpcSecurityGroupMemberships** *(list) --*

      If the option requires access to a port, then this VPC security group allows access
      to the port.

      - *(dict) --*

        This data type is used as a response element for queries on VPC security group
        membership.

        - **VpcSecurityGroupId** *(string) --*

          The name of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.
    """


_DescribeOptionGroupsPaginateResponseOptionGroupsListTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateResponseOptionGroupsListTypeDef",
    {
        "OptionGroupName": str,
        "OptionGroupDescription": str,
        "EngineName": str,
        "MajorEngineVersion": str,
        "Options": List[
            DescribeOptionGroupsPaginateResponseOptionGroupsListOptionsTypeDef
        ],
        "AllowsVpcAndNonVpcInstanceMemberships": bool,
        "VpcId": str,
        "OptionGroupArn": str,
    },
    total=False,
)


class DescribeOptionGroupsPaginateResponseOptionGroupsListTypeDef(
    _DescribeOptionGroupsPaginateResponseOptionGroupsListTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginateResponse` `OptionGroupsList`

    - **OptionGroupName** *(string) --*

      Specifies the name of the option group.

    - **OptionGroupDescription** *(string) --*

      Provides a description of the option group.

    - **EngineName** *(string) --*

      Indicates the name of the engine that this option group can be applied to.

    - **MajorEngineVersion** *(string) --*

      Indicates the major engine version associated with this option group.

    - **Options** *(list) --*

      Indicates what options are available in the option group.

      - *(dict) --*

        Option details.

        - **OptionName** *(string) --*

          The name of the option.

        - **OptionDescription** *(string) --*

          The description of the option.

        - **Persistent** *(boolean) --*

          Indicate if this option is persistent.

        - **Permanent** *(boolean) --*

          Indicate if this option is permanent.

        - **Port** *(integer) --*

          If required, the port configured for this option to use.

        - **OptionVersion** *(string) --*

          The version of the option.

        - **OptionSettings** *(list) --*

          The option settings for this option.

          - *(dict) --*

            Option settings are the actual settings being applied or configured for that
            option. It is used when you modify an option group or describe option groups. For
            example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
            SQLNET.ENCRYPTION_SERVER that can have several different values.

            - **Name** *(string) --*

              The name of the option that has settings that you can set.

            - **Value** *(string) --*

              The current value of the option setting.

            - **DefaultValue** *(string) --*

              The default value of the option setting.

            - **Description** *(string) --*

              The description of the option setting.

            - **ApplyType** *(string) --*

              The DB engine specific parameter type.

            - **DataType** *(string) --*

              The data type of the option setting.

            - **AllowedValues** *(string) --*

              The allowed values of the option setting.

            - **IsModifiable** *(boolean) --*

              A Boolean value that, when true, indicates the option setting can be modified
              from the default.

            - **IsCollection** *(boolean) --*

              Indicates if the option setting is part of a collection.

        - **DBSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this DB security group allows access to
          the port.

          - *(dict) --*

            This data type is used as a response element in the following actions:

            * ``ModifyDBInstance``

            * ``RebootDBInstance``

            * ``RestoreDBInstanceFromDBSnapshot``

            * ``RestoreDBInstanceToPointInTime``

            - **DBSecurityGroupName** *(string) --*

              The name of the DB security group.

            - **Status** *(string) --*

              The status of the DB security group.

        - **VpcSecurityGroupMemberships** *(list) --*

          If the option requires access to a port, then this VPC security group allows access
          to the port.

          - *(dict) --*

            This data type is used as a response element for queries on VPC security group
            membership.

            - **VpcSecurityGroupId** *(string) --*

              The name of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

    - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

      Indicates whether this option group can be applied to both VPC and non-VPC instances. The
      value ``true`` indicates the option group can be applied to both VPC and non-VPC
      instances.

    - **VpcId** *(string) --*

      If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
      **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
      option group can be applied to both VPC and non-VPC instances. If this field contains a
      value, then this option group can only be applied to instances that are in the VPC
      indicated by this field.

    - **OptionGroupArn** *(string) --*

      The Amazon Resource Name (ARN) for the option group.
    """


_DescribeOptionGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeOptionGroupsPaginateResponseTypeDef",
    {
        "OptionGroupsList": List[
            DescribeOptionGroupsPaginateResponseOptionGroupsListTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeOptionGroupsPaginateResponseTypeDef(
    _DescribeOptionGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeOptionGroupsPaginate` `Response`

    List of option groups.

    - **OptionGroupsList** *(list) --*

      List of option groups.

      - *(dict) --*

        - **OptionGroupName** *(string) --*

          Specifies the name of the option group.

        - **OptionGroupDescription** *(string) --*

          Provides a description of the option group.

        - **EngineName** *(string) --*

          Indicates the name of the engine that this option group can be applied to.

        - **MajorEngineVersion** *(string) --*

          Indicates the major engine version associated with this option group.

        - **Options** *(list) --*

          Indicates what options are available in the option group.

          - *(dict) --*

            Option details.

            - **OptionName** *(string) --*

              The name of the option.

            - **OptionDescription** *(string) --*

              The description of the option.

            - **Persistent** *(boolean) --*

              Indicate if this option is persistent.

            - **Permanent** *(boolean) --*

              Indicate if this option is permanent.

            - **Port** *(integer) --*

              If required, the port configured for this option to use.

            - **OptionVersion** *(string) --*

              The version of the option.

            - **OptionSettings** *(list) --*

              The option settings for this option.

              - *(dict) --*

                Option settings are the actual settings being applied or configured for that
                option. It is used when you modify an option group or describe option groups. For
                example, the NATIVE_NETWORK_ENCRYPTION option has a setting called
                SQLNET.ENCRYPTION_SERVER that can have several different values.

                - **Name** *(string) --*

                  The name of the option that has settings that you can set.

                - **Value** *(string) --*

                  The current value of the option setting.

                - **DefaultValue** *(string) --*

                  The default value of the option setting.

                - **Description** *(string) --*

                  The description of the option setting.

                - **ApplyType** *(string) --*

                  The DB engine specific parameter type.

                - **DataType** *(string) --*

                  The data type of the option setting.

                - **AllowedValues** *(string) --*

                  The allowed values of the option setting.

                - **IsModifiable** *(boolean) --*

                  A Boolean value that, when true, indicates the option setting can be modified
                  from the default.

                - **IsCollection** *(boolean) --*

                  Indicates if the option setting is part of a collection.

            - **DBSecurityGroupMemberships** *(list) --*

              If the option requires access to a port, then this DB security group allows access to
              the port.

              - *(dict) --*

                This data type is used as a response element in the following actions:

                * ``ModifyDBInstance``

                * ``RebootDBInstance``

                * ``RestoreDBInstanceFromDBSnapshot``

                * ``RestoreDBInstanceToPointInTime``

                - **DBSecurityGroupName** *(string) --*

                  The name of the DB security group.

                - **Status** *(string) --*

                  The status of the DB security group.

            - **VpcSecurityGroupMemberships** *(list) --*

              If the option requires access to a port, then this VPC security group allows access
              to the port.

              - *(dict) --*

                This data type is used as a response element for queries on VPC security group
                membership.

                - **VpcSecurityGroupId** *(string) --*

                  The name of the VPC security group.

                - **Status** *(string) --*

                  The status of the VPC security group.

        - **AllowsVpcAndNonVpcInstanceMemberships** *(boolean) --*

          Indicates whether this option group can be applied to both VPC and non-VPC instances. The
          value ``true`` indicates the option group can be applied to both VPC and non-VPC
          instances.

        - **VpcId** *(string) --*

          If **AllowsVpcAndNonVpcInstanceMemberships** is ``false`` , this field is blank. If
          **AllowsVpcAndNonVpcInstanceMemberships** is ``true`` and this field is blank, then this
          option group can be applied to both VPC and non-VPC instances. If this field contains a
          value, then this option group can only be applied to instances that are in the VPC
          indicated by this field.

        - **OptionGroupArn** *(string) --*

          The Amazon Resource Name (ARN) for the option group.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeOrderableDBInstanceOptionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeOrderableDBInstanceOptionsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeOrderableDBInstanceOptionsPaginateFiltersTypeDef(
    _DescribeOrderableDBInstanceOptionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeOrderableDBInstanceOptionsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeOrderableDBInstanceOptionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeOrderableDBInstanceOptionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeOrderableDBInstanceOptionsPaginatePaginationConfigTypeDef(
    _DescribeOrderableDBInstanceOptionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeOrderableDBInstanceOptionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef = TypedDict(
    "_DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef",
    {"Name": str},
    total=False,
)


class DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef(
    _DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef
):
    """
    Type definition for `DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptions` `AvailabilityZones`

    Contains Availability Zone information.

    This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

    - **Name** *(string) --*

      The name of the Availability Zone.
    """


_DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef = TypedDict(
    "_DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef",
    {"Name": str, "DefaultValue": str, "AllowedValues": str},
    total=False,
)


class DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef(
    _DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef
):
    """
    Type definition for `DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptions` `AvailableProcessorFeatures`

    Contains the available processor feature information for the DB instance class of a DB
    instance.

    For more information, see `Configuring the Processor of the DB Instance Class
    <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
    in the *Amazon RDS User Guide.*

    - **Name** *(string) --*

      The name of the processor feature. Valid names are ``coreCount`` and
      ``threadsPerCore`` .

    - **DefaultValue** *(string) --*

      The default value for the processor feature of the DB instance class.

    - **AllowedValues** *(string) --*

      The allowed values for the processor feature of the DB instance class.
    """


_DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsTypeDef = TypedDict(
    "_DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsTypeDef",
    {
        "Engine": str,
        "EngineVersion": str,
        "DBInstanceClass": str,
        "LicenseModel": str,
        "AvailabilityZones": List[
            DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailabilityZonesTypeDef
        ],
        "MultiAZCapable": bool,
        "ReadReplicaCapable": bool,
        "Vpc": bool,
        "SupportsStorageEncryption": bool,
        "StorageType": str,
        "SupportsIops": bool,
        "SupportsEnhancedMonitoring": bool,
        "SupportsIAMDatabaseAuthentication": bool,
        "SupportsPerformanceInsights": bool,
        "MinStorageSize": int,
        "MaxStorageSize": int,
        "MinIopsPerDbInstance": int,
        "MaxIopsPerDbInstance": int,
        "MinIopsPerGib": float,
        "MaxIopsPerGib": float,
        "AvailableProcessorFeatures": List[
            DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsAvailableProcessorFeaturesTypeDef
        ],
        "SupportedEngineModes": List[str],
        "SupportsStorageAutoscaling": bool,
        "SupportsKerberosAuthentication": bool,
    },
    total=False,
)


class DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsTypeDef(
    _DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsTypeDef
):
    """
    Type definition for `DescribeOrderableDBInstanceOptionsPaginateResponse` `OrderableDBInstanceOptions`

    Contains a list of available options for a DB instance.

    This data type is used as a response element in the ``DescribeOrderableDBInstanceOptions``
    action.

    - **Engine** *(string) --*

      The engine type of a DB instance.

    - **EngineVersion** *(string) --*

      The engine version of a DB instance.

    - **DBInstanceClass** *(string) --*

      The DB instance class for a DB instance.

    - **LicenseModel** *(string) --*

      The license model for a DB instance.

    - **AvailabilityZones** *(list) --*

      A list of Availability Zones for a DB instance.

      - *(dict) --*

        Contains Availability Zone information.

        This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

        - **Name** *(string) --*

          The name of the Availability Zone.

    - **MultiAZCapable** *(boolean) --*

      Indicates whether a DB instance is Multi-AZ capable.

    - **ReadReplicaCapable** *(boolean) --*

      Indicates whether a DB instance can have a Read Replica.

    - **Vpc** *(boolean) --*

      Indicates whether a DB instance is in a VPC.

    - **SupportsStorageEncryption** *(boolean) --*

      Indicates whether a DB instance supports encrypted storage.

    - **StorageType** *(string) --*

      Indicates the storage type for a DB instance.

    - **SupportsIops** *(boolean) --*

      Indicates whether a DB instance supports provisioned IOPS.

    - **SupportsEnhancedMonitoring** *(boolean) --*

      Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60
      seconds.

    - **SupportsIAMDatabaseAuthentication** *(boolean) --*

      Indicates whether a DB instance supports IAM database authentication.

    - **SupportsPerformanceInsights** *(boolean) --*

      True if a DB instance supports Performance Insights, otherwise false.

    - **MinStorageSize** *(integer) --*

      Minimum storage size for a DB instance.

    - **MaxStorageSize** *(integer) --*

      Maximum storage size for a DB instance.

    - **MinIopsPerDbInstance** *(integer) --*

      Minimum total provisioned IOPS for a DB instance.

    - **MaxIopsPerDbInstance** *(integer) --*

      Maximum total provisioned IOPS for a DB instance.

    - **MinIopsPerGib** *(float) --*

      Minimum provisioned IOPS per GiB for a DB instance.

    - **MaxIopsPerGib** *(float) --*

      Maximum provisioned IOPS per GiB for a DB instance.

    - **AvailableProcessorFeatures** *(list) --*

      A list of the available processor features for the DB instance class of a DB instance.

      - *(dict) --*

        Contains the available processor feature information for the DB instance class of a DB
        instance.

        For more information, see `Configuring the Processor of the DB Instance Class
        <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
        in the *Amazon RDS User Guide.*

        - **Name** *(string) --*

          The name of the processor feature. Valid names are ``coreCount`` and
          ``threadsPerCore`` .

        - **DefaultValue** *(string) --*

          The default value for the processor feature of the DB instance class.

        - **AllowedValues** *(string) --*

          The allowed values for the processor feature of the DB instance class.

    - **SupportedEngineModes** *(list) --*

      A list of the supported DB engine modes.

      - *(string) --*

    - **SupportsStorageAutoscaling** *(boolean) --*

      Whether or not Amazon RDS can automatically scale storage for DB instances that use the
      specified instance class.

    - **SupportsKerberosAuthentication** *(boolean) --*

      Whether a DB instance supports Kerberos Authentication.
    """


_DescribeOrderableDBInstanceOptionsPaginateResponseTypeDef = TypedDict(
    "_DescribeOrderableDBInstanceOptionsPaginateResponseTypeDef",
    {
        "OrderableDBInstanceOptions": List[
            DescribeOrderableDBInstanceOptionsPaginateResponseOrderableDBInstanceOptionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeOrderableDBInstanceOptionsPaginateResponseTypeDef(
    _DescribeOrderableDBInstanceOptionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeOrderableDBInstanceOptionsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeOrderableDBInstanceOptions``
    action.

    - **OrderableDBInstanceOptions** *(list) --*

      An ``OrderableDBInstanceOption`` structure containing information about orderable options for
      the DB instance.

      - *(dict) --*

        Contains a list of available options for a DB instance.

        This data type is used as a response element in the ``DescribeOrderableDBInstanceOptions``
        action.

        - **Engine** *(string) --*

          The engine type of a DB instance.

        - **EngineVersion** *(string) --*

          The engine version of a DB instance.

        - **DBInstanceClass** *(string) --*

          The DB instance class for a DB instance.

        - **LicenseModel** *(string) --*

          The license model for a DB instance.

        - **AvailabilityZones** *(list) --*

          A list of Availability Zones for a DB instance.

          - *(dict) --*

            Contains Availability Zone information.

            This data type is used as an element in the ``OrderableDBInstanceOption`` data type.

            - **Name** *(string) --*

              The name of the Availability Zone.

        - **MultiAZCapable** *(boolean) --*

          Indicates whether a DB instance is Multi-AZ capable.

        - **ReadReplicaCapable** *(boolean) --*

          Indicates whether a DB instance can have a Read Replica.

        - **Vpc** *(boolean) --*

          Indicates whether a DB instance is in a VPC.

        - **SupportsStorageEncryption** *(boolean) --*

          Indicates whether a DB instance supports encrypted storage.

        - **StorageType** *(string) --*

          Indicates the storage type for a DB instance.

        - **SupportsIops** *(boolean) --*

          Indicates whether a DB instance supports provisioned IOPS.

        - **SupportsEnhancedMonitoring** *(boolean) --*

          Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60
          seconds.

        - **SupportsIAMDatabaseAuthentication** *(boolean) --*

          Indicates whether a DB instance supports IAM database authentication.

        - **SupportsPerformanceInsights** *(boolean) --*

          True if a DB instance supports Performance Insights, otherwise false.

        - **MinStorageSize** *(integer) --*

          Minimum storage size for a DB instance.

        - **MaxStorageSize** *(integer) --*

          Maximum storage size for a DB instance.

        - **MinIopsPerDbInstance** *(integer) --*

          Minimum total provisioned IOPS for a DB instance.

        - **MaxIopsPerDbInstance** *(integer) --*

          Maximum total provisioned IOPS for a DB instance.

        - **MinIopsPerGib** *(float) --*

          Minimum provisioned IOPS per GiB for a DB instance.

        - **MaxIopsPerGib** *(float) --*

          Maximum provisioned IOPS per GiB for a DB instance.

        - **AvailableProcessorFeatures** *(list) --*

          A list of the available processor features for the DB instance class of a DB instance.

          - *(dict) --*

            Contains the available processor feature information for the DB instance class of a DB
            instance.

            For more information, see `Configuring the Processor of the DB Instance Class
            <https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor>`__
            in the *Amazon RDS User Guide.*

            - **Name** *(string) --*

              The name of the processor feature. Valid names are ``coreCount`` and
              ``threadsPerCore`` .

            - **DefaultValue** *(string) --*

              The default value for the processor feature of the DB instance class.

            - **AllowedValues** *(string) --*

              The allowed values for the processor feature of the DB instance class.

        - **SupportedEngineModes** *(list) --*

          A list of the supported DB engine modes.

          - *(string) --*

        - **SupportsStorageAutoscaling** *(boolean) --*

          Whether or not Amazon RDS can automatically scale storage for DB instances that use the
          specified instance class.

        - **SupportsKerberosAuthentication** *(boolean) --*

          Whether a DB instance supports Kerberos Authentication.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribePendingMaintenanceActionsPaginateFiltersTypeDef = TypedDict(
    "_DescribePendingMaintenanceActionsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribePendingMaintenanceActionsPaginateFiltersTypeDef(
    _DescribePendingMaintenanceActionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribePendingMaintenanceActionsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribePendingMaintenanceActionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribePendingMaintenanceActionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribePendingMaintenanceActionsPaginatePaginationConfigTypeDef(
    _DescribePendingMaintenanceActionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribePendingMaintenanceActionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef = TypedDict(
    "_DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef",
    {
        "Action": str,
        "AutoAppliedAfterDate": datetime,
        "ForcedApplyDate": datetime,
        "OptInStatus": str,
        "CurrentApplyDate": datetime,
        "Description": str,
    },
    total=False,
)


class DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef(
    _DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef
):
    """
    Type definition for `DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActions` `PendingMaintenanceActionDetails`

    Provides information about a pending maintenance action for a resource.

    - **Action** *(string) --*

      The type of pending maintenance action that is available for the resource. Valid
      actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

    - **AutoAppliedAfterDate** *(datetime) --*

      The date of the maintenance window when the action is applied. The maintenance action
      is applied to the resource during its first maintenance window after this date.

    - **ForcedApplyDate** *(datetime) --*

      The date when the maintenance action is automatically applied. The maintenance action
      is applied to the resource on this date regardless of the maintenance window for the
      resource.

    - **OptInStatus** *(string) --*

      Indicates the type of opt-in request that has been received for the resource.

    - **CurrentApplyDate** *(datetime) --*

      The effective date when the pending maintenance action is applied to the resource.
      This date takes into account opt-in requests received from the
      ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
      ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
      and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

    - **Description** *(string) --*

      A description providing more detail about the maintenance action.
    """


_DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsTypeDef = TypedDict(
    "_DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsTypeDef",
    {
        "ResourceIdentifier": str,
        "PendingMaintenanceActionDetails": List[
            DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsPendingMaintenanceActionDetailsTypeDef
        ],
    },
    total=False,
)


class DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsTypeDef(
    _DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsTypeDef
):
    """
    Type definition for `DescribePendingMaintenanceActionsPaginateResponse` `PendingMaintenanceActions`

    Describes the pending maintenance actions for a resource.

    - **ResourceIdentifier** *(string) --*

      The ARN of the resource that has pending maintenance actions.

    - **PendingMaintenanceActionDetails** *(list) --*

      A list that provides details about the pending maintenance actions for the resource.

      - *(dict) --*

        Provides information about a pending maintenance action for a resource.

        - **Action** *(string) --*

          The type of pending maintenance action that is available for the resource. Valid
          actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

        - **AutoAppliedAfterDate** *(datetime) --*

          The date of the maintenance window when the action is applied. The maintenance action
          is applied to the resource during its first maintenance window after this date.

        - **ForcedApplyDate** *(datetime) --*

          The date when the maintenance action is automatically applied. The maintenance action
          is applied to the resource on this date regardless of the maintenance window for the
          resource.

        - **OptInStatus** *(string) --*

          Indicates the type of opt-in request that has been received for the resource.

        - **CurrentApplyDate** *(datetime) --*

          The effective date when the pending maintenance action is applied to the resource.
          This date takes into account opt-in requests received from the
          ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
          ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
          and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

        - **Description** *(string) --*

          A description providing more detail about the maintenance action.
    """


_DescribePendingMaintenanceActionsPaginateResponseTypeDef = TypedDict(
    "_DescribePendingMaintenanceActionsPaginateResponseTypeDef",
    {
        "PendingMaintenanceActions": List[
            DescribePendingMaintenanceActionsPaginateResponsePendingMaintenanceActionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribePendingMaintenanceActionsPaginateResponseTypeDef(
    _DescribePendingMaintenanceActionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribePendingMaintenanceActionsPaginate` `Response`

    Data returned from the **DescribePendingMaintenanceActions** action.

    - **PendingMaintenanceActions** *(list) --*

      A list of the pending maintenance actions for the resource.

      - *(dict) --*

        Describes the pending maintenance actions for a resource.

        - **ResourceIdentifier** *(string) --*

          The ARN of the resource that has pending maintenance actions.

        - **PendingMaintenanceActionDetails** *(list) --*

          A list that provides details about the pending maintenance actions for the resource.

          - *(dict) --*

            Provides information about a pending maintenance action for a resource.

            - **Action** *(string) --*

              The type of pending maintenance action that is available for the resource. Valid
              actions are ``system-update`` , ``db-upgrade`` , and ``hardware-maintenance`` .

            - **AutoAppliedAfterDate** *(datetime) --*

              The date of the maintenance window when the action is applied. The maintenance action
              is applied to the resource during its first maintenance window after this date.

            - **ForcedApplyDate** *(datetime) --*

              The date when the maintenance action is automatically applied. The maintenance action
              is applied to the resource on this date regardless of the maintenance window for the
              resource.

            - **OptInStatus** *(string) --*

              Indicates the type of opt-in request that has been received for the resource.

            - **CurrentApplyDate** *(datetime) --*

              The effective date when the pending maintenance action is applied to the resource.
              This date takes into account opt-in requests received from the
              ``ApplyPendingMaintenanceAction`` API, the ``AutoAppliedAfterDate`` , and the
              ``ForcedApplyDate`` . This value is blank if an opt-in request has not been received
              and nothing has been specified as ``AutoAppliedAfterDate`` or ``ForcedApplyDate`` .

            - **Description** *(string) --*

              A description providing more detail about the maintenance action.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeReservedDBInstancesOfferingsPaginateFiltersTypeDef = TypedDict(
    "_DescribeReservedDBInstancesOfferingsPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeReservedDBInstancesOfferingsPaginateFiltersTypeDef(
    _DescribeReservedDBInstancesOfferingsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesOfferingsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeReservedDBInstancesOfferingsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeReservedDBInstancesOfferingsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeReservedDBInstancesOfferingsPaginatePaginationConfigTypeDef(
    _DescribeReservedDBInstancesOfferingsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesOfferingsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsRecurringChargesTypeDef = TypedDict(
    "_DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsRecurringChargesTypeDef(
    _DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsRecurringChargesTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferings` `RecurringCharges`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``DescribeReservedDBInstancesOfferings`` actions.

    - **RecurringChargeAmount** *(float) --*

      The amount of the recurring charge.

    - **RecurringChargeFrequency** *(string) --*

      The frequency of the recurring charge.
    """


_DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsTypeDef = TypedDict(
    "_DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsTypeDef",
    {
        "ReservedDBInstancesOfferingId": str,
        "DBInstanceClass": str,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "ProductDescription": str,
        "OfferingType": str,
        "MultiAZ": bool,
        "RecurringCharges": List[
            DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsRecurringChargesTypeDef
        ],
    },
    total=False,
)


class DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsTypeDef(
    _DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesOfferingsPaginateResponse` `ReservedDBInstancesOfferings`

    This data type is used as a response element in the
    ``DescribeReservedDBInstancesOfferings`` action.

    - **ReservedDBInstancesOfferingId** *(string) --*

      The offering identifier.

    - **DBInstanceClass** *(string) --*

      The DB instance class for the reserved DB instance.

    - **Duration** *(integer) --*

      The duration of the offering in seconds.

    - **FixedPrice** *(float) --*

      The fixed price charged for this offering.

    - **UsagePrice** *(float) --*

      The hourly price charged for this offering.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved DB instance offering.

    - **ProductDescription** *(string) --*

      The database engine used by the offering.

    - **OfferingType** *(string) --*

      The offering type.

    - **MultiAZ** *(boolean) --*

      Indicates if the offering applies to Multi-AZ deployments.

    - **RecurringCharges** *(list) --*

      The recurring price charged to run this reserved DB instance.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``DescribeReservedDBInstancesOfferings`` actions.

        - **RecurringChargeAmount** *(float) --*

          The amount of the recurring charge.

        - **RecurringChargeFrequency** *(string) --*

          The frequency of the recurring charge.
    """


_DescribeReservedDBInstancesOfferingsPaginateResponseTypeDef = TypedDict(
    "_DescribeReservedDBInstancesOfferingsPaginateResponseTypeDef",
    {
        "ReservedDBInstancesOfferings": List[
            DescribeReservedDBInstancesOfferingsPaginateResponseReservedDBInstancesOfferingsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeReservedDBInstancesOfferingsPaginateResponseTypeDef(
    _DescribeReservedDBInstancesOfferingsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesOfferingsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeReservedDBInstancesOfferings``
    action.

    - **ReservedDBInstancesOfferings** *(list) --*

      A list of reserved DB instance offerings.

      - *(dict) --*

        This data type is used as a response element in the
        ``DescribeReservedDBInstancesOfferings`` action.

        - **ReservedDBInstancesOfferingId** *(string) --*

          The offering identifier.

        - **DBInstanceClass** *(string) --*

          The DB instance class for the reserved DB instance.

        - **Duration** *(integer) --*

          The duration of the offering in seconds.

        - **FixedPrice** *(float) --*

          The fixed price charged for this offering.

        - **UsagePrice** *(float) --*

          The hourly price charged for this offering.

        - **CurrencyCode** *(string) --*

          The currency code for the reserved DB instance offering.

        - **ProductDescription** *(string) --*

          The database engine used by the offering.

        - **OfferingType** *(string) --*

          The offering type.

        - **MultiAZ** *(boolean) --*

          Indicates if the offering applies to Multi-AZ deployments.

        - **RecurringCharges** *(list) --*

          The recurring price charged to run this reserved DB instance.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeReservedDBInstances`` and
            ``DescribeReservedDBInstancesOfferings`` actions.

            - **RecurringChargeAmount** *(float) --*

              The amount of the recurring charge.

            - **RecurringChargeFrequency** *(string) --*

              The frequency of the recurring charge.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeReservedDBInstancesPaginateFiltersTypeDef = TypedDict(
    "_DescribeReservedDBInstancesPaginateFiltersTypeDef",
    {"Name": str, "Values": List[str]},
)


class DescribeReservedDBInstancesPaginateFiltersTypeDef(
    _DescribeReservedDBInstancesPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeReservedDBInstancesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeReservedDBInstancesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeReservedDBInstancesPaginatePaginationConfigTypeDef(
    _DescribeReservedDBInstancesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeReservedDBInstancesPaginateResponseReservedDBInstancesRecurringChargesTypeDef = TypedDict(
    "_DescribeReservedDBInstancesPaginateResponseReservedDBInstancesRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class DescribeReservedDBInstancesPaginateResponseReservedDBInstancesRecurringChargesTypeDef(
    _DescribeReservedDBInstancesPaginateResponseReservedDBInstancesRecurringChargesTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesPaginateResponseReservedDBInstances` `RecurringCharges`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``DescribeReservedDBInstancesOfferings`` actions.

    - **RecurringChargeAmount** *(float) --*

      The amount of the recurring charge.

    - **RecurringChargeFrequency** *(string) --*

      The frequency of the recurring charge.
    """


_DescribeReservedDBInstancesPaginateResponseReservedDBInstancesTypeDef = TypedDict(
    "_DescribeReservedDBInstancesPaginateResponseReservedDBInstancesTypeDef",
    {
        "ReservedDBInstanceId": str,
        "ReservedDBInstancesOfferingId": str,
        "DBInstanceClass": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "DBInstanceCount": int,
        "ProductDescription": str,
        "OfferingType": str,
        "MultiAZ": bool,
        "State": str,
        "RecurringCharges": List[
            DescribeReservedDBInstancesPaginateResponseReservedDBInstancesRecurringChargesTypeDef
        ],
        "ReservedDBInstanceArn": str,
        "LeaseId": str,
    },
    total=False,
)


class DescribeReservedDBInstancesPaginateResponseReservedDBInstancesTypeDef(
    _DescribeReservedDBInstancesPaginateResponseReservedDBInstancesTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesPaginateResponse` `ReservedDBInstances`

    This data type is used as a response element in the ``DescribeReservedDBInstances`` and
    ``PurchaseReservedDBInstancesOffering`` actions.

    - **ReservedDBInstanceId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedDBInstancesOfferingId** *(string) --*

      The offering identifier.

    - **DBInstanceClass** *(string) --*

      The DB instance class for the reserved DB instance.

    - **StartTime** *(datetime) --*

      The time the reservation started.

    - **Duration** *(integer) --*

      The duration of the reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed price charged for this reserved DB instance.

    - **UsagePrice** *(float) --*

      The hourly price charged for this reserved DB instance.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved DB instance.

    - **DBInstanceCount** *(integer) --*

      The number of reserved DB instances.

    - **ProductDescription** *(string) --*

      The description of the reserved DB instance.

    - **OfferingType** *(string) --*

      The offering type of this reserved DB instance.

    - **MultiAZ** *(boolean) --*

      Indicates if the reservation applies to Multi-AZ deployments.

    - **State** *(string) --*

      The state of the reserved DB instance.

    - **RecurringCharges** *(list) --*

      The recurring price charged to run this reserved DB instance.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``DescribeReservedDBInstancesOfferings`` actions.

        - **RecurringChargeAmount** *(float) --*

          The amount of the recurring charge.

        - **RecurringChargeFrequency** *(string) --*

          The frequency of the recurring charge.

    - **ReservedDBInstanceArn** *(string) --*

      The Amazon Resource Name (ARN) for the reserved DB instance.

    - **LeaseId** *(string) --*

      The unique identifier for the lease associated with the reserved DB instance.

      .. note::

        AWS Support might request the lease ID for an issue related to a reserved DB instance.
    """


_DescribeReservedDBInstancesPaginateResponseTypeDef = TypedDict(
    "_DescribeReservedDBInstancesPaginateResponseTypeDef",
    {
        "ReservedDBInstances": List[
            DescribeReservedDBInstancesPaginateResponseReservedDBInstancesTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeReservedDBInstancesPaginateResponseTypeDef(
    _DescribeReservedDBInstancesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeReservedDBInstancesPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeReservedDBInstances`` action.

    - **ReservedDBInstances** *(list) --*

      A list of reserved DB instances.

      - *(dict) --*

        This data type is used as a response element in the ``DescribeReservedDBInstances`` and
        ``PurchaseReservedDBInstancesOffering`` actions.

        - **ReservedDBInstanceId** *(string) --*

          The unique identifier for the reservation.

        - **ReservedDBInstancesOfferingId** *(string) --*

          The offering identifier.

        - **DBInstanceClass** *(string) --*

          The DB instance class for the reserved DB instance.

        - **StartTime** *(datetime) --*

          The time the reservation started.

        - **Duration** *(integer) --*

          The duration of the reservation in seconds.

        - **FixedPrice** *(float) --*

          The fixed price charged for this reserved DB instance.

        - **UsagePrice** *(float) --*

          The hourly price charged for this reserved DB instance.

        - **CurrencyCode** *(string) --*

          The currency code for the reserved DB instance.

        - **DBInstanceCount** *(integer) --*

          The number of reserved DB instances.

        - **ProductDescription** *(string) --*

          The description of the reserved DB instance.

        - **OfferingType** *(string) --*

          The offering type of this reserved DB instance.

        - **MultiAZ** *(boolean) --*

          Indicates if the reservation applies to Multi-AZ deployments.

        - **State** *(string) --*

          The state of the reserved DB instance.

        - **RecurringCharges** *(list) --*

          The recurring price charged to run this reserved DB instance.

          - *(dict) --*

            This data type is used as a response element in the ``DescribeReservedDBInstances`` and
            ``DescribeReservedDBInstancesOfferings`` actions.

            - **RecurringChargeAmount** *(float) --*

              The amount of the recurring charge.

            - **RecurringChargeFrequency** *(string) --*

              The frequency of the recurring charge.

        - **ReservedDBInstanceArn** *(string) --*

          The Amazon Resource Name (ARN) for the reserved DB instance.

        - **LeaseId** *(string) --*

          The unique identifier for the lease associated with the reserved DB instance.

          .. note::

            AWS Support might request the lease ID for an issue related to a reserved DB instance.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeSourceRegionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeSourceRegionsPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeSourceRegionsPaginateFiltersTypeDef(
    _DescribeSourceRegionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeSourceRegionsPaginate` `Filters`

    A filter name and value pair that is used to return a more specific list of results from a
    describe operation. Filters can be used to match a set of resources by specific criteria, such
    as IDs. The filters supported by a describe operation are documented with the describe
    operation.

    .. note::

      Currently, wildcards are not supported in filters.

    The following actions can be filtered:

    * ``DescribeDBClusterBacktracks``

    * ``DescribeDBClusterEndpoints``

    * ``DescribeDBClusters``

    * ``DescribeDBInstances``

    * ``DescribePendingMaintenanceActions``

    - **Name** *(string) --* **[REQUIRED]**

      The name of the filter. Filter names are case-sensitive.

    - **Values** *(list) --* **[REQUIRED]**

      One or more filter values. Filter values are case-sensitive.

      - *(string) --*
    """


_DescribeSourceRegionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeSourceRegionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeSourceRegionsPaginatePaginationConfigTypeDef(
    _DescribeSourceRegionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeSourceRegionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeSourceRegionsPaginateResponseSourceRegionsTypeDef = TypedDict(
    "_DescribeSourceRegionsPaginateResponseSourceRegionsTypeDef",
    {"RegionName": str, "Endpoint": str, "Status": str},
    total=False,
)


class DescribeSourceRegionsPaginateResponseSourceRegionsTypeDef(
    _DescribeSourceRegionsPaginateResponseSourceRegionsTypeDef
):
    """
    Type definition for `DescribeSourceRegionsPaginateResponse` `SourceRegions`

    Contains an AWS Region name as the result of a successful call to the
    ``DescribeSourceRegions`` action.

    - **RegionName** *(string) --*

      The name of the source AWS Region.

    - **Endpoint** *(string) --*

      The endpoint for the source AWS Region endpoint.

    - **Status** *(string) --*

      The status of the source AWS Region.
    """


_DescribeSourceRegionsPaginateResponseTypeDef = TypedDict(
    "_DescribeSourceRegionsPaginateResponseTypeDef",
    {
        "SourceRegions": List[
            DescribeSourceRegionsPaginateResponseSourceRegionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeSourceRegionsPaginateResponseTypeDef(
    _DescribeSourceRegionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeSourceRegionsPaginate` `Response`

    Contains the result of a successful invocation of the ``DescribeSourceRegions`` action.

    - **SourceRegions** *(list) --*

      A list of SourceRegion instances that contains each source AWS Region that the current AWS
      Region can get a Read Replica or a DB snapshot from.

      - *(dict) --*

        Contains an AWS Region name as the result of a successful call to the
        ``DescribeSourceRegions`` action.

        - **RegionName** *(string) --*

          The name of the source AWS Region.

        - **Endpoint** *(string) --*

          The endpoint for the source AWS Region endpoint.

        - **Status** *(string) --*

          The status of the source AWS Region.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DownloadDBLogFilePortionPaginatePaginationConfigTypeDef = TypedDict(
    "_DownloadDBLogFilePortionPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DownloadDBLogFilePortionPaginatePaginationConfigTypeDef(
    _DownloadDBLogFilePortionPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DownloadDBLogFilePortionPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DownloadDBLogFilePortionPaginateResponseTypeDef = TypedDict(
    "_DownloadDBLogFilePortionPaginateResponseTypeDef",
    {"LogFileData": str, "AdditionalDataPending": bool, "NextToken": str},
    total=False,
)


class DownloadDBLogFilePortionPaginateResponseTypeDef(
    _DownloadDBLogFilePortionPaginateResponseTypeDef
):
    """
    Type definition for `DownloadDBLogFilePortionPaginate` `Response`

    This data type is used as a response element to ``DownloadDBLogFilePortion`` .

    - **LogFileData** *(string) --*

      Entries from the specified log file.

    - **AdditionalDataPending** *(boolean) --*

      Boolean value that if true, indicates there is more data to be downloaded.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """
