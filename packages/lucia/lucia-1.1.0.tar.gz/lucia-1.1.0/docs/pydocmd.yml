site_name: "Lucia Documentation"

# This tells pydocmd which pages to generate from which Python modules,
# functions and classes. At the first level is the page name, below that
# is a tree of Python member names (modules, classes, etc.) that should be
# documented. Higher indentation leads to smaller header size.
generate:
- api/lucia.md:
  - lucia++
  - lucia.data++
  - lucia.output++
  - lucia.packfile++
- api/lucia.ui.md:
  - lucia.ui++
  - lucia.ui.menu++
  - lucia.ui.menu2++
  - lucia.ui.virtualinput++
- api/lucia.utils.md:
  - lucia.utils++
  - lucia.utils.instance_checker++
  - lucia.utils.network++
  - lucia.utils.number_to_words++
  - lucia.utils.rotation++
  - lucia.utils.timer++


# MkDocs pages configuration. The `<<` operator is sugar added by pydocmd
# that allows you to use an external Markdown file (eg. your project's README)
# in the documentation. The path must be relative to current working directory.
pages:
- Home: index.md << ../README.md
- cli: cli.md
- api:
  - lucia: api/lucia.md
  - ui: api/lucia.ui.md
  - utils: api/lucia.utils.md

# Additional search path for your Python module. If you use Pydocmd from a
# subdirectory of your project (eg. docs/), you may want to add the parent
# directory here.
additional_search_paths:
- ..lucia