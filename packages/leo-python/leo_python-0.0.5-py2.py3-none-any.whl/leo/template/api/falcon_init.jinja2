from typing import Mapping, Any

import falcon
import falcon_marshmallow
import falcon_swagger_ui
import apispec
from apispec.ext.marshmallow import MarshmallowPlugin
from falcon_apispec import FalconPlugin
import json

from .api import {{ name }}App, RequestSchema, ResponseSchema

{% if use_prometheus %}
from .metrics import Metrics
{% endif %}


application = falcon.API(
    middleware=[
        falcon_marshmallow.Marshmallow()
    ]
)


falcon_swagger_ui.register_swaggerui_app(application, '/api', '/api/spec.json', '{{ name }} API Documentation')
spec = apispec.APISpec(title='{{ name }} API', version='{{ version }}', openapi_version='3.0.2',
                       plugins=[FalconPlugin(application), MarshmallowPlugin()])


class _ApiDocs:
    """
    An API endpoint for the Swagger documentation.
    """
    def on_get(self, req, resp):
        """
        Get the OpenAPI specification.
        """
        resp.body = json.dumps(spec.to_dict())


ApiDocs = _ApiDocs()
application.add_route('/api/spec.json', ApiDocs)
spec.path(resource=ApiDocs)

application.add_route('/model/{{ module_name }}', {{ name }}App)
spec.components.schema('{{ name }}-Request', schema=RequestSchema)
spec.components.schema('{{ name }}-Response', schema=ResponseSchema)
spec.path(resource={{ name }}App)

{% if use_prometheus %}
application.add_route('/metrics', Metrics)
spec.path(resource=Metrics)
{% endif %}
