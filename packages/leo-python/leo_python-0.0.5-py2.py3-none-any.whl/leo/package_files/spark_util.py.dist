from pyspark import SparkConf
from pyspark.sql import SparkSession
from threading import Lock
from .config import *


class SparkUtil:

    def __init__(self):
        self._spark = None
        self._lock = Lock()

    def get_spark_session(self):
        """
        Get the Spark Session object. If the session has not yet been initialized, this method will attempt
        to initialize it using the parameters from the config.py file.
        :return: The (initialized) Spark Session
        """
        if self._spark is None:
            with self._lock:
                _spark_conf = SparkConf(loadDefaults=spark_config_include_defaults)
                _spark_conf.setAppName(spark_app_name)
                _spark_conf.setMaster(spark_master)
                _spark_conf.setAll(spark_config)
                session_builder = SparkSession.builder.config(conf=_spark_conf)
                if spark_hive_support:
                    session_builder.enableHiveSupport()
                self._spark = session_builder.getOrCreate()
        return self._spark
