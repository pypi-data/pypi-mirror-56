CHANGES
=======

v0.1.4
------

* Add version badges
* Don't emit a DataType declaration for literal data types
* Several fixes on literal representation

v0.1.3
------

* Update dependencies

v0.1.1
------

* More work on singleton property

v0.1.0
------

* Fix issue in SubObjectPropertyOf RDF emission
* Fix issues where BNode parsing stopped working
* Implemented to\_rdf for SubObjectPropertyOf, ObjectPropertyDomain, FunctionalObjectProperty and InverseFunctionalObjectProperty
* Add a Pizza Ontology example to the basics notebook
* Add functional image of the pizza ontology for testing purposes
* Set theme jekyll-theme-minimal
* Creating documentation directory
* Added RDF for ObjectPropertyChain
* Using mmem for file load
* Some attempts at performance improvement
* Add OwlDocument back into the picture
* Make the to\_rdf more efficient in EquivalentClasses
* Implementation of to\_rdf in ObjectHasSelf, ObjectSomeValuesFrom, ObjectAllValuesFrom
* Implementation of to\_rdf in ObjectOneOf, ObjectUnionOf and EquivalentClasses
* Refactor as\_rdf to to\_rdf methods
* Complete and document owl2 test suite
* Add subclass to equivalent sample
* OWL2 Test Suite now running on RDF
* Uncommented test assertion section
* Added the RDF comparison component of the test
* Passes all unit tests w/ exception of 10 owl2 test cases
* Passes 483 out of 493 tests in the test suite
* Remove old test case
* Checkpoint
* Implemented assertion.py rdf functions and tests
* Converted the OWL 2 test suite into functional/owl entries
* Added Oscar
* Owl in a bucket.  Nuff said
* Adding start of implementation notes section
* Further annotation work
* Add test for multiple different individuals
* Implemented DifferentIndividuals() function in assertions.py along with test cases in test\_assertions.py
* Add sample RDF emitter for assertions/SameIndividual
* Checkpoint -- functional parser more or less works
* Implement to\_rdf on ObjectHasValue
* Implement Import to\_rdf
* Renamed basics.py to pizza.py
* Enhancements
* Checkpoint
* First cut at functional syntax --> pyfun
* Switch to lower case file names
* Checkpoint -- more tweaks and bug fixes, test skeletons in place
* Checkpoint - ClassAxioms pass basic unit tests
* Checkpoint -- passes all existing unit tests
* Add CC0 license
* Add jetbrains artifacts to gitignore
* Initial drop.  Ideas sort of fleshed out, bits of it almost work
* Initial commit
