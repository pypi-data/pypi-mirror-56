{"version":3,"sources":["webpack:///./rijkshuisstijl/js/components/form/input-filepicker.js"],"names":["InputFilePicker","node","this","input","previousElementSibling","bindEvents","files","length","name","addEventListener","update","bind","textContent","getFileName","INPUT_FILEPICKERS","forEach"],"mappings":"yRAOMA,E,WAKF,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EAGZC,KAAKC,MAAQD,KAAKD,KAAKG,uBAEvBF,KAAKG,a,6DAQL,OAAIH,KAAKC,MAAMG,MAAMC,OACVL,KAAKC,MAAMG,MAAM,GAAGE,KAExB,K,mCAOPN,KAAKC,MAAMM,iBAAiB,SAAUP,KAAKQ,OAAOC,KAAKT,S,+BAOvDA,KAAKD,KAAKW,YAAcV,KAAKW,mB,mCAMjCC,I,iUAAmBC,QAAQ,SAAAd,GAAI,OAAI,IAAID,EAAgBC","file":"input-filepicker.bundle.js","sourcesContent":["import {INPUT_FILEPICKERS} from './constants';\n\n\n/**\n * Updates label on input file picker.\n * @class\n */\nclass InputFilePicker {\n    /**\n     * Constructor method.\n     * @param {HTMLLabelElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLLabelElement} */\n        this.node = node;\n\n        /** @type {HTMLInputElement} */\n        this.input = this.node.previousElementSibling;\n\n        this.bindEvents();\n    }\n\n    /**\n     * Returns the name of the selected file or an empty string.\n     * @return {string}\n     */\n    getFileName() {\n        if (this.input.files.length) {\n            return this.input.files[0].name;\n        }\n        return '';\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        this.input.addEventListener('change', this.update.bind(this));\n    }\n\n    /**\n     * Updates the textcontent of the input file picker with the input's selected file name.\n     */\n    update() {\n        this.node.textContent = this.getFileName();\n    }\n}\n\n\n// START!\n[...INPUT_FILEPICKERS].forEach(node => new InputFilePicker(node));\n"],"sourceRoot":""}