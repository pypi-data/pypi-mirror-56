# -*- coding: utf-8 -*-
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stellarstation/api/v1/stellarstation.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from stellarstation.api.v1.orbit import orbit_pb2 as stellarstation_dot_api_dot_v1_dot_orbit_dot_orbit__pb2
from stellarstation.api.v1.radio import radio_pb2 as stellarstation_dot_api_dot_v1_dot_radio_dot_radio__pb2
from stellarstation.api.v1 import transport_pb2 as stellarstation_dot_api_dot_v1_dot_transport__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='stellarstation/api/v1/stellarstation.proto',
  package='stellarstation.api.v1',
  syntax='proto3',
  serialized_options=_b('\n\031com.stellarstation.api.v1B\023StellarstationProtoP\001Z2github.com/infostellarinc/go-stellarstation/api/v1'),
  serialized_pb=_b('\n*stellarstation/api/v1/stellarstation.proto\x12\x15stellarstation.api.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\'stellarstation/api/v1/orbit/orbit.proto\x1a\'stellarstation/api/v1/radio/radio.proto\x1a%stellarstation/api/v1/transport.proto\"\xfb\x02\n\x16SatelliteStreamRequest\x12\x14\n\x0csatellite_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x15\n\renable_events\x18\x05 \x01(\x08\x12\x12\n\nrequest_id\x18\x06 \x01(\t\x12^\n\x1fsend_satellite_commands_request\x18\x03 \x01(\x0b\x32\x33.stellarstation.api.v1.SendSatelliteCommandsRequestH\x00\x12h\n$ground_station_configuration_request\x18\x07 \x01(\x0b\x32\x38.stellarstation.api.v1.GroundStationConfigurationRequestH\x00\x12\x38\n\x10\x61\x63\x63\x65pted_framing\x18\x04 \x03(\x0e\x32\x1e.stellarstation.api.v1.FramingB\t\n\x07Request\"G\n\x1cSendSatelliteCommandsRequest\x12\x0f\n\x07\x63ommand\x18\x02 \x03(\x0c\x12\x16\n\x0e\x63hannel_set_id\x18\x03 \x01(\t\"\x86\x01\n!GroundStationConfigurationRequest\x12\x61\n!transmitter_configuration_request\x18\x01 \x01(\x0b\x32\x36.stellarstation.api.v1.TransmitterConfigurationRequest\"\xfd\x01\n\x1fTransmitterConfigurationRequest\x12\x32\n\x0e\x65nable_carrier\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x38\n\x14\x65nable_if_modulation\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x37\n\x13\x65nable_idle_pattern\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x33\n\x0f\x65nable_if_sweep\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\"\xcb\x01\n\x17SatelliteStreamResponse\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12U\n\x1areceive_telemetry_response\x18\x02 \x01(\x0b\x32/.stellarstation.api.v1.ReceiveTelemetryResponseH\x00\x12:\n\x0cstream_event\x18\x03 \x01(\x0b\x32\".stellarstation.api.v1.StreamEventH\x00\x42\n\n\x08Response\"`\n\x18ReceiveTelemetryResponse\x12\x33\n\ttelemetry\x18\x01 \x01(\x0b\x32 .stellarstation.api.v1.Telemetry\x12\x0f\n\x07plan_id\x18\x02 \x01(\t\"$\n\x11\x43\x61ncelPlanRequest\x12\x0f\n\x07plan_id\x18\x01 \x01(\t\"\x14\n\x12\x43\x61ncelPlanResponse\":\n\"ListUpcomingAvailablePassesRequest\x12\x14\n\x0csatellite_id\x18\x01 \x01(\t\"P\n#ListUpcomingAvailablePassesResponse\x12)\n\x04pass\x18\x01 \x03(\x0b\x32\x1b.stellarstation.api.v1.Pass\"/\n\x12ReservePassRequest\x12\x19\n\x11reservation_token\x18\x01 \x01(\t\"@\n\x13ReservePassResponse\x12)\n\x04plan\x18\x01 \x01(\x0b\x32\x1b.stellarstation.api.v1.Plan\"\x87\x01\n\x10ListPlansRequest\x12\x14\n\x0csatellite_id\x18\x01 \x01(\t\x12-\n\taos_after\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\naos_before\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\">\n\x11ListPlansResponse\x12)\n\x04plan\x18\x01 \x03(\x0b\x32\x1b.stellarstation.api.v1.Plan\"\xb6\x01\n\nChannelSet\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x45\n\x06uplink\x18\x03 \x01(\x0b\x32\x35.stellarstation.api.v1.radio.RadioDeviceConfiguration\x12G\n\x08\x64ownlink\x18\x04 \x01(\x0b\x32\x35.stellarstation.api.v1.radio.RadioDeviceConfiguration\"\xfe\x04\n\x04Pass\x12\x1d\n\x11reservation_token\x18\x01 \x01(\tB\x02\x18\x01\x12,\n\x08\x61os_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08los_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1f\n\x17ground_station_latitude\x18\x04 \x01(\x01\x12 \n\x18ground_station_longitude\x18\x05 \x01(\x01\x12(\n ground_station_organization_name\x18\x0c \x01(\t\x12#\n\x1bground_station_country_code\x18\x06 \x01(\t\x12\x1d\n\x15max_elevation_degrees\x18\x07 \x01(\x01\x12\x36\n\x12max_elevation_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12(\n\x1c\x64ownlink_center_frequency_hz\x18\t \x01(\x04\x42\x02\x18\x01\x12&\n\x1auplink_center_frequency_hz\x18\n \x01(\x04\x42\x02\x18\x01\x12\x46\n\x11\x63hannel_set_token\x18\x0b \x03(\x0b\x32+.stellarstation.api.v1.Pass.ChannelSetToken\x1ax\n\x0f\x43hannelSetToken\x12\x36\n\x0b\x63hannel_set\x18\x01 \x01(\x0b\x32!.stellarstation.api.v1.ChannelSet\x12\x19\n\x11reservation_token\x18\x02 \x01(\t\x12\x12\n\nunit_price\x18\x03 \x01(\x01\"\x99\x01\n\x11TelemetryMetadata\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x44\n\tdata_type\x18\x02 \x01(\x0e\x32\x31.stellarstation.api.v1.TelemetryMetadata.DataType\"1\n\x08\x44\x61taType\x12\x07\n\x03RAW\x10\x00\x12\x0f\n\x0b\x44\x45MODULATED\x10\x01\x12\x0b\n\x07\x44\x45\x43ODED\x10\x02\"\xe8\x06\n\x04Plan\x12\n\n\x02id\x18\x01 \x01(\t\x12\x14\n\x0csatellite_id\x18\x02 \x01(\t\x12#\n\x1bsatellite_organization_name\x18\x11 \x01(\t\x12\x32\n\x06status\x18\x03 \x01(\x0e\x32\".stellarstation.api.v1.Plan.Status\x12.\n\nstart_time\x18\x0e \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x0f \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x61os_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08los_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1f\n\x17ground_station_latitude\x18\x06 \x01(\x01\x12 \n\x18ground_station_longitude\x18\x07 \x01(\x01\x12#\n\x1bground_station_country_code\x18\x08 \x01(\t\x12(\n ground_station_organization_name\x18\x12 \x01(\t\x12\x1d\n\x15max_elevation_degrees\x18\t \x01(\x01\x12\x36\n\x12max_elevation_time\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12(\n\x1c\x64ownlink_center_frequency_hz\x18\x0b \x01(\x04\x42\x02\x18\x01\x12&\n\x1auplink_center_frequency_hz\x18\x0c \x01(\x04\x42\x02\x18\x01\x12\x44\n\x12telemetry_metadata\x18\r \x03(\x0b\x32(.stellarstation.api.v1.TelemetryMetadata\x12\x36\n\x0b\x63hannel_set\x18\x10 \x01(\x0b\x32!.stellarstation.api.v1.ChannelSet\x12\x12\n\nunit_price\x18\x13 \x01(\x01\"^\n\x06Status\x12\x0c\n\x08RESERVED\x10\x00\x12\r\n\tEXECUTING\x10\x01\x12\r\n\tSUCCEEDED\x10\x02\x12\n\n\x06\x46\x41ILED\x10\x03\x12\x0c\n\x08\x43\x41NCELED\x10\x04\x12\x0e\n\nPROCESSING\x10\x05\"T\n\rAddTleRequest\x12\x14\n\x0csatellite_id\x18\x01 \x01(\t\x12-\n\x03tle\x18\x02 \x01(\x0b\x32 .stellarstation.api.v1.orbit.Tle\"\x10\n\x0e\x41\x64\x64TleResponse\"%\n\rGetTleRequest\x12\x14\n\x0csatellite_id\x18\x01 \x01(\t\"?\n\x0eGetTleResponse\x12-\n\x03tle\x18\x01 \x01(\x0b\x32 .stellarstation.api.v1.orbit.Tle2\xff\x05\n\x15StellarStationService\x12^\n\tListPlans\x12\'.stellarstation.api.v1.ListPlansRequest\x1a(.stellarstation.api.v1.ListPlansResponse\x12\x61\n\nCancelPlan\x12(.stellarstation.api.v1.CancelPlanRequest\x1a).stellarstation.api.v1.CancelPlanResponse\x12\x94\x01\n\x1bListUpcomingAvailablePasses\x12\x39.stellarstation.api.v1.ListUpcomingAvailablePassesRequest\x1a:.stellarstation.api.v1.ListUpcomingAvailablePassesResponse\x12x\n\x13OpenSatelliteStream\x12-.stellarstation.api.v1.SatelliteStreamRequest\x1a..stellarstation.api.v1.SatelliteStreamResponse(\x01\x30\x01\x12\x64\n\x0bReservePass\x12).stellarstation.api.v1.ReservePassRequest\x1a*.stellarstation.api.v1.ReservePassResponse\x12U\n\x06\x41\x64\x64Tle\x12$.stellarstation.api.v1.AddTleRequest\x1a%.stellarstation.api.v1.AddTleResponse\x12U\n\x06GetTle\x12$.stellarstation.api.v1.GetTleRequest\x1a%.stellarstation.api.v1.GetTleResponseBf\n\x19\x63om.stellarstation.api.v1B\x13StellarstationProtoP\x01Z2github.com/infostellarinc/go-stellarstation/api/v1b\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,stellarstation_dot_api_dot_v1_dot_orbit_dot_orbit__pb2.DESCRIPTOR,stellarstation_dot_api_dot_v1_dot_radio_dot_radio__pb2.DESCRIPTOR,stellarstation_dot_api_dot_v1_dot_transport__pb2.DESCRIPTOR,])



_TELEMETRYMETADATA_DATATYPE = _descriptor.EnumDescriptor(
  name='DataType',
  full_name='stellarstation.api.v1.TelemetryMetadata.DataType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RAW', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEMODULATED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECODED', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2857,
  serialized_end=2906,
)
_sym_db.RegisterEnumDescriptor(_TELEMETRYMETADATA_DATATYPE)

_PLAN_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='stellarstation.api.v1.Plan.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RESERVED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXECUTING', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUCCEEDED', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELED', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROCESSING', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3687,
  serialized_end=3781,
)
_sym_db.RegisterEnumDescriptor(_PLAN_STATUS)


_SATELLITESTREAMREQUEST = _descriptor.Descriptor(
  name='SatelliteStreamRequest',
  full_name='stellarstation.api.v1.SatelliteStreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='satellite_id', full_name='stellarstation.api.v1.SatelliteStreamRequest.satellite_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_id', full_name='stellarstation.api.v1.SatelliteStreamRequest.stream_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_events', full_name='stellarstation.api.v1.SatelliteStreamRequest.enable_events', index=2,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_id', full_name='stellarstation.api.v1.SatelliteStreamRequest.request_id', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='send_satellite_commands_request', full_name='stellarstation.api.v1.SatelliteStreamRequest.send_satellite_commands_request', index=4,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_configuration_request', full_name='stellarstation.api.v1.SatelliteStreamRequest.ground_station_configuration_request', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accepted_framing', full_name='stellarstation.api.v1.SatelliteStreamRequest.accepted_framing', index=6,
      number=4, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Request', full_name='stellarstation.api.v1.SatelliteStreamRequest.Request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=256,
  serialized_end=635,
)


_SENDSATELLITECOMMANDSREQUEST = _descriptor.Descriptor(
  name='SendSatelliteCommandsRequest',
  full_name='stellarstation.api.v1.SendSatelliteCommandsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='stellarstation.api.v1.SendSatelliteCommandsRequest.command', index=0,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_set_id', full_name='stellarstation.api.v1.SendSatelliteCommandsRequest.channel_set_id', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=637,
  serialized_end=708,
)


_GROUNDSTATIONCONFIGURATIONREQUEST = _descriptor.Descriptor(
  name='GroundStationConfigurationRequest',
  full_name='stellarstation.api.v1.GroundStationConfigurationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transmitter_configuration_request', full_name='stellarstation.api.v1.GroundStationConfigurationRequest.transmitter_configuration_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=711,
  serialized_end=845,
)


_TRANSMITTERCONFIGURATIONREQUEST = _descriptor.Descriptor(
  name='TransmitterConfigurationRequest',
  full_name='stellarstation.api.v1.TransmitterConfigurationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable_carrier', full_name='stellarstation.api.v1.TransmitterConfigurationRequest.enable_carrier', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_if_modulation', full_name='stellarstation.api.v1.TransmitterConfigurationRequest.enable_if_modulation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_idle_pattern', full_name='stellarstation.api.v1.TransmitterConfigurationRequest.enable_idle_pattern', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_if_sweep', full_name='stellarstation.api.v1.TransmitterConfigurationRequest.enable_if_sweep', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=848,
  serialized_end=1101,
)


_SATELLITESTREAMRESPONSE = _descriptor.Descriptor(
  name='SatelliteStreamResponse',
  full_name='stellarstation.api.v1.SatelliteStreamResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stream_id', full_name='stellarstation.api.v1.SatelliteStreamResponse.stream_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='receive_telemetry_response', full_name='stellarstation.api.v1.SatelliteStreamResponse.receive_telemetry_response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_event', full_name='stellarstation.api.v1.SatelliteStreamResponse.stream_event', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Response', full_name='stellarstation.api.v1.SatelliteStreamResponse.Response',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1104,
  serialized_end=1307,
)


_RECEIVETELEMETRYRESPONSE = _descriptor.Descriptor(
  name='ReceiveTelemetryResponse',
  full_name='stellarstation.api.v1.ReceiveTelemetryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='telemetry', full_name='stellarstation.api.v1.ReceiveTelemetryResponse.telemetry', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='plan_id', full_name='stellarstation.api.v1.ReceiveTelemetryResponse.plan_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1309,
  serialized_end=1405,
)


_CANCELPLANREQUEST = _descriptor.Descriptor(
  name='CancelPlanRequest',
  full_name='stellarstation.api.v1.CancelPlanRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='plan_id', full_name='stellarstation.api.v1.CancelPlanRequest.plan_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1407,
  serialized_end=1443,
)


_CANCELPLANRESPONSE = _descriptor.Descriptor(
  name='CancelPlanResponse',
  full_name='stellarstation.api.v1.CancelPlanResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1445,
  serialized_end=1465,
)


_LISTUPCOMINGAVAILABLEPASSESREQUEST = _descriptor.Descriptor(
  name='ListUpcomingAvailablePassesRequest',
  full_name='stellarstation.api.v1.ListUpcomingAvailablePassesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='satellite_id', full_name='stellarstation.api.v1.ListUpcomingAvailablePassesRequest.satellite_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1467,
  serialized_end=1525,
)


_LISTUPCOMINGAVAILABLEPASSESRESPONSE = _descriptor.Descriptor(
  name='ListUpcomingAvailablePassesResponse',
  full_name='stellarstation.api.v1.ListUpcomingAvailablePassesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pass', full_name='stellarstation.api.v1.ListUpcomingAvailablePassesResponse.pass', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1527,
  serialized_end=1607,
)


_RESERVEPASSREQUEST = _descriptor.Descriptor(
  name='ReservePassRequest',
  full_name='stellarstation.api.v1.ReservePassRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reservation_token', full_name='stellarstation.api.v1.ReservePassRequest.reservation_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1609,
  serialized_end=1656,
)


_RESERVEPASSRESPONSE = _descriptor.Descriptor(
  name='ReservePassResponse',
  full_name='stellarstation.api.v1.ReservePassResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='plan', full_name='stellarstation.api.v1.ReservePassResponse.plan', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1658,
  serialized_end=1722,
)


_LISTPLANSREQUEST = _descriptor.Descriptor(
  name='ListPlansRequest',
  full_name='stellarstation.api.v1.ListPlansRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='satellite_id', full_name='stellarstation.api.v1.ListPlansRequest.satellite_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aos_after', full_name='stellarstation.api.v1.ListPlansRequest.aos_after', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aos_before', full_name='stellarstation.api.v1.ListPlansRequest.aos_before', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1725,
  serialized_end=1860,
)


_LISTPLANSRESPONSE = _descriptor.Descriptor(
  name='ListPlansResponse',
  full_name='stellarstation.api.v1.ListPlansResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='plan', full_name='stellarstation.api.v1.ListPlansResponse.plan', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1862,
  serialized_end=1924,
)


_CHANNELSET = _descriptor.Descriptor(
  name='ChannelSet',
  full_name='stellarstation.api.v1.ChannelSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='stellarstation.api.v1.ChannelSet.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='stellarstation.api.v1.ChannelSet.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uplink', full_name='stellarstation.api.v1.ChannelSet.uplink', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='downlink', full_name='stellarstation.api.v1.ChannelSet.downlink', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1927,
  serialized_end=2109,
)


_PASS_CHANNELSETTOKEN = _descriptor.Descriptor(
  name='ChannelSetToken',
  full_name='stellarstation.api.v1.Pass.ChannelSetToken',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_set', full_name='stellarstation.api.v1.Pass.ChannelSetToken.channel_set', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reservation_token', full_name='stellarstation.api.v1.Pass.ChannelSetToken.reservation_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit_price', full_name='stellarstation.api.v1.Pass.ChannelSetToken.unit_price', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2630,
  serialized_end=2750,
)

_PASS = _descriptor.Descriptor(
  name='Pass',
  full_name='stellarstation.api.v1.Pass',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reservation_token', full_name='stellarstation.api.v1.Pass.reservation_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aos_time', full_name='stellarstation.api.v1.Pass.aos_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='los_time', full_name='stellarstation.api.v1.Pass.los_time', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_latitude', full_name='stellarstation.api.v1.Pass.ground_station_latitude', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_longitude', full_name='stellarstation.api.v1.Pass.ground_station_longitude', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_organization_name', full_name='stellarstation.api.v1.Pass.ground_station_organization_name', index=5,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_country_code', full_name='stellarstation.api.v1.Pass.ground_station_country_code', index=6,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_elevation_degrees', full_name='stellarstation.api.v1.Pass.max_elevation_degrees', index=7,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_elevation_time', full_name='stellarstation.api.v1.Pass.max_elevation_time', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='downlink_center_frequency_hz', full_name='stellarstation.api.v1.Pass.downlink_center_frequency_hz', index=9,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uplink_center_frequency_hz', full_name='stellarstation.api.v1.Pass.uplink_center_frequency_hz', index=10,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_set_token', full_name='stellarstation.api.v1.Pass.channel_set_token', index=11,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PASS_CHANNELSETTOKEN, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2112,
  serialized_end=2750,
)


_TELEMETRYMETADATA = _descriptor.Descriptor(
  name='TelemetryMetadata',
  full_name='stellarstation.api.v1.TelemetryMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='stellarstation.api.v1.TelemetryMetadata.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data_type', full_name='stellarstation.api.v1.TelemetryMetadata.data_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TELEMETRYMETADATA_DATATYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2753,
  serialized_end=2906,
)


_PLAN = _descriptor.Descriptor(
  name='Plan',
  full_name='stellarstation.api.v1.Plan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='stellarstation.api.v1.Plan.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='satellite_id', full_name='stellarstation.api.v1.Plan.satellite_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='satellite_organization_name', full_name='stellarstation.api.v1.Plan.satellite_organization_name', index=2,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='stellarstation.api.v1.Plan.status', index=3,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='stellarstation.api.v1.Plan.start_time', index=4,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='stellarstation.api.v1.Plan.end_time', index=5,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aos_time', full_name='stellarstation.api.v1.Plan.aos_time', index=6,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='los_time', full_name='stellarstation.api.v1.Plan.los_time', index=7,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_latitude', full_name='stellarstation.api.v1.Plan.ground_station_latitude', index=8,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_longitude', full_name='stellarstation.api.v1.Plan.ground_station_longitude', index=9,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_country_code', full_name='stellarstation.api.v1.Plan.ground_station_country_code', index=10,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ground_station_organization_name', full_name='stellarstation.api.v1.Plan.ground_station_organization_name', index=11,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_elevation_degrees', full_name='stellarstation.api.v1.Plan.max_elevation_degrees', index=12,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_elevation_time', full_name='stellarstation.api.v1.Plan.max_elevation_time', index=13,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='downlink_center_frequency_hz', full_name='stellarstation.api.v1.Plan.downlink_center_frequency_hz', index=14,
      number=11, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uplink_center_frequency_hz', full_name='stellarstation.api.v1.Plan.uplink_center_frequency_hz', index=15,
      number=12, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='telemetry_metadata', full_name='stellarstation.api.v1.Plan.telemetry_metadata', index=16,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_set', full_name='stellarstation.api.v1.Plan.channel_set', index=17,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit_price', full_name='stellarstation.api.v1.Plan.unit_price', index=18,
      number=19, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PLAN_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2909,
  serialized_end=3781,
)


_ADDTLEREQUEST = _descriptor.Descriptor(
  name='AddTleRequest',
  full_name='stellarstation.api.v1.AddTleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='satellite_id', full_name='stellarstation.api.v1.AddTleRequest.satellite_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tle', full_name='stellarstation.api.v1.AddTleRequest.tle', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3783,
  serialized_end=3867,
)


_ADDTLERESPONSE = _descriptor.Descriptor(
  name='AddTleResponse',
  full_name='stellarstation.api.v1.AddTleResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3869,
  serialized_end=3885,
)


_GETTLEREQUEST = _descriptor.Descriptor(
  name='GetTleRequest',
  full_name='stellarstation.api.v1.GetTleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='satellite_id', full_name='stellarstation.api.v1.GetTleRequest.satellite_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3887,
  serialized_end=3924,
)


_GETTLERESPONSE = _descriptor.Descriptor(
  name='GetTleResponse',
  full_name='stellarstation.api.v1.GetTleResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tle', full_name='stellarstation.api.v1.GetTleResponse.tle', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3926,
  serialized_end=3989,
)

_SATELLITESTREAMREQUEST.fields_by_name['send_satellite_commands_request'].message_type = _SENDSATELLITECOMMANDSREQUEST
_SATELLITESTREAMREQUEST.fields_by_name['ground_station_configuration_request'].message_type = _GROUNDSTATIONCONFIGURATIONREQUEST
_SATELLITESTREAMREQUEST.fields_by_name['accepted_framing'].enum_type = stellarstation_dot_api_dot_v1_dot_transport__pb2._FRAMING
_SATELLITESTREAMREQUEST.oneofs_by_name['Request'].fields.append(
  _SATELLITESTREAMREQUEST.fields_by_name['send_satellite_commands_request'])
_SATELLITESTREAMREQUEST.fields_by_name['send_satellite_commands_request'].containing_oneof = _SATELLITESTREAMREQUEST.oneofs_by_name['Request']
_SATELLITESTREAMREQUEST.oneofs_by_name['Request'].fields.append(
  _SATELLITESTREAMREQUEST.fields_by_name['ground_station_configuration_request'])
_SATELLITESTREAMREQUEST.fields_by_name['ground_station_configuration_request'].containing_oneof = _SATELLITESTREAMREQUEST.oneofs_by_name['Request']
_GROUNDSTATIONCONFIGURATIONREQUEST.fields_by_name['transmitter_configuration_request'].message_type = _TRANSMITTERCONFIGURATIONREQUEST
_TRANSMITTERCONFIGURATIONREQUEST.fields_by_name['enable_carrier'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_TRANSMITTERCONFIGURATIONREQUEST.fields_by_name['enable_if_modulation'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_TRANSMITTERCONFIGURATIONREQUEST.fields_by_name['enable_idle_pattern'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_TRANSMITTERCONFIGURATIONREQUEST.fields_by_name['enable_if_sweep'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_SATELLITESTREAMRESPONSE.fields_by_name['receive_telemetry_response'].message_type = _RECEIVETELEMETRYRESPONSE
_SATELLITESTREAMRESPONSE.fields_by_name['stream_event'].message_type = stellarstation_dot_api_dot_v1_dot_transport__pb2._STREAMEVENT
_SATELLITESTREAMRESPONSE.oneofs_by_name['Response'].fields.append(
  _SATELLITESTREAMRESPONSE.fields_by_name['receive_telemetry_response'])
_SATELLITESTREAMRESPONSE.fields_by_name['receive_telemetry_response'].containing_oneof = _SATELLITESTREAMRESPONSE.oneofs_by_name['Response']
_SATELLITESTREAMRESPONSE.oneofs_by_name['Response'].fields.append(
  _SATELLITESTREAMRESPONSE.fields_by_name['stream_event'])
_SATELLITESTREAMRESPONSE.fields_by_name['stream_event'].containing_oneof = _SATELLITESTREAMRESPONSE.oneofs_by_name['Response']
_RECEIVETELEMETRYRESPONSE.fields_by_name['telemetry'].message_type = stellarstation_dot_api_dot_v1_dot_transport__pb2._TELEMETRY
_LISTUPCOMINGAVAILABLEPASSESRESPONSE.fields_by_name['pass'].message_type = _PASS
_RESERVEPASSRESPONSE.fields_by_name['plan'].message_type = _PLAN
_LISTPLANSREQUEST.fields_by_name['aos_after'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_LISTPLANSREQUEST.fields_by_name['aos_before'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_LISTPLANSRESPONSE.fields_by_name['plan'].message_type = _PLAN
_CHANNELSET.fields_by_name['uplink'].message_type = stellarstation_dot_api_dot_v1_dot_radio_dot_radio__pb2._RADIODEVICECONFIGURATION
_CHANNELSET.fields_by_name['downlink'].message_type = stellarstation_dot_api_dot_v1_dot_radio_dot_radio__pb2._RADIODEVICECONFIGURATION
_PASS_CHANNELSETTOKEN.fields_by_name['channel_set'].message_type = _CHANNELSET
_PASS_CHANNELSETTOKEN.containing_type = _PASS
_PASS.fields_by_name['aos_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PASS.fields_by_name['los_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PASS.fields_by_name['max_elevation_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PASS.fields_by_name['channel_set_token'].message_type = _PASS_CHANNELSETTOKEN
_TELEMETRYMETADATA.fields_by_name['data_type'].enum_type = _TELEMETRYMETADATA_DATATYPE
_TELEMETRYMETADATA_DATATYPE.containing_type = _TELEMETRYMETADATA
_PLAN.fields_by_name['status'].enum_type = _PLAN_STATUS
_PLAN.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PLAN.fields_by_name['end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PLAN.fields_by_name['aos_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PLAN.fields_by_name['los_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PLAN.fields_by_name['max_elevation_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PLAN.fields_by_name['telemetry_metadata'].message_type = _TELEMETRYMETADATA
_PLAN.fields_by_name['channel_set'].message_type = _CHANNELSET
_PLAN_STATUS.containing_type = _PLAN
_ADDTLEREQUEST.fields_by_name['tle'].message_type = stellarstation_dot_api_dot_v1_dot_orbit_dot_orbit__pb2._TLE
_GETTLERESPONSE.fields_by_name['tle'].message_type = stellarstation_dot_api_dot_v1_dot_orbit_dot_orbit__pb2._TLE
DESCRIPTOR.message_types_by_name['SatelliteStreamRequest'] = _SATELLITESTREAMREQUEST
DESCRIPTOR.message_types_by_name['SendSatelliteCommandsRequest'] = _SENDSATELLITECOMMANDSREQUEST
DESCRIPTOR.message_types_by_name['GroundStationConfigurationRequest'] = _GROUNDSTATIONCONFIGURATIONREQUEST
DESCRIPTOR.message_types_by_name['TransmitterConfigurationRequest'] = _TRANSMITTERCONFIGURATIONREQUEST
DESCRIPTOR.message_types_by_name['SatelliteStreamResponse'] = _SATELLITESTREAMRESPONSE
DESCRIPTOR.message_types_by_name['ReceiveTelemetryResponse'] = _RECEIVETELEMETRYRESPONSE
DESCRIPTOR.message_types_by_name['CancelPlanRequest'] = _CANCELPLANREQUEST
DESCRIPTOR.message_types_by_name['CancelPlanResponse'] = _CANCELPLANRESPONSE
DESCRIPTOR.message_types_by_name['ListUpcomingAvailablePassesRequest'] = _LISTUPCOMINGAVAILABLEPASSESREQUEST
DESCRIPTOR.message_types_by_name['ListUpcomingAvailablePassesResponse'] = _LISTUPCOMINGAVAILABLEPASSESRESPONSE
DESCRIPTOR.message_types_by_name['ReservePassRequest'] = _RESERVEPASSREQUEST
DESCRIPTOR.message_types_by_name['ReservePassResponse'] = _RESERVEPASSRESPONSE
DESCRIPTOR.message_types_by_name['ListPlansRequest'] = _LISTPLANSREQUEST
DESCRIPTOR.message_types_by_name['ListPlansResponse'] = _LISTPLANSRESPONSE
DESCRIPTOR.message_types_by_name['ChannelSet'] = _CHANNELSET
DESCRIPTOR.message_types_by_name['Pass'] = _PASS
DESCRIPTOR.message_types_by_name['TelemetryMetadata'] = _TELEMETRYMETADATA
DESCRIPTOR.message_types_by_name['Plan'] = _PLAN
DESCRIPTOR.message_types_by_name['AddTleRequest'] = _ADDTLEREQUEST
DESCRIPTOR.message_types_by_name['AddTleResponse'] = _ADDTLERESPONSE
DESCRIPTOR.message_types_by_name['GetTleRequest'] = _GETTLEREQUEST
DESCRIPTOR.message_types_by_name['GetTleResponse'] = _GETTLERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SatelliteStreamRequest = _reflection.GeneratedProtocolMessageType('SatelliteStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _SATELLITESTREAMREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A request to send on the satellite stream. Currently only command
  sending to the satellite is supported. The request does not need to be
  filled on the first request to ``OpenSatelliteStream``.
  
  
  Attributes:
      satellite_id:
          The ID of the satellite to open a stream with. The ID of a
          satellite can be found on the StellarStation Console page for
          the satellite.
      stream_id:
          The ``SatelliteStreamResponse.stream_id`` from a previously
          opened stream to resume. If the specified stream has already
          expired or been closed, the stream is closed with a
          ``ABORTED`` error.
      enable_events:
          Whether monitoring events should be returned by the stream in
          ``SatelliteStreamResponse.stream_event``. If set in the first
          request of the stream, events of type ``StreamEvent`` will be
          returned throughout the lifetime of the stream.
      request_id:
          A unique ID identifying this request. If ``enable_events`` is
          true and this is filled, events returned in
          ``SatelliteStreamResponse.stream_event`` that correspond to
          this request will have this value copied into
          ``StreamEvent.request_id`` for correlation. The API will treat
          this as an opaque identifier which can be set to any value,
          e.g., to the same value as the request ID or command number in
          a downstream system. For simple cases, it is often simplest to
          set this to a standard UUID.
      send_satellite_commands_request:
          A request to send commands to the satellite.
      ground_station_configuration_request:
          A request to modify a configuration of a ground station.
          Status: ALPHA This API is under development and may not work
          correctly or be changed in backwards incompatible ways in the
          future.
      accepted_framing:
          The ``Framing`` types to accept, for satellites that have been
          configured for multiple framings (e.g., IQ + AX25). If empty,
          all framings produced by the satellite will be returned.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.SatelliteStreamRequest)
  })
_sym_db.RegisterMessage(SatelliteStreamRequest)

SendSatelliteCommandsRequest = _reflection.GeneratedProtocolMessageType('SendSatelliteCommandsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENDSATELLITECOMMANDSREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A request to send commands to a satellite.
  
  Next ID: 4
  
  
  Attributes:
      command:
          The command frames to send to the satellite. All commands will
          be transmitted in sequence immediately, during which time
          telemetry will not be received. After all commands have been
          transmitted, telemetry receive will be immediately re-enabled.
          The maximum size of each command is 2MB. If a command larger
          than 2MB is received, the stream will be closed with a
          ``RESOURCE_EXHAUSTED`` error.
      channel_set_id:
          The ID of the channel set to be used when sending the command.
          Required if two uplink-capable plans are simultaneously
          executing. If not provided and only one plan is executing, the
          channel set will be automatically determined.  If a channel
          set without an uplink component is provided or two uplink-
          capable plans are simultaneously executing and no ID is
          provided, the command will be ignored.  Status: ALPHA This API
          is under development and may not work correctly or be changed
          in backwards incompatible ways in the future.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.SendSatelliteCommandsRequest)
  })
_sym_db.RegisterMessage(SendSatelliteCommandsRequest)

GroundStationConfigurationRequest = _reflection.GeneratedProtocolMessageType('GroundStationConfigurationRequest', (_message.Message,), {
  'DESCRIPTOR' : _GROUNDSTATIONCONFIGURATIONREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A request to modify configuration of ground station hardware.
  
  Next ID: 2 Status: ALPHA This API is under development and may not work
  correctly or be changed in backwards incompatible ways in the future.
  
  
  Attributes:
      transmitter_configuration_request:
          A request to modify transmitter configuration at a ground
          station.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.GroundStationConfigurationRequest)
  })
_sym_db.RegisterMessage(GroundStationConfigurationRequest)

TransmitterConfigurationRequest = _reflection.GeneratedProtocolMessageType('TransmitterConfigurationRequest', (_message.Message,), {
  'DESCRIPTOR' : _TRANSMITTERCONFIGURATIONREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A request to configure a transmitter at a ground station. Default state
  of these parameters depends on hardware configuration at each ground
  station. Please check TransmitterConfiguration in monitoring message. It
  isn’t always supported to control them. If field isn’t set, it’s
  ignored.
  
  Next ID: 5
  
  
  Attributes:
      enable_carrier:
          Enable carrier transmission.
      enable_if_modulation:
          Enable IF modulation.
      enable_idle_pattern:
          Enable idle pattern transmission.
      enable_if_sweep:
          Enable IF sweep.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.TransmitterConfigurationRequest)
  })
_sym_db.RegisterMessage(TransmitterConfigurationRequest)

SatelliteStreamResponse = _reflection.GeneratedProtocolMessageType('SatelliteStreamResponse', (_message.Message,), {
  'DESCRIPTOR' : _SATELLITESTREAMRESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A response on the stream. Currently the only type of response is
  telemetry received from the satellite.
  
  
  Attributes:
      stream_id:
          The ID of this stream, which can be used in a subsequent call
          to ``OpenSatelliteStream`` to resume this stream on
          interruption (e.g., if a network failure causes the connection
          to be closed mid-stream). Telemetry received on a previously
          opened stream with no current listener will be buffered for a
          maximum of 1 minute, and the stream itself will be cancelled
          and no more buffering will occur if no client resumes the
          stream with ``OpenSatelliteStream`` within 10 minutes.
      receive_telemetry_response:
          A response from a satellite containing telemetry.
      stream_event:
          An event that occurred while processing the stream. Often used
          for monitoring the stream. Never returned if
          ``SatelliteStreamRequest.enable_events`` is false in the first
          ``SatelliteStreamRequest`` of the stream.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.SatelliteStreamResponse)
  })
_sym_db.RegisterMessage(SatelliteStreamResponse)

ReceiveTelemetryResponse = _reflection.GeneratedProtocolMessageType('ReceiveTelemetryResponse', (_message.Message,), {
  'DESCRIPTOR' : _RECEIVETELEMETRYRESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A response from a satellite containing telemetry.
  
  
  Attributes:
      telemetry:
          The telemetry received.
      plan_id:
          The ID of the plan the telemetry was received for.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ReceiveTelemetryResponse)
  })
_sym_db.RegisterMessage(ReceiveTelemetryResponse)

CancelPlanRequest = _reflection.GeneratedProtocolMessageType('CancelPlanRequest', (_message.Message,), {
  'DESCRIPTOR' : _CANCELPLANREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Request for the ``CancelPlan`` method.
  
  
  Attributes:
      plan_id:
          The id of the plan to cancel, i.e., the value of ``Plan.id``.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.CancelPlanRequest)
  })
_sym_db.RegisterMessage(CancelPlanRequest)

CancelPlanResponse = _reflection.GeneratedProtocolMessageType('CancelPlanResponse', (_message.Message,), {
  'DESCRIPTOR' : _CANCELPLANRESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Response for the ``CancelPlan`` method.
  
  Currently no payload in the response.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.CancelPlanResponse)
  })
_sym_db.RegisterMessage(CancelPlanResponse)

ListUpcomingAvailablePassesRequest = _reflection.GeneratedProtocolMessageType('ListUpcomingAvailablePassesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTUPCOMINGAVAILABLEPASSESREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Request for the ``ListUpcomingAvailablePasses`` method.
  
  
  Attributes:
      satellite_id:
          The ID of the satellite to list passes for. The ID of a
          satellite can be found on the StellarStation Console page for
          the satellite.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ListUpcomingAvailablePassesRequest)
  })
_sym_db.RegisterMessage(ListUpcomingAvailablePassesRequest)

ListUpcomingAvailablePassesResponse = _reflection.GeneratedProtocolMessageType('ListUpcomingAvailablePassesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTUPCOMINGAVAILABLEPASSESRESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Response for the ``ListUpcomingAvailablePasses`` method.
  
  
  Attributes:
      pass:
          The upcoming, schedulable passes for the satellite.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ListUpcomingAvailablePassesResponse)
  })
_sym_db.RegisterMessage(ListUpcomingAvailablePassesResponse)

ReservePassRequest = _reflection.GeneratedProtocolMessageType('ReservePassRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESERVEPASSREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Request for the ``ReservePass`` method.
  
  
  Attributes:
      reservation_token:
          The token that specifies the pass, as returned in
          ``Pass.reservation_token`` or one of the
          ``Pass.channel_set_token.reservation_token`` values.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ReservePassRequest)
  })
_sym_db.RegisterMessage(ReservePassRequest)

ReservePassResponse = _reflection.GeneratedProtocolMessageType('ReservePassResponse', (_message.Message,), {
  'DESCRIPTOR' : _RESERVEPASSRESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Response for the ``ReservePass`` method.
  
  
  Attributes:
      plan:
          The reserved plan.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ReservePassResponse)
  })
_sym_db.RegisterMessage(ReservePassResponse)

ListPlansRequest = _reflection.GeneratedProtocolMessageType('ListPlansRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTPLANSREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Request for the ``ListPlans`` method.
  
  
  Attributes:
      satellite_id:
          The ID of the satellite to list plans for. The ID can be found
          on the StellarStation Console page for the satellite.
      aos_after:
          The start time of the range of plans to list (inclusive). Only
          plans with an Acquisition of Signal (AOS) at or after this
          time will be returned. It is an error for the duration between
          ``aos_after`` and ``aos_before`` to be longer than 31 days.
      aos_before:
          The end time of the range of plans to list (exclusive). Only
          plans with an Acquisition of Signal (AOS) before this time
          will be returned. It is an error for the duration between
          ``aos_after`` and ``aos_before`` to be longer than 31 days.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ListPlansRequest)
  })
_sym_db.RegisterMessage(ListPlansRequest)

ListPlansResponse = _reflection.GeneratedProtocolMessageType('ListPlansResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTPLANSRESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A response from the ``ListPlans`` method.
  
  
  Attributes:
      plan:
          The requested list of plans for the satellite.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ListPlansResponse)
  })
_sym_db.RegisterMessage(ListPlansResponse)

ChannelSet = _reflection.GeneratedProtocolMessageType('ChannelSet', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELSET,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A channel set defines one or both of the uplink and downlink
  ``RadioDeviceConfiguration``\ s to be used when executing a pass. A
  channel set is unique to a specific satellite, and a satellite may have
  one or more channel sets.
  
  A common example is to have a channel set for TT&C with both uplink and
  downlink configurations, and a second channel set only for mission
  downlink. In this case it is necessary to select the configuration that
  will be used during plan execution.
  
  
  Attributes:
      id:
          The unique ID of the channel set.
      name:
          The name used to identify the channel set (for example, TT&C
          UHF).
      uplink:
          The radio device configuration used for uplinking.  Optional
          if downlink is set.
      downlink:
          The radio device configuration used for downlinking.  Optional
          if uplink is set.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.ChannelSet)
  })
_sym_db.RegisterMessage(ChannelSet)

Pass = _reflection.GeneratedProtocolMessageType('Pass', (_message.Message,), {

  'ChannelSetToken' : _reflection.GeneratedProtocolMessageType('ChannelSetToken', (_message.Message,), {
    'DESCRIPTOR' : _PASS_CHANNELSETTOKEN,
    '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
    ,
    __doc__ = """A mapping of channel set to its unique reservation token.
    
    
    Attributes:
        channel_set:
            A channel set that can be reserved.
        reservation_token:
            A unique token for this pass, specific to this channel set,
            that can be used for scheduling it by copying to
            ReservePassRequest.reservation_token.
        unit_price:
            The price per minute (USD) for this pass and channel set
            combination.  Status: ALPHA This API is under development and
            may not work correctly or be changed in backwards incompatible
            ways in the future.
    """,
    # @@protoc_insertion_point(class_scope:stellarstation.api.v1.Pass.ChannelSetToken)
    })
  ,
  'DESCRIPTOR' : _PASS,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A pass during which a satellite can be communicated with from a given
  ground station.
  
  Next ID: 13
  
  
  Attributes:
      reservation_token:
          A unique token for this pass that can be used for scheduling
          it.  Deprecated. Use ChannelSetToken.reservation_token.
      aos_time:
          The time of Acquisition of Signal (AOS) between the ground
          station and satellite in this pass.
      los_time:
          The time of Loss of Signal (LOS) between the ground station
          and satellite in this pass.
      ground_station_latitude:
          The latitude, in degrees, of the ground station’s location.
      ground_station_longitude:
          The longitude, in degrees, of the ground station’s location.
      ground_station_organization_name:
          The organization name of the ground station.  Status: ALPHA
          This API is under development and may not work correctly or be
          changed in backwards incompatible ways in the future.
      ground_station_country_code:
          The ISO 3166-1 alpha-2 2-letter country code for the ground
          station’s location. See
          https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      max_elevation_degrees:
          The max elevation during the pass, in degrees.
      max_elevation_time:
          The time of the max elevation during the pass.
      downlink_center_frequency_hz:
          The center frequency, in Hz, for downlinking in this pass. 0
          if downlink is not available in this pass.  Deprecated. Use
          channel_set.downlink.center_frequency_hz.
      uplink_center_frequency_hz:
          The center frequency, in Hz, for uplinking in this pass. 0 if
          uplink is not available in this pass.  Deprecated. Use
          channel_set.uplink.center_frequency_hz.
      channel_set_token:
          List of channel set and corresponding reservation token
          groupings. Only channel sets that are compatible with this
          pass’s ground station will be present.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.Pass)
  })
_sym_db.RegisterMessage(Pass)
_sym_db.RegisterMessage(Pass.ChannelSetToken)

TelemetryMetadata = _reflection.GeneratedProtocolMessageType('TelemetryMetadata', (_message.Message,), {
  'DESCRIPTOR' : _TELEMETRYMETADATA,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Metadata for telemetry downlinked during a pass.
  
  
  Attributes:
      url:
          URL of the data. This URL is valid for one hour after being
          returned.
      data_type:
          The type of data received during downlinking.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.TelemetryMetadata)
  })
_sym_db.RegisterMessage(TelemetryMetadata)

Plan = _reflection.GeneratedProtocolMessageType('Plan', (_message.Message,), {
  'DESCRIPTOR' : _PLAN,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """A plan, specifying a time range within which a satellite will be
  communicated with.
  
  Next ID: 20
  
  
  Attributes:
      id:
          The unique ID of the plan.
      satellite_id:
          The id of the satellite to be tracked in the plan.
      satellite_organization_name:
          The organization name of the satellite to be tracked in the
          plan.  Status: ALPHA This API is under development and may not
          work correctly or be changed in backwards incompatible ways in
          the future.
      status:
          The status of this plan.
      start_time:
          The start of the time window reserved for the plan. This value
          does not change over time.
      end_time:
          The end of the time window reserved for the plan. This value
          does not change over time.
      aos_time:
          The time of Acquisition of Signal (AOS) between the ground
          station and satellite in this plan.  This value is never
          before ‘start_time’. It may change over time (for example, if
          updated TLE becomes available).
      los_time:
          The time of Loss of Signal (LOS) between the ground station
          and satellite in this plan.  This value is never after
          ‘end_time’. It may change over time (for example, if updated
          TLE becomes available).
      ground_station_latitude:
          The latitude, in degrees, of the ground station’s location.
      ground_station_longitude:
          The longitude, in degrees, of the ground station’s location.
      ground_station_country_code:
          The ISO 3166-1 alpha-2 2-letter country code for the ground
          station’s location. See
          https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      ground_station_organization_name:
          The organization name of the ground station.  Status: ALPHA
          This API is under development and may not work correctly or be
          changed in backwards incompatible ways in the future.
      max_elevation_degrees:
          The max elevation during the plan, in degrees.
      max_elevation_time:
          The time of the max elevation during the plan.
      downlink_center_frequency_hz:
          The center frequency, in Hz, for downlinking in this plan. 0
          if downlink is not available in this plan.  Deprecated. Use
          channel_set.downlink.center_frequency_hz.
      uplink_center_frequency_hz:
          The center frequency, in Hz, for uplinking in this plan. 0 if
          uplink is not available in this plan.  Deprecated. Use
          channel_set.uplink.center_frequency_hz.
      telemetry_metadata:
          Metadata for telemetry received during the pass. Only
          populated when the pass has completed successfully and data
          processing is complete.
      channel_set:
          The channel set used to reserve this plan.
      unit_price:
          The price per minute (USD) for this plan set by the ground
          station owner at the time of reservation.  Status: ALPHA This
          API is under development and may not work correctly or be
          changed in backwards incompatible ways in the future.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.Plan)
  })
_sym_db.RegisterMessage(Plan)

AddTleRequest = _reflection.GeneratedProtocolMessageType('AddTleRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDTLEREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Request for the ‘AddTle’ method.
  
  
  Attributes:
      satellite_id:
          The ID of the satellite to add TLE for. The ID can be found on
          the StellarStation Console page for the satellite.
      tle:
          The TLE to be added.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.AddTleRequest)
  })
_sym_db.RegisterMessage(AddTleRequest)

AddTleResponse = _reflection.GeneratedProtocolMessageType('AddTleResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADDTLERESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Response for the ``AddTle`` method.
  
  Currently no payload in the response.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.AddTleResponse)
  })
_sym_db.RegisterMessage(AddTleResponse)

GetTleRequest = _reflection.GeneratedProtocolMessageType('GetTleRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTLEREQUEST,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Request for the ‘GetTle’ method.
  
  
  Attributes:
      satellite_id:
          The ID of the satellite for which to fetch TLE. The ID can be
          found on the StellarStation Console page for the satellite.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.GetTleRequest)
  })
_sym_db.RegisterMessage(GetTleRequest)

GetTleResponse = _reflection.GeneratedProtocolMessageType('GetTleResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTLERESPONSE,
  '__module__' : 'stellarstation.api.v1.stellarstation_pb2'
  ,
  __doc__ = """Response for the ‘GetTle’ method.
  
  
  Attributes:
      tle:
          The TLE for the given satellite.
  """,
  # @@protoc_insertion_point(class_scope:stellarstation.api.v1.GetTleResponse)
  })
_sym_db.RegisterMessage(GetTleResponse)


DESCRIPTOR._options = None
_PASS.fields_by_name['reservation_token']._options = None
_PASS.fields_by_name['downlink_center_frequency_hz']._options = None
_PASS.fields_by_name['uplink_center_frequency_hz']._options = None
_PLAN.fields_by_name['downlink_center_frequency_hz']._options = None
_PLAN.fields_by_name['uplink_center_frequency_hz']._options = None

_STELLARSTATIONSERVICE = _descriptor.ServiceDescriptor(
  name='StellarStationService',
  full_name='stellarstation.api.v1.StellarStationService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=3992,
  serialized_end=4759,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListPlans',
    full_name='stellarstation.api.v1.StellarStationService.ListPlans',
    index=0,
    containing_service=None,
    input_type=_LISTPLANSREQUEST,
    output_type=_LISTPLANSRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CancelPlan',
    full_name='stellarstation.api.v1.StellarStationService.CancelPlan',
    index=1,
    containing_service=None,
    input_type=_CANCELPLANREQUEST,
    output_type=_CANCELPLANRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListUpcomingAvailablePasses',
    full_name='stellarstation.api.v1.StellarStationService.ListUpcomingAvailablePasses',
    index=2,
    containing_service=None,
    input_type=_LISTUPCOMINGAVAILABLEPASSESREQUEST,
    output_type=_LISTUPCOMINGAVAILABLEPASSESRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='OpenSatelliteStream',
    full_name='stellarstation.api.v1.StellarStationService.OpenSatelliteStream',
    index=3,
    containing_service=None,
    input_type=_SATELLITESTREAMREQUEST,
    output_type=_SATELLITESTREAMRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReservePass',
    full_name='stellarstation.api.v1.StellarStationService.ReservePass',
    index=4,
    containing_service=None,
    input_type=_RESERVEPASSREQUEST,
    output_type=_RESERVEPASSRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddTle',
    full_name='stellarstation.api.v1.StellarStationService.AddTle',
    index=5,
    containing_service=None,
    input_type=_ADDTLEREQUEST,
    output_type=_ADDTLERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTle',
    full_name='stellarstation.api.v1.StellarStationService.GetTle',
    index=6,
    containing_service=None,
    input_type=_GETTLEREQUEST,
    output_type=_GETTLERESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_STELLARSTATIONSERVICE)

DESCRIPTOR.services_by_name['StellarStationService'] = _STELLARSTATIONSERVICE

# @@protoc_insertion_point(module_scope)
