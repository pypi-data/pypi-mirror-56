"Main interface for sts type defs"
from __future__ import annotations

from datetime import datetime
from typing_extensions import TypedDict


__all__ = (
    "ClientAssumeRolePolicyArnsTypeDef",
    "ClientAssumeRoleResponseAssumedRoleUserTypeDef",
    "ClientAssumeRoleResponseCredentialsTypeDef",
    "ClientAssumeRoleResponseTypeDef",
    "ClientAssumeRoleWithSamlPolicyArnsTypeDef",
    "ClientAssumeRoleWithSamlResponseAssumedRoleUserTypeDef",
    "ClientAssumeRoleWithSamlResponseCredentialsTypeDef",
    "ClientAssumeRoleWithSamlResponseTypeDef",
    "ClientAssumeRoleWithWebIdentityPolicyArnsTypeDef",
    "ClientAssumeRoleWithWebIdentityResponseAssumedRoleUserTypeDef",
    "ClientAssumeRoleWithWebIdentityResponseCredentialsTypeDef",
    "ClientAssumeRoleWithWebIdentityResponseTypeDef",
    "ClientDecodeAuthorizationMessageResponseTypeDef",
    "ClientGetAccessKeyInfoResponseTypeDef",
    "ClientGetCallerIdentityResponseTypeDef",
    "ClientGetFederationTokenPolicyArnsTypeDef",
    "ClientGetFederationTokenResponseCredentialsTypeDef",
    "ClientGetFederationTokenResponseFederatedUserTypeDef",
    "ClientGetFederationTokenResponseTypeDef",
    "ClientGetSessionTokenResponseCredentialsTypeDef",
    "ClientGetSessionTokenResponseTypeDef",
)


_ClientAssumeRolePolicyArnsTypeDef = TypedDict(
    "_ClientAssumeRolePolicyArnsTypeDef", {"arn": str}, total=False
)


class ClientAssumeRolePolicyArnsTypeDef(_ClientAssumeRolePolicyArnsTypeDef):
    """
    Type definition for `ClientAssumeRole` `PolicyArns`

    A reference to the IAM managed policy that is passed as a session policy for a role session or
    a federated user session.

    - **arn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM managed policy to use as a session policy for the
      role. For more information about ARNs, see `Amazon Resource Names (ARNs) and AWS Service
      Namespaces <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html>`__ in
      the *AWS General Reference* .
    """


_ClientAssumeRoleResponseAssumedRoleUserTypeDef = TypedDict(
    "_ClientAssumeRoleResponseAssumedRoleUserTypeDef",
    {"AssumedRoleId": str, "Arn": str},
    total=False,
)


class ClientAssumeRoleResponseAssumedRoleUserTypeDef(
    _ClientAssumeRoleResponseAssumedRoleUserTypeDef
):
    """
    Type definition for `ClientAssumeRoleResponse` `AssumedRoleUser`

    The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can
    use to refer to the resulting temporary security credentials. For example, you can reference
    these credentials as a principal in a resource-based policy by using the ARN or assumed role
    ID. The ARN and ID include the ``RoleSessionName`` that you specified when you called
    ``AssumeRole`` .

    - **AssumedRoleId** *(string) --*

      A unique identifier that contains the role ID and the role session name of the role that is
      being assumed. The role ID is generated by AWS when the role is created.

    - **Arn** *(string) --*

      The ARN of the temporary security credentials that are returned from the  AssumeRole
      action. For more information about ARNs and how to use them in policies, see `IAM
      Identifiers
      <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
      IAM* .
    """


_ClientAssumeRoleResponseCredentialsTypeDef = TypedDict(
    "_ClientAssumeRoleResponseCredentialsTypeDef",
    {
        "AccessKeyId": str,
        "SecretAccessKey": str,
        "SessionToken": str,
        "Expiration": datetime,
    },
    total=False,
)


class ClientAssumeRoleResponseCredentialsTypeDef(
    _ClientAssumeRoleResponseCredentialsTypeDef
):
    """
    Type definition for `ClientAssumeRoleResponse` `Credentials`

    The temporary security credentials, which include an access key ID, a secret access key, and
    a security (or session) token.

    .. note::

      The size of the security token that STS API operations return is not fixed. We strongly
      recommend that you make no assumptions about the maximum size.

    - **AccessKeyId** *(string) --*

      The access key ID that identifies the temporary security credentials.

    - **SecretAccessKey** *(string) --*

      The secret access key that can be used to sign requests.

    - **SessionToken** *(string) --*

      The token that users must pass to the service API to use the temporary credentials.

    - **Expiration** *(datetime) --*

      The date on which the current credentials expire.
    """


_ClientAssumeRoleResponseTypeDef = TypedDict(
    "_ClientAssumeRoleResponseTypeDef",
    {
        "Credentials": ClientAssumeRoleResponseCredentialsTypeDef,
        "AssumedRoleUser": ClientAssumeRoleResponseAssumedRoleUserTypeDef,
        "PackedPolicySize": int,
    },
    total=False,
)


class ClientAssumeRoleResponseTypeDef(_ClientAssumeRoleResponseTypeDef):
    """
    Type definition for `ClientAssumeRole` `Response`

    Contains the response to a successful  AssumeRole request, including temporary AWS credentials
    that can be used to make AWS requests.

    - **Credentials** *(dict) --*

      The temporary security credentials, which include an access key ID, a secret access key, and
      a security (or session) token.

      .. note::

        The size of the security token that STS API operations return is not fixed. We strongly
        recommend that you make no assumptions about the maximum size.

      - **AccessKeyId** *(string) --*

        The access key ID that identifies the temporary security credentials.

      - **SecretAccessKey** *(string) --*

        The secret access key that can be used to sign requests.

      - **SessionToken** *(string) --*

        The token that users must pass to the service API to use the temporary credentials.

      - **Expiration** *(datetime) --*

        The date on which the current credentials expire.

    - **AssumedRoleUser** *(dict) --*

      The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can
      use to refer to the resulting temporary security credentials. For example, you can reference
      these credentials as a principal in a resource-based policy by using the ARN or assumed role
      ID. The ARN and ID include the ``RoleSessionName`` that you specified when you called
      ``AssumeRole`` .

      - **AssumedRoleId** *(string) --*

        A unique identifier that contains the role ID and the role session name of the role that is
        being assumed. The role ID is generated by AWS when the role is created.

      - **Arn** *(string) --*

        The ARN of the temporary security credentials that are returned from the  AssumeRole
        action. For more information about ARNs and how to use them in policies, see `IAM
        Identifiers
        <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
        IAM* .

    - **PackedPolicySize** *(integer) --*

      A percentage value that indicates the size of the policy in packed form. The service rejects
      any policy with a packed size greater than 100 percent, which means the policy exceeded the
      allowed space.
    """


_ClientAssumeRoleWithSamlPolicyArnsTypeDef = TypedDict(
    "_ClientAssumeRoleWithSamlPolicyArnsTypeDef", {"arn": str}, total=False
)


class ClientAssumeRoleWithSamlPolicyArnsTypeDef(
    _ClientAssumeRoleWithSamlPolicyArnsTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithSaml` `PolicyArns`

    A reference to the IAM managed policy that is passed as a session policy for a role session or
    a federated user session.

    - **arn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM managed policy to use as a session policy for the
      role. For more information about ARNs, see `Amazon Resource Names (ARNs) and AWS Service
      Namespaces <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html>`__ in
      the *AWS General Reference* .
    """


_ClientAssumeRoleWithSamlResponseAssumedRoleUserTypeDef = TypedDict(
    "_ClientAssumeRoleWithSamlResponseAssumedRoleUserTypeDef",
    {"AssumedRoleId": str, "Arn": str},
    total=False,
)


class ClientAssumeRoleWithSamlResponseAssumedRoleUserTypeDef(
    _ClientAssumeRoleWithSamlResponseAssumedRoleUserTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithSamlResponse` `AssumedRoleUser`

    The identifiers for the temporary security credentials that the operation returns.

    - **AssumedRoleId** *(string) --*

      A unique identifier that contains the role ID and the role session name of the role that is
      being assumed. The role ID is generated by AWS when the role is created.

    - **Arn** *(string) --*

      The ARN of the temporary security credentials that are returned from the  AssumeRole
      action. For more information about ARNs and how to use them in policies, see `IAM
      Identifiers
      <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
      IAM* .
    """


_ClientAssumeRoleWithSamlResponseCredentialsTypeDef = TypedDict(
    "_ClientAssumeRoleWithSamlResponseCredentialsTypeDef",
    {
        "AccessKeyId": str,
        "SecretAccessKey": str,
        "SessionToken": str,
        "Expiration": datetime,
    },
    total=False,
)


class ClientAssumeRoleWithSamlResponseCredentialsTypeDef(
    _ClientAssumeRoleWithSamlResponseCredentialsTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithSamlResponse` `Credentials`

    The temporary security credentials, which include an access key ID, a secret access key, and
    a security (or session) token.

    .. note::

      The size of the security token that STS API operations return is not fixed. We strongly
      recommend that you make no assumptions about the maximum size.

    - **AccessKeyId** *(string) --*

      The access key ID that identifies the temporary security credentials.

    - **SecretAccessKey** *(string) --*

      The secret access key that can be used to sign requests.

    - **SessionToken** *(string) --*

      The token that users must pass to the service API to use the temporary credentials.

    - **Expiration** *(datetime) --*

      The date on which the current credentials expire.
    """


_ClientAssumeRoleWithSamlResponseTypeDef = TypedDict(
    "_ClientAssumeRoleWithSamlResponseTypeDef",
    {
        "Credentials": ClientAssumeRoleWithSamlResponseCredentialsTypeDef,
        "AssumedRoleUser": ClientAssumeRoleWithSamlResponseAssumedRoleUserTypeDef,
        "PackedPolicySize": int,
        "Subject": str,
        "SubjectType": str,
        "Issuer": str,
        "Audience": str,
        "NameQualifier": str,
    },
    total=False,
)


class ClientAssumeRoleWithSamlResponseTypeDef(_ClientAssumeRoleWithSamlResponseTypeDef):
    """
    Type definition for `ClientAssumeRoleWithSaml` `Response`

    Contains the response to a successful  AssumeRoleWithSAML request, including temporary AWS
    credentials that can be used to make AWS requests.

    - **Credentials** *(dict) --*

      The temporary security credentials, which include an access key ID, a secret access key, and
      a security (or session) token.

      .. note::

        The size of the security token that STS API operations return is not fixed. We strongly
        recommend that you make no assumptions about the maximum size.

      - **AccessKeyId** *(string) --*

        The access key ID that identifies the temporary security credentials.

      - **SecretAccessKey** *(string) --*

        The secret access key that can be used to sign requests.

      - **SessionToken** *(string) --*

        The token that users must pass to the service API to use the temporary credentials.

      - **Expiration** *(datetime) --*

        The date on which the current credentials expire.

    - **AssumedRoleUser** *(dict) --*

      The identifiers for the temporary security credentials that the operation returns.

      - **AssumedRoleId** *(string) --*

        A unique identifier that contains the role ID and the role session name of the role that is
        being assumed. The role ID is generated by AWS when the role is created.

      - **Arn** *(string) --*

        The ARN of the temporary security credentials that are returned from the  AssumeRole
        action. For more information about ARNs and how to use them in policies, see `IAM
        Identifiers
        <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
        IAM* .

    - **PackedPolicySize** *(integer) --*

      A percentage value that indicates the size of the policy in packed form. The service rejects
      any policy with a packed size greater than 100 percent, which means the policy exceeded the
      allowed space.

    - **Subject** *(string) --*

      The value of the ``NameID`` element in the ``Subject`` element of the SAML assertion.

    - **SubjectType** *(string) --*

      The format of the name ID, as defined by the ``Format`` attribute in the ``NameID`` element
      of the SAML assertion. Typical examples of the format are ``transient`` or ``persistent`` .

      If the format includes the prefix ``urn:oasis:names:tc:SAML:2.0:nameid-format`` , that prefix
      is removed. For example, ``urn:oasis:names:tc:SAML:2.0:nameid-format:transient`` is returned
      as ``transient`` . If the format includes any other prefix, the format is returned with no
      modifications.

    - **Issuer** *(string) --*

      The value of the ``Issuer`` element of the SAML assertion.

    - **Audience** *(string) --*

      The value of the ``Recipient`` attribute of the ``SubjectConfirmationData`` element of the
      SAML assertion.

    - **NameQualifier** *(string) --*

      A hash value based on the concatenation of the ``Issuer`` response value, the AWS account ID,
      and the friendly name (the last part of the ARN) of the SAML provider in IAM. The combination
      of ``NameQualifier`` and ``Subject`` can be used to uniquely identify a federated user.

      The following pseudocode shows how the hash value is calculated:

       ``BASE64 ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP" ) )``
    """


_ClientAssumeRoleWithWebIdentityPolicyArnsTypeDef = TypedDict(
    "_ClientAssumeRoleWithWebIdentityPolicyArnsTypeDef", {"arn": str}, total=False
)


class ClientAssumeRoleWithWebIdentityPolicyArnsTypeDef(
    _ClientAssumeRoleWithWebIdentityPolicyArnsTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithWebIdentity` `PolicyArns`

    A reference to the IAM managed policy that is passed as a session policy for a role session or
    a federated user session.

    - **arn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM managed policy to use as a session policy for the
      role. For more information about ARNs, see `Amazon Resource Names (ARNs) and AWS Service
      Namespaces <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html>`__ in
      the *AWS General Reference* .
    """


_ClientAssumeRoleWithWebIdentityResponseAssumedRoleUserTypeDef = TypedDict(
    "_ClientAssumeRoleWithWebIdentityResponseAssumedRoleUserTypeDef",
    {"AssumedRoleId": str, "Arn": str},
    total=False,
)


class ClientAssumeRoleWithWebIdentityResponseAssumedRoleUserTypeDef(
    _ClientAssumeRoleWithWebIdentityResponseAssumedRoleUserTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithWebIdentityResponse` `AssumedRoleUser`

    The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can
    use to refer to the resulting temporary security credentials. For example, you can reference
    these credentials as a principal in a resource-based policy by using the ARN or assumed role
    ID. The ARN and ID include the ``RoleSessionName`` that you specified when you called
    ``AssumeRole`` .

    - **AssumedRoleId** *(string) --*

      A unique identifier that contains the role ID and the role session name of the role that is
      being assumed. The role ID is generated by AWS when the role is created.

    - **Arn** *(string) --*

      The ARN of the temporary security credentials that are returned from the  AssumeRole
      action. For more information about ARNs and how to use them in policies, see `IAM
      Identifiers
      <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
      IAM* .
    """


_ClientAssumeRoleWithWebIdentityResponseCredentialsTypeDef = TypedDict(
    "_ClientAssumeRoleWithWebIdentityResponseCredentialsTypeDef",
    {
        "AccessKeyId": str,
        "SecretAccessKey": str,
        "SessionToken": str,
        "Expiration": datetime,
    },
    total=False,
)


class ClientAssumeRoleWithWebIdentityResponseCredentialsTypeDef(
    _ClientAssumeRoleWithWebIdentityResponseCredentialsTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithWebIdentityResponse` `Credentials`

    The temporary security credentials, which include an access key ID, a secret access key, and
    a security token.

    .. note::

      The size of the security token that STS API operations return is not fixed. We strongly
      recommend that you make no assumptions about the maximum size.

    - **AccessKeyId** *(string) --*

      The access key ID that identifies the temporary security credentials.

    - **SecretAccessKey** *(string) --*

      The secret access key that can be used to sign requests.

    - **SessionToken** *(string) --*

      The token that users must pass to the service API to use the temporary credentials.

    - **Expiration** *(datetime) --*

      The date on which the current credentials expire.
    """


_ClientAssumeRoleWithWebIdentityResponseTypeDef = TypedDict(
    "_ClientAssumeRoleWithWebIdentityResponseTypeDef",
    {
        "Credentials": ClientAssumeRoleWithWebIdentityResponseCredentialsTypeDef,
        "SubjectFromWebIdentityToken": str,
        "AssumedRoleUser": ClientAssumeRoleWithWebIdentityResponseAssumedRoleUserTypeDef,
        "PackedPolicySize": int,
        "Provider": str,
        "Audience": str,
    },
    total=False,
)


class ClientAssumeRoleWithWebIdentityResponseTypeDef(
    _ClientAssumeRoleWithWebIdentityResponseTypeDef
):
    """
    Type definition for `ClientAssumeRoleWithWebIdentity` `Response`

    Contains the response to a successful  AssumeRoleWithWebIdentity request, including temporary
    AWS credentials that can be used to make AWS requests.

    - **Credentials** *(dict) --*

      The temporary security credentials, which include an access key ID, a secret access key, and
      a security token.

      .. note::

        The size of the security token that STS API operations return is not fixed. We strongly
        recommend that you make no assumptions about the maximum size.

      - **AccessKeyId** *(string) --*

        The access key ID that identifies the temporary security credentials.

      - **SecretAccessKey** *(string) --*

        The secret access key that can be used to sign requests.

      - **SessionToken** *(string) --*

        The token that users must pass to the service API to use the temporary credentials.

      - **Expiration** *(datetime) --*

        The date on which the current credentials expire.

    - **SubjectFromWebIdentityToken** *(string) --*

      The unique user identifier that is returned by the identity provider. This identifier is
      associated with the ``WebIdentityToken`` that was submitted with the
      ``AssumeRoleWithWebIdentity`` call. The identifier is typically unique to the user and the
      application that acquired the ``WebIdentityToken`` (pairwise identifier). For OpenID Connect
      ID tokens, this field contains the value returned by the identity provider as the token's
      ``sub`` (Subject) claim.

    - **AssumedRoleUser** *(dict) --*

      The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can
      use to refer to the resulting temporary security credentials. For example, you can reference
      these credentials as a principal in a resource-based policy by using the ARN or assumed role
      ID. The ARN and ID include the ``RoleSessionName`` that you specified when you called
      ``AssumeRole`` .

      - **AssumedRoleId** *(string) --*

        A unique identifier that contains the role ID and the role session name of the role that is
        being assumed. The role ID is generated by AWS when the role is created.

      - **Arn** *(string) --*

        The ARN of the temporary security credentials that are returned from the  AssumeRole
        action. For more information about ARNs and how to use them in policies, see `IAM
        Identifiers
        <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
        IAM* .

    - **PackedPolicySize** *(integer) --*

      A percentage value that indicates the size of the policy in packed form. The service rejects
      any policy with a packed size greater than 100 percent, which means the policy exceeded the
      allowed space.

    - **Provider** *(string) --*

      The issuing authority of the web identity token presented. For OpenID Connect ID tokens, this
      contains the value of the ``iss`` field. For OAuth 2.0 access tokens, this contains the value
      of the ``ProviderId`` parameter that was passed in the ``AssumeRoleWithWebIdentity`` request.

    - **Audience** *(string) --*

      The intended audience (also known as client ID) of the web identity token. This is
      traditionally the client identifier issued to the application that requested the web identity
      token.
    """


_ClientDecodeAuthorizationMessageResponseTypeDef = TypedDict(
    "_ClientDecodeAuthorizationMessageResponseTypeDef",
    {"DecodedMessage": str},
    total=False,
)


class ClientDecodeAuthorizationMessageResponseTypeDef(
    _ClientDecodeAuthorizationMessageResponseTypeDef
):
    """
    Type definition for `ClientDecodeAuthorizationMessage` `Response`

    A document that contains additional information about the authorization status of a request
    from an encoded message that is returned in response to an AWS request.

    - **DecodedMessage** *(string) --*

      An XML document that contains the decoded message.
    """


_ClientGetAccessKeyInfoResponseTypeDef = TypedDict(
    "_ClientGetAccessKeyInfoResponseTypeDef", {"Account": str}, total=False
)


class ClientGetAccessKeyInfoResponseTypeDef(_ClientGetAccessKeyInfoResponseTypeDef):
    """
    Type definition for `ClientGetAccessKeyInfo` `Response`

    - **Account** *(string) --*

      The number used to identify the AWS account.
    """


_ClientGetCallerIdentityResponseTypeDef = TypedDict(
    "_ClientGetCallerIdentityResponseTypeDef",
    {"UserId": str, "Account": str, "Arn": str},
    total=False,
)


class ClientGetCallerIdentityResponseTypeDef(_ClientGetCallerIdentityResponseTypeDef):
    """
    Type definition for `ClientGetCallerIdentity` `Response`

    Contains the response to a successful  GetCallerIdentity request, including information about
    the entity making the request.

    - **UserId** *(string) --*

      The unique identifier of the calling entity. The exact value depends on the type of entity
      that is making the call. The values returned are those listed in the **aws:userid** column in
      the `Principal table
      <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#principaltable>`__
      found on the **Policy Variables** reference page in the *IAM User Guide* .

    - **Account** *(string) --*

      The AWS account ID number of the account that owns or contains the calling entity.

    - **Arn** *(string) --*

      The AWS ARN associated with the calling entity.
    """


_ClientGetFederationTokenPolicyArnsTypeDef = TypedDict(
    "_ClientGetFederationTokenPolicyArnsTypeDef", {"arn": str}, total=False
)


class ClientGetFederationTokenPolicyArnsTypeDef(
    _ClientGetFederationTokenPolicyArnsTypeDef
):
    """
    Type definition for `ClientGetFederationToken` `PolicyArns`

    A reference to the IAM managed policy that is passed as a session policy for a role session or
    a federated user session.

    - **arn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM managed policy to use as a session policy for the
      role. For more information about ARNs, see `Amazon Resource Names (ARNs) and AWS Service
      Namespaces <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html>`__ in
      the *AWS General Reference* .
    """


_ClientGetFederationTokenResponseCredentialsTypeDef = TypedDict(
    "_ClientGetFederationTokenResponseCredentialsTypeDef",
    {
        "AccessKeyId": str,
        "SecretAccessKey": str,
        "SessionToken": str,
        "Expiration": datetime,
    },
    total=False,
)


class ClientGetFederationTokenResponseCredentialsTypeDef(
    _ClientGetFederationTokenResponseCredentialsTypeDef
):
    """
    Type definition for `ClientGetFederationTokenResponse` `Credentials`

    The temporary security credentials, which include an access key ID, a secret access key, and
    a security (or session) token.

    .. note::

      The size of the security token that STS API operations return is not fixed. We strongly
      recommend that you make no assumptions about the maximum size.

    - **AccessKeyId** *(string) --*

      The access key ID that identifies the temporary security credentials.

    - **SecretAccessKey** *(string) --*

      The secret access key that can be used to sign requests.

    - **SessionToken** *(string) --*

      The token that users must pass to the service API to use the temporary credentials.

    - **Expiration** *(datetime) --*

      The date on which the current credentials expire.
    """


_ClientGetFederationTokenResponseFederatedUserTypeDef = TypedDict(
    "_ClientGetFederationTokenResponseFederatedUserTypeDef",
    {"FederatedUserId": str, "Arn": str},
    total=False,
)


class ClientGetFederationTokenResponseFederatedUserTypeDef(
    _ClientGetFederationTokenResponseFederatedUserTypeDef
):
    """
    Type definition for `ClientGetFederationTokenResponse` `FederatedUser`

    Identifiers for the federated user associated with the credentials (such as
    ``arn:aws:sts::123456789012:federated-user/Bob`` or ``123456789012:Bob`` ). You can use the
    federated user's ARN in your resource-based policies, such as an Amazon S3 bucket policy.

    - **FederatedUserId** *(string) --*

      The string that identifies the federated user associated with the credentials, similar to
      the unique ID of an IAM user.

    - **Arn** *(string) --*

      The ARN that specifies the federated user that is associated with the credentials. For more
      information about ARNs and how to use them in policies, see `IAM Identifiers
      <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
      IAM* .
    """


_ClientGetFederationTokenResponseTypeDef = TypedDict(
    "_ClientGetFederationTokenResponseTypeDef",
    {
        "Credentials": ClientGetFederationTokenResponseCredentialsTypeDef,
        "FederatedUser": ClientGetFederationTokenResponseFederatedUserTypeDef,
        "PackedPolicySize": int,
    },
    total=False,
)


class ClientGetFederationTokenResponseTypeDef(_ClientGetFederationTokenResponseTypeDef):
    """
    Type definition for `ClientGetFederationToken` `Response`

    Contains the response to a successful  GetFederationToken request, including temporary AWS
    credentials that can be used to make AWS requests.

    - **Credentials** *(dict) --*

      The temporary security credentials, which include an access key ID, a secret access key, and
      a security (or session) token.

      .. note::

        The size of the security token that STS API operations return is not fixed. We strongly
        recommend that you make no assumptions about the maximum size.

      - **AccessKeyId** *(string) --*

        The access key ID that identifies the temporary security credentials.

      - **SecretAccessKey** *(string) --*

        The secret access key that can be used to sign requests.

      - **SessionToken** *(string) --*

        The token that users must pass to the service API to use the temporary credentials.

      - **Expiration** *(datetime) --*

        The date on which the current credentials expire.

    - **FederatedUser** *(dict) --*

      Identifiers for the federated user associated with the credentials (such as
      ``arn:aws:sts::123456789012:federated-user/Bob`` or ``123456789012:Bob`` ). You can use the
      federated user's ARN in your resource-based policies, such as an Amazon S3 bucket policy.

      - **FederatedUserId** *(string) --*

        The string that identifies the federated user associated with the credentials, similar to
        the unique ID of an IAM user.

      - **Arn** *(string) --*

        The ARN that specifies the federated user that is associated with the credentials. For more
        information about ARNs and how to use them in policies, see `IAM Identifiers
        <https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html>`__ in *Using
        IAM* .

    - **PackedPolicySize** *(integer) --*

      A percentage value indicating the size of the policy in packed form. The service rejects
      policies for which the packed size is greater than 100 percent of the allowed value.
    """


_ClientGetSessionTokenResponseCredentialsTypeDef = TypedDict(
    "_ClientGetSessionTokenResponseCredentialsTypeDef",
    {
        "AccessKeyId": str,
        "SecretAccessKey": str,
        "SessionToken": str,
        "Expiration": datetime,
    },
    total=False,
)


class ClientGetSessionTokenResponseCredentialsTypeDef(
    _ClientGetSessionTokenResponseCredentialsTypeDef
):
    """
    Type definition for `ClientGetSessionTokenResponse` `Credentials`

    The temporary security credentials, which include an access key ID, a secret access key, and
    a security (or session) token.

    .. note::

      The size of the security token that STS API operations return is not fixed. We strongly
      recommend that you make no assumptions about the maximum size.

    - **AccessKeyId** *(string) --*

      The access key ID that identifies the temporary security credentials.

    - **SecretAccessKey** *(string) --*

      The secret access key that can be used to sign requests.

    - **SessionToken** *(string) --*

      The token that users must pass to the service API to use the temporary credentials.

    - **Expiration** *(datetime) --*

      The date on which the current credentials expire.
    """


_ClientGetSessionTokenResponseTypeDef = TypedDict(
    "_ClientGetSessionTokenResponseTypeDef",
    {"Credentials": ClientGetSessionTokenResponseCredentialsTypeDef},
    total=False,
)


class ClientGetSessionTokenResponseTypeDef(_ClientGetSessionTokenResponseTypeDef):
    """
    Type definition for `ClientGetSessionToken` `Response`

    Contains the response to a successful  GetSessionToken request, including temporary AWS
    credentials that can be used to make AWS requests.

    - **Credentials** *(dict) --*

      The temporary security credentials, which include an access key ID, a secret access key, and
      a security (or session) token.

      .. note::

        The size of the security token that STS API operations return is not fixed. We strongly
        recommend that you make no assumptions about the maximum size.

      - **AccessKeyId** *(string) --*

        The access key ID that identifies the temporary security credentials.

      - **SecretAccessKey** *(string) --*

        The secret access key that can be used to sign requests.

      - **SessionToken** *(string) --*

        The token that users must pass to the service API to use the temporary credentials.

      - **Expiration** *(datetime) --*

        The date on which the current credentials expire.
    """
