# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import search_proto.search_pb2 as search__pb2


class IndexStub(object):
  """Interface for service to index documents.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Post = channel.unary_unary(
        '/search.Index/Post',
        request_serializer=search__pb2.IndexRequest.SerializeToString,
        response_deserializer=search__pb2.IndexResponse.FromString,
        )


class IndexServicer(object):
  """Interface for service to index documents.
  """

  def Post(self, request, context):
    """option (google.api.http) = {
    post: "/v1/post"
    body: "*"
    };
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IndexServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Post': grpc.unary_unary_rpc_method_handler(
          servicer.Post,
          request_deserializer=search__pb2.IndexRequest.FromString,
          response_serializer=search__pb2.IndexResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'search.Index', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SearchStub(object):
  """Interface for service to search documents.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Get = channel.unary_unary(
        '/search.Search/Get',
        request_serializer=search__pb2.SearchRequest.SerializeToString,
        response_deserializer=search__pb2.SearchResponse.FromString,
        )


class SearchServicer(object):
  """Interface for service to search documents.
  """

  def Get(self, request, context):
    """option (google.api.http) = {
    get: "/v1/search"
    body: "*"
    };
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SearchServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=search__pb2.SearchRequest.FromString,
          response_serializer=search__pb2.SearchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'search.Search', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CaptionStub(object):
  """Interface for service to generate snippet.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Get = channel.unary_unary(
        '/search.Caption/Get',
        request_serializer=search__pb2.SnippetRequest.SerializeToString,
        response_deserializer=search__pb2.SnippetResponse.FromString,
        )


class CaptionServicer(object):
  """Interface for service to generate snippet.
  """

  def Get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CaptionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=search__pb2.SnippetRequest.FromString,
          response_serializer=search__pb2.SnippetResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'search.Caption', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
