"Main interface for redshift type defs"
from __future__ import annotations

from datetime import datetime
from typing import List
from typing_extensions import TypedDict


__all__ = (
    "ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeRecurringChargesTypeDef",
    "ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeTypeDef",
    "ClientAcceptReservedNodeExchangeResponseTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef",
    "ClientAuthorizeClusterSecurityGroupIngressResponseTypeDef",
    "ClientAuthorizeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef",
    "ClientAuthorizeSnapshotAccessResponseSnapshotTagsTypeDef",
    "ClientAuthorizeSnapshotAccessResponseSnapshotTypeDef",
    "ClientAuthorizeSnapshotAccessResponseTypeDef",
    "ClientBatchDeleteClusterSnapshotsIdentifiersTypeDef",
    "ClientBatchDeleteClusterSnapshotsResponseErrorsTypeDef",
    "ClientBatchDeleteClusterSnapshotsResponseTypeDef",
    "ClientBatchModifyClusterSnapshotsResponseErrorsTypeDef",
    "ClientBatchModifyClusterSnapshotsResponseTypeDef",
    "ClientCancelResizeResponseTypeDef",
    "ClientCopyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    "ClientCopyClusterSnapshotResponseSnapshotTagsTypeDef",
    "ClientCopyClusterSnapshotResponseSnapshotTypeDef",
    "ClientCopyClusterSnapshotResponseTypeDef",
    "ClientCreateClusterParameterGroupResponseClusterParameterGroupTagsTypeDef",
    "ClientCreateClusterParameterGroupResponseClusterParameterGroupTypeDef",
    "ClientCreateClusterParameterGroupResponseTypeDef",
    "ClientCreateClusterParameterGroupTagsTypeDef",
    "ClientCreateClusterResponseClusterClusterNodesTypeDef",
    "ClientCreateClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientCreateClusterResponseClusterClusterParameterGroupsTypeDef",
    "ClientCreateClusterResponseClusterClusterSecurityGroupsTypeDef",
    "ClientCreateClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientCreateClusterResponseClusterDataTransferProgressTypeDef",
    "ClientCreateClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientCreateClusterResponseClusterElasticIpStatusTypeDef",
    "ClientCreateClusterResponseClusterEndpointTypeDef",
    "ClientCreateClusterResponseClusterHsmStatusTypeDef",
    "ClientCreateClusterResponseClusterIamRolesTypeDef",
    "ClientCreateClusterResponseClusterPendingModifiedValuesTypeDef",
    "ClientCreateClusterResponseClusterResizeInfoTypeDef",
    "ClientCreateClusterResponseClusterRestoreStatusTypeDef",
    "ClientCreateClusterResponseClusterTagsTypeDef",
    "ClientCreateClusterResponseClusterVpcSecurityGroupsTypeDef",
    "ClientCreateClusterResponseClusterTypeDef",
    "ClientCreateClusterResponseTypeDef",
    "ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef",
    "ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTypeDef",
    "ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTagsTypeDef",
    "ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTypeDef",
    "ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTagsTypeDef",
    "ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTypeDef",
    "ClientCreateClusterSecurityGroupResponseTypeDef",
    "ClientCreateClusterSecurityGroupTagsTypeDef",
    "ClientCreateClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    "ClientCreateClusterSnapshotResponseSnapshotTagsTypeDef",
    "ClientCreateClusterSnapshotResponseSnapshotTypeDef",
    "ClientCreateClusterSnapshotResponseTypeDef",
    "ClientCreateClusterSnapshotTagsTypeDef",
    "ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    "ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef",
    "ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef",
    "ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTypeDef",
    "ClientCreateClusterSubnetGroupResponseTypeDef",
    "ClientCreateClusterSubnetGroupTagsTypeDef",
    "ClientCreateClusterTagsTypeDef",
    "ClientCreateEventSubscriptionResponseEventSubscriptionTagsTypeDef",
    "ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef",
    "ClientCreateEventSubscriptionResponseTypeDef",
    "ClientCreateEventSubscriptionTagsTypeDef",
    "ClientCreateHsmClientCertificateResponseHsmClientCertificateTagsTypeDef",
    "ClientCreateHsmClientCertificateResponseHsmClientCertificateTypeDef",
    "ClientCreateHsmClientCertificateResponseTypeDef",
    "ClientCreateHsmClientCertificateTagsTypeDef",
    "ClientCreateHsmConfigurationResponseHsmConfigurationTagsTypeDef",
    "ClientCreateHsmConfigurationResponseHsmConfigurationTypeDef",
    "ClientCreateHsmConfigurationResponseTypeDef",
    "ClientCreateHsmConfigurationTagsTypeDef",
    "ClientCreateScheduledActionResponseTargetActionResizeClusterTypeDef",
    "ClientCreateScheduledActionResponseTargetActionTypeDef",
    "ClientCreateScheduledActionResponseTypeDef",
    "ClientCreateScheduledActionTargetActionResizeClusterTypeDef",
    "ClientCreateScheduledActionTargetActionTypeDef",
    "ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTagsTypeDef",
    "ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTypeDef",
    "ClientCreateSnapshotCopyGrantResponseTypeDef",
    "ClientCreateSnapshotCopyGrantTagsTypeDef",
    "ClientCreateSnapshotScheduleResponseAssociatedClustersTypeDef",
    "ClientCreateSnapshotScheduleResponseTagsTypeDef",
    "ClientCreateSnapshotScheduleResponseTypeDef",
    "ClientCreateSnapshotScheduleTagsTypeDef",
    "ClientCreateTagsTagsTypeDef",
    "ClientDeleteClusterResponseClusterClusterNodesTypeDef",
    "ClientDeleteClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientDeleteClusterResponseClusterClusterParameterGroupsTypeDef",
    "ClientDeleteClusterResponseClusterClusterSecurityGroupsTypeDef",
    "ClientDeleteClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientDeleteClusterResponseClusterDataTransferProgressTypeDef",
    "ClientDeleteClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientDeleteClusterResponseClusterElasticIpStatusTypeDef",
    "ClientDeleteClusterResponseClusterEndpointTypeDef",
    "ClientDeleteClusterResponseClusterHsmStatusTypeDef",
    "ClientDeleteClusterResponseClusterIamRolesTypeDef",
    "ClientDeleteClusterResponseClusterPendingModifiedValuesTypeDef",
    "ClientDeleteClusterResponseClusterResizeInfoTypeDef",
    "ClientDeleteClusterResponseClusterRestoreStatusTypeDef",
    "ClientDeleteClusterResponseClusterTagsTypeDef",
    "ClientDeleteClusterResponseClusterVpcSecurityGroupsTypeDef",
    "ClientDeleteClusterResponseClusterTypeDef",
    "ClientDeleteClusterResponseTypeDef",
    "ClientDeleteClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    "ClientDeleteClusterSnapshotResponseSnapshotTagsTypeDef",
    "ClientDeleteClusterSnapshotResponseSnapshotTypeDef",
    "ClientDeleteClusterSnapshotResponseTypeDef",
    "ClientDescribeAccountAttributesResponseAccountAttributesAttributeValuesTypeDef",
    "ClientDescribeAccountAttributesResponseAccountAttributesTypeDef",
    "ClientDescribeAccountAttributesResponseTypeDef",
    "ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsRevisionTargetsTypeDef",
    "ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsTypeDef",
    "ClientDescribeClusterDbRevisionsResponseTypeDef",
    "ClientDescribeClusterParameterGroupsResponseParameterGroupsTagsTypeDef",
    "ClientDescribeClusterParameterGroupsResponseParameterGroupsTypeDef",
    "ClientDescribeClusterParameterGroupsResponseTypeDef",
    "ClientDescribeClusterParametersResponseParametersTypeDef",
    "ClientDescribeClusterParametersResponseTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTagsTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTagsTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTypeDef",
    "ClientDescribeClusterSecurityGroupsResponseTypeDef",
    "ClientDescribeClusterSnapshotsResponseSnapshotsAccountsWithRestoreAccessTypeDef",
    "ClientDescribeClusterSnapshotsResponseSnapshotsTagsTypeDef",
    "ClientDescribeClusterSnapshotsResponseSnapshotsTypeDef",
    "ClientDescribeClusterSnapshotsResponseTypeDef",
    "ClientDescribeClusterSnapshotsSortingEntitiesTypeDef",
    "ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    "ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsTypeDef",
    "ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTagsTypeDef",
    "ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTypeDef",
    "ClientDescribeClusterSubnetGroupsResponseTypeDef",
    "ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef",
    "ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsTypeDef",
    "ClientDescribeClusterTracksResponseMaintenanceTracksTypeDef",
    "ClientDescribeClusterTracksResponseTypeDef",
    "ClientDescribeClusterVersionsResponseClusterVersionsTypeDef",
    "ClientDescribeClusterVersionsResponseTypeDef",
    "ClientDescribeClustersResponseClustersClusterNodesTypeDef",
    "ClientDescribeClustersResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientDescribeClustersResponseClustersClusterParameterGroupsTypeDef",
    "ClientDescribeClustersResponseClustersClusterSecurityGroupsTypeDef",
    "ClientDescribeClustersResponseClustersClusterSnapshotCopyStatusTypeDef",
    "ClientDescribeClustersResponseClustersDataTransferProgressTypeDef",
    "ClientDescribeClustersResponseClustersDeferredMaintenanceWindowsTypeDef",
    "ClientDescribeClustersResponseClustersElasticIpStatusTypeDef",
    "ClientDescribeClustersResponseClustersEndpointTypeDef",
    "ClientDescribeClustersResponseClustersHsmStatusTypeDef",
    "ClientDescribeClustersResponseClustersIamRolesTypeDef",
    "ClientDescribeClustersResponseClustersPendingModifiedValuesTypeDef",
    "ClientDescribeClustersResponseClustersResizeInfoTypeDef",
    "ClientDescribeClustersResponseClustersRestoreStatusTypeDef",
    "ClientDescribeClustersResponseClustersTagsTypeDef",
    "ClientDescribeClustersResponseClustersVpcSecurityGroupsTypeDef",
    "ClientDescribeClustersResponseClustersTypeDef",
    "ClientDescribeClustersResponseTypeDef",
    "ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersParametersTypeDef",
    "ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersTypeDef",
    "ClientDescribeDefaultClusterParametersResponseTypeDef",
    "ClientDescribeEventCategoriesResponseEventCategoriesMapListEventsTypeDef",
    "ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef",
    "ClientDescribeEventCategoriesResponseTypeDef",
    "ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTagsTypeDef",
    "ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef",
    "ClientDescribeEventSubscriptionsResponseTypeDef",
    "ClientDescribeEventsResponseEventsTypeDef",
    "ClientDescribeEventsResponseTypeDef",
    "ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTagsTypeDef",
    "ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTypeDef",
    "ClientDescribeHsmClientCertificatesResponseTypeDef",
    "ClientDescribeHsmConfigurationsResponseHsmConfigurationsTagsTypeDef",
    "ClientDescribeHsmConfigurationsResponseHsmConfigurationsTypeDef",
    "ClientDescribeHsmConfigurationsResponseTypeDef",
    "ClientDescribeLoggingStatusResponseTypeDef",
    "ClientDescribeNodeConfigurationOptionsFiltersTypeDef",
    "ClientDescribeNodeConfigurationOptionsResponseNodeConfigurationOptionListTypeDef",
    "ClientDescribeNodeConfigurationOptionsResponseTypeDef",
    "ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef",
    "ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesTypeDef",
    "ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsTypeDef",
    "ClientDescribeOrderableClusterOptionsResponseTypeDef",
    "ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef",
    "ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsTypeDef",
    "ClientDescribeReservedNodeOfferingsResponseTypeDef",
    "ClientDescribeReservedNodesResponseReservedNodesRecurringChargesTypeDef",
    "ClientDescribeReservedNodesResponseReservedNodesTypeDef",
    "ClientDescribeReservedNodesResponseTypeDef",
    "ClientDescribeResizeResponseTypeDef",
    "ClientDescribeScheduledActionsFiltersTypeDef",
    "ClientDescribeScheduledActionsResponseScheduledActionsTargetActionResizeClusterTypeDef",
    "ClientDescribeScheduledActionsResponseScheduledActionsTargetActionTypeDef",
    "ClientDescribeScheduledActionsResponseScheduledActionsTypeDef",
    "ClientDescribeScheduledActionsResponseTypeDef",
    "ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTagsTypeDef",
    "ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTypeDef",
    "ClientDescribeSnapshotCopyGrantsResponseTypeDef",
    "ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesAssociatedClustersTypeDef",
    "ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTagsTypeDef",
    "ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTypeDef",
    "ClientDescribeSnapshotSchedulesResponseTypeDef",
    "ClientDescribeStorageResponseTypeDef",
    "ClientDescribeTableRestoreStatusResponseTableRestoreStatusDetailsTypeDef",
    "ClientDescribeTableRestoreStatusResponseTypeDef",
    "ClientDescribeTagsResponseTaggedResourcesTagTypeDef",
    "ClientDescribeTagsResponseTaggedResourcesTypeDef",
    "ClientDescribeTagsResponseTypeDef",
    "ClientDisableLoggingResponseTypeDef",
    "ClientDisableSnapshotCopyResponseClusterClusterNodesTypeDef",
    "ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef",
    "ClientDisableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef",
    "ClientDisableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientDisableSnapshotCopyResponseClusterDataTransferProgressTypeDef",
    "ClientDisableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientDisableSnapshotCopyResponseClusterElasticIpStatusTypeDef",
    "ClientDisableSnapshotCopyResponseClusterEndpointTypeDef",
    "ClientDisableSnapshotCopyResponseClusterHsmStatusTypeDef",
    "ClientDisableSnapshotCopyResponseClusterIamRolesTypeDef",
    "ClientDisableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef",
    "ClientDisableSnapshotCopyResponseClusterResizeInfoTypeDef",
    "ClientDisableSnapshotCopyResponseClusterRestoreStatusTypeDef",
    "ClientDisableSnapshotCopyResponseClusterTagsTypeDef",
    "ClientDisableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef",
    "ClientDisableSnapshotCopyResponseClusterTypeDef",
    "ClientDisableSnapshotCopyResponseTypeDef",
    "ClientEnableLoggingResponseTypeDef",
    "ClientEnableSnapshotCopyResponseClusterClusterNodesTypeDef",
    "ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef",
    "ClientEnableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef",
    "ClientEnableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientEnableSnapshotCopyResponseClusterDataTransferProgressTypeDef",
    "ClientEnableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientEnableSnapshotCopyResponseClusterElasticIpStatusTypeDef",
    "ClientEnableSnapshotCopyResponseClusterEndpointTypeDef",
    "ClientEnableSnapshotCopyResponseClusterHsmStatusTypeDef",
    "ClientEnableSnapshotCopyResponseClusterIamRolesTypeDef",
    "ClientEnableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef",
    "ClientEnableSnapshotCopyResponseClusterResizeInfoTypeDef",
    "ClientEnableSnapshotCopyResponseClusterRestoreStatusTypeDef",
    "ClientEnableSnapshotCopyResponseClusterTagsTypeDef",
    "ClientEnableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef",
    "ClientEnableSnapshotCopyResponseClusterTypeDef",
    "ClientEnableSnapshotCopyResponseTypeDef",
    "ClientGetClusterCredentialsResponseTypeDef",
    "ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef",
    "ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsTypeDef",
    "ClientGetReservedNodeExchangeOfferingsResponseTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterClusterNodesTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterClusterSecurityGroupsTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterDataTransferProgressTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterElasticIpStatusTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterEndpointTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterHsmStatusTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterIamRolesTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterPendingModifiedValuesTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterResizeInfoTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterRestoreStatusTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterTagsTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterVpcSecurityGroupsTypeDef",
    "ClientModifyClusterDbRevisionResponseClusterTypeDef",
    "ClientModifyClusterDbRevisionResponseTypeDef",
    "ClientModifyClusterIamRolesResponseClusterClusterNodesTypeDef",
    "ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsTypeDef",
    "ClientModifyClusterIamRolesResponseClusterClusterSecurityGroupsTypeDef",
    "ClientModifyClusterIamRolesResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientModifyClusterIamRolesResponseClusterDataTransferProgressTypeDef",
    "ClientModifyClusterIamRolesResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientModifyClusterIamRolesResponseClusterElasticIpStatusTypeDef",
    "ClientModifyClusterIamRolesResponseClusterEndpointTypeDef",
    "ClientModifyClusterIamRolesResponseClusterHsmStatusTypeDef",
    "ClientModifyClusterIamRolesResponseClusterIamRolesTypeDef",
    "ClientModifyClusterIamRolesResponseClusterPendingModifiedValuesTypeDef",
    "ClientModifyClusterIamRolesResponseClusterResizeInfoTypeDef",
    "ClientModifyClusterIamRolesResponseClusterRestoreStatusTypeDef",
    "ClientModifyClusterIamRolesResponseClusterTagsTypeDef",
    "ClientModifyClusterIamRolesResponseClusterVpcSecurityGroupsTypeDef",
    "ClientModifyClusterIamRolesResponseClusterTypeDef",
    "ClientModifyClusterIamRolesResponseTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterClusterNodesTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterClusterSecurityGroupsTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterDataTransferProgressTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterElasticIpStatusTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterEndpointTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterHsmStatusTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterIamRolesTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterPendingModifiedValuesTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterResizeInfoTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterRestoreStatusTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterTagsTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterVpcSecurityGroupsTypeDef",
    "ClientModifyClusterMaintenanceResponseClusterTypeDef",
    "ClientModifyClusterMaintenanceResponseTypeDef",
    "ClientModifyClusterParameterGroupParametersTypeDef",
    "ClientModifyClusterParameterGroupResponseTypeDef",
    "ClientModifyClusterResponseClusterClusterNodesTypeDef",
    "ClientModifyClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientModifyClusterResponseClusterClusterParameterGroupsTypeDef",
    "ClientModifyClusterResponseClusterClusterSecurityGroupsTypeDef",
    "ClientModifyClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientModifyClusterResponseClusterDataTransferProgressTypeDef",
    "ClientModifyClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientModifyClusterResponseClusterElasticIpStatusTypeDef",
    "ClientModifyClusterResponseClusterEndpointTypeDef",
    "ClientModifyClusterResponseClusterHsmStatusTypeDef",
    "ClientModifyClusterResponseClusterIamRolesTypeDef",
    "ClientModifyClusterResponseClusterPendingModifiedValuesTypeDef",
    "ClientModifyClusterResponseClusterResizeInfoTypeDef",
    "ClientModifyClusterResponseClusterRestoreStatusTypeDef",
    "ClientModifyClusterResponseClusterTagsTypeDef",
    "ClientModifyClusterResponseClusterVpcSecurityGroupsTypeDef",
    "ClientModifyClusterResponseClusterTypeDef",
    "ClientModifyClusterResponseTypeDef",
    "ClientModifyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    "ClientModifyClusterSnapshotResponseSnapshotTagsTypeDef",
    "ClientModifyClusterSnapshotResponseSnapshotTypeDef",
    "ClientModifyClusterSnapshotResponseTypeDef",
    "ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    "ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    "ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef",
    "ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef",
    "ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTypeDef",
    "ClientModifyClusterSubnetGroupResponseTypeDef",
    "ClientModifyEventSubscriptionResponseEventSubscriptionTagsTypeDef",
    "ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef",
    "ClientModifyEventSubscriptionResponseTypeDef",
    "ClientModifyScheduledActionResponseTargetActionResizeClusterTypeDef",
    "ClientModifyScheduledActionResponseTargetActionTypeDef",
    "ClientModifyScheduledActionResponseTypeDef",
    "ClientModifyScheduledActionTargetActionResizeClusterTypeDef",
    "ClientModifyScheduledActionTargetActionTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterNodesTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSecurityGroupsTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterDataTransferProgressTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterElasticIpStatusTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterEndpointTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterHsmStatusTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterIamRolesTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterPendingModifiedValuesTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterResizeInfoTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterRestoreStatusTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterTagsTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterVpcSecurityGroupsTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseClusterTypeDef",
    "ClientModifySnapshotCopyRetentionPeriodResponseTypeDef",
    "ClientModifySnapshotScheduleResponseAssociatedClustersTypeDef",
    "ClientModifySnapshotScheduleResponseTagsTypeDef",
    "ClientModifySnapshotScheduleResponseTypeDef",
    "ClientPurchaseReservedNodeOfferingResponseReservedNodeRecurringChargesTypeDef",
    "ClientPurchaseReservedNodeOfferingResponseReservedNodeTypeDef",
    "ClientPurchaseReservedNodeOfferingResponseTypeDef",
    "ClientRebootClusterResponseClusterClusterNodesTypeDef",
    "ClientRebootClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientRebootClusterResponseClusterClusterParameterGroupsTypeDef",
    "ClientRebootClusterResponseClusterClusterSecurityGroupsTypeDef",
    "ClientRebootClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientRebootClusterResponseClusterDataTransferProgressTypeDef",
    "ClientRebootClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientRebootClusterResponseClusterElasticIpStatusTypeDef",
    "ClientRebootClusterResponseClusterEndpointTypeDef",
    "ClientRebootClusterResponseClusterHsmStatusTypeDef",
    "ClientRebootClusterResponseClusterIamRolesTypeDef",
    "ClientRebootClusterResponseClusterPendingModifiedValuesTypeDef",
    "ClientRebootClusterResponseClusterResizeInfoTypeDef",
    "ClientRebootClusterResponseClusterRestoreStatusTypeDef",
    "ClientRebootClusterResponseClusterTagsTypeDef",
    "ClientRebootClusterResponseClusterVpcSecurityGroupsTypeDef",
    "ClientRebootClusterResponseClusterTypeDef",
    "ClientRebootClusterResponseTypeDef",
    "ClientResetClusterParameterGroupParametersTypeDef",
    "ClientResetClusterParameterGroupResponseTypeDef",
    "ClientResizeClusterResponseClusterClusterNodesTypeDef",
    "ClientResizeClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientResizeClusterResponseClusterClusterParameterGroupsTypeDef",
    "ClientResizeClusterResponseClusterClusterSecurityGroupsTypeDef",
    "ClientResizeClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientResizeClusterResponseClusterDataTransferProgressTypeDef",
    "ClientResizeClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientResizeClusterResponseClusterElasticIpStatusTypeDef",
    "ClientResizeClusterResponseClusterEndpointTypeDef",
    "ClientResizeClusterResponseClusterHsmStatusTypeDef",
    "ClientResizeClusterResponseClusterIamRolesTypeDef",
    "ClientResizeClusterResponseClusterPendingModifiedValuesTypeDef",
    "ClientResizeClusterResponseClusterResizeInfoTypeDef",
    "ClientResizeClusterResponseClusterRestoreStatusTypeDef",
    "ClientResizeClusterResponseClusterTagsTypeDef",
    "ClientResizeClusterResponseClusterVpcSecurityGroupsTypeDef",
    "ClientResizeClusterResponseClusterTypeDef",
    "ClientResizeClusterResponseTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterClusterNodesTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterClusterSecurityGroupsTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterDataTransferProgressTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterElasticIpStatusTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterEndpointTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterHsmStatusTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterIamRolesTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterPendingModifiedValuesTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterResizeInfoTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterRestoreStatusTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterTagsTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterVpcSecurityGroupsTypeDef",
    "ClientRestoreFromClusterSnapshotResponseClusterTypeDef",
    "ClientRestoreFromClusterSnapshotResponseTypeDef",
    "ClientRestoreTableFromClusterSnapshotResponseTableRestoreStatusTypeDef",
    "ClientRestoreTableFromClusterSnapshotResponseTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef",
    "ClientRevokeClusterSecurityGroupIngressResponseTypeDef",
    "ClientRevokeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef",
    "ClientRevokeSnapshotAccessResponseSnapshotTagsTypeDef",
    "ClientRevokeSnapshotAccessResponseSnapshotTypeDef",
    "ClientRevokeSnapshotAccessResponseTypeDef",
    "ClientRotateEncryptionKeyResponseClusterClusterNodesTypeDef",
    "ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    "ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsTypeDef",
    "ClientRotateEncryptionKeyResponseClusterClusterSecurityGroupsTypeDef",
    "ClientRotateEncryptionKeyResponseClusterClusterSnapshotCopyStatusTypeDef",
    "ClientRotateEncryptionKeyResponseClusterDataTransferProgressTypeDef",
    "ClientRotateEncryptionKeyResponseClusterDeferredMaintenanceWindowsTypeDef",
    "ClientRotateEncryptionKeyResponseClusterElasticIpStatusTypeDef",
    "ClientRotateEncryptionKeyResponseClusterEndpointTypeDef",
    "ClientRotateEncryptionKeyResponseClusterHsmStatusTypeDef",
    "ClientRotateEncryptionKeyResponseClusterIamRolesTypeDef",
    "ClientRotateEncryptionKeyResponseClusterPendingModifiedValuesTypeDef",
    "ClientRotateEncryptionKeyResponseClusterResizeInfoTypeDef",
    "ClientRotateEncryptionKeyResponseClusterRestoreStatusTypeDef",
    "ClientRotateEncryptionKeyResponseClusterTagsTypeDef",
    "ClientRotateEncryptionKeyResponseClusterVpcSecurityGroupsTypeDef",
    "ClientRotateEncryptionKeyResponseClusterTypeDef",
    "ClientRotateEncryptionKeyResponseTypeDef",
    "ClusterAvailableWaitWaiterConfigTypeDef",
    "ClusterDeletedWaitWaiterConfigTypeDef",
    "ClusterRestoredWaitWaiterConfigTypeDef",
    "DescribeClusterDbRevisionsPaginatePaginationConfigTypeDef",
    "DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsRevisionTargetsTypeDef",
    "DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsTypeDef",
    "DescribeClusterDbRevisionsPaginateResponseTypeDef",
    "DescribeClusterParameterGroupsPaginatePaginationConfigTypeDef",
    "DescribeClusterParameterGroupsPaginateResponseParameterGroupsTagsTypeDef",
    "DescribeClusterParameterGroupsPaginateResponseParameterGroupsTypeDef",
    "DescribeClusterParameterGroupsPaginateResponseTypeDef",
    "DescribeClusterParametersPaginatePaginationConfigTypeDef",
    "DescribeClusterParametersPaginateResponseParametersTypeDef",
    "DescribeClusterParametersPaginateResponseTypeDef",
    "DescribeClusterSecurityGroupsPaginatePaginationConfigTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTagsTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTagsTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTypeDef",
    "DescribeClusterSecurityGroupsPaginateResponseTypeDef",
    "DescribeClusterSnapshotsPaginatePaginationConfigTypeDef",
    "DescribeClusterSnapshotsPaginateResponseSnapshotsAccountsWithRestoreAccessTypeDef",
    "DescribeClusterSnapshotsPaginateResponseSnapshotsTagsTypeDef",
    "DescribeClusterSnapshotsPaginateResponseSnapshotsTypeDef",
    "DescribeClusterSnapshotsPaginateResponseTypeDef",
    "DescribeClusterSnapshotsPaginateSortingEntitiesTypeDef",
    "DescribeClusterSubnetGroupsPaginatePaginationConfigTypeDef",
    "DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    "DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    "DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsTypeDef",
    "DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTagsTypeDef",
    "DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTypeDef",
    "DescribeClusterSubnetGroupsPaginateResponseTypeDef",
    "DescribeClusterTracksPaginatePaginationConfigTypeDef",
    "DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef",
    "DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsTypeDef",
    "DescribeClusterTracksPaginateResponseMaintenanceTracksTypeDef",
    "DescribeClusterTracksPaginateResponseTypeDef",
    "DescribeClusterVersionsPaginatePaginationConfigTypeDef",
    "DescribeClusterVersionsPaginateResponseClusterVersionsTypeDef",
    "DescribeClusterVersionsPaginateResponseTypeDef",
    "DescribeClustersPaginatePaginationConfigTypeDef",
    "DescribeClustersPaginateResponseClustersClusterNodesTypeDef",
    "DescribeClustersPaginateResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef",
    "DescribeClustersPaginateResponseClustersClusterParameterGroupsTypeDef",
    "DescribeClustersPaginateResponseClustersClusterSecurityGroupsTypeDef",
    "DescribeClustersPaginateResponseClustersClusterSnapshotCopyStatusTypeDef",
    "DescribeClustersPaginateResponseClustersDataTransferProgressTypeDef",
    "DescribeClustersPaginateResponseClustersDeferredMaintenanceWindowsTypeDef",
    "DescribeClustersPaginateResponseClustersElasticIpStatusTypeDef",
    "DescribeClustersPaginateResponseClustersEndpointTypeDef",
    "DescribeClustersPaginateResponseClustersHsmStatusTypeDef",
    "DescribeClustersPaginateResponseClustersIamRolesTypeDef",
    "DescribeClustersPaginateResponseClustersPendingModifiedValuesTypeDef",
    "DescribeClustersPaginateResponseClustersResizeInfoTypeDef",
    "DescribeClustersPaginateResponseClustersRestoreStatusTypeDef",
    "DescribeClustersPaginateResponseClustersTagsTypeDef",
    "DescribeClustersPaginateResponseClustersVpcSecurityGroupsTypeDef",
    "DescribeClustersPaginateResponseClustersTypeDef",
    "DescribeClustersPaginateResponseTypeDef",
    "DescribeDefaultClusterParametersPaginatePaginationConfigTypeDef",
    "DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersParametersTypeDef",
    "DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersTypeDef",
    "DescribeDefaultClusterParametersPaginateResponseTypeDef",
    "DescribeEventSubscriptionsPaginatePaginationConfigTypeDef",
    "DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTagsTypeDef",
    "DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef",
    "DescribeEventSubscriptionsPaginateResponseTypeDef",
    "DescribeEventsPaginatePaginationConfigTypeDef",
    "DescribeEventsPaginateResponseEventsTypeDef",
    "DescribeEventsPaginateResponseTypeDef",
    "DescribeHsmClientCertificatesPaginatePaginationConfigTypeDef",
    "DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTagsTypeDef",
    "DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTypeDef",
    "DescribeHsmClientCertificatesPaginateResponseTypeDef",
    "DescribeHsmConfigurationsPaginatePaginationConfigTypeDef",
    "DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTagsTypeDef",
    "DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTypeDef",
    "DescribeHsmConfigurationsPaginateResponseTypeDef",
    "DescribeNodeConfigurationOptionsPaginateFiltersTypeDef",
    "DescribeNodeConfigurationOptionsPaginatePaginationConfigTypeDef",
    "DescribeNodeConfigurationOptionsPaginateResponseNodeConfigurationOptionListTypeDef",
    "DescribeNodeConfigurationOptionsPaginateResponseTypeDef",
    "DescribeOrderableClusterOptionsPaginatePaginationConfigTypeDef",
    "DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef",
    "DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesTypeDef",
    "DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsTypeDef",
    "DescribeOrderableClusterOptionsPaginateResponseTypeDef",
    "DescribeReservedNodeOfferingsPaginatePaginationConfigTypeDef",
    "DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef",
    "DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsTypeDef",
    "DescribeReservedNodeOfferingsPaginateResponseTypeDef",
    "DescribeReservedNodesPaginatePaginationConfigTypeDef",
    "DescribeReservedNodesPaginateResponseReservedNodesRecurringChargesTypeDef",
    "DescribeReservedNodesPaginateResponseReservedNodesTypeDef",
    "DescribeReservedNodesPaginateResponseTypeDef",
    "DescribeScheduledActionsPaginateFiltersTypeDef",
    "DescribeScheduledActionsPaginatePaginationConfigTypeDef",
    "DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionResizeClusterTypeDef",
    "DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionTypeDef",
    "DescribeScheduledActionsPaginateResponseScheduledActionsTypeDef",
    "DescribeScheduledActionsPaginateResponseTypeDef",
    "DescribeSnapshotCopyGrantsPaginatePaginationConfigTypeDef",
    "DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTagsTypeDef",
    "DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTypeDef",
    "DescribeSnapshotCopyGrantsPaginateResponseTypeDef",
    "DescribeSnapshotSchedulesPaginatePaginationConfigTypeDef",
    "DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesAssociatedClustersTypeDef",
    "DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTagsTypeDef",
    "DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTypeDef",
    "DescribeSnapshotSchedulesPaginateResponseTypeDef",
    "DescribeTableRestoreStatusPaginatePaginationConfigTypeDef",
    "DescribeTableRestoreStatusPaginateResponseTableRestoreStatusDetailsTypeDef",
    "DescribeTableRestoreStatusPaginateResponseTypeDef",
    "DescribeTagsPaginatePaginationConfigTypeDef",
    "DescribeTagsPaginateResponseTaggedResourcesTagTypeDef",
    "DescribeTagsPaginateResponseTaggedResourcesTypeDef",
    "DescribeTagsPaginateResponseTypeDef",
    "GetReservedNodeExchangeOfferingsPaginatePaginationConfigTypeDef",
    "GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef",
    "GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsTypeDef",
    "GetReservedNodeExchangeOfferingsPaginateResponseTypeDef",
    "SnapshotAvailableWaitSortingEntitiesTypeDef",
    "SnapshotAvailableWaitWaiterConfigTypeDef",
)


_ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeRecurringChargesTypeDef = TypedDict(
    "_ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeRecurringChargesTypeDef(
    _ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeRecurringChargesTypeDef
):
    """
    Type definition for `ClientAcceptReservedNodeExchangeResponseExchangedReservedNode`
    `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeTypeDef = TypedDict(
    "_ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeTypeDef",
    {
        "ReservedNodeId": str,
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "NodeCount": int,
        "State": str,
        "OfferingType": str,
        "RecurringCharges": List[
            ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeTypeDef(
    _ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeTypeDef
):
    """
    Type definition for `ClientAcceptReservedNodeExchangeResponse` `ExchangedReservedNode`

    - **ReservedNodeId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedNodeOfferingId** *(string) --*

      The identifier for the reserved node offering.

    - **NodeType** *(string) --*

      The node type of the reserved node.

    - **StartTime** *(datetime) --*

      The time the reservation started. You purchase a reserved node offering for a duration. This
      is the start time of that duration.

    - **Duration** *(integer) --*

      The duration of the node reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed cost Amazon Redshift charges you for this reserved node.

    - **UsagePrice** *(float) --*

      The hourly rate Amazon Redshift charges you for this reserved node.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved cluster.

    - **NodeCount** *(integer) --*

      The number of reserved compute nodes.

    - **State** *(string) --*

      The state of the reserved compute node.

      Possible Values:

      * pending-payment-This reserved node has recently been purchased, and the sale has been
      approved, but payment has not yet been confirmed.

      * active-This reserved node is owned by the caller and is available for use.

      * payment-failed-Payment failed for the purchase attempt.

      * retired-The reserved node is no longer available.

      * exchanging-The owner is exchanging the reserved node for another reserved node.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The recurring charges for the reserved node.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_ClientAcceptReservedNodeExchangeResponseTypeDef = TypedDict(
    "_ClientAcceptReservedNodeExchangeResponseTypeDef",
    {"ExchangedReservedNode": ClientAcceptReservedNodeExchangeResponseExchangedReservedNodeTypeDef},
    total=False,
)


class ClientAcceptReservedNodeExchangeResponseTypeDef(
    _ClientAcceptReservedNodeExchangeResponseTypeDef
):
    """
    Type definition for `ClientAcceptReservedNodeExchange` `Response`

    - **ExchangedReservedNode** *(dict) --*

      - **ReservedNodeId** *(string) --*

        The unique identifier for the reservation.

      - **ReservedNodeOfferingId** *(string) --*

        The identifier for the reserved node offering.

      - **NodeType** *(string) --*

        The node type of the reserved node.

      - **StartTime** *(datetime) --*

        The time the reservation started. You purchase a reserved node offering for a duration. This
        is the start time of that duration.

      - **Duration** *(integer) --*

        The duration of the node reservation in seconds.

      - **FixedPrice** *(float) --*

        The fixed cost Amazon Redshift charges you for this reserved node.

      - **UsagePrice** *(float) --*

        The hourly rate Amazon Redshift charges you for this reserved node.

      - **CurrencyCode** *(string) --*

        The currency code for the reserved cluster.

      - **NodeCount** *(integer) --*

        The number of reserved compute nodes.

      - **State** *(string) --*

        The state of the reserved compute node.

        Possible Values:

        * pending-payment-This reserved node has recently been purchased, and the sale has been
        approved, but payment has not yet been confirmed.

        * active-This reserved node is owned by the caller and is available for use.

        * payment-failed-Payment failed for the purchase attempt.

        * retired-The reserved node is no longer available.

        * exchanging-The owner is exchanging the reserved node for another reserved node.

      - **OfferingType** *(string) --*

        The anticipated utilization of the reserved node, as defined in the reserved node offering.

      - **RecurringCharges** *(list) --*

        The recurring charges for the reserved node.

        - *(dict) --*

          Describes a recurring charge.

          - **RecurringChargeAmount** *(float) --*

            The amount charged per the period of time specified by the recurring charge frequency.

          - **RecurringChargeFrequency** *(string) --*

            The frequency at which the recurring charge amount is applied.

      - **ReservedNodeOfferingType** *(string) --*
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef
):
    """
    Type definition for
    `ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupOwnerId": str,
        "Tags": List[
            ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef
        ],
    },
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroup`
    `EC2SecurityGroups`

    Describes an Amazon EC2 security group.

    - **Status** *(string) --*

      The status of the EC2 security group.

    - **EC2SecurityGroupName** *(string) --*

      The name of the EC2 Security Group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      The AWS ID of the owner of the EC2 security group specified in the ``EC2SecurityGroupName``
      field.

    - **Tags** *(list) --*

      The list of tags for the EC2 security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef
):
    """
    Type definition for
    `ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRanges` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef",
    {
        "Status": str,
        "CIDRIP": str,
        "Tags": List[
            ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef
        ],
    },
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef
):
    """
    Type definition for `ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroup`
    `IPRanges`

    Describes an IP range used in a security group.

    - **Status** *(string) --*

      The status of the IP range, for example, "authorized".

    - **CIDRIP** *(string) --*

      The IP range in Classless Inter-Domain Routing (CIDR) notation.

    - **Tags** *(list) --*

      The list of tags for the IP range.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef
):
    """
    Type definition for `ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroup`
    `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef",
    {
        "ClusterSecurityGroupName": str,
        "Description": str,
        "EC2SecurityGroups": List[
            ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef
        ],
        "Tags": List[
            ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef
        ],
    },
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef
):
    """
    Type definition for `ClientAuthorizeClusterSecurityGroupIngressResponse` `ClusterSecurityGroup`

    Describes a security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group to which the operation was applied.

    - **Description** *(string) --*

      A description of the security group.

    - **EC2SecurityGroups** *(list) --*

      A list of EC2 security groups that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an Amazon EC2 security group.

        - **Status** *(string) --*

          The status of the EC2 security group.

        - **EC2SecurityGroupName** *(string) --*

          The name of the EC2 Security Group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          The AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

        - **Tags** *(list) --*

          The list of tags for the EC2 security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **IPRanges** *(list) --*

      A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an IP range used in a security group.

        - **Status** *(string) --*

          The status of the IP range, for example, "authorized".

        - **CIDRIP** *(string) --*

          The IP range in Classless Inter-Domain Routing (CIDR) notation.

        - **Tags** *(list) --*

          The list of tags for the IP range.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **Tags** *(list) --*

      The list of tags for the cluster security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientAuthorizeClusterSecurityGroupIngressResponseTypeDef = TypedDict(
    "_ClientAuthorizeClusterSecurityGroupIngressResponseTypeDef",
    {
        "ClusterSecurityGroup": ClientAuthorizeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef
    },
    total=False,
)


class ClientAuthorizeClusterSecurityGroupIngressResponseTypeDef(
    _ClientAuthorizeClusterSecurityGroupIngressResponseTypeDef
):
    """
    Type definition for `ClientAuthorizeClusterSecurityGroupIngress` `Response`

    - **ClusterSecurityGroup** *(dict) --*

      Describes a security group.

      - **ClusterSecurityGroupName** *(string) --*

        The name of the cluster security group to which the operation was applied.

      - **Description** *(string) --*

        A description of the security group.

      - **EC2SecurityGroups** *(list) --*

        A list of EC2 security groups that are permitted to access clusters associated with this
        cluster security group.

        - *(dict) --*

          Describes an Amazon EC2 security group.

          - **Status** *(string) --*

            The status of the EC2 security group.

          - **EC2SecurityGroupName** *(string) --*

            The name of the EC2 Security Group.

          - **EC2SecurityGroupOwnerId** *(string) --*

            The AWS ID of the owner of the EC2 security group specified in the
            ``EC2SecurityGroupName`` field.

          - **Tags** *(list) --*

            The list of tags for the EC2 security group.

            - *(dict) --*

              A tag consisting of a name/value pair for a resource.

              - **Key** *(string) --*

                The key, or name, for the resource tag.

              - **Value** *(string) --*

                The value for the resource tag.

      - **IPRanges** *(list) --*

        A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
        cluster security group.

        - *(dict) --*

          Describes an IP range used in a security group.

          - **Status** *(string) --*

            The status of the IP range, for example, "authorized".

          - **CIDRIP** *(string) --*

            The IP range in Classless Inter-Domain Routing (CIDR) notation.

          - **Tags** *(list) --*

            The list of tags for the IP range.

            - *(dict) --*

              A tag consisting of a name/value pair for a resource.

              - **Key** *(string) --*

                The key, or name, for the resource tag.

              - **Value** *(string) --*

                The value for the resource tag.

      - **Tags** *(list) --*

        The list of tags for the cluster security group.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientAuthorizeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientAuthorizeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientAuthorizeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef(
    _ClientAuthorizeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientAuthorizeSnapshotAccessResponseSnapshot` `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientAuthorizeSnapshotAccessResponseSnapshotTagsTypeDef = TypedDict(
    "_ClientAuthorizeSnapshotAccessResponseSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientAuthorizeSnapshotAccessResponseSnapshotTagsTypeDef(
    _ClientAuthorizeSnapshotAccessResponseSnapshotTagsTypeDef
):
    """
    Type definition for `ClientAuthorizeSnapshotAccessResponseSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientAuthorizeSnapshotAccessResponseSnapshotTypeDef = TypedDict(
    "_ClientAuthorizeSnapshotAccessResponseSnapshotTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientAuthorizeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientAuthorizeSnapshotAccessResponseSnapshotTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientAuthorizeSnapshotAccessResponseSnapshotTypeDef(
    _ClientAuthorizeSnapshotAccessResponseSnapshotTypeDef
):
    """
    Type definition for `ClientAuthorizeSnapshotAccessResponse` `Snapshot`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientAuthorizeSnapshotAccessResponseTypeDef = TypedDict(
    "_ClientAuthorizeSnapshotAccessResponseTypeDef",
    {"Snapshot": ClientAuthorizeSnapshotAccessResponseSnapshotTypeDef},
    total=False,
)


class ClientAuthorizeSnapshotAccessResponseTypeDef(_ClientAuthorizeSnapshotAccessResponseTypeDef):
    """
    Type definition for `ClientAuthorizeSnapshotAccess` `Response`

    - **Snapshot** *(dict) --*

      Describes a snapshot.

      - **SnapshotIdentifier** *(string) --*

        The snapshot identifier that is provided in the request.

      - **ClusterIdentifier** *(string) --*

        The identifier of the cluster for which the snapshot was taken.

      - **SnapshotCreateTime** *(datetime) --*

        The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
        of the cluster data as of this exact time.

      - **Status** *(string) --*

        The snapshot status. The value of the status depends on the API operation used:

        *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

        *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
        "failed".

        *  DeleteClusterSnapshot returns status as "deleted".

      - **Port** *(integer) --*

        The port that the cluster is listening on.

      - **AvailabilityZone** *(string) --*

        The Availability Zone in which the cluster was created.

      - **ClusterCreateTime** *(datetime) --*

        The time (UTC) when the cluster was originally created.

      - **MasterUsername** *(string) --*

        The master user name for the cluster.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **SnapshotType** *(string) --*

        The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
        are of type "manual".

      - **NodeType** *(string) --*

        The node type of the nodes in the cluster.

      - **NumberOfNodes** *(integer) --*

        The number of nodes in the cluster.

      - **DBName** *(string) --*

        The name of the database that was created when the cluster was created.

      - **VpcId** *(string) --*

        The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
        this field is not in the output.

      - **Encrypted** *(boolean) --*

        If ``true`` , the data in the snapshot is encrypted at rest.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
        data in the cluster from which the snapshot was taken.

      - **EncryptedWithHSM** *(boolean) --*

        A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
        source cluster. ``true`` indicates that the data is encrypted using HSM keys.

      - **AccountsWithRestoreAccess** *(list) --*

        A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if
        no accounts are authorized. Visible only to the snapshot owner.

        - *(dict) --*

          Describes an AWS customer account authorized to restore a snapshot.

          - **AccountId** *(string) --*

            The identifier of an AWS customer account authorized to restore a snapshot.

          - **AccountAlias** *(string) --*

            The identifier of an AWS support account authorized to restore a snapshot. For AWS
            support, the identifier is ``amazon-redshift-support`` .

      - **OwnerAccount** *(string) --*

        For manual snapshots, the AWS customer account used to create or copy the snapshot. For
        automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
        such as sharing a manual snapshot.

      - **TotalBackupSizeInMegaBytes** *(float) --*

        The size of the complete set of backup data that would be used to restore the cluster.

      - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

        The size of the incremental backup.

      - **BackupProgressInMegaBytes** *(float) --*

        The number of megabytes that have been transferred to the snapshot backup.

      - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
        for a completed backup.

      - **EstimatedSecondsToCompletion** *(integer) --*

        The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
        for a completed backup.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress snapshot backup has been running, or the amount of time it
        took a completed backup to finish.

      - **SourceRegion** *(string) --*

        The source region from which the snapshot was copied.

      - **Tags** *(list) --*

        The list of tags for the cluster snapshot.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **RestorableNodeTypes** *(list) --*

        The list of node types that this cluster snapshot is able to restore into.

        - *(string) --*

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the snapshot.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that a manual snapshot is retained. If the value is -1, the manual
        snapshot is retained indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ManualSnapshotRemainingDays** *(integer) --*

        The number of days until a manual snapshot will pass its retention period.

      - **SnapshotRetentionStartTime** *(datetime) --*

        A timestamp representing the start of the retention period for the snapshot.
    """


_RequiredClientBatchDeleteClusterSnapshotsIdentifiersTypeDef = TypedDict(
    "_RequiredClientBatchDeleteClusterSnapshotsIdentifiersTypeDef", {"SnapshotIdentifier": str}
)
_OptionalClientBatchDeleteClusterSnapshotsIdentifiersTypeDef = TypedDict(
    "_OptionalClientBatchDeleteClusterSnapshotsIdentifiersTypeDef",
    {"SnapshotClusterIdentifier": str},
    total=False,
)


class ClientBatchDeleteClusterSnapshotsIdentifiersTypeDef(
    _RequiredClientBatchDeleteClusterSnapshotsIdentifiersTypeDef,
    _OptionalClientBatchDeleteClusterSnapshotsIdentifiersTypeDef,
):
    """
    Type definition for `ClientBatchDeleteClusterSnapshots` `Identifiers`

    - **SnapshotIdentifier** *(string) --* **[REQUIRED]**

      The unique identifier of the manual snapshot to be deleted.

      Constraints: Must be the name of an existing snapshot that is in the ``available`` ,
      ``failed`` , or ``cancelled`` state.

    - **SnapshotClusterIdentifier** *(string) --*

      The unique identifier of the cluster the snapshot was created from. This parameter is required
      if your IAM user has a policy containing a snapshot resource element that specifies anything
      other than * for the cluster name.

      Constraints: Must be the name of valid cluster.
    """


_ClientBatchDeleteClusterSnapshotsResponseErrorsTypeDef = TypedDict(
    "_ClientBatchDeleteClusterSnapshotsResponseErrorsTypeDef",
    {
        "SnapshotIdentifier": str,
        "SnapshotClusterIdentifier": str,
        "FailureCode": str,
        "FailureReason": str,
    },
    total=False,
)


class ClientBatchDeleteClusterSnapshotsResponseErrorsTypeDef(
    _ClientBatchDeleteClusterSnapshotsResponseErrorsTypeDef
):
    """
    Type definition for `ClientBatchDeleteClusterSnapshotsResponse` `Errors`

    Describes the errors returned by a snapshot.

    - **SnapshotIdentifier** *(string) --*

      A unique identifier for the snapshot returning the error.

    - **SnapshotClusterIdentifier** *(string) --*

      A unique identifier for the cluster.

    - **FailureCode** *(string) --*

      The failure code for the error.

    - **FailureReason** *(string) --*

      The text message describing the error.
    """


_ClientBatchDeleteClusterSnapshotsResponseTypeDef = TypedDict(
    "_ClientBatchDeleteClusterSnapshotsResponseTypeDef",
    {
        "Resources": List[str],
        "Errors": List[ClientBatchDeleteClusterSnapshotsResponseErrorsTypeDef],
    },
    total=False,
)


class ClientBatchDeleteClusterSnapshotsResponseTypeDef(
    _ClientBatchDeleteClusterSnapshotsResponseTypeDef
):
    """
    Type definition for `ClientBatchDeleteClusterSnapshots` `Response`

    - **Resources** *(list) --*

      A list of the snapshot identifiers that were deleted.

      - *(string) --*

    - **Errors** *(list) --*

      A list of any errors returned.

      - *(dict) --*

        Describes the errors returned by a snapshot.

        - **SnapshotIdentifier** *(string) --*

          A unique identifier for the snapshot returning the error.

        - **SnapshotClusterIdentifier** *(string) --*

          A unique identifier for the cluster.

        - **FailureCode** *(string) --*

          The failure code for the error.

        - **FailureReason** *(string) --*

          The text message describing the error.
    """


_ClientBatchModifyClusterSnapshotsResponseErrorsTypeDef = TypedDict(
    "_ClientBatchModifyClusterSnapshotsResponseErrorsTypeDef",
    {
        "SnapshotIdentifier": str,
        "SnapshotClusterIdentifier": str,
        "FailureCode": str,
        "FailureReason": str,
    },
    total=False,
)


class ClientBatchModifyClusterSnapshotsResponseErrorsTypeDef(
    _ClientBatchModifyClusterSnapshotsResponseErrorsTypeDef
):
    """
    Type definition for `ClientBatchModifyClusterSnapshotsResponse` `Errors`

    Describes the errors returned by a snapshot.

    - **SnapshotIdentifier** *(string) --*

      A unique identifier for the snapshot returning the error.

    - **SnapshotClusterIdentifier** *(string) --*

      A unique identifier for the cluster.

    - **FailureCode** *(string) --*

      The failure code for the error.

    - **FailureReason** *(string) --*

      The text message describing the error.
    """


_ClientBatchModifyClusterSnapshotsResponseTypeDef = TypedDict(
    "_ClientBatchModifyClusterSnapshotsResponseTypeDef",
    {
        "Resources": List[str],
        "Errors": List[ClientBatchModifyClusterSnapshotsResponseErrorsTypeDef],
    },
    total=False,
)


class ClientBatchModifyClusterSnapshotsResponseTypeDef(
    _ClientBatchModifyClusterSnapshotsResponseTypeDef
):
    """
    Type definition for `ClientBatchModifyClusterSnapshots` `Response`

    - **Resources** *(list) --*

      A list of the snapshots that were modified.

      - *(string) --*

    - **Errors** *(list) --*

      A list of any errors returned.

      - *(dict) --*

        Describes the errors returned by a snapshot.

        - **SnapshotIdentifier** *(string) --*

          A unique identifier for the snapshot returning the error.

        - **SnapshotClusterIdentifier** *(string) --*

          A unique identifier for the cluster.

        - **FailureCode** *(string) --*

          The failure code for the error.

        - **FailureReason** *(string) --*

          The text message describing the error.
    """


_ClientCancelResizeResponseTypeDef = TypedDict(
    "_ClientCancelResizeResponseTypeDef",
    {
        "TargetNodeType": str,
        "TargetNumberOfNodes": int,
        "TargetClusterType": str,
        "Status": str,
        "ImportTablesCompleted": List[str],
        "ImportTablesInProgress": List[str],
        "ImportTablesNotStarted": List[str],
        "AvgResizeRateInMegaBytesPerSecond": float,
        "TotalResizeDataInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ResizeType": str,
        "Message": str,
        "TargetEncryptionType": str,
        "DataTransferProgressPercent": float,
    },
    total=False,
)


class ClientCancelResizeResponseTypeDef(_ClientCancelResizeResponseTypeDef):
    """
    Type definition for `ClientCancelResize` `Response`

    Describes the result of a cluster resize operation.

    - **TargetNodeType** *(string) --*

      The node type that the cluster will have after the resize operation is complete.

    - **TargetNumberOfNodes** *(integer) --*

      The number of nodes that the cluster will have after the resize operation is complete.

    - **TargetClusterType** *(string) --*

      The cluster type after the resize operation is complete.

      Valid Values: ``multi-node`` | ``single-node``

    - **Status** *(string) --*

      The status of the resize operation.

      Valid Values: ``NONE`` | ``IN_PROGRESS`` | ``FAILED`` | ``SUCCEEDED`` | ``CANCELLING``

    - **ImportTablesCompleted** *(list) --*

      The names of tables that have been completely imported .

      Valid Values: List of table names.

      - *(string) --*

    - **ImportTablesInProgress** *(list) --*

      The names of tables that are being currently imported.

      Valid Values: List of table names.

      - *(string) --*

    - **ImportTablesNotStarted** *(list) --*

      The names of tables that have not been yet imported.

      Valid Values: List of table names

      - *(string) --*

    - **AvgResizeRateInMegaBytesPerSecond** *(float) --*

      The average rate of the resize operation over the last few minutes, measured in megabytes per
      second. After the resize operation completes, this value shows the average rate of the entire
      resize operation.

    - **TotalResizeDataInMegaBytes** *(integer) --*

      The estimated total amount of data, in megabytes, on the cluster before the resize operation
      began.

    - **ProgressInMegaBytes** *(integer) --*

      While the resize operation is in progress, this value shows the current amount of data, in
      megabytes, that has been processed so far. When the resize operation is complete, this value
      shows the total amount of data, in megabytes, on the cluster, which may be more or less than
      TotalResizeDataInMegaBytes (the estimated total amount of data before resize).

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of seconds that have elapsed since the resize operation began. After the resize
      operation completes, this value shows the total actual time, in seconds, for the resize
      operation.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimated time remaining, in seconds, until the resize operation is complete. This value
      is calculated based on the average resize rate and the estimated amount of data remaining to
      be processed. Once the resize operation is complete, this value will be 0.

    - **ResizeType** *(string) --*

      An enum with possible values of ``ClassicResize`` and ``ElasticResize`` . These values
      describe the type of resize operation being performed.

    - **Message** *(string) --*

      An optional string to provide additional details about the resize action.

    - **TargetEncryptionType** *(string) --*

      The type of encryption for the cluster after the resize is complete.

      Possible values are ``KMS`` and ``None`` . In the China region possible values are: ``Legacy``
      and ``None`` .

    - **DataTransferProgressPercent** *(float) --*

      The percent of data transferred from source cluster to target cluster.
    """


_ClientCopyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientCopyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientCopyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef(
    _ClientCopyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientCopyClusterSnapshotResponseSnapshot` `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientCopyClusterSnapshotResponseSnapshotTagsTypeDef = TypedDict(
    "_ClientCopyClusterSnapshotResponseSnapshotTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCopyClusterSnapshotResponseSnapshotTagsTypeDef(
    _ClientCopyClusterSnapshotResponseSnapshotTagsTypeDef
):
    """
    Type definition for `ClientCopyClusterSnapshotResponseSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCopyClusterSnapshotResponseSnapshotTypeDef = TypedDict(
    "_ClientCopyClusterSnapshotResponseSnapshotTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientCopyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientCopyClusterSnapshotResponseSnapshotTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientCopyClusterSnapshotResponseSnapshotTypeDef(
    _ClientCopyClusterSnapshotResponseSnapshotTypeDef
):
    """
    Type definition for `ClientCopyClusterSnapshotResponse` `Snapshot`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientCopyClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientCopyClusterSnapshotResponseTypeDef",
    {"Snapshot": ClientCopyClusterSnapshotResponseSnapshotTypeDef},
    total=False,
)


class ClientCopyClusterSnapshotResponseTypeDef(_ClientCopyClusterSnapshotResponseTypeDef):
    """
    Type definition for `ClientCopyClusterSnapshot` `Response`

    - **Snapshot** *(dict) --*

      Describes a snapshot.

      - **SnapshotIdentifier** *(string) --*

        The snapshot identifier that is provided in the request.

      - **ClusterIdentifier** *(string) --*

        The identifier of the cluster for which the snapshot was taken.

      - **SnapshotCreateTime** *(datetime) --*

        The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
        of the cluster data as of this exact time.

      - **Status** *(string) --*

        The snapshot status. The value of the status depends on the API operation used:

        *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

        *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
        "failed".

        *  DeleteClusterSnapshot returns status as "deleted".

      - **Port** *(integer) --*

        The port that the cluster is listening on.

      - **AvailabilityZone** *(string) --*

        The Availability Zone in which the cluster was created.

      - **ClusterCreateTime** *(datetime) --*

        The time (UTC) when the cluster was originally created.

      - **MasterUsername** *(string) --*

        The master user name for the cluster.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **SnapshotType** *(string) --*

        The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
        are of type "manual".

      - **NodeType** *(string) --*

        The node type of the nodes in the cluster.

      - **NumberOfNodes** *(integer) --*

        The number of nodes in the cluster.

      - **DBName** *(string) --*

        The name of the database that was created when the cluster was created.

      - **VpcId** *(string) --*

        The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
        this field is not in the output.

      - **Encrypted** *(boolean) --*

        If ``true`` , the data in the snapshot is encrypted at rest.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
        data in the cluster from which the snapshot was taken.

      - **EncryptedWithHSM** *(boolean) --*

        A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
        source cluster. ``true`` indicates that the data is encrypted using HSM keys.

      - **AccountsWithRestoreAccess** *(list) --*

        A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if
        no accounts are authorized. Visible only to the snapshot owner.

        - *(dict) --*

          Describes an AWS customer account authorized to restore a snapshot.

          - **AccountId** *(string) --*

            The identifier of an AWS customer account authorized to restore a snapshot.

          - **AccountAlias** *(string) --*

            The identifier of an AWS support account authorized to restore a snapshot. For AWS
            support, the identifier is ``amazon-redshift-support`` .

      - **OwnerAccount** *(string) --*

        For manual snapshots, the AWS customer account used to create or copy the snapshot. For
        automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
        such as sharing a manual snapshot.

      - **TotalBackupSizeInMegaBytes** *(float) --*

        The size of the complete set of backup data that would be used to restore the cluster.

      - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

        The size of the incremental backup.

      - **BackupProgressInMegaBytes** *(float) --*

        The number of megabytes that have been transferred to the snapshot backup.

      - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
        for a completed backup.

      - **EstimatedSecondsToCompletion** *(integer) --*

        The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
        for a completed backup.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress snapshot backup has been running, or the amount of time it
        took a completed backup to finish.

      - **SourceRegion** *(string) --*

        The source region from which the snapshot was copied.

      - **Tags** *(list) --*

        The list of tags for the cluster snapshot.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **RestorableNodeTypes** *(list) --*

        The list of node types that this cluster snapshot is able to restore into.

        - *(string) --*

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the snapshot.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that a manual snapshot is retained. If the value is -1, the manual
        snapshot is retained indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ManualSnapshotRemainingDays** *(integer) --*

        The number of days until a manual snapshot will pass its retention period.

      - **SnapshotRetentionStartTime** *(datetime) --*

        A timestamp representing the start of the retention period for the snapshot.
    """


_ClientCreateClusterParameterGroupResponseClusterParameterGroupTagsTypeDef = TypedDict(
    "_ClientCreateClusterParameterGroupResponseClusterParameterGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateClusterParameterGroupResponseClusterParameterGroupTagsTypeDef(
    _ClientCreateClusterParameterGroupResponseClusterParameterGroupTagsTypeDef
):
    """
    Type definition for `ClientCreateClusterParameterGroupResponseClusterParameterGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterParameterGroupResponseClusterParameterGroupTypeDef = TypedDict(
    "_ClientCreateClusterParameterGroupResponseClusterParameterGroupTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterGroupFamily": str,
        "Description": str,
        "Tags": List[ClientCreateClusterParameterGroupResponseClusterParameterGroupTagsTypeDef],
    },
    total=False,
)


class ClientCreateClusterParameterGroupResponseClusterParameterGroupTypeDef(
    _ClientCreateClusterParameterGroupResponseClusterParameterGroupTypeDef
):
    """
    Type definition for `ClientCreateClusterParameterGroupResponse` `ClusterParameterGroup`

    Describes a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family that this cluster parameter group is compatible
      with.

    - **Description** *(string) --*

      The description of the parameter group.

    - **Tags** *(list) --*

      The list of tags for the cluster parameter group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientCreateClusterParameterGroupResponseTypeDef",
    {
        "ClusterParameterGroup": ClientCreateClusterParameterGroupResponseClusterParameterGroupTypeDef
    },
    total=False,
)


class ClientCreateClusterParameterGroupResponseTypeDef(
    _ClientCreateClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientCreateClusterParameterGroup` `Response`

    - **ClusterParameterGroup** *(dict) --*

      Describes a parameter group.

      - **ParameterGroupName** *(string) --*

        The name of the cluster parameter group.

      - **ParameterGroupFamily** *(string) --*

        The name of the cluster parameter group family that this cluster parameter group is
        compatible with.

      - **Description** *(string) --*

        The description of the parameter group.

      - **Tags** *(list) --*

        The list of tags for the cluster parameter group.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateClusterParameterGroupTagsTypeDef = TypedDict(
    "_ClientCreateClusterParameterGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateClusterParameterGroupTagsTypeDef(_ClientCreateClusterParameterGroupTagsTypeDef):
    """
    Type definition for `ClientCreateClusterParameterGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientCreateClusterResponseClusterClusterNodesTypeDef(
    _ClientCreateClusterResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientCreateClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientCreateClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientCreateClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientCreateClusterResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientCreateClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientCreateClusterResponseClusterClusterParameterGroupsTypeDef(
    _ClientCreateClusterResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientCreateClusterResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientCreateClusterResponseClusterClusterSecurityGroupsTypeDef(
    _ClientCreateClusterResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientCreateClusterResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientCreateClusterResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientCreateClusterResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientCreateClusterResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientCreateClusterResponseClusterDataTransferProgressTypeDef(
    _ClientCreateClusterResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientCreateClusterResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientCreateClusterResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientCreateClusterResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientCreateClusterResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientCreateClusterResponseClusterElasticIpStatusTypeDef(
    _ClientCreateClusterResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientCreateClusterResponseClusterEndpointTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterEndpointTypeDef", {"Address": str, "Port": int}, total=False
)


class ClientCreateClusterResponseClusterEndpointTypeDef(
    _ClientCreateClusterResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientCreateClusterResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientCreateClusterResponseClusterHsmStatusTypeDef(
    _ClientCreateClusterResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientCreateClusterResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientCreateClusterResponseClusterIamRolesTypeDef(
    _ClientCreateClusterResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientCreateClusterResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientCreateClusterResponseClusterPendingModifiedValuesTypeDef(
    _ClientCreateClusterResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientCreateClusterResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientCreateClusterResponseClusterResizeInfoTypeDef(
    _ClientCreateClusterResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientCreateClusterResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientCreateClusterResponseClusterRestoreStatusTypeDef(
    _ClientCreateClusterResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientCreateClusterResponseClusterTagsTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateClusterResponseClusterTagsTypeDef(_ClientCreateClusterResponseClusterTagsTypeDef):
    """
    Type definition for `ClientCreateClusterResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientCreateClusterResponseClusterVpcSecurityGroupsTypeDef(
    _ClientCreateClusterResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateClusterResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientCreateClusterResponseClusterTypeDef = TypedDict(
    "_ClientCreateClusterResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientCreateClusterResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientCreateClusterResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientCreateClusterResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientCreateClusterResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientCreateClusterResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientCreateClusterResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientCreateClusterResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientCreateClusterResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientCreateClusterResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientCreateClusterResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientCreateClusterResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientCreateClusterResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientCreateClusterResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientCreateClusterResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientCreateClusterResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientCreateClusterResponseClusterTypeDef(_ClientCreateClusterResponseClusterTypeDef):
    """
    Type definition for `ClientCreateClusterResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientCreateClusterResponseTypeDef = TypedDict(
    "_ClientCreateClusterResponseTypeDef",
    {"Cluster": ClientCreateClusterResponseClusterTypeDef},
    total=False,
)


class ClientCreateClusterResponseTypeDef(_ClientCreateClusterResponseTypeDef):
    """
    Type definition for `ClientCreateCluster` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef(
    _ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef
):
    """
    Type definition for
    `ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupOwnerId": str,
        "Tags": List[
            ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef
        ],
    },
    total=False,
)


class ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTypeDef(
    _ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientCreateClusterSecurityGroupResponseClusterSecurityGroup`
    `EC2SecurityGroups`

    Describes an Amazon EC2 security group.

    - **Status** *(string) --*

      The status of the EC2 security group.

    - **EC2SecurityGroupName** *(string) --*

      The name of the EC2 Security Group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      The AWS ID of the owner of the EC2 security group specified in the ``EC2SecurityGroupName``
      field.

    - **Tags** *(list) --*

      The list of tags for the EC2 security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTagsTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTagsTypeDef(
    _ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTagsTypeDef
):
    """
    Type definition for `ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRanges`
    `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTypeDef",
    {
        "Status": str,
        "CIDRIP": str,
        "Tags": List[
            ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTagsTypeDef
        ],
    },
    total=False,
)


class ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTypeDef(
    _ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTypeDef
):
    """
    Type definition for `ClientCreateClusterSecurityGroupResponseClusterSecurityGroup` `IPRanges`

    Describes an IP range used in a security group.

    - **Status** *(string) --*

      The status of the IP range, for example, "authorized".

    - **CIDRIP** *(string) --*

      The IP range in Classless Inter-Domain Routing (CIDR) notation.

    - **Tags** *(list) --*

      The list of tags for the IP range.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTagsTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTagsTypeDef(
    _ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTagsTypeDef
):
    """
    Type definition for `ClientCreateClusterSecurityGroupResponseClusterSecurityGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTypeDef",
    {
        "ClusterSecurityGroupName": str,
        "Description": str,
        "EC2SecurityGroups": List[
            ClientCreateClusterSecurityGroupResponseClusterSecurityGroupEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientCreateClusterSecurityGroupResponseClusterSecurityGroupIPRangesTypeDef
        ],
        "Tags": List[ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTagsTypeDef],
    },
    total=False,
)


class ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTypeDef(
    _ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTypeDef
):
    """
    Type definition for `ClientCreateClusterSecurityGroupResponse` `ClusterSecurityGroup`

    Describes a security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group to which the operation was applied.

    - **Description** *(string) --*

      A description of the security group.

    - **EC2SecurityGroups** *(list) --*

      A list of EC2 security groups that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an Amazon EC2 security group.

        - **Status** *(string) --*

          The status of the EC2 security group.

        - **EC2SecurityGroupName** *(string) --*

          The name of the EC2 Security Group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          The AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

        - **Tags** *(list) --*

          The list of tags for the EC2 security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **IPRanges** *(list) --*

      A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an IP range used in a security group.

        - **Status** *(string) --*

          The status of the IP range, for example, "authorized".

        - **CIDRIP** *(string) --*

          The IP range in Classless Inter-Domain Routing (CIDR) notation.

        - **Tags** *(list) --*

          The list of tags for the IP range.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **Tags** *(list) --*

      The list of tags for the cluster security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupResponseTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupResponseTypeDef",
    {"ClusterSecurityGroup": ClientCreateClusterSecurityGroupResponseClusterSecurityGroupTypeDef},
    total=False,
)


class ClientCreateClusterSecurityGroupResponseTypeDef(
    _ClientCreateClusterSecurityGroupResponseTypeDef
):
    """
    Type definition for `ClientCreateClusterSecurityGroup` `Response`

    - **ClusterSecurityGroup** *(dict) --*

      Describes a security group.

      - **ClusterSecurityGroupName** *(string) --*

        The name of the cluster security group to which the operation was applied.

      - **Description** *(string) --*

        A description of the security group.

      - **EC2SecurityGroups** *(list) --*

        A list of EC2 security groups that are permitted to access clusters associated with this
        cluster security group.

        - *(dict) --*

          Describes an Amazon EC2 security group.

          - **Status** *(string) --*

            The status of the EC2 security group.

          - **EC2SecurityGroupName** *(string) --*

            The name of the EC2 Security Group.

          - **EC2SecurityGroupOwnerId** *(string) --*

            The AWS ID of the owner of the EC2 security group specified in the
            ``EC2SecurityGroupName`` field.

          - **Tags** *(list) --*

            The list of tags for the EC2 security group.

            - *(dict) --*

              A tag consisting of a name/value pair for a resource.

              - **Key** *(string) --*

                The key, or name, for the resource tag.

              - **Value** *(string) --*

                The value for the resource tag.

      - **IPRanges** *(list) --*

        A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
        cluster security group.

        - *(dict) --*

          Describes an IP range used in a security group.

          - **Status** *(string) --*

            The status of the IP range, for example, "authorized".

          - **CIDRIP** *(string) --*

            The IP range in Classless Inter-Domain Routing (CIDR) notation.

          - **Tags** *(list) --*

            The list of tags for the IP range.

            - *(dict) --*

              A tag consisting of a name/value pair for a resource.

              - **Key** *(string) --*

                The key, or name, for the resource tag.

              - **Value** *(string) --*

                The value for the resource tag.

      - **Tags** *(list) --*

        The list of tags for the cluster security group.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateClusterSecurityGroupTagsTypeDef = TypedDict(
    "_ClientCreateClusterSecurityGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateClusterSecurityGroupTagsTypeDef(_ClientCreateClusterSecurityGroupTagsTypeDef):
    """
    Type definition for `ClientCreateClusterSecurityGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientCreateClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientCreateClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef(
    _ClientCreateClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientCreateClusterSnapshotResponseSnapshot` `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientCreateClusterSnapshotResponseSnapshotTagsTypeDef = TypedDict(
    "_ClientCreateClusterSnapshotResponseSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateClusterSnapshotResponseSnapshotTagsTypeDef(
    _ClientCreateClusterSnapshotResponseSnapshotTagsTypeDef
):
    """
    Type definition for `ClientCreateClusterSnapshotResponseSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSnapshotResponseSnapshotTypeDef = TypedDict(
    "_ClientCreateClusterSnapshotResponseSnapshotTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientCreateClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientCreateClusterSnapshotResponseSnapshotTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientCreateClusterSnapshotResponseSnapshotTypeDef(
    _ClientCreateClusterSnapshotResponseSnapshotTypeDef
):
    """
    Type definition for `ClientCreateClusterSnapshotResponse` `Snapshot`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientCreateClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientCreateClusterSnapshotResponseTypeDef",
    {"Snapshot": ClientCreateClusterSnapshotResponseSnapshotTypeDef},
    total=False,
)


class ClientCreateClusterSnapshotResponseTypeDef(_ClientCreateClusterSnapshotResponseTypeDef):
    """
    Type definition for `ClientCreateClusterSnapshot` `Response`

    - **Snapshot** *(dict) --*

      Describes a snapshot.

      - **SnapshotIdentifier** *(string) --*

        The snapshot identifier that is provided in the request.

      - **ClusterIdentifier** *(string) --*

        The identifier of the cluster for which the snapshot was taken.

      - **SnapshotCreateTime** *(datetime) --*

        The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
        of the cluster data as of this exact time.

      - **Status** *(string) --*

        The snapshot status. The value of the status depends on the API operation used:

        *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

        *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
        "failed".

        *  DeleteClusterSnapshot returns status as "deleted".

      - **Port** *(integer) --*

        The port that the cluster is listening on.

      - **AvailabilityZone** *(string) --*

        The Availability Zone in which the cluster was created.

      - **ClusterCreateTime** *(datetime) --*

        The time (UTC) when the cluster was originally created.

      - **MasterUsername** *(string) --*

        The master user name for the cluster.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **SnapshotType** *(string) --*

        The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
        are of type "manual".

      - **NodeType** *(string) --*

        The node type of the nodes in the cluster.

      - **NumberOfNodes** *(integer) --*

        The number of nodes in the cluster.

      - **DBName** *(string) --*

        The name of the database that was created when the cluster was created.

      - **VpcId** *(string) --*

        The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
        this field is not in the output.

      - **Encrypted** *(boolean) --*

        If ``true`` , the data in the snapshot is encrypted at rest.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
        data in the cluster from which the snapshot was taken.

      - **EncryptedWithHSM** *(boolean) --*

        A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
        source cluster. ``true`` indicates that the data is encrypted using HSM keys.

      - **AccountsWithRestoreAccess** *(list) --*

        A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if
        no accounts are authorized. Visible only to the snapshot owner.

        - *(dict) --*

          Describes an AWS customer account authorized to restore a snapshot.

          - **AccountId** *(string) --*

            The identifier of an AWS customer account authorized to restore a snapshot.

          - **AccountAlias** *(string) --*

            The identifier of an AWS support account authorized to restore a snapshot. For AWS
            support, the identifier is ``amazon-redshift-support`` .

      - **OwnerAccount** *(string) --*

        For manual snapshots, the AWS customer account used to create or copy the snapshot. For
        automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
        such as sharing a manual snapshot.

      - **TotalBackupSizeInMegaBytes** *(float) --*

        The size of the complete set of backup data that would be used to restore the cluster.

      - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

        The size of the incremental backup.

      - **BackupProgressInMegaBytes** *(float) --*

        The number of megabytes that have been transferred to the snapshot backup.

      - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
        for a completed backup.

      - **EstimatedSecondsToCompletion** *(integer) --*

        The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
        for a completed backup.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress snapshot backup has been running, or the amount of time it
        took a completed backup to finish.

      - **SourceRegion** *(string) --*

        The source region from which the snapshot was copied.

      - **Tags** *(list) --*

        The list of tags for the cluster snapshot.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **RestorableNodeTypes** *(list) --*

        The list of node types that this cluster snapshot is able to restore into.

        - *(string) --*

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the snapshot.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that a manual snapshot is retained. If the value is -1, the manual
        snapshot is retained indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ManualSnapshotRemainingDays** *(integer) --*

        The number of days until a manual snapshot will pass its retention period.

      - **SnapshotRetentionStartTime** *(datetime) --*

        A timestamp representing the start of the retention period for the snapshot.
    """


_ClientCreateClusterSnapshotTagsTypeDef = TypedDict(
    "_ClientCreateClusterSnapshotTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateClusterSnapshotTagsTypeDef(_ClientCreateClusterSnapshotTagsTypeDef):
    """
    Type definition for `ClientCreateClusterSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    {"Name": str},
    total=False,
)


class ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef(
    _ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
):
    """
    Type definition for
    `ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZone`
    `SupportedPlatforms`

    A list of supported platforms for orderable clusters.

    - **Name** *(string) --*
    """


_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {
        "Name": str,
        "SupportedPlatforms": List[
            ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
        ],
    },
    total=False,
)


class ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnets`
    `SubnetAvailabilityZone`

    - **Name** *(string) --*

      The name of the availability zone.

    - **SupportedPlatforms** *(list) --*

      - *(dict) --*

        A list of supported platforms for orderable clusters.

        - **Name** *(string) --*
    """


_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef(
    _ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientCreateClusterSubnetGroupResponseClusterSubnetGroup` `Subnets`

    Describes a subnet.

    - **SubnetIdentifier** *(string) --*

      The identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      - **Name** *(string) --*

        The name of the availability zone.

      - **SupportedPlatforms** *(list) --*

        - *(dict) --*

          A list of supported platforms for orderable clusters.

          - **Name** *(string) --*

    - **SubnetStatus** *(string) --*

      The status of the subnet.
    """


_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef(
    _ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef
):
    """
    Type definition for `ClientCreateClusterSubnetGroupResponseClusterSubnetGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTypeDef",
    {
        "ClusterSubnetGroupName": str,
        "Description": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[ClientCreateClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef],
        "Tags": List[ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef],
    },
    total=False,
)


class ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTypeDef(
    _ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTypeDef
):
    """
    Type definition for `ClientCreateClusterSubnetGroupResponse` `ClusterSubnetGroup`

    Describes a subnet group.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the cluster subnet group.

    - **Description** *(string) --*

      The description of the cluster subnet group.

    - **VpcId** *(string) --*

      The VPC ID of the cluster subnet group.

    - **SubnetGroupStatus** *(string) --*

      The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete`` and
      ``Invalid`` .

    - **Subnets** *(list) --*

      A list of the VPC  Subnet elements.

      - *(dict) --*

        Describes a subnet.

        - **SubnetIdentifier** *(string) --*

          The identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          - **Name** *(string) --*

            The name of the availability zone.

          - **SupportedPlatforms** *(list) --*

            - *(dict) --*

              A list of supported platforms for orderable clusters.

              - **Name** *(string) --*

        - **SubnetStatus** *(string) --*

          The status of the subnet.

    - **Tags** *(list) --*

      The list of tags for the cluster subnet group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateClusterSubnetGroupResponseTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupResponseTypeDef",
    {"ClusterSubnetGroup": ClientCreateClusterSubnetGroupResponseClusterSubnetGroupTypeDef},
    total=False,
)


class ClientCreateClusterSubnetGroupResponseTypeDef(_ClientCreateClusterSubnetGroupResponseTypeDef):
    """
    Type definition for `ClientCreateClusterSubnetGroup` `Response`

    - **ClusterSubnetGroup** *(dict) --*

      Describes a subnet group.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the cluster subnet group.

      - **Description** *(string) --*

        The description of the cluster subnet group.

      - **VpcId** *(string) --*

        The VPC ID of the cluster subnet group.

      - **SubnetGroupStatus** *(string) --*

        The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete``
        and ``Invalid`` .

      - **Subnets** *(list) --*

        A list of the VPC  Subnet elements.

        - *(dict) --*

          Describes a subnet.

          - **SubnetIdentifier** *(string) --*

            The identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            - **Name** *(string) --*

              The name of the availability zone.

            - **SupportedPlatforms** *(list) --*

              - *(dict) --*

                A list of supported platforms for orderable clusters.

                - **Name** *(string) --*

          - **SubnetStatus** *(string) --*

            The status of the subnet.

      - **Tags** *(list) --*

        The list of tags for the cluster subnet group.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateClusterSubnetGroupTagsTypeDef = TypedDict(
    "_ClientCreateClusterSubnetGroupTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateClusterSubnetGroupTagsTypeDef(_ClientCreateClusterSubnetGroupTagsTypeDef):
    """
    Type definition for `ClientCreateClusterSubnetGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateClusterTagsTypeDef = TypedDict(
    "_ClientCreateClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateClusterTagsTypeDef(_ClientCreateClusterTagsTypeDef):
    """
    Type definition for `ClientCreateCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateEventSubscriptionResponseEventSubscriptionTagsTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionResponseEventSubscriptionTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateEventSubscriptionResponseEventSubscriptionTagsTypeDef(
    _ClientCreateEventSubscriptionResponseEventSubscriptionTagsTypeDef
):
    """
    Type definition for `ClientCreateEventSubscriptionResponseEventSubscription` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": datetime,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Severity": str,
        "Enabled": bool,
        "Tags": List[ClientCreateEventSubscriptionResponseEventSubscriptionTagsTypeDef],
    },
    total=False,
)


class ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef(
    _ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientCreateEventSubscriptionResponse` `EventSubscription`

    Describes event subscriptions.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the Amazon Redshift event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The name of the Amazon Redshift event notification subscription.

    - **SnsTopicArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
      subscription.

    - **Status** *(string) --*

      The status of the Amazon Redshift event notification subscription.

      Constraints:

      * Can be one of the following: active | no-permission | topic-not-exist

      * The status "no-permission" indicates that Amazon Redshift no longer has permission to post
      to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted
      after the subscription was created.

    - **SubscriptionCreationTime** *(datetime) --*

      The date and time the Amazon Redshift event notification subscription was created.

    - **SourceType** *(string) --*

      The source type of the events returned the Amazon Redshift event notification, such as
      cluster, or cluster-snapshot.

    - **SourceIdsList** *(list) --*

      A list of the sources that publish events to the Amazon Redshift event notification
      subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      The list of Amazon Redshift event categories specified in the event notification subscription.

      Values: Configuration, Management, Monitoring, Security

      - *(string) --*

    - **Severity** *(string) --*

      The event severity specified in the Amazon Redshift event notification subscription.

      Values: ERROR, INFO

    - **Enabled** *(boolean) --*

      A boolean value indicating whether the subscription is enabled; ``true`` indicates that the
      subscription is enabled.

    - **Tags** *(list) --*

      The list of tags for the event subscription.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateEventSubscriptionResponseTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionResponseTypeDef",
    {"EventSubscription": ClientCreateEventSubscriptionResponseEventSubscriptionTypeDef},
    total=False,
)


class ClientCreateEventSubscriptionResponseTypeDef(_ClientCreateEventSubscriptionResponseTypeDef):
    """
    Type definition for `ClientCreateEventSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Describes event subscriptions.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the Amazon Redshift event notification
        subscription.

      - **CustSubscriptionId** *(string) --*

        The name of the Amazon Redshift event notification subscription.

      - **SnsTopicArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
        subscription.

      - **Status** *(string) --*

        The status of the Amazon Redshift event notification subscription.

        Constraints:

        * Can be one of the following: active | no-permission | topic-not-exist

        * The status "no-permission" indicates that Amazon Redshift no longer has permission to post
        to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted
        after the subscription was created.

      - **SubscriptionCreationTime** *(datetime) --*

        The date and time the Amazon Redshift event notification subscription was created.

      - **SourceType** *(string) --*

        The source type of the events returned the Amazon Redshift event notification, such as
        cluster, or cluster-snapshot.

      - **SourceIdsList** *(list) --*

        A list of the sources that publish events to the Amazon Redshift event notification
        subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        The list of Amazon Redshift event categories specified in the event notification
        subscription.

        Values: Configuration, Management, Monitoring, Security

        - *(string) --*

      - **Severity** *(string) --*

        The event severity specified in the Amazon Redshift event notification subscription.

        Values: ERROR, INFO

      - **Enabled** *(boolean) --*

        A boolean value indicating whether the subscription is enabled; ``true`` indicates that the
        subscription is enabled.

      - **Tags** *(list) --*

        The list of tags for the event subscription.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateEventSubscriptionTagsTypeDef = TypedDict(
    "_ClientCreateEventSubscriptionTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateEventSubscriptionTagsTypeDef(_ClientCreateEventSubscriptionTagsTypeDef):
    """
    Type definition for `ClientCreateEventSubscription` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateHsmClientCertificateResponseHsmClientCertificateTagsTypeDef = TypedDict(
    "_ClientCreateHsmClientCertificateResponseHsmClientCertificateTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateHsmClientCertificateResponseHsmClientCertificateTagsTypeDef(
    _ClientCreateHsmClientCertificateResponseHsmClientCertificateTagsTypeDef
):
    """
    Type definition for `ClientCreateHsmClientCertificateResponseHsmClientCertificate` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateHsmClientCertificateResponseHsmClientCertificateTypeDef = TypedDict(
    "_ClientCreateHsmClientCertificateResponseHsmClientCertificateTypeDef",
    {
        "HsmClientCertificateIdentifier": str,
        "HsmClientCertificatePublicKey": str,
        "Tags": List[ClientCreateHsmClientCertificateResponseHsmClientCertificateTagsTypeDef],
    },
    total=False,
)


class ClientCreateHsmClientCertificateResponseHsmClientCertificateTypeDef(
    _ClientCreateHsmClientCertificateResponseHsmClientCertificateTypeDef
):
    """
    Type definition for `ClientCreateHsmClientCertificateResponse` `HsmClientCertificate`

    Returns information about an HSM client certificate. The certificate is stored in a secure
    Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data files.

    - **HsmClientCertificateIdentifier** *(string) --*

      The identifier of the HSM client certificate.

    - **HsmClientCertificatePublicKey** *(string) --*

      The public key that the Amazon Redshift cluster will use to connect to the HSM. You must
      register the public key in the HSM.

    - **Tags** *(list) --*

      The list of tags for the HSM client certificate.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateHsmClientCertificateResponseTypeDef = TypedDict(
    "_ClientCreateHsmClientCertificateResponseTypeDef",
    {"HsmClientCertificate": ClientCreateHsmClientCertificateResponseHsmClientCertificateTypeDef},
    total=False,
)


class ClientCreateHsmClientCertificateResponseTypeDef(
    _ClientCreateHsmClientCertificateResponseTypeDef
):
    """
    Type definition for `ClientCreateHsmClientCertificate` `Response`

    - **HsmClientCertificate** *(dict) --*

      Returns information about an HSM client certificate. The certificate is stored in a secure
      Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data files.

      - **HsmClientCertificateIdentifier** *(string) --*

        The identifier of the HSM client certificate.

      - **HsmClientCertificatePublicKey** *(string) --*

        The public key that the Amazon Redshift cluster will use to connect to the HSM. You must
        register the public key in the HSM.

      - **Tags** *(list) --*

        The list of tags for the HSM client certificate.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateHsmClientCertificateTagsTypeDef = TypedDict(
    "_ClientCreateHsmClientCertificateTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateHsmClientCertificateTagsTypeDef(_ClientCreateHsmClientCertificateTagsTypeDef):
    """
    Type definition for `ClientCreateHsmClientCertificate` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateHsmConfigurationResponseHsmConfigurationTagsTypeDef = TypedDict(
    "_ClientCreateHsmConfigurationResponseHsmConfigurationTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateHsmConfigurationResponseHsmConfigurationTagsTypeDef(
    _ClientCreateHsmConfigurationResponseHsmConfigurationTagsTypeDef
):
    """
    Type definition for `ClientCreateHsmConfigurationResponseHsmConfiguration` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateHsmConfigurationResponseHsmConfigurationTypeDef = TypedDict(
    "_ClientCreateHsmConfigurationResponseHsmConfigurationTypeDef",
    {
        "HsmConfigurationIdentifier": str,
        "Description": str,
        "HsmIpAddress": str,
        "HsmPartitionName": str,
        "Tags": List[ClientCreateHsmConfigurationResponseHsmConfigurationTagsTypeDef],
    },
    total=False,
)


class ClientCreateHsmConfigurationResponseHsmConfigurationTypeDef(
    _ClientCreateHsmConfigurationResponseHsmConfigurationTypeDef
):
    """
    Type definition for `ClientCreateHsmConfigurationResponse` `HsmConfiguration`

    Returns information about an HSM configuration, which is an object that describes to Amazon
    Redshift clusters the information they require to connect to an HSM where they can store
    database encryption keys.

    - **HsmConfigurationIdentifier** *(string) --*

      The name of the Amazon Redshift HSM configuration.

    - **Description** *(string) --*

      A text description of the HSM configuration.

    - **HsmIpAddress** *(string) --*

      The IP address that the Amazon Redshift cluster must use to access the HSM.

    - **HsmPartitionName** *(string) --*

      The name of the partition in the HSM where the Amazon Redshift clusters will store their
      database encryption keys.

    - **Tags** *(list) --*

      The list of tags for the HSM configuration.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateHsmConfigurationResponseTypeDef = TypedDict(
    "_ClientCreateHsmConfigurationResponseTypeDef",
    {"HsmConfiguration": ClientCreateHsmConfigurationResponseHsmConfigurationTypeDef},
    total=False,
)


class ClientCreateHsmConfigurationResponseTypeDef(_ClientCreateHsmConfigurationResponseTypeDef):
    """
    Type definition for `ClientCreateHsmConfiguration` `Response`

    - **HsmConfiguration** *(dict) --*

      Returns information about an HSM configuration, which is an object that describes to Amazon
      Redshift clusters the information they require to connect to an HSM where they can store
      database encryption keys.

      - **HsmConfigurationIdentifier** *(string) --*

        The name of the Amazon Redshift HSM configuration.

      - **Description** *(string) --*

        A text description of the HSM configuration.

      - **HsmIpAddress** *(string) --*

        The IP address that the Amazon Redshift cluster must use to access the HSM.

      - **HsmPartitionName** *(string) --*

        The name of the partition in the HSM where the Amazon Redshift clusters will store their
        database encryption keys.

      - **Tags** *(list) --*

        The list of tags for the HSM configuration.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateHsmConfigurationTagsTypeDef = TypedDict(
    "_ClientCreateHsmConfigurationTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateHsmConfigurationTagsTypeDef(_ClientCreateHsmConfigurationTagsTypeDef):
    """
    Type definition for `ClientCreateHsmConfiguration` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateScheduledActionResponseTargetActionResizeClusterTypeDef = TypedDict(
    "_ClientCreateScheduledActionResponseTargetActionResizeClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "ClusterType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "Classic": bool,
    },
    total=False,
)


class ClientCreateScheduledActionResponseTargetActionResizeClusterTypeDef(
    _ClientCreateScheduledActionResponseTargetActionResizeClusterTypeDef
):
    """
    Type definition for `ClientCreateScheduledActionResponseTargetAction` `ResizeCluster`

    An action that runs a ``ResizeCluster`` API operation.

    - **ClusterIdentifier** *(string) --*

      The unique identifier for the cluster to resize.

    - **ClusterType** *(string) --*

      The new cluster type for the specified cluster.

    - **NodeType** *(string) --*

      The new node type for the nodes you are adding. If not specified, the cluster's current node
      type is used.

    - **NumberOfNodes** *(integer) --*

      The new number of nodes for the cluster.

    - **Classic** *(boolean) --*

      A boolean value indicating whether the resize operation is using the classic resize process.
      If you don't provide this parameter or set the value to ``false`` , the resize type is
      elastic.
    """


_ClientCreateScheduledActionResponseTargetActionTypeDef = TypedDict(
    "_ClientCreateScheduledActionResponseTargetActionTypeDef",
    {"ResizeCluster": ClientCreateScheduledActionResponseTargetActionResizeClusterTypeDef},
    total=False,
)


class ClientCreateScheduledActionResponseTargetActionTypeDef(
    _ClientCreateScheduledActionResponseTargetActionTypeDef
):
    """
    Type definition for `ClientCreateScheduledActionResponse` `TargetAction`

    A JSON format string of the Amazon Redshift API operation with input parameters.

    "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
    ".

    - **ResizeCluster** *(dict) --*

      An action that runs a ``ResizeCluster`` API operation.

      - **ClusterIdentifier** *(string) --*

        The unique identifier for the cluster to resize.

      - **ClusterType** *(string) --*

        The new cluster type for the specified cluster.

      - **NodeType** *(string) --*

        The new node type for the nodes you are adding. If not specified, the cluster's current node
        type is used.

      - **NumberOfNodes** *(integer) --*

        The new number of nodes for the cluster.

      - **Classic** *(boolean) --*

        A boolean value indicating whether the resize operation is using the classic resize process.
        If you don't provide this parameter or set the value to ``false`` , the resize type is
        elastic.
    """


_ClientCreateScheduledActionResponseTypeDef = TypedDict(
    "_ClientCreateScheduledActionResponseTypeDef",
    {
        "ScheduledActionName": str,
        "TargetAction": ClientCreateScheduledActionResponseTargetActionTypeDef,
        "Schedule": str,
        "IamRole": str,
        "ScheduledActionDescription": str,
        "State": str,
        "NextInvocations": List[datetime],
        "StartTime": datetime,
        "EndTime": datetime,
    },
    total=False,
)


class ClientCreateScheduledActionResponseTypeDef(_ClientCreateScheduledActionResponseTypeDef):
    """
    Type definition for `ClientCreateScheduledAction` `Response`

    Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift API
    operations on a schedule. For information about which API operations can be scheduled, see
    ScheduledActionType .

    - **ScheduledActionName** *(string) --*

      The name of the scheduled action.

    - **TargetAction** *(dict) --*

      A JSON format string of the Amazon Redshift API operation with input parameters.

      "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
      ".

      - **ResizeCluster** *(dict) --*

        An action that runs a ``ResizeCluster`` API operation.

        - **ClusterIdentifier** *(string) --*

          The unique identifier for the cluster to resize.

        - **ClusterType** *(string) --*

          The new cluster type for the specified cluster.

        - **NodeType** *(string) --*

          The new node type for the nodes you are adding. If not specified, the cluster's current
          node type is used.

        - **NumberOfNodes** *(integer) --*

          The new number of nodes for the cluster.

        - **Classic** *(boolean) --*

          A boolean value indicating whether the resize operation is using the classic resize
          process. If you don't provide this parameter or set the value to ``false`` , the resize
          type is elastic.

    - **Schedule** *(string) --*

      The schedule for a one-time (at format) or recurring (cron format) scheduled action. Schedule
      invocations must be separated by at least one hour.

      Format of at expressions is "``at(yyyy-mm-ddThh:mm:ss)`` ". For example,
      "``at(2016-03-04T17:27:00)`` ".

      Format of cron expressions is "``cron(Minutes Hours Day-of-month Month Day-of-week Year)`` ".
      For example, "``cron(0, 10, *, *, MON, *)`` ". For more information, see `Cron Expressions
      <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions>`__
      in the *Amazon CloudWatch Events User Guide* .

    - **IamRole** *(string) --*

      The IAM role to assume to run the scheduled action. This IAM role must have permission to run
      the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon
      Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your
      behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see
      `Using Identity-Based Policies for Amazon Redshift
      <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html>`__
      in the *Amazon Redshift Cluster Management Guide* .

    - **ScheduledActionDescription** *(string) --*

      The description of the scheduled action.

    - **State** *(string) --*

      The state of the scheduled action. For example, ``DISABLED`` .

    - **NextInvocations** *(list) --*

      List of times when the scheduled action will run.

      - *(datetime) --*

    - **StartTime** *(datetime) --*

      The start time in UTC when the schedule is active. Before this time, the scheduled action does
      not trigger.

    - **EndTime** *(datetime) --*

      The end time in UTC when the schedule is no longer active. After this time, the scheduled
      action does not trigger.
    """


_RequiredClientCreateScheduledActionTargetActionResizeClusterTypeDef = TypedDict(
    "_RequiredClientCreateScheduledActionTargetActionResizeClusterTypeDef",
    {"ClusterIdentifier": str, "NumberOfNodes": int},
)
_OptionalClientCreateScheduledActionTargetActionResizeClusterTypeDef = TypedDict(
    "_OptionalClientCreateScheduledActionTargetActionResizeClusterTypeDef",
    {"ClusterType": str, "NodeType": str, "Classic": bool},
    total=False,
)


class ClientCreateScheduledActionTargetActionResizeClusterTypeDef(
    _RequiredClientCreateScheduledActionTargetActionResizeClusterTypeDef,
    _OptionalClientCreateScheduledActionTargetActionResizeClusterTypeDef,
):
    """
    Type definition for `ClientCreateScheduledActionTargetAction` `ResizeCluster`

    An action that runs a ``ResizeCluster`` API operation.

    - **ClusterIdentifier** *(string) --* **[REQUIRED]**

      The unique identifier for the cluster to resize.

    - **ClusterType** *(string) --*

      The new cluster type for the specified cluster.

    - **NodeType** *(string) --*

      The new node type for the nodes you are adding. If not specified, the cluster's current node
      type is used.

    - **NumberOfNodes** *(integer) --* **[REQUIRED]**

      The new number of nodes for the cluster.

    - **Classic** *(boolean) --*

      A boolean value indicating whether the resize operation is using the classic resize process.
      If you don't provide this parameter or set the value to ``false`` , the resize type is
      elastic.
    """


_ClientCreateScheduledActionTargetActionTypeDef = TypedDict(
    "_ClientCreateScheduledActionTargetActionTypeDef",
    {"ResizeCluster": ClientCreateScheduledActionTargetActionResizeClusterTypeDef},
    total=False,
)


class ClientCreateScheduledActionTargetActionTypeDef(
    _ClientCreateScheduledActionTargetActionTypeDef
):
    """
    Type definition for `ClientCreateScheduledAction` `TargetAction`

    A JSON format string of the Amazon Redshift API operation with input parameters. For more
    information about this parameter, see  ScheduledAction .

    - **ResizeCluster** *(dict) --*

      An action that runs a ``ResizeCluster`` API operation.

      - **ClusterIdentifier** *(string) --* **[REQUIRED]**

        The unique identifier for the cluster to resize.

      - **ClusterType** *(string) --*

        The new cluster type for the specified cluster.

      - **NodeType** *(string) --*

        The new node type for the nodes you are adding. If not specified, the cluster's current node
        type is used.

      - **NumberOfNodes** *(integer) --* **[REQUIRED]**

        The new number of nodes for the cluster.

      - **Classic** *(boolean) --*

        A boolean value indicating whether the resize operation is using the classic resize process.
        If you don't provide this parameter or set the value to ``false`` , the resize type is
        elastic.
    """


_ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTagsTypeDef = TypedDict(
    "_ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTagsTypeDef(
    _ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTagsTypeDef
):
    """
    Type definition for `ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrant` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTypeDef = TypedDict(
    "_ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTypeDef",
    {
        "SnapshotCopyGrantName": str,
        "KmsKeyId": str,
        "Tags": List[ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTagsTypeDef],
    },
    total=False,
)


class ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTypeDef(
    _ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTypeDef
):
    """
    Type definition for `ClientCreateSnapshotCopyGrantResponse` `SnapshotCopyGrant`

    The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with
    the specified customer master key (CMK) from AWS KMS in the destination region.

    For more information about managing snapshot copy grants, go to `Amazon Redshift Database
    Encryption <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html>`__
    in the *Amazon Redshift Cluster Management Guide* .

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.

    - **KmsKeyId** *(string) --*

      The unique identifier of the customer master key (CMK) in AWS KMS to which Amazon Redshift is
      granted permission.

    - **Tags** *(list) --*

      A list of tag instances.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientCreateSnapshotCopyGrantResponseTypeDef = TypedDict(
    "_ClientCreateSnapshotCopyGrantResponseTypeDef",
    {"SnapshotCopyGrant": ClientCreateSnapshotCopyGrantResponseSnapshotCopyGrantTypeDef},
    total=False,
)


class ClientCreateSnapshotCopyGrantResponseTypeDef(_ClientCreateSnapshotCopyGrantResponseTypeDef):
    """
    Type definition for `ClientCreateSnapshotCopyGrant` `Response`

    - **SnapshotCopyGrant** *(dict) --*

      The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots
      with the specified customer master key (CMK) from AWS KMS in the destination region.

      For more information about managing snapshot copy grants, go to `Amazon Redshift Database
      Encryption
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html>`__ in the
      *Amazon Redshift Cluster Management Guide* .

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

      - **KmsKeyId** *(string) --*

        The unique identifier of the customer master key (CMK) in AWS KMS to which Amazon Redshift
        is granted permission.

      - **Tags** *(list) --*

        A list of tag instances.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientCreateSnapshotCopyGrantTagsTypeDef = TypedDict(
    "_ClientCreateSnapshotCopyGrantTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateSnapshotCopyGrantTagsTypeDef(_ClientCreateSnapshotCopyGrantTagsTypeDef):
    """
    Type definition for `ClientCreateSnapshotCopyGrant` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateSnapshotScheduleResponseAssociatedClustersTypeDef = TypedDict(
    "_ClientCreateSnapshotScheduleResponseAssociatedClustersTypeDef",
    {"ClusterIdentifier": str, "ScheduleAssociationState": str},
    total=False,
)


class ClientCreateSnapshotScheduleResponseAssociatedClustersTypeDef(
    _ClientCreateSnapshotScheduleResponseAssociatedClustersTypeDef
):
    """
    Type definition for `ClientCreateSnapshotScheduleResponse` `AssociatedClusters`

    - **ClusterIdentifier** *(string) --*

    - **ScheduleAssociationState** *(string) --*
    """


_ClientCreateSnapshotScheduleResponseTagsTypeDef = TypedDict(
    "_ClientCreateSnapshotScheduleResponseTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateSnapshotScheduleResponseTagsTypeDef(
    _ClientCreateSnapshotScheduleResponseTagsTypeDef
):
    """
    Type definition for `ClientCreateSnapshotScheduleResponse` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateSnapshotScheduleResponseTypeDef = TypedDict(
    "_ClientCreateSnapshotScheduleResponseTypeDef",
    {
        "ScheduleDefinitions": List[str],
        "ScheduleIdentifier": str,
        "ScheduleDescription": str,
        "Tags": List[ClientCreateSnapshotScheduleResponseTagsTypeDef],
        "NextInvocations": List[datetime],
        "AssociatedClusterCount": int,
        "AssociatedClusters": List[ClientCreateSnapshotScheduleResponseAssociatedClustersTypeDef],
    },
    total=False,
)


class ClientCreateSnapshotScheduleResponseTypeDef(_ClientCreateSnapshotScheduleResponseTypeDef):
    """
    Type definition for `ClientCreateSnapshotSchedule` `Response`

    Describes a snapshot schedule. You can set a regular interval for creating snapshots of a
    cluster. You can also schedule snapshots for specific dates.

    - **ScheduleDefinitions** *(list) --*

      A list of ScheduleDefinitions.

      - *(string) --*

    - **ScheduleIdentifier** *(string) --*

      A unique identifier for the schedule.

    - **ScheduleDescription** *(string) --*

      The description of the schedule.

    - **Tags** *(list) --*

      An optional set of tags describing the schedule.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **NextInvocations** *(list) --*

      - *(datetime) --*

    - **AssociatedClusterCount** *(integer) --*

      The number of clusters associated with the schedule.

    - **AssociatedClusters** *(list) --*

      A list of clusters associated with the schedule. A maximum of 100 clusters is returned.

      - *(dict) --*

        - **ClusterIdentifier** *(string) --*

        - **ScheduleAssociationState** *(string) --*
    """


_ClientCreateSnapshotScheduleTagsTypeDef = TypedDict(
    "_ClientCreateSnapshotScheduleTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateSnapshotScheduleTagsTypeDef(_ClientCreateSnapshotScheduleTagsTypeDef):
    """
    Type definition for `ClientCreateSnapshotSchedule` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientCreateTagsTagsTypeDef = TypedDict(
    "_ClientCreateTagsTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientCreateTagsTagsTypeDef(_ClientCreateTagsTagsTypeDef):
    """
    Type definition for `ClientCreateTags` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDeleteClusterResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientDeleteClusterResponseClusterClusterNodesTypeDef(
    _ClientDeleteClusterResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientDeleteClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientDeleteClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientDeleteClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientDeleteClusterResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientDeleteClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientDeleteClusterResponseClusterClusterParameterGroupsTypeDef(
    _ClientDeleteClusterResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientDeleteClusterResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientDeleteClusterResponseClusterClusterSecurityGroupsTypeDef(
    _ClientDeleteClusterResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientDeleteClusterResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientDeleteClusterResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientDeleteClusterResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientDeleteClusterResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientDeleteClusterResponseClusterDataTransferProgressTypeDef(
    _ClientDeleteClusterResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientDeleteClusterResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientDeleteClusterResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientDeleteClusterResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientDeleteClusterResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientDeleteClusterResponseClusterElasticIpStatusTypeDef(
    _ClientDeleteClusterResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientDeleteClusterResponseClusterEndpointTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterEndpointTypeDef", {"Address": str, "Port": int}, total=False
)


class ClientDeleteClusterResponseClusterEndpointTypeDef(
    _ClientDeleteClusterResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientDeleteClusterResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientDeleteClusterResponseClusterHsmStatusTypeDef(
    _ClientDeleteClusterResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientDeleteClusterResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientDeleteClusterResponseClusterIamRolesTypeDef(
    _ClientDeleteClusterResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientDeleteClusterResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientDeleteClusterResponseClusterPendingModifiedValuesTypeDef(
    _ClientDeleteClusterResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientDeleteClusterResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientDeleteClusterResponseClusterResizeInfoTypeDef(
    _ClientDeleteClusterResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDeleteClusterResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientDeleteClusterResponseClusterRestoreStatusTypeDef(
    _ClientDeleteClusterResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientDeleteClusterResponseClusterTagsTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientDeleteClusterResponseClusterTagsTypeDef(_ClientDeleteClusterResponseClusterTagsTypeDef):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDeleteClusterResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDeleteClusterResponseClusterVpcSecurityGroupsTypeDef(
    _ClientDeleteClusterResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDeleteClusterResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDeleteClusterResponseClusterTypeDef = TypedDict(
    "_ClientDeleteClusterResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientDeleteClusterResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientDeleteClusterResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientDeleteClusterResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientDeleteClusterResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientDeleteClusterResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientDeleteClusterResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientDeleteClusterResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientDeleteClusterResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientDeleteClusterResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientDeleteClusterResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientDeleteClusterResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientDeleteClusterResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientDeleteClusterResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientDeleteClusterResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientDeleteClusterResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientDeleteClusterResponseClusterTypeDef(_ClientDeleteClusterResponseClusterTypeDef):
    """
    Type definition for `ClientDeleteClusterResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDeleteClusterResponseTypeDef = TypedDict(
    "_ClientDeleteClusterResponseTypeDef",
    {"Cluster": ClientDeleteClusterResponseClusterTypeDef},
    total=False,
)


class ClientDeleteClusterResponseTypeDef(_ClientDeleteClusterResponseTypeDef):
    """
    Type definition for `ClientDeleteCluster` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDeleteClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientDeleteClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientDeleteClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef(
    _ClientDeleteClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientDeleteClusterSnapshotResponseSnapshot` `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientDeleteClusterSnapshotResponseSnapshotTagsTypeDef = TypedDict(
    "_ClientDeleteClusterSnapshotResponseSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDeleteClusterSnapshotResponseSnapshotTagsTypeDef(
    _ClientDeleteClusterSnapshotResponseSnapshotTagsTypeDef
):
    """
    Type definition for `ClientDeleteClusterSnapshotResponseSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDeleteClusterSnapshotResponseSnapshotTypeDef = TypedDict(
    "_ClientDeleteClusterSnapshotResponseSnapshotTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientDeleteClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientDeleteClusterSnapshotResponseSnapshotTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientDeleteClusterSnapshotResponseSnapshotTypeDef(
    _ClientDeleteClusterSnapshotResponseSnapshotTypeDef
):
    """
    Type definition for `ClientDeleteClusterSnapshotResponse` `Snapshot`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientDeleteClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientDeleteClusterSnapshotResponseTypeDef",
    {"Snapshot": ClientDeleteClusterSnapshotResponseSnapshotTypeDef},
    total=False,
)


class ClientDeleteClusterSnapshotResponseTypeDef(_ClientDeleteClusterSnapshotResponseTypeDef):
    """
    Type definition for `ClientDeleteClusterSnapshot` `Response`

    - **Snapshot** *(dict) --*

      Describes a snapshot.

      - **SnapshotIdentifier** *(string) --*

        The snapshot identifier that is provided in the request.

      - **ClusterIdentifier** *(string) --*

        The identifier of the cluster for which the snapshot was taken.

      - **SnapshotCreateTime** *(datetime) --*

        The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
        of the cluster data as of this exact time.

      - **Status** *(string) --*

        The snapshot status. The value of the status depends on the API operation used:

        *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

        *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
        "failed".

        *  DeleteClusterSnapshot returns status as "deleted".

      - **Port** *(integer) --*

        The port that the cluster is listening on.

      - **AvailabilityZone** *(string) --*

        The Availability Zone in which the cluster was created.

      - **ClusterCreateTime** *(datetime) --*

        The time (UTC) when the cluster was originally created.

      - **MasterUsername** *(string) --*

        The master user name for the cluster.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **SnapshotType** *(string) --*

        The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
        are of type "manual".

      - **NodeType** *(string) --*

        The node type of the nodes in the cluster.

      - **NumberOfNodes** *(integer) --*

        The number of nodes in the cluster.

      - **DBName** *(string) --*

        The name of the database that was created when the cluster was created.

      - **VpcId** *(string) --*

        The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
        this field is not in the output.

      - **Encrypted** *(boolean) --*

        If ``true`` , the data in the snapshot is encrypted at rest.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
        data in the cluster from which the snapshot was taken.

      - **EncryptedWithHSM** *(boolean) --*

        A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
        source cluster. ``true`` indicates that the data is encrypted using HSM keys.

      - **AccountsWithRestoreAccess** *(list) --*

        A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if
        no accounts are authorized. Visible only to the snapshot owner.

        - *(dict) --*

          Describes an AWS customer account authorized to restore a snapshot.

          - **AccountId** *(string) --*

            The identifier of an AWS customer account authorized to restore a snapshot.

          - **AccountAlias** *(string) --*

            The identifier of an AWS support account authorized to restore a snapshot. For AWS
            support, the identifier is ``amazon-redshift-support`` .

      - **OwnerAccount** *(string) --*

        For manual snapshots, the AWS customer account used to create or copy the snapshot. For
        automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
        such as sharing a manual snapshot.

      - **TotalBackupSizeInMegaBytes** *(float) --*

        The size of the complete set of backup data that would be used to restore the cluster.

      - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

        The size of the incremental backup.

      - **BackupProgressInMegaBytes** *(float) --*

        The number of megabytes that have been transferred to the snapshot backup.

      - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
        for a completed backup.

      - **EstimatedSecondsToCompletion** *(integer) --*

        The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
        for a completed backup.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress snapshot backup has been running, or the amount of time it
        took a completed backup to finish.

      - **SourceRegion** *(string) --*

        The source region from which the snapshot was copied.

      - **Tags** *(list) --*

        The list of tags for the cluster snapshot.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **RestorableNodeTypes** *(list) --*

        The list of node types that this cluster snapshot is able to restore into.

        - *(string) --*

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the snapshot.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that a manual snapshot is retained. If the value is -1, the manual
        snapshot is retained indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ManualSnapshotRemainingDays** *(integer) --*

        The number of days until a manual snapshot will pass its retention period.

      - **SnapshotRetentionStartTime** *(datetime) --*

        A timestamp representing the start of the retention period for the snapshot.
    """


_ClientDescribeAccountAttributesResponseAccountAttributesAttributeValuesTypeDef = TypedDict(
    "_ClientDescribeAccountAttributesResponseAccountAttributesAttributeValuesTypeDef",
    {"AttributeValue": str},
    total=False,
)


class ClientDescribeAccountAttributesResponseAccountAttributesAttributeValuesTypeDef(
    _ClientDescribeAccountAttributesResponseAccountAttributesAttributeValuesTypeDef
):
    """
    Type definition for `ClientDescribeAccountAttributesResponseAccountAttributes` `AttributeValues`

    Describes an attribute value.

    - **AttributeValue** *(string) --*

      The value of the attribute.
    """


_ClientDescribeAccountAttributesResponseAccountAttributesTypeDef = TypedDict(
    "_ClientDescribeAccountAttributesResponseAccountAttributesTypeDef",
    {
        "AttributeName": str,
        "AttributeValues": List[
            ClientDescribeAccountAttributesResponseAccountAttributesAttributeValuesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeAccountAttributesResponseAccountAttributesTypeDef(
    _ClientDescribeAccountAttributesResponseAccountAttributesTypeDef
):
    """
    Type definition for `ClientDescribeAccountAttributesResponse` `AccountAttributes`

    A name value pair that describes an aspect of an account.

    - **AttributeName** *(string) --*

      The name of the attribute.

    - **AttributeValues** *(list) --*

      A list of attribute values.

      - *(dict) --*

        Describes an attribute value.

        - **AttributeValue** *(string) --*

          The value of the attribute.
    """


_ClientDescribeAccountAttributesResponseTypeDef = TypedDict(
    "_ClientDescribeAccountAttributesResponseTypeDef",
    {"AccountAttributes": List[ClientDescribeAccountAttributesResponseAccountAttributesTypeDef]},
    total=False,
)


class ClientDescribeAccountAttributesResponseTypeDef(
    _ClientDescribeAccountAttributesResponseTypeDef
):
    """
    Type definition for `ClientDescribeAccountAttributes` `Response`

    - **AccountAttributes** *(list) --*

      A list of attributes assigned to an account.

      - *(dict) --*

        A name value pair that describes an aspect of an account.

        - **AttributeName** *(string) --*

          The name of the attribute.

        - **AttributeValues** *(list) --*

          A list of attribute values.

          - *(dict) --*

            Describes an attribute value.

            - **AttributeValue** *(string) --*

              The value of the attribute.
    """


_ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsRevisionTargetsTypeDef = TypedDict(
    "_ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsRevisionTargetsTypeDef",
    {"DatabaseRevision": str, "Description": str, "DatabaseRevisionReleaseDate": datetime},
    total=False,
)


class ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsRevisionTargetsTypeDef(
    _ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsRevisionTargetsTypeDef
):
    """
    Type definition for `ClientDescribeClusterDbRevisionsResponseClusterDbRevisions`
    `RevisionTargets`

    Describes a ``RevisionTarget`` .

    - **DatabaseRevision** *(string) --*

      A unique string that identifies the version to update the cluster to. You can use this value
      in  ModifyClusterDbRevision .

    - **Description** *(string) --*

      A string that describes the changes and features that will be applied to the cluster when it
      is updated to the corresponding  ClusterDbRevision .

    - **DatabaseRevisionReleaseDate** *(datetime) --*

      The date on which the database revision was released.
    """


_ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsTypeDef = TypedDict(
    "_ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsTypeDef",
    {
        "ClusterIdentifier": str,
        "CurrentDatabaseRevision": str,
        "DatabaseRevisionReleaseDate": datetime,
        "RevisionTargets": List[
            ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsRevisionTargetsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsTypeDef(
    _ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsTypeDef
):
    """
    Type definition for `ClientDescribeClusterDbRevisionsResponse` `ClusterDbRevisions`

    Describes a ``ClusterDbRevision`` .

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **CurrentDatabaseRevision** *(string) --*

      A string representing the current cluster version.

    - **DatabaseRevisionReleaseDate** *(datetime) --*

      The date on which the database revision was released.

    - **RevisionTargets** *(list) --*

      A list of ``RevisionTarget`` objects, where each object describes the database revision that a
      cluster can be updated to.

      - *(dict) --*

        Describes a ``RevisionTarget`` .

        - **DatabaseRevision** *(string) --*

          A unique string that identifies the version to update the cluster to. You can use this
          value in  ModifyClusterDbRevision .

        - **Description** *(string) --*

          A string that describes the changes and features that will be applied to the cluster when
          it is updated to the corresponding  ClusterDbRevision .

        - **DatabaseRevisionReleaseDate** *(datetime) --*

          The date on which the database revision was released.
    """


_ClientDescribeClusterDbRevisionsResponseTypeDef = TypedDict(
    "_ClientDescribeClusterDbRevisionsResponseTypeDef",
    {
        "Marker": str,
        "ClusterDbRevisions": List[
            ClientDescribeClusterDbRevisionsResponseClusterDbRevisionsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterDbRevisionsResponseTypeDef(
    _ClientDescribeClusterDbRevisionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeClusterDbRevisions` `Response`

    - **Marker** *(string) --*

      A string representing the starting point for the next set of revisions. If a value is returned
      in a response, you can retrieve the next set of revisions by providing the value in the
      ``marker`` parameter and retrying the command. If the ``marker`` field is empty, all revisions
      have already been returned.

    - **ClusterDbRevisions** *(list) --*

      A list of revisions.

      - *(dict) --*

        Describes a ``ClusterDbRevision`` .

        - **ClusterIdentifier** *(string) --*

          The unique identifier of the cluster.

        - **CurrentDatabaseRevision** *(string) --*

          A string representing the current cluster version.

        - **DatabaseRevisionReleaseDate** *(datetime) --*

          The date on which the database revision was released.

        - **RevisionTargets** *(list) --*

          A list of ``RevisionTarget`` objects, where each object describes the database revision
          that a cluster can be updated to.

          - *(dict) --*

            Describes a ``RevisionTarget`` .

            - **DatabaseRevision** *(string) --*

              A unique string that identifies the version to update the cluster to. You can use this
              value in  ModifyClusterDbRevision .

            - **Description** *(string) --*

              A string that describes the changes and features that will be applied to the cluster
              when it is updated to the corresponding  ClusterDbRevision .

            - **DatabaseRevisionReleaseDate** *(datetime) --*

              The date on which the database revision was released.
    """


_ClientDescribeClusterParameterGroupsResponseParameterGroupsTagsTypeDef = TypedDict(
    "_ClientDescribeClusterParameterGroupsResponseParameterGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeClusterParameterGroupsResponseParameterGroupsTagsTypeDef(
    _ClientDescribeClusterParameterGroupsResponseParameterGroupsTagsTypeDef
):
    """
    Type definition for `ClientDescribeClusterParameterGroupsResponseParameterGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClusterParameterGroupsResponseParameterGroupsTypeDef = TypedDict(
    "_ClientDescribeClusterParameterGroupsResponseParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterGroupFamily": str,
        "Description": str,
        "Tags": List[ClientDescribeClusterParameterGroupsResponseParameterGroupsTagsTypeDef],
    },
    total=False,
)


class ClientDescribeClusterParameterGroupsResponseParameterGroupsTypeDef(
    _ClientDescribeClusterParameterGroupsResponseParameterGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClusterParameterGroupsResponse` `ParameterGroups`

    Describes a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family that this cluster parameter group is compatible
      with.

    - **Description** *(string) --*

      The description of the parameter group.

    - **Tags** *(list) --*

      The list of tags for the cluster parameter group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeClusterParameterGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeClusterParameterGroupsResponseTypeDef",
    {
        "Marker": str,
        "ParameterGroups": List[ClientDescribeClusterParameterGroupsResponseParameterGroupsTypeDef],
    },
    total=False,
)


class ClientDescribeClusterParameterGroupsResponseTypeDef(
    _ClientDescribeClusterParameterGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeClusterParameterGroups` `Response`

    Contains the output from the  DescribeClusterParameterGroups action.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **ParameterGroups** *(list) --*

      A list of  ClusterParameterGroup instances. Each instance describes one cluster parameter
      group.

      - *(dict) --*

        Describes a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterGroupFamily** *(string) --*

          The name of the cluster parameter group family that this cluster parameter group is
          compatible with.

        - **Description** *(string) --*

          The description of the parameter group.

        - **Tags** *(list) --*

          The list of tags for the cluster parameter group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeClusterParametersResponseParametersTypeDef = TypedDict(
    "_ClientDescribeClusterParametersResponseParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "DataType": str,
        "AllowedValues": str,
        "ApplyType": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
    },
    total=False,
)


class ClientDescribeClusterParametersResponseParametersTypeDef(
    _ClientDescribeClusterParametersResponseParametersTypeDef
):
    """
    Type definition for `ClientDescribeClusterParametersResponse` `Parameters`

    Describes a parameter in a cluster parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterValue** *(string) --*

      The value of the parameter.

    - **Description** *(string) --*

      A description of the parameter.

    - **Source** *(string) --*

      The source of the parameter value, such as "engine-default" or "user".

    - **DataType** *(string) --*

      The data type of the parameter.

    - **AllowedValues** *(string) --*

      The valid range of values for the parameter.

    - **ApplyType** *(string) --*

      Specifies how to apply the WLM configuration parameter. Some properties can be applied
      dynamically, while other properties require that any associated clusters be rebooted for the
      configuration changes to be applied. For more information about parameters and parameter
      groups, go to `Amazon Redshift Parameter Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

    - **IsModifiable** *(boolean) --*

      If ``true`` , the parameter can be modified. Some parameters have security or operational
      implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.
    """


_ClientDescribeClusterParametersResponseTypeDef = TypedDict(
    "_ClientDescribeClusterParametersResponseTypeDef",
    {"Parameters": List[ClientDescribeClusterParametersResponseParametersTypeDef], "Marker": str},
    total=False,
)


class ClientDescribeClusterParametersResponseTypeDef(
    _ClientDescribeClusterParametersResponseTypeDef
):
    """
    Type definition for `ClientDescribeClusterParameters` `Response`

    Contains the output from the  DescribeClusterParameters action.

    - **Parameters** *(list) --*

      A list of  Parameter instances. Each instance lists the parameters of one cluster parameter
      group.

      - *(dict) --*

        Describes a parameter in a cluster parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterValue** *(string) --*

          The value of the parameter.

        - **Description** *(string) --*

          A description of the parameter.

        - **Source** *(string) --*

          The source of the parameter value, such as "engine-default" or "user".

        - **DataType** *(string) --*

          The data type of the parameter.

        - **AllowedValues** *(string) --*

          The valid range of values for the parameter.

        - **ApplyType** *(string) --*

          Specifies how to apply the WLM configuration parameter. Some properties can be applied
          dynamically, while other properties require that any associated clusters be rebooted for
          the configuration changes to be applied. For more information about parameters and
          parameter groups, go to `Amazon Redshift Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

        - **IsModifiable** *(boolean) --*

          If ``true`` , the parameter can be modified. Some parameters have security or operational
          implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.
    """


_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef
):
    """
    Type definition for
    `ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupOwnerId": str,
        "Tags": List[
            ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroups`
    `EC2SecurityGroups`

    Describes an Amazon EC2 security group.

    - **Status** *(string) --*

      The status of the EC2 security group.

    - **EC2SecurityGroupName** *(string) --*

      The name of the EC2 Security Group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      The AWS ID of the owner of the EC2 security group specified in the ``EC2SecurityGroupName``
      field.

    - **Tags** *(list) --*

      The list of tags for the EC2 security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTagsTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTagsTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTagsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRanges`
    `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTypeDef",
    {
        "Status": str,
        "CIDRIP": str,
        "Tags": List[
            ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTagsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTypeDef
):
    """
    Type definition for `ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroups`
    `IPRanges`

    Describes an IP range used in a security group.

    - **Status** *(string) --*

      The status of the IP range, for example, "authorized".

    - **CIDRIP** *(string) --*

      The IP range in Classless Inter-Domain Routing (CIDR) notation.

    - **Tags** *(list) --*

      The list of tags for the IP range.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTagsTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTagsTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTagsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTypeDef",
    {
        "ClusterSecurityGroupName": str,
        "Description": str,
        "EC2SecurityGroups": List[
            ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsIPRangesTypeDef
        ],
        "Tags": List[ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTagsTypeDef],
    },
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSecurityGroupsResponse` `ClusterSecurityGroups`

    Describes a security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group to which the operation was applied.

    - **Description** *(string) --*

      A description of the security group.

    - **EC2SecurityGroups** *(list) --*

      A list of EC2 security groups that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an Amazon EC2 security group.

        - **Status** *(string) --*

          The status of the EC2 security group.

        - **EC2SecurityGroupName** *(string) --*

          The name of the EC2 Security Group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          The AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

        - **Tags** *(list) --*

          The list of tags for the EC2 security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **IPRanges** *(list) --*

      A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an IP range used in a security group.

        - **Status** *(string) --*

          The status of the IP range, for example, "authorized".

        - **CIDRIP** *(string) --*

          The IP range in Classless Inter-Domain Routing (CIDR) notation.

        - **Tags** *(list) --*

          The list of tags for the IP range.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **Tags** *(list) --*

      The list of tags for the cluster security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeClusterSecurityGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeClusterSecurityGroupsResponseTypeDef",
    {
        "Marker": str,
        "ClusterSecurityGroups": List[
            ClientDescribeClusterSecurityGroupsResponseClusterSecurityGroupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterSecurityGroupsResponseTypeDef(
    _ClientDescribeClusterSecurityGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeClusterSecurityGroups` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **ClusterSecurityGroups** *(list) --*

      A list of  ClusterSecurityGroup instances.

      - *(dict) --*

        Describes a security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group to which the operation was applied.

        - **Description** *(string) --*

          A description of the security group.

        - **EC2SecurityGroups** *(list) --*

          A list of EC2 security groups that are permitted to access clusters associated with this
          cluster security group.

          - *(dict) --*

            Describes an Amazon EC2 security group.

            - **Status** *(string) --*

              The status of the EC2 security group.

            - **EC2SecurityGroupName** *(string) --*

              The name of the EC2 Security Group.

            - **EC2SecurityGroupOwnerId** *(string) --*

              The AWS ID of the owner of the EC2 security group specified in the
              ``EC2SecurityGroupName`` field.

            - **Tags** *(list) --*

              The list of tags for the EC2 security group.

              - *(dict) --*

                A tag consisting of a name/value pair for a resource.

                - **Key** *(string) --*

                  The key, or name, for the resource tag.

                - **Value** *(string) --*

                  The value for the resource tag.

        - **IPRanges** *(list) --*

          A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with
          this cluster security group.

          - *(dict) --*

            Describes an IP range used in a security group.

            - **Status** *(string) --*

              The status of the IP range, for example, "authorized".

            - **CIDRIP** *(string) --*

              The IP range in Classless Inter-Domain Routing (CIDR) notation.

            - **Tags** *(list) --*

              The list of tags for the IP range.

              - *(dict) --*

                A tag consisting of a name/value pair for a resource.

                - **Key** *(string) --*

                  The key, or name, for the resource tag.

                - **Value** *(string) --*

                  The value for the resource tag.

        - **Tags** *(list) --*

          The list of tags for the cluster security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeClusterSnapshotsResponseSnapshotsAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientDescribeClusterSnapshotsResponseSnapshotsAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientDescribeClusterSnapshotsResponseSnapshotsAccountsWithRestoreAccessTypeDef(
    _ClientDescribeClusterSnapshotsResponseSnapshotsAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientDescribeClusterSnapshotsResponseSnapshots`
    `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientDescribeClusterSnapshotsResponseSnapshotsTagsTypeDef = TypedDict(
    "_ClientDescribeClusterSnapshotsResponseSnapshotsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeClusterSnapshotsResponseSnapshotsTagsTypeDef(
    _ClientDescribeClusterSnapshotsResponseSnapshotsTagsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSnapshotsResponseSnapshots` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClusterSnapshotsResponseSnapshotsTypeDef = TypedDict(
    "_ClientDescribeClusterSnapshotsResponseSnapshotsTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientDescribeClusterSnapshotsResponseSnapshotsAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientDescribeClusterSnapshotsResponseSnapshotsTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientDescribeClusterSnapshotsResponseSnapshotsTypeDef(
    _ClientDescribeClusterSnapshotsResponseSnapshotsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSnapshotsResponse` `Snapshots`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientDescribeClusterSnapshotsResponseTypeDef = TypedDict(
    "_ClientDescribeClusterSnapshotsResponseTypeDef",
    {"Marker": str, "Snapshots": List[ClientDescribeClusterSnapshotsResponseSnapshotsTypeDef]},
    total=False,
)


class ClientDescribeClusterSnapshotsResponseTypeDef(_ClientDescribeClusterSnapshotsResponseTypeDef):
    """
    Type definition for `ClientDescribeClusterSnapshots` `Response`

    Contains the output from the  DescribeClusterSnapshots action.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **Snapshots** *(list) --*

      A list of  Snapshot instances.

      - *(dict) --*

        Describes a snapshot.

        - **SnapshotIdentifier** *(string) --*

          The snapshot identifier that is provided in the request.

        - **ClusterIdentifier** *(string) --*

          The identifier of the cluster for which the snapshot was taken.

        - **SnapshotCreateTime** *(datetime) --*

          The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a
          copy of the cluster data as of this exact time.

        - **Status** *(string) --*

          The snapshot status. The value of the status depends on the API operation used:

          *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

          *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot",
          or "failed".

          *  DeleteClusterSnapshot returns status as "deleted".

        - **Port** *(integer) --*

          The port that the cluster is listening on.

        - **AvailabilityZone** *(string) --*

          The Availability Zone in which the cluster was created.

        - **ClusterCreateTime** *(datetime) --*

          The time (UTC) when the cluster was originally created.

        - **MasterUsername** *(string) --*

          The master user name for the cluster.

        - **ClusterVersion** *(string) --*

          The version ID of the Amazon Redshift engine that is running on the cluster.

        - **SnapshotType** *(string) --*

          The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
          are of type "manual".

        - **NodeType** *(string) --*

          The node type of the nodes in the cluster.

        - **NumberOfNodes** *(integer) --*

          The number of nodes in the cluster.

        - **DBName** *(string) --*

          The name of the database that was created when the cluster was created.

        - **VpcId** *(string) --*

          The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
          this field is not in the output.

        - **Encrypted** *(boolean) --*

          If ``true`` , the data in the snapshot is encrypted at rest.

        - **KmsKeyId** *(string) --*

          The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
          data in the cluster from which the snapshot was taken.

        - **EncryptedWithHSM** *(boolean) --*

          A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
          source cluster. ``true`` indicates that the data is encrypted using HSM keys.

        - **AccountsWithRestoreAccess** *(list) --*

          A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null``
          if no accounts are authorized. Visible only to the snapshot owner.

          - *(dict) --*

            Describes an AWS customer account authorized to restore a snapshot.

            - **AccountId** *(string) --*

              The identifier of an AWS customer account authorized to restore a snapshot.

            - **AccountAlias** *(string) --*

              The identifier of an AWS support account authorized to restore a snapshot. For AWS
              support, the identifier is ``amazon-redshift-support`` .

        - **OwnerAccount** *(string) --*

          For manual snapshots, the AWS customer account used to create or copy the snapshot. For
          automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
          such as sharing a manual snapshot.

        - **TotalBackupSizeInMegaBytes** *(float) --*

          The size of the complete set of backup data that would be used to restore the cluster.

        - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

          The size of the incremental backup.

        - **BackupProgressInMegaBytes** *(float) --*

          The number of megabytes that have been transferred to the snapshot backup.

        - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
          for a completed backup.

        - **EstimatedSecondsToCompletion** *(integer) --*

          The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
          for a completed backup.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress snapshot backup has been running, or the amount of time
          it took a completed backup to finish.

        - **SourceRegion** *(string) --*

          The source region from which the snapshot was copied.

        - **Tags** *(list) --*

          The list of tags for the cluster snapshot.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

        - **RestorableNodeTypes** *(list) --*

          The list of node types that this cluster snapshot is able to restore into.

          - *(string) --*

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track for the snapshot.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that a manual snapshot is retained. If the value is -1, the manual
          snapshot is retained indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **ManualSnapshotRemainingDays** *(integer) --*

          The number of days until a manual snapshot will pass its retention period.

        - **SnapshotRetentionStartTime** *(datetime) --*

          A timestamp representing the start of the retention period for the snapshot.
    """


_RequiredClientDescribeClusterSnapshotsSortingEntitiesTypeDef = TypedDict(
    "_RequiredClientDescribeClusterSnapshotsSortingEntitiesTypeDef", {"Attribute": str}
)
_OptionalClientDescribeClusterSnapshotsSortingEntitiesTypeDef = TypedDict(
    "_OptionalClientDescribeClusterSnapshotsSortingEntitiesTypeDef", {"SortOrder": str}, total=False
)


class ClientDescribeClusterSnapshotsSortingEntitiesTypeDef(
    _RequiredClientDescribeClusterSnapshotsSortingEntitiesTypeDef,
    _OptionalClientDescribeClusterSnapshotsSortingEntitiesTypeDef,
):
    """
    Type definition for `ClientDescribeClusterSnapshots` `SortingEntities`

    Describes a sorting entity

    - **Attribute** *(string) --* **[REQUIRED]**

      The category for sorting the snapshots.

    - **SortOrder** *(string) --*

      The order for listing the attributes.
    """


_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef = TypedDict(
    "_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    {"Name": str},
    total=False,
)


class ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef(
    _ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
):
    """
    Type definition for
    `ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZone`
    `SupportedPlatforms`

    A list of supported platforms for orderable clusters.

    - **Name** *(string) --*
    """


_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    {
        "Name": str,
        "SupportedPlatforms": List[
            ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnets`
    `SubnetAvailabilityZone`

    - **Name** *(string) --*

      The name of the availability zone.

    - **SupportedPlatforms** *(list) --*

      - *(dict) --*

        A list of supported platforms for orderable clusters.

        - **Name** *(string) --*
    """


_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsTypeDef = TypedDict(
    "_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsTypeDef(
    _ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroups` `Subnets`

    Describes a subnet.

    - **SubnetIdentifier** *(string) --*

      The identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      - **Name** *(string) --*

        The name of the availability zone.

      - **SupportedPlatforms** *(list) --*

        - *(dict) --*

          A list of supported platforms for orderable clusters.

          - **Name** *(string) --*

    - **SubnetStatus** *(string) --*

      The status of the subnet.
    """


_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTagsTypeDef = TypedDict(
    "_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTagsTypeDef(
    _ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTagsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTypeDef = TypedDict(
    "_ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTypeDef",
    {
        "ClusterSubnetGroupName": str,
        "Description": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsSubnetsTypeDef],
        "Tags": List[ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTagsTypeDef],
    },
    total=False,
)


class ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTypeDef(
    _ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClusterSubnetGroupsResponse` `ClusterSubnetGroups`

    Describes a subnet group.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the cluster subnet group.

    - **Description** *(string) --*

      The description of the cluster subnet group.

    - **VpcId** *(string) --*

      The VPC ID of the cluster subnet group.

    - **SubnetGroupStatus** *(string) --*

      The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete`` and
      ``Invalid`` .

    - **Subnets** *(list) --*

      A list of the VPC  Subnet elements.

      - *(dict) --*

        Describes a subnet.

        - **SubnetIdentifier** *(string) --*

          The identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          - **Name** *(string) --*

            The name of the availability zone.

          - **SupportedPlatforms** *(list) --*

            - *(dict) --*

              A list of supported platforms for orderable clusters.

              - **Name** *(string) --*

        - **SubnetStatus** *(string) --*

          The status of the subnet.

    - **Tags** *(list) --*

      The list of tags for the cluster subnet group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeClusterSubnetGroupsResponseTypeDef = TypedDict(
    "_ClientDescribeClusterSubnetGroupsResponseTypeDef",
    {
        "Marker": str,
        "ClusterSubnetGroups": List[
            ClientDescribeClusterSubnetGroupsResponseClusterSubnetGroupsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterSubnetGroupsResponseTypeDef(
    _ClientDescribeClusterSubnetGroupsResponseTypeDef
):
    """
    Type definition for `ClientDescribeClusterSubnetGroups` `Response`

    Contains the output from the  DescribeClusterSubnetGroups action.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **ClusterSubnetGroups** *(list) --*

      A list of  ClusterSubnetGroup instances.

      - *(dict) --*

        Describes a subnet group.

        - **ClusterSubnetGroupName** *(string) --*

          The name of the cluster subnet group.

        - **Description** *(string) --*

          The description of the cluster subnet group.

        - **VpcId** *(string) --*

          The VPC ID of the cluster subnet group.

        - **SubnetGroupStatus** *(string) --*

          The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete``
          and ``Invalid`` .

        - **Subnets** *(list) --*

          A list of the VPC  Subnet elements.

          - *(dict) --*

            Describes a subnet.

            - **SubnetIdentifier** *(string) --*

              The identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              - **Name** *(string) --*

                The name of the availability zone.

              - **SupportedPlatforms** *(list) --*

                - *(dict) --*

                  A list of supported platforms for orderable clusters.

                  - **Name** *(string) --*

            - **SubnetStatus** *(string) --*

              The status of the subnet.

        - **Tags** *(list) --*

          The list of tags for the cluster subnet group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef = TypedDict(
    "_ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef",
    {"OperationName": str},
    total=False,
)


class ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef(
    _ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef
):
    """
    Type definition for `ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargets`
    `SupportedOperations`

    Describes the operations that are allowed on a maintenance track.

    - **OperationName** *(string) --*

      A list of the supported operations.
    """


_ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsTypeDef = TypedDict(
    "_ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsTypeDef",
    {
        "MaintenanceTrackName": str,
        "DatabaseVersion": str,
        "SupportedOperations": List[
            ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsTypeDef(
    _ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsTypeDef
):
    """
    Type definition for `ClientDescribeClusterTracksResponseMaintenanceTracks` `UpdateTargets`

    A maintenance track that you can switch the current track to.

    - **MaintenanceTrackName** *(string) --*

      The name of the new maintenance track.

    - **DatabaseVersion** *(string) --*

      The cluster version for the new maintenance track.

    - **SupportedOperations** *(list) --*

      A list of operations supported by the maintenance track.

      - *(dict) --*

        Describes the operations that are allowed on a maintenance track.

        - **OperationName** *(string) --*

          A list of the supported operations.
    """


_ClientDescribeClusterTracksResponseMaintenanceTracksTypeDef = TypedDict(
    "_ClientDescribeClusterTracksResponseMaintenanceTracksTypeDef",
    {
        "MaintenanceTrackName": str,
        "DatabaseVersion": str,
        "UpdateTargets": List[
            ClientDescribeClusterTracksResponseMaintenanceTracksUpdateTargetsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClusterTracksResponseMaintenanceTracksTypeDef(
    _ClientDescribeClusterTracksResponseMaintenanceTracksTypeDef
):
    """
    Type definition for `ClientDescribeClusterTracksResponse` `MaintenanceTracks`

    Defines a maintenance track that determines which Amazon Redshift version to apply during a
    maintenance window. If the value for ``MaintenanceTrack`` is ``current`` , the cluster is
    updated to the most recently certified maintenance release. If the value is ``trailing`` , the
    cluster is updated to the previously certified maintenance release.

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track. Possible values are ``current`` and ``trailing`` .

    - **DatabaseVersion** *(string) --*

      The version number for the cluster release.

    - **UpdateTargets** *(list) --*

      An array of  UpdateTarget objects to update with the maintenance track.

      - *(dict) --*

        A maintenance track that you can switch the current track to.

        - **MaintenanceTrackName** *(string) --*

          The name of the new maintenance track.

        - **DatabaseVersion** *(string) --*

          The cluster version for the new maintenance track.

        - **SupportedOperations** *(list) --*

          A list of operations supported by the maintenance track.

          - *(dict) --*

            Describes the operations that are allowed on a maintenance track.

            - **OperationName** *(string) --*

              A list of the supported operations.
    """


_ClientDescribeClusterTracksResponseTypeDef = TypedDict(
    "_ClientDescribeClusterTracksResponseTypeDef",
    {
        "MaintenanceTracks": List[ClientDescribeClusterTracksResponseMaintenanceTracksTypeDef],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeClusterTracksResponseTypeDef(_ClientDescribeClusterTracksResponseTypeDef):
    """
    Type definition for `ClientDescribeClusterTracks` `Response`

    - **MaintenanceTracks** *(list) --*

      A list of maintenance tracks output by the ``DescribeClusterTracks`` operation.

      - *(dict) --*

        Defines a maintenance track that determines which Amazon Redshift version to apply during a
        maintenance window. If the value for ``MaintenanceTrack`` is ``current`` , the cluster is
        updated to the most recently certified maintenance release. If the value is ``trailing`` ,
        the cluster is updated to the previously certified maintenance release.

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track. Possible values are ``current`` and ``trailing`` .

        - **DatabaseVersion** *(string) --*

          The version number for the cluster release.

        - **UpdateTargets** *(list) --*

          An array of  UpdateTarget objects to update with the maintenance track.

          - *(dict) --*

            A maintenance track that you can switch the current track to.

            - **MaintenanceTrackName** *(string) --*

              The name of the new maintenance track.

            - **DatabaseVersion** *(string) --*

              The cluster version for the new maintenance track.

            - **SupportedOperations** *(list) --*

              A list of operations supported by the maintenance track.

              - *(dict) --*

                Describes the operations that are allowed on a maintenance track.

                - **OperationName** *(string) --*

                  A list of the supported operations.

    - **Marker** *(string) --*

      The starting point to return a set of response tracklist records. You can retrieve the next
      set of response records by providing the returned marker value in the ``Marker`` parameter and
      retrying the request.
    """


_ClientDescribeClusterVersionsResponseClusterVersionsTypeDef = TypedDict(
    "_ClientDescribeClusterVersionsResponseClusterVersionsTypeDef",
    {"ClusterVersion": str, "ClusterParameterGroupFamily": str, "Description": str},
    total=False,
)


class ClientDescribeClusterVersionsResponseClusterVersionsTypeDef(
    _ClientDescribeClusterVersionsResponseClusterVersionsTypeDef
):
    """
    Type definition for `ClientDescribeClusterVersionsResponse` `ClusterVersions`

    Describes a cluster version, including the parameter group family and description of the
    version.

    - **ClusterVersion** *(string) --*

      The version number used by the cluster.

    - **ClusterParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family for the cluster.

    - **Description** *(string) --*

      The description of the cluster version.
    """


_ClientDescribeClusterVersionsResponseTypeDef = TypedDict(
    "_ClientDescribeClusterVersionsResponseTypeDef",
    {
        "Marker": str,
        "ClusterVersions": List[ClientDescribeClusterVersionsResponseClusterVersionsTypeDef],
    },
    total=False,
)


class ClientDescribeClusterVersionsResponseTypeDef(_ClientDescribeClusterVersionsResponseTypeDef):
    """
    Type definition for `ClientDescribeClusterVersions` `Response`

    Contains the output from the  DescribeClusterVersions action.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **ClusterVersions** *(list) --*

      A list of ``Version`` elements.

      - *(dict) --*

        Describes a cluster version, including the parameter group family and description of the
        version.

        - **ClusterVersion** *(string) --*

          The version number used by the cluster.

        - **ClusterParameterGroupFamily** *(string) --*

          The name of the cluster parameter group family for the cluster.

        - **Description** *(string) --*

          The description of the cluster version.
    """


_ClientDescribeClustersResponseClustersClusterNodesTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientDescribeClustersResponseClustersClusterNodesTypeDef(
    _ClientDescribeClustersResponseClustersClusterNodesTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientDescribeClustersResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientDescribeClustersResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientDescribeClustersResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClustersClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientDescribeClustersResponseClustersClusterParameterGroupsTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientDescribeClustersResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientDescribeClustersResponseClustersClusterParameterGroupsTypeDef(
    _ClientDescribeClustersResponseClustersClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientDescribeClustersResponseClustersClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientDescribeClustersResponseClustersClusterSecurityGroupsTypeDef(
    _ClientDescribeClustersResponseClustersClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientDescribeClustersResponseClustersClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientDescribeClustersResponseClustersClusterSnapshotCopyStatusTypeDef(
    _ClientDescribeClustersResponseClustersClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientDescribeClustersResponseClustersDataTransferProgressTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientDescribeClustersResponseClustersDataTransferProgressTypeDef(
    _ClientDescribeClustersResponseClustersDataTransferProgressTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientDescribeClustersResponseClustersDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientDescribeClustersResponseClustersDeferredMaintenanceWindowsTypeDef(
    _ClientDescribeClustersResponseClustersDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientDescribeClustersResponseClustersElasticIpStatusTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientDescribeClustersResponseClustersElasticIpStatusTypeDef(
    _ClientDescribeClustersResponseClustersElasticIpStatusTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientDescribeClustersResponseClustersEndpointTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientDescribeClustersResponseClustersEndpointTypeDef(
    _ClientDescribeClustersResponseClustersEndpointTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientDescribeClustersResponseClustersHsmStatusTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientDescribeClustersResponseClustersHsmStatusTypeDef(
    _ClientDescribeClustersResponseClustersHsmStatusTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientDescribeClustersResponseClustersIamRolesTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientDescribeClustersResponseClustersIamRolesTypeDef(
    _ClientDescribeClustersResponseClustersIamRolesTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientDescribeClustersResponseClustersPendingModifiedValuesTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientDescribeClustersResponseClustersPendingModifiedValuesTypeDef(
    _ClientDescribeClustersResponseClustersPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientDescribeClustersResponseClustersResizeInfoTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientDescribeClustersResponseClustersResizeInfoTypeDef(
    _ClientDescribeClustersResponseClustersResizeInfoTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDescribeClustersResponseClustersRestoreStatusTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientDescribeClustersResponseClustersRestoreStatusTypeDef(
    _ClientDescribeClustersResponseClustersRestoreStatusTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientDescribeClustersResponseClustersTagsTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientDescribeClustersResponseClustersTagsTypeDef(
    _ClientDescribeClustersResponseClustersTagsTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeClustersResponseClustersVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDescribeClustersResponseClustersVpcSecurityGroupsTypeDef(
    _ClientDescribeClustersResponseClustersVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDescribeClustersResponseClusters` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDescribeClustersResponseClustersTypeDef = TypedDict(
    "_ClientDescribeClustersResponseClustersTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientDescribeClustersResponseClustersEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientDescribeClustersResponseClustersClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientDescribeClustersResponseClustersVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientDescribeClustersResponseClustersClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientDescribeClustersResponseClustersPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientDescribeClustersResponseClustersRestoreStatusTypeDef,
        "DataTransferProgress": ClientDescribeClustersResponseClustersDataTransferProgressTypeDef,
        "HsmStatus": ClientDescribeClustersResponseClustersHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientDescribeClustersResponseClustersClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientDescribeClustersResponseClustersClusterNodesTypeDef],
        "ElasticIpStatus": ClientDescribeClustersResponseClustersElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientDescribeClustersResponseClustersTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientDescribeClustersResponseClustersIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientDescribeClustersResponseClustersDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientDescribeClustersResponseClustersResizeInfoTypeDef,
    },
    total=False,
)


class ClientDescribeClustersResponseClustersTypeDef(_ClientDescribeClustersResponseClustersTypeDef):
    """
    Type definition for `ClientDescribeClustersResponse` `Clusters`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDescribeClustersResponseTypeDef = TypedDict(
    "_ClientDescribeClustersResponseTypeDef",
    {"Marker": str, "Clusters": List[ClientDescribeClustersResponseClustersTypeDef]},
    total=False,
)


class ClientDescribeClustersResponseTypeDef(_ClientDescribeClustersResponseTypeDef):
    """
    Type definition for `ClientDescribeClusters` `Response`

    Contains the output from the  DescribeClusters action.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **Clusters** *(list) --*

      A list of ``Cluster`` objects, where each object describes one cluster.

      - *(dict) --*

        Describes a cluster.

        - **ClusterIdentifier** *(string) --*

          The unique identifier of the cluster.

        - **NodeType** *(string) --*

          The node type for the nodes in the cluster.

        - **ClusterStatus** *(string) --*

          The current state of the cluster. Possible values are the following:

          * ``available``

          * ``available, prep-for-resize``

          * ``available, resize-cleanup``

          * ``cancelling-resize``

          * ``creating``

          * ``deleting``

          * ``final-snapshot``

          * ``hardware-failure``

          * ``incompatible-hsm``

          * ``incompatible-network``

          * ``incompatible-parameters``

          * ``incompatible-restore``

          * ``modifying``

          * ``rebooting``

          * ``renaming``

          * ``resizing``

          * ``rotating-keys``

          * ``storage-full``

          * ``updating-hsm``

        - **ClusterAvailabilityStatus** *(string) --*

          The availability status of the cluster for queries. Possible values are the following:

          * Available - The cluster is available for queries.

          * Unavailable - The cluster is not available for queries.

          * Maintenance - The cluster is intermittently available for queries due to maintenance
          activities.

          * Modifying - The cluster is intermittently available for queries due to changes that
          modify the cluster.

          * Failed - The cluster failed and is not available for queries.

        - **ModifyStatus** *(string) --*

          The status of a modify operation, if any, initiated for the cluster.

        - **MasterUsername** *(string) --*

          The master user name for the cluster. This name is used to connect to the database that is
          specified in the **DBName** parameter.

        - **DBName** *(string) --*

          The name of the initial database that was created when the cluster was created. This same
          name is returned for the life of the cluster. If an initial database was not specified, a
          database named ``dev`` dev was created by default.

        - **Endpoint** *(dict) --*

          The connection endpoint.

          - **Address** *(string) --*

            The DNS address of the Cluster.

          - **Port** *(integer) --*

            The port that the database engine is listening on.

        - **ClusterCreateTime** *(datetime) --*

          The date and time that the cluster was created.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The number of days that automatic cluster snapshots are retained.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The default number of days to retain a manual snapshot. If the value is -1, the snapshot
          is retained indefinitely. This setting doesn't change the retention period of existing
          snapshots.

          The value must be either -1 or an integer between 1 and 3,653.

        - **ClusterSecurityGroups** *(list) --*

          A list of cluster security group that are associated with the cluster. Each security group
          is represented by an element that contains ``ClusterSecurityGroup.Name`` and
          ``ClusterSecurityGroup.Status`` subelements.

          Cluster security groups are used when the cluster is not created in an Amazon Virtual
          Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
          listed by the **VpcSecurityGroups** parameter.

          - *(dict) --*

            Describes a cluster security group.

            - **ClusterSecurityGroupName** *(string) --*

              The name of the cluster security group.

            - **Status** *(string) --*

              The status of the cluster security group.

        - **VpcSecurityGroups** *(list) --*

          A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated
          with the cluster. This parameter is returned only if the cluster is in a VPC.

          - *(dict) --*

            Describes the members of a VPC security group.

            - **VpcSecurityGroupId** *(string) --*

              The identifier of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

        - **ClusterParameterGroups** *(list) --*

          The list of cluster parameter groups that are associated with this cluster. Each parameter
          group in the list is returned with its status.

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterGroupName** *(string) --*

              The name of the cluster parameter group.

            - **ParameterApplyStatus** *(string) --*

              The status of parameter updates.

            - **ClusterParameterStatusList** *(list) --*

              The list of parameter statuses.

              For more information about parameters and parameter groups, go to `Amazon Redshift
              Parameter Groups
              <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
              in the *Amazon Redshift Cluster Management Guide* .

              - *(dict) --*

                Describes the status of a parameter group.

                - **ParameterName** *(string) --*

                  The name of the parameter.

                - **ParameterApplyStatus** *(string) --*

                  The status of the parameter that indicates whether the parameter is in sync with
                  the database, waiting for a cluster reboot, or encountered an error when being
                  applied.

                  The following are possible statuses and descriptions.

                  * ``in-sync`` : The parameter value is in sync with the database.

                  * ``pending-reboot`` : The parameter value will be applied after the cluster
                  reboots.

                  * ``applying`` : The parameter value is being applied to the database.

                  * ``invalid-parameter`` : Cannot apply the parameter value because it has an
                  invalid value or syntax.

                  * ``apply-deferred`` : The parameter contains static property changes. The changes
                  are deferred until the cluster reboots.

                  * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                  applied after the cluster reboots.

                  * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                  be applied after the cluster reboots.

                - **ParameterApplyErrorDescription** *(string) --*

                  The error that prevented the parameter from being applied to the database.

        - **ClusterSubnetGroupName** *(string) --*

          The name of the subnet group that is associated with the cluster. This parameter is valid
          only when the cluster is in a VPC.

        - **VpcId** *(string) --*

          The identifier of the VPC the cluster is in, if the cluster is in a VPC.

        - **AvailabilityZone** *(string) --*

          The name of the Availability Zone in which the cluster is located.

        - **PreferredMaintenanceWindow** *(string) --*

          The weekly time range, in Universal Coordinated Time (UTC), during which system
          maintenance can occur.

        - **PendingModifiedValues** *(dict) --*

          A value that, if present, indicates that changes to the cluster are pending. Specific
          pending changes are identified by subelements.

          - **MasterUserPassword** *(string) --*

            The pending or in-progress change of the master user password for the cluster.

          - **NodeType** *(string) --*

            The pending or in-progress change of the cluster's node type.

          - **NumberOfNodes** *(integer) --*

            The pending or in-progress change of the number of nodes in the cluster.

          - **ClusterType** *(string) --*

            The pending or in-progress change of the cluster type.

          - **ClusterVersion** *(string) --*

            The pending or in-progress change of the service version.

          - **AutomatedSnapshotRetentionPeriod** *(integer) --*

            The pending or in-progress change of the automated snapshot retention period.

          - **ClusterIdentifier** *(string) --*

            The pending or in-progress change of the new identifier for the cluster.

          - **PubliclyAccessible** *(boolean) --*

            The pending or in-progress change of the ability to connect to the cluster from the
            public network.

          - **EnhancedVpcRouting** *(boolean) --*

            An option that specifies whether to create the cluster with enhanced VPC routing
            enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a
            VPC. For more information, see `Enhanced VPC Routing
            <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
            Amazon Redshift Cluster Management Guide.

            If this option is ``true`` , enhanced VPC routing is enabled.

            Default: false

          - **MaintenanceTrackName** *(string) --*

            The name of the maintenance track that the cluster will change to during the next
            maintenance window.

          - **EncryptionType** *(string) --*

            The encryption type for a cluster. Possible values are: KMS and None. For the China
            region the possible values are None, and Legacy.

        - **ClusterVersion** *(string) --*

          The version ID of the Amazon Redshift engine that is running on the cluster.

        - **AllowVersionUpgrade** *(boolean) --*

          A boolean value that, if ``true`` , indicates that major version upgrades will be applied
          automatically to the cluster during the maintenance window.

        - **NumberOfNodes** *(integer) --*

          The number of compute nodes in the cluster.

        - **PubliclyAccessible** *(boolean) --*

          A boolean value that, if ``true`` , indicates that the cluster can be accessed from a
          public network.

        - **Encrypted** *(boolean) --*

          A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at
          rest.

        - **RestoreStatus** *(dict) --*

          A value that describes the status of a cluster restore action. This parameter returns null
          if the cluster was not created by restoring a snapshot.

          - **Status** *(string) --*

            The status of the restore action. Returns starting, restoring, completed, or failed.

          - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

            The number of megabytes per second being transferred from the backup storage. Returns
            the average rate for a completed backup. This field is only updated when you restore to
            DC2 and DS2 node types.

          - **SnapshotSizeInMegaBytes** *(integer) --*

            The size of the set of snapshot data used to restore the cluster. This field is only
            updated when you restore to DC2 and DS2 node types.

          - **ProgressInMegaBytes** *(integer) --*

            The number of megabytes that have been transferred from snapshot storage. This field is
            only updated when you restore to DC2 and DS2 node types.

          - **ElapsedTimeInSeconds** *(integer) --*

            The amount of time an in-progress restore has been running, or the amount of time it
            took a completed restore to finish. This field is only updated when you restore to DC2
            and DS2 node types.

          - **EstimatedTimeToCompletionInSeconds** *(integer) --*

            The estimate of the time remaining before the restore will complete. Returns 0 for a
            completed restore. This field is only updated when you restore to DC2 and DS2 node
            types.

        - **DataTransferProgress** *(dict) --*

          - **Status** *(string) --*

            Describes the status of the cluster. While the transfer is in progress the status is
            ``transferringdata`` .

          - **CurrentRateInMegaBytesPerSecond** *(float) --*

            Describes the data transfer rate in MB's per second.

          - **TotalDataInMegaBytes** *(integer) --*

            Describes the total amount of data to be transfered in megabytes.

          - **DataTransferredInMegaBytes** *(integer) --*

            Describes the total amount of data that has been transfered in MB's.

          - **EstimatedTimeToCompletionInSeconds** *(integer) --*

            Describes the estimated number of seconds remaining to complete the transfer.

          - **ElapsedTimeInSeconds** *(integer) --*

            Describes the number of seconds that have elapsed during the data transfer.

        - **HsmStatus** *(dict) --*

          A value that reports whether the Amazon Redshift cluster has finished applying any
          hardware security module (HSM) settings changes specified in a modify cluster command.

          Values: active, applying

          - **HsmClientCertificateIdentifier** *(string) --*

            Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
            retrieve the data encryption keys stored in an HSM.

          - **HsmConfigurationIdentifier** *(string) --*

            Specifies the name of the HSM configuration that contains the information the Amazon
            Redshift cluster can use to retrieve and store keys in an HSM.

          - **Status** *(string) --*

            Reports whether the Amazon Redshift cluster has finished applying any HSM settings
            changes specified in a modify cluster command.

            Values: active, applying

        - **ClusterSnapshotCopyStatus** *(dict) --*

          A value that returns the destination region and retention period that are configured for
          cross-region snapshot copy.

          - **DestinationRegion** *(string) --*

            The destination region that snapshots are automatically copied to when cross-region
            snapshot copy is enabled.

          - **RetentionPeriod** *(integer) --*

            The number of days that automated snapshots are retained in the destination region after
            they are copied from a source region.

          - **ManualSnapshotRetentionPeriod** *(integer) --*

            The number of days that automated snapshots are retained in the destination region after
            they are copied from a source region. If the value is -1, the manual snapshot is
            retained indefinitely.

            The value must be either -1 or an integer between 1 and 3,653.

          - **SnapshotCopyGrantName** *(string) --*

            The name of the snapshot copy grant.

        - **ClusterPublicKey** *(string) --*

          The public key for the cluster.

        - **ClusterNodes** *(list) --*

          The nodes in the cluster.

          - *(dict) --*

            The identifier of a node in a cluster.

            - **NodeRole** *(string) --*

              Whether the node is a leader node or a compute node.

            - **PrivateIPAddress** *(string) --*

              The private IP address of a node within a cluster.

            - **PublicIPAddress** *(string) --*

              The public IP address of a node within a cluster.

        - **ElasticIpStatus** *(dict) --*

          The status of the elastic IP (EIP) address.

          - **ElasticIp** *(string) --*

            The elastic IP (EIP) address for the cluster.

          - **Status** *(string) --*

            The status of the elastic IP (EIP) address.

        - **ClusterRevisionNumber** *(string) --*

          The specific revision number of the database in the cluster.

        - **Tags** *(list) --*

          The list of tags for the cluster.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

        - **KmsKeyId** *(string) --*

          The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
          in the cluster.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **IamRoles** *(list) --*

          A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster
          to access other AWS services.

          - *(dict) --*

            An AWS Identity and Access Management (IAM) role that can be used by the associated
            Amazon Redshift cluster to access other AWS services.

            - **IamRoleArn** *(string) --*

              The Amazon Resource Name (ARN) of the IAM role, for example,
              ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

            - **ApplyStatus** *(string) --*

              A value that describes the status of the IAM role's association with an Amazon
              Redshift cluster.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The role is available for use by the cluster.

              * ``adding`` : The role is in the process of being associated with the cluster.

              * ``removing`` : The role is in the process of being disassociated with the cluster.

        - **PendingActions** *(list) --*

          Cluster operations that are waiting to be started.

          - *(string) --*

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track for the cluster.

        - **ElasticResizeNumberOfNodeOptions** *(string) --*

          The number of nodes that you can resize the cluster to with the elastic resize method.

        - **DeferredMaintenanceWindows** *(list) --*

          Describes a group of ``DeferredMaintenanceWindow`` objects.

          - *(dict) --*

            Describes a deferred maintenance window

            - **DeferMaintenanceIdentifier** *(string) --*

              A unique identifier for the maintenance window.

            - **DeferMaintenanceStartTime** *(datetime) --*

              A timestamp for the beginning of the time period when we defer maintenance.

            - **DeferMaintenanceEndTime** *(datetime) --*

              A timestamp for the end of the time period when we defer maintenance.

        - **SnapshotScheduleIdentifier** *(string) --*

          A unique identifier for the cluster snapshot schedule.

        - **SnapshotScheduleState** *(string) --*

          The current state of the cluster snapshot schedule.

        - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

          The date and time when the next snapshot is expected to be taken for clusters with a valid
          snapshot schedule and backups enabled.

        - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

          The status of next expected snapshot for clusters having a valid snapshot schedule and
          backups enabled. Possible values are the following:

          * OnTrack - The next snapshot is expected to be taken on time.

          * Pending - The next snapshot is pending to be taken.

        - **NextMaintenanceWindowStartTime** *(datetime) --*

          The date and time in UTC when system maintenance can begin.

        - **ResizeInfo** *(dict) --*

          Returns the following:

          * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

          * ResizeType: Returns ClassicResize

          - **ResizeType** *(string) --*

            Returns the value ``ClassicResize`` .

          - **AllowCancelResize** *(boolean) --*

            A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersParametersTypeDef = TypedDict(
    "_ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "DataType": str,
        "AllowedValues": str,
        "ApplyType": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
    },
    total=False,
)


class ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersParametersTypeDef(
    _ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersParametersTypeDef
):
    """
    Type definition for `ClientDescribeDefaultClusterParametersResponseDefaultClusterParameters`
    `Parameters`

    Describes a parameter in a cluster parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterValue** *(string) --*

      The value of the parameter.

    - **Description** *(string) --*

      A description of the parameter.

    - **Source** *(string) --*

      The source of the parameter value, such as "engine-default" or "user".

    - **DataType** *(string) --*

      The data type of the parameter.

    - **AllowedValues** *(string) --*

      The valid range of values for the parameter.

    - **ApplyType** *(string) --*

      Specifies how to apply the WLM configuration parameter. Some properties can be applied
      dynamically, while other properties require that any associated clusters be rebooted for the
      configuration changes to be applied. For more information about parameters and parameter
      groups, go to `Amazon Redshift Parameter Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

    - **IsModifiable** *(boolean) --*

      If ``true`` , the parameter can be modified. Some parameters have security or operational
      implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.
    """


_ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersTypeDef = TypedDict(
    "_ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersTypeDef",
    {
        "ParameterGroupFamily": str,
        "Marker": str,
        "Parameters": List[
            ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersParametersTypeDef
        ],
    },
    total=False,
)


class ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersTypeDef(
    _ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersTypeDef
):
    """
    Type definition for `ClientDescribeDefaultClusterParametersResponse` `DefaultClusterParameters`

    Describes the default cluster parameters for a parameter group family.

    - **ParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family to which the engine default parameters apply.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **Parameters** *(list) --*

      The list of cluster default parameters.

      - *(dict) --*

        Describes a parameter in a cluster parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterValue** *(string) --*

          The value of the parameter.

        - **Description** *(string) --*

          A description of the parameter.

        - **Source** *(string) --*

          The source of the parameter value, such as "engine-default" or "user".

        - **DataType** *(string) --*

          The data type of the parameter.

        - **AllowedValues** *(string) --*

          The valid range of values for the parameter.

        - **ApplyType** *(string) --*

          Specifies how to apply the WLM configuration parameter. Some properties can be applied
          dynamically, while other properties require that any associated clusters be rebooted for
          the configuration changes to be applied. For more information about parameters and
          parameter groups, go to `Amazon Redshift Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

        - **IsModifiable** *(boolean) --*

          If ``true`` , the parameter can be modified. Some parameters have security or operational
          implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.
    """


_ClientDescribeDefaultClusterParametersResponseTypeDef = TypedDict(
    "_ClientDescribeDefaultClusterParametersResponseTypeDef",
    {
        "DefaultClusterParameters": ClientDescribeDefaultClusterParametersResponseDefaultClusterParametersTypeDef
    },
    total=False,
)


class ClientDescribeDefaultClusterParametersResponseTypeDef(
    _ClientDescribeDefaultClusterParametersResponseTypeDef
):
    """
    Type definition for `ClientDescribeDefaultClusterParameters` `Response`

    - **DefaultClusterParameters** *(dict) --*

      Describes the default cluster parameters for a parameter group family.

      - **ParameterGroupFamily** *(string) --*

        The name of the cluster parameter group family to which the engine default parameters apply.

      - **Marker** *(string) --*

        A value that indicates the starting point for the next set of response records in a
        subsequent request. If a value is returned in a response, you can retrieve the next set of
        records by providing this returned marker value in the ``Marker`` parameter and retrying the
        command. If the ``Marker`` field is empty, all response records have been retrieved for the
        request.

      - **Parameters** *(list) --*

        The list of cluster default parameters.

        - *(dict) --*

          Describes a parameter in a cluster parameter group.

          - **ParameterName** *(string) --*

            The name of the parameter.

          - **ParameterValue** *(string) --*

            The value of the parameter.

          - **Description** *(string) --*

            A description of the parameter.

          - **Source** *(string) --*

            The source of the parameter value, such as "engine-default" or "user".

          - **DataType** *(string) --*

            The data type of the parameter.

          - **AllowedValues** *(string) --*

            The valid range of values for the parameter.

          - **ApplyType** *(string) --*

            Specifies how to apply the WLM configuration parameter. Some properties can be applied
            dynamically, while other properties require that any associated clusters be rebooted for
            the configuration changes to be applied. For more information about parameters and
            parameter groups, go to `Amazon Redshift Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

          - **IsModifiable** *(boolean) --*

            If ``true`` , the parameter can be modified. Some parameters have security or
            operational implications that prevent them from being changed.

          - **MinimumEngineVersion** *(string) --*

            The earliest engine version to which the parameter can apply.
    """


_ClientDescribeEventCategoriesResponseEventCategoriesMapListEventsTypeDef = TypedDict(
    "_ClientDescribeEventCategoriesResponseEventCategoriesMapListEventsTypeDef",
    {"EventId": str, "EventCategories": List[str], "EventDescription": str, "Severity": str},
    total=False,
)


class ClientDescribeEventCategoriesResponseEventCategoriesMapListEventsTypeDef(
    _ClientDescribeEventCategoriesResponseEventCategoriesMapListEventsTypeDef
):
    """
    Type definition for `ClientDescribeEventCategoriesResponseEventCategoriesMapList` `Events`

    Describes event information.

    - **EventId** *(string) --*

      The identifier of an Amazon Redshift event.

    - **EventCategories** *(list) --*

      The category of an Amazon Redshift event.

      - *(string) --*

    - **EventDescription** *(string) --*

      The description of an Amazon Redshift event.

    - **Severity** *(string) --*

      The severity of the event.

      Values: ERROR, INFO
    """


_ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef = TypedDict(
    "_ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef",
    {
        "SourceType": str,
        "Events": List[ClientDescribeEventCategoriesResponseEventCategoriesMapListEventsTypeDef],
    },
    total=False,
)


class ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef(
    _ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef
):
    """
    Type definition for `ClientDescribeEventCategoriesResponse` `EventCategoriesMapList`

    Describes event categories.

    - **SourceType** *(string) --*

      The source type, such as cluster or cluster-snapshot, that the returned categories belong to.

    - **Events** *(list) --*

      The events in the event category.

      - *(dict) --*

        Describes event information.

        - **EventId** *(string) --*

          The identifier of an Amazon Redshift event.

        - **EventCategories** *(list) --*

          The category of an Amazon Redshift event.

          - *(string) --*

        - **EventDescription** *(string) --*

          The description of an Amazon Redshift event.

        - **Severity** *(string) --*

          The severity of the event.

          Values: ERROR, INFO
    """


_ClientDescribeEventCategoriesResponseTypeDef = TypedDict(
    "_ClientDescribeEventCategoriesResponseTypeDef",
    {
        "EventCategoriesMapList": List[
            ClientDescribeEventCategoriesResponseEventCategoriesMapListTypeDef
        ]
    },
    total=False,
)


class ClientDescribeEventCategoriesResponseTypeDef(_ClientDescribeEventCategoriesResponseTypeDef):
    """
    Type definition for `ClientDescribeEventCategories` `Response`

    - **EventCategoriesMapList** *(list) --*

      A list of event categories descriptions.

      - *(dict) --*

        Describes event categories.

        - **SourceType** *(string) --*

          The source type, such as cluster or cluster-snapshot, that the returned categories belong
          to.

        - **Events** *(list) --*

          The events in the event category.

          - *(dict) --*

            Describes event information.

            - **EventId** *(string) --*

              The identifier of an Amazon Redshift event.

            - **EventCategories** *(list) --*

              The category of an Amazon Redshift event.

              - *(string) --*

            - **EventDescription** *(string) --*

              The description of an Amazon Redshift event.

            - **Severity** *(string) --*

              The severity of the event.

              Values: ERROR, INFO
    """


_ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTagsTypeDef = TypedDict(
    "_ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTagsTypeDef(
    _ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTagsTypeDef
):
    """
    Type definition for `ClientDescribeEventSubscriptionsResponseEventSubscriptionsList` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef = TypedDict(
    "_ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": datetime,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Severity": str,
        "Enabled": bool,
        "Tags": List[ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTagsTypeDef],
    },
    total=False,
)


class ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef(
    _ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef
):
    """
    Type definition for `ClientDescribeEventSubscriptionsResponse` `EventSubscriptionsList`

    Describes event subscriptions.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the Amazon Redshift event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The name of the Amazon Redshift event notification subscription.

    - **SnsTopicArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
      subscription.

    - **Status** *(string) --*

      The status of the Amazon Redshift event notification subscription.

      Constraints:

      * Can be one of the following: active | no-permission | topic-not-exist

      * The status "no-permission" indicates that Amazon Redshift no longer has permission to post
      to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted
      after the subscription was created.

    - **SubscriptionCreationTime** *(datetime) --*

      The date and time the Amazon Redshift event notification subscription was created.

    - **SourceType** *(string) --*

      The source type of the events returned the Amazon Redshift event notification, such as
      cluster, or cluster-snapshot.

    - **SourceIdsList** *(list) --*

      A list of the sources that publish events to the Amazon Redshift event notification
      subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      The list of Amazon Redshift event categories specified in the event notification subscription.

      Values: Configuration, Management, Monitoring, Security

      - *(string) --*

    - **Severity** *(string) --*

      The event severity specified in the Amazon Redshift event notification subscription.

      Values: ERROR, INFO

    - **Enabled** *(boolean) --*

      A boolean value indicating whether the subscription is enabled; ``true`` indicates that the
      subscription is enabled.

    - **Tags** *(list) --*

      The list of tags for the event subscription.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeEventSubscriptionsResponseTypeDef = TypedDict(
    "_ClientDescribeEventSubscriptionsResponseTypeDef",
    {
        "Marker": str,
        "EventSubscriptionsList": List[
            ClientDescribeEventSubscriptionsResponseEventSubscriptionsListTypeDef
        ],
    },
    total=False,
)


class ClientDescribeEventSubscriptionsResponseTypeDef(
    _ClientDescribeEventSubscriptionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeEventSubscriptions` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **EventSubscriptionsList** *(list) --*

      A list of event subscriptions.

      - *(dict) --*

        Describes event subscriptions.

        - **CustomerAwsId** *(string) --*

          The AWS customer account associated with the Amazon Redshift event notification
          subscription.

        - **CustSubscriptionId** *(string) --*

          The name of the Amazon Redshift event notification subscription.

        - **SnsTopicArn** *(string) --*

          The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
          subscription.

        - **Status** *(string) --*

          The status of the Amazon Redshift event notification subscription.

          Constraints:

          * Can be one of the following: active | no-permission | topic-not-exist

          * The status "no-permission" indicates that Amazon Redshift no longer has permission to
          post to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was
          deleted after the subscription was created.

        - **SubscriptionCreationTime** *(datetime) --*

          The date and time the Amazon Redshift event notification subscription was created.

        - **SourceType** *(string) --*

          The source type of the events returned the Amazon Redshift event notification, such as
          cluster, or cluster-snapshot.

        - **SourceIdsList** *(list) --*

          A list of the sources that publish events to the Amazon Redshift event notification
          subscription.

          - *(string) --*

        - **EventCategoriesList** *(list) --*

          The list of Amazon Redshift event categories specified in the event notification
          subscription.

          Values: Configuration, Management, Monitoring, Security

          - *(string) --*

        - **Severity** *(string) --*

          The event severity specified in the Amazon Redshift event notification subscription.

          Values: ERROR, INFO

        - **Enabled** *(boolean) --*

          A boolean value indicating whether the subscription is enabled; ``true`` indicates that
          the subscription is enabled.

        - **Tags** *(list) --*

          The list of tags for the event subscription.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeEventsResponseEventsTypeDef = TypedDict(
    "_ClientDescribeEventsResponseEventsTypeDef",
    {
        "SourceIdentifier": str,
        "SourceType": str,
        "Message": str,
        "EventCategories": List[str],
        "Severity": str,
        "Date": datetime,
        "EventId": str,
    },
    total=False,
)


class ClientDescribeEventsResponseEventsTypeDef(_ClientDescribeEventsResponseEventsTypeDef):
    """
    Type definition for `ClientDescribeEventsResponse` `Events`

    Describes an event.

    - **SourceIdentifier** *(string) --*

      The identifier for the source of the event.

    - **SourceType** *(string) --*

      The source type for this event.

    - **Message** *(string) --*

      The text of this event.

    - **EventCategories** *(list) --*

      A list of the event categories.

      Values: Configuration, Management, Monitoring, Security

      - *(string) --*

    - **Severity** *(string) --*

      The severity of the event.

      Values: ERROR, INFO

    - **Date** *(datetime) --*

      The date and time of the event.

    - **EventId** *(string) --*

      The identifier of the event.
    """


_ClientDescribeEventsResponseTypeDef = TypedDict(
    "_ClientDescribeEventsResponseTypeDef",
    {"Marker": str, "Events": List[ClientDescribeEventsResponseEventsTypeDef]},
    total=False,
)


class ClientDescribeEventsResponseTypeDef(_ClientDescribeEventsResponseTypeDef):
    """
    Type definition for `ClientDescribeEvents` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **Events** *(list) --*

      A list of ``Event`` instances.

      - *(dict) --*

        Describes an event.

        - **SourceIdentifier** *(string) --*

          The identifier for the source of the event.

        - **SourceType** *(string) --*

          The source type for this event.

        - **Message** *(string) --*

          The text of this event.

        - **EventCategories** *(list) --*

          A list of the event categories.

          Values: Configuration, Management, Monitoring, Security

          - *(string) --*

        - **Severity** *(string) --*

          The severity of the event.

          Values: ERROR, INFO

        - **Date** *(datetime) --*

          The date and time of the event.

        - **EventId** *(string) --*

          The identifier of the event.
    """


_ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTagsTypeDef = TypedDict(
    "_ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTagsTypeDef(
    _ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTagsTypeDef
):
    """
    Type definition for `ClientDescribeHsmClientCertificatesResponseHsmClientCertificates` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTypeDef = TypedDict(
    "_ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTypeDef",
    {
        "HsmClientCertificateIdentifier": str,
        "HsmClientCertificatePublicKey": str,
        "Tags": List[ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTagsTypeDef],
    },
    total=False,
)


class ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTypeDef(
    _ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTypeDef
):
    """
    Type definition for `ClientDescribeHsmClientCertificatesResponse` `HsmClientCertificates`

    Returns information about an HSM client certificate. The certificate is stored in a secure
    Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data files.

    - **HsmClientCertificateIdentifier** *(string) --*

      The identifier of the HSM client certificate.

    - **HsmClientCertificatePublicKey** *(string) --*

      The public key that the Amazon Redshift cluster will use to connect to the HSM. You must
      register the public key in the HSM.

    - **Tags** *(list) --*

      The list of tags for the HSM client certificate.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeHsmClientCertificatesResponseTypeDef = TypedDict(
    "_ClientDescribeHsmClientCertificatesResponseTypeDef",
    {
        "Marker": str,
        "HsmClientCertificates": List[
            ClientDescribeHsmClientCertificatesResponseHsmClientCertificatesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeHsmClientCertificatesResponseTypeDef(
    _ClientDescribeHsmClientCertificatesResponseTypeDef
):
    """
    Type definition for `ClientDescribeHsmClientCertificates` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **HsmClientCertificates** *(list) --*

      A list of the identifiers for one or more HSM client certificates used by Amazon Redshift
      clusters to store and retrieve database encryption keys in an HSM.

      - *(dict) --*

        Returns information about an HSM client certificate. The certificate is stored in a secure
        Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data
        files.

        - **HsmClientCertificateIdentifier** *(string) --*

          The identifier of the HSM client certificate.

        - **HsmClientCertificatePublicKey** *(string) --*

          The public key that the Amazon Redshift cluster will use to connect to the HSM. You must
          register the public key in the HSM.

        - **Tags** *(list) --*

          The list of tags for the HSM client certificate.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeHsmConfigurationsResponseHsmConfigurationsTagsTypeDef = TypedDict(
    "_ClientDescribeHsmConfigurationsResponseHsmConfigurationsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeHsmConfigurationsResponseHsmConfigurationsTagsTypeDef(
    _ClientDescribeHsmConfigurationsResponseHsmConfigurationsTagsTypeDef
):
    """
    Type definition for `ClientDescribeHsmConfigurationsResponseHsmConfigurations` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeHsmConfigurationsResponseHsmConfigurationsTypeDef = TypedDict(
    "_ClientDescribeHsmConfigurationsResponseHsmConfigurationsTypeDef",
    {
        "HsmConfigurationIdentifier": str,
        "Description": str,
        "HsmIpAddress": str,
        "HsmPartitionName": str,
        "Tags": List[ClientDescribeHsmConfigurationsResponseHsmConfigurationsTagsTypeDef],
    },
    total=False,
)


class ClientDescribeHsmConfigurationsResponseHsmConfigurationsTypeDef(
    _ClientDescribeHsmConfigurationsResponseHsmConfigurationsTypeDef
):
    """
    Type definition for `ClientDescribeHsmConfigurationsResponse` `HsmConfigurations`

    Returns information about an HSM configuration, which is an object that describes to Amazon
    Redshift clusters the information they require to connect to an HSM where they can store
    database encryption keys.

    - **HsmConfigurationIdentifier** *(string) --*

      The name of the Amazon Redshift HSM configuration.

    - **Description** *(string) --*

      A text description of the HSM configuration.

    - **HsmIpAddress** *(string) --*

      The IP address that the Amazon Redshift cluster must use to access the HSM.

    - **HsmPartitionName** *(string) --*

      The name of the partition in the HSM where the Amazon Redshift clusters will store their
      database encryption keys.

    - **Tags** *(list) --*

      The list of tags for the HSM configuration.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeHsmConfigurationsResponseTypeDef = TypedDict(
    "_ClientDescribeHsmConfigurationsResponseTypeDef",
    {
        "Marker": str,
        "HsmConfigurations": List[ClientDescribeHsmConfigurationsResponseHsmConfigurationsTypeDef],
    },
    total=False,
)


class ClientDescribeHsmConfigurationsResponseTypeDef(
    _ClientDescribeHsmConfigurationsResponseTypeDef
):
    """
    Type definition for `ClientDescribeHsmConfigurations` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **HsmConfigurations** *(list) --*

      A list of ``HsmConfiguration`` objects.

      - *(dict) --*

        Returns information about an HSM configuration, which is an object that describes to Amazon
        Redshift clusters the information they require to connect to an HSM where they can store
        database encryption keys.

        - **HsmConfigurationIdentifier** *(string) --*

          The name of the Amazon Redshift HSM configuration.

        - **Description** *(string) --*

          A text description of the HSM configuration.

        - **HsmIpAddress** *(string) --*

          The IP address that the Amazon Redshift cluster must use to access the HSM.

        - **HsmPartitionName** *(string) --*

          The name of the partition in the HSM where the Amazon Redshift clusters will store their
          database encryption keys.

        - **Tags** *(list) --*

          The list of tags for the HSM configuration.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeLoggingStatusResponseTypeDef = TypedDict(
    "_ClientDescribeLoggingStatusResponseTypeDef",
    {
        "LoggingEnabled": bool,
        "BucketName": str,
        "S3KeyPrefix": str,
        "LastSuccessfulDeliveryTime": datetime,
        "LastFailureTime": datetime,
        "LastFailureMessage": str,
    },
    total=False,
)


class ClientDescribeLoggingStatusResponseTypeDef(_ClientDescribeLoggingStatusResponseTypeDef):
    """
    Type definition for `ClientDescribeLoggingStatus` `Response`

    Describes the status of logging for a cluster.

    - **LoggingEnabled** *(boolean) --*

       ``true`` if logging is on, ``false`` if logging is off.

    - **BucketName** *(string) --*

      The name of the S3 bucket where the log files are stored.

    - **S3KeyPrefix** *(string) --*

      The prefix applied to the log file names.

    - **LastSuccessfulDeliveryTime** *(datetime) --*

      The last time that logs were delivered.

    - **LastFailureTime** *(datetime) --*

      The last time when logs failed to be delivered.

    - **LastFailureMessage** *(string) --*

      The message indicating that logs failed to be delivered.
    """


_ClientDescribeNodeConfigurationOptionsFiltersTypeDef = TypedDict(
    "_ClientDescribeNodeConfigurationOptionsFiltersTypeDef",
    {"Name": str, "Operator": str, "Values": List[str]},
    total=False,
)


class ClientDescribeNodeConfigurationOptionsFiltersTypeDef(
    _ClientDescribeNodeConfigurationOptionsFiltersTypeDef
):
    """
    Type definition for `ClientDescribeNodeConfigurationOptions` `Filters`

    A set of elements to filter the returned node configurations.

    - **Name** *(string) --*

      The name of the element to filter.

    - **Operator** *(string) --*

      The filter operator. If filter Name is NodeType only the 'in' operator is supported. Provide
      one value to evaluate for 'eq', 'lt', 'le', 'gt', and 'ge'. Provide two values to evaluate for
      'between'. Provide a list of values for 'in'.

    - **Values** *(list) --*

      List of values. Compare Name using Operator to Values. If filter Name is NumberOfNodes, then
      values can range from 0 to 200. If filter Name is EstimatedDiskUtilizationPercent, then values
      can range from 0 to 100. For example, filter NumberOfNodes (name) GT (operator) 3 (values).

      - *(string) --*
    """


_ClientDescribeNodeConfigurationOptionsResponseNodeConfigurationOptionListTypeDef = TypedDict(
    "_ClientDescribeNodeConfigurationOptionsResponseNodeConfigurationOptionListTypeDef",
    {"NodeType": str, "NumberOfNodes": int, "EstimatedDiskUtilizationPercent": float, "Mode": str},
    total=False,
)


class ClientDescribeNodeConfigurationOptionsResponseNodeConfigurationOptionListTypeDef(
    _ClientDescribeNodeConfigurationOptionsResponseNodeConfigurationOptionListTypeDef
):
    """
    Type definition for `ClientDescribeNodeConfigurationOptionsResponse`
    `NodeConfigurationOptionList`

    A list of node configurations.

    - **NodeType** *(string) --*

      The node type, such as, "ds2.8xlarge".

    - **NumberOfNodes** *(integer) --*

      The number of nodes.

    - **EstimatedDiskUtilizationPercent** *(float) --*

      The estimated disk utilizaton percentage.

    - **Mode** *(string) --*

      The category of the node configuration recommendation.
    """


_ClientDescribeNodeConfigurationOptionsResponseTypeDef = TypedDict(
    "_ClientDescribeNodeConfigurationOptionsResponseTypeDef",
    {
        "NodeConfigurationOptionList": List[
            ClientDescribeNodeConfigurationOptionsResponseNodeConfigurationOptionListTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeNodeConfigurationOptionsResponseTypeDef(
    _ClientDescribeNodeConfigurationOptionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeNodeConfigurationOptions` `Response`

    - **NodeConfigurationOptionList** *(list) --*

      A list of valid node configurations.

      - *(dict) --*

        A list of node configurations.

        - **NodeType** *(string) --*

          The node type, such as, "ds2.8xlarge".

        - **NumberOfNodes** *(integer) --*

          The number of nodes.

        - **EstimatedDiskUtilizationPercent** *(float) --*

          The estimated disk utilizaton percentage.

        - **Mode** *(string) --*

          The category of the node configuration recommendation.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.
    """


_ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef = TypedDict(
    "_ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef",
    {"Name": str},
    total=False,
)


class ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef(
    _ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef
):
    """
    Type definition for
    `ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZones`
    `SupportedPlatforms`

    A list of supported platforms for orderable clusters.

    - **Name** *(string) --*
    """


_ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesTypeDef = TypedDict(
    "_ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesTypeDef",
    {
        "Name": str,
        "SupportedPlatforms": List[
            ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesTypeDef(
    _ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesTypeDef
):
    """
    Type definition for `ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptions`
    `AvailabilityZones`

    Describes an availability zone.

    - **Name** *(string) --*

      The name of the availability zone.

    - **SupportedPlatforms** *(list) --*

      - *(dict) --*

        A list of supported platforms for orderable clusters.

        - **Name** *(string) --*
    """


_ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsTypeDef = TypedDict(
    "_ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsTypeDef",
    {
        "ClusterVersion": str,
        "ClusterType": str,
        "NodeType": str,
        "AvailabilityZones": List[
            ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsAvailabilityZonesTypeDef
        ],
    },
    total=False,
)


class ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsTypeDef(
    _ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsTypeDef
):
    """
    Type definition for `ClientDescribeOrderableClusterOptionsResponse` `OrderableClusterOptions`

    Describes an orderable cluster option.

    - **ClusterVersion** *(string) --*

      The version of the orderable cluster.

    - **ClusterType** *(string) --*

      The cluster type, for example ``multi-node`` .

    - **NodeType** *(string) --*

      The node type for the orderable cluster.

    - **AvailabilityZones** *(list) --*

      A list of availability zones for the orderable cluster.

      - *(dict) --*

        Describes an availability zone.

        - **Name** *(string) --*

          The name of the availability zone.

        - **SupportedPlatforms** *(list) --*

          - *(dict) --*

            A list of supported platforms for orderable clusters.

            - **Name** *(string) --*
    """


_ClientDescribeOrderableClusterOptionsResponseTypeDef = TypedDict(
    "_ClientDescribeOrderableClusterOptionsResponseTypeDef",
    {
        "OrderableClusterOptions": List[
            ClientDescribeOrderableClusterOptionsResponseOrderableClusterOptionsTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeOrderableClusterOptionsResponseTypeDef(
    _ClientDescribeOrderableClusterOptionsResponseTypeDef
):
    """
    Type definition for `ClientDescribeOrderableClusterOptions` `Response`

    Contains the output from the  DescribeOrderableClusterOptions action.

    - **OrderableClusterOptions** *(list) --*

      An ``OrderableClusterOption`` structure containing information about orderable options for the
      cluster.

      - *(dict) --*

        Describes an orderable cluster option.

        - **ClusterVersion** *(string) --*

          The version of the orderable cluster.

        - **ClusterType** *(string) --*

          The cluster type, for example ``multi-node`` .

        - **NodeType** *(string) --*

          The node type for the orderable cluster.

        - **AvailabilityZones** *(list) --*

          A list of availability zones for the orderable cluster.

          - *(dict) --*

            Describes an availability zone.

            - **Name** *(string) --*

              The name of the availability zone.

            - **SupportedPlatforms** *(list) --*

              - *(dict) --*

                A list of supported platforms for orderable clusters.

                - **Name** *(string) --*

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.
    """


_ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef = TypedDict(
    "_ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef(
    _ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef
):
    """
    Type definition for `ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferings`
    `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsTypeDef = TypedDict(
    "_ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsTypeDef",
    {
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "OfferingType": str,
        "RecurringCharges": List[
            ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsTypeDef(
    _ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsTypeDef
):
    """
    Type definition for `ClientDescribeReservedNodeOfferingsResponse` `ReservedNodeOfferings`

    Describes a reserved node offering.

    - **ReservedNodeOfferingId** *(string) --*

      The offering identifier.

    - **NodeType** *(string) --*

      The node type offered by the reserved node offering.

    - **Duration** *(integer) --*

      The duration, in seconds, for which the offering will reserve the node.

    - **FixedPrice** *(float) --*

      The upfront fixed charge you will pay to purchase the specific reserved node offering.

    - **UsagePrice** *(float) --*

      The rate you are charged for each hour the cluster that is using the offering is running.

    - **CurrencyCode** *(string) --*

      The currency code for the compute nodes offering.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The charge to your account regardless of whether you are creating any clusters using the node
      offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_ClientDescribeReservedNodeOfferingsResponseTypeDef = TypedDict(
    "_ClientDescribeReservedNodeOfferingsResponseTypeDef",
    {
        "Marker": str,
        "ReservedNodeOfferings": List[
            ClientDescribeReservedNodeOfferingsResponseReservedNodeOfferingsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeReservedNodeOfferingsResponseTypeDef(
    _ClientDescribeReservedNodeOfferingsResponseTypeDef
):
    """
    Type definition for `ClientDescribeReservedNodeOfferings` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **ReservedNodeOfferings** *(list) --*

      A list of ``ReservedNodeOffering`` objects.

      - *(dict) --*

        Describes a reserved node offering.

        - **ReservedNodeOfferingId** *(string) --*

          The offering identifier.

        - **NodeType** *(string) --*

          The node type offered by the reserved node offering.

        - **Duration** *(integer) --*

          The duration, in seconds, for which the offering will reserve the node.

        - **FixedPrice** *(float) --*

          The upfront fixed charge you will pay to purchase the specific reserved node offering.

        - **UsagePrice** *(float) --*

          The rate you are charged for each hour the cluster that is using the offering is running.

        - **CurrencyCode** *(string) --*

          The currency code for the compute nodes offering.

        - **OfferingType** *(string) --*

          The anticipated utilization of the reserved node, as defined in the reserved node
          offering.

        - **RecurringCharges** *(list) --*

          The charge to your account regardless of whether you are creating any clusters using the
          node offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

          - *(dict) --*

            Describes a recurring charge.

            - **RecurringChargeAmount** *(float) --*

              The amount charged per the period of time specified by the recurring charge frequency.

            - **RecurringChargeFrequency** *(string) --*

              The frequency at which the recurring charge amount is applied.

        - **ReservedNodeOfferingType** *(string) --*
    """


_ClientDescribeReservedNodesResponseReservedNodesRecurringChargesTypeDef = TypedDict(
    "_ClientDescribeReservedNodesResponseReservedNodesRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientDescribeReservedNodesResponseReservedNodesRecurringChargesTypeDef(
    _ClientDescribeReservedNodesResponseReservedNodesRecurringChargesTypeDef
):
    """
    Type definition for `ClientDescribeReservedNodesResponseReservedNodes` `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_ClientDescribeReservedNodesResponseReservedNodesTypeDef = TypedDict(
    "_ClientDescribeReservedNodesResponseReservedNodesTypeDef",
    {
        "ReservedNodeId": str,
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "NodeCount": int,
        "State": str,
        "OfferingType": str,
        "RecurringCharges": List[
            ClientDescribeReservedNodesResponseReservedNodesRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class ClientDescribeReservedNodesResponseReservedNodesTypeDef(
    _ClientDescribeReservedNodesResponseReservedNodesTypeDef
):
    """
    Type definition for `ClientDescribeReservedNodesResponse` `ReservedNodes`

    Describes a reserved node. You can call the  DescribeReservedNodeOfferings API to obtain the
    available reserved node offerings.

    - **ReservedNodeId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedNodeOfferingId** *(string) --*

      The identifier for the reserved node offering.

    - **NodeType** *(string) --*

      The node type of the reserved node.

    - **StartTime** *(datetime) --*

      The time the reservation started. You purchase a reserved node offering for a duration. This
      is the start time of that duration.

    - **Duration** *(integer) --*

      The duration of the node reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed cost Amazon Redshift charges you for this reserved node.

    - **UsagePrice** *(float) --*

      The hourly rate Amazon Redshift charges you for this reserved node.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved cluster.

    - **NodeCount** *(integer) --*

      The number of reserved compute nodes.

    - **State** *(string) --*

      The state of the reserved compute node.

      Possible Values:

      * pending-payment-This reserved node has recently been purchased, and the sale has been
      approved, but payment has not yet been confirmed.

      * active-This reserved node is owned by the caller and is available for use.

      * payment-failed-Payment failed for the purchase attempt.

      * retired-The reserved node is no longer available.

      * exchanging-The owner is exchanging the reserved node for another reserved node.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The recurring charges for the reserved node.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_ClientDescribeReservedNodesResponseTypeDef = TypedDict(
    "_ClientDescribeReservedNodesResponseTypeDef",
    {"Marker": str, "ReservedNodes": List[ClientDescribeReservedNodesResponseReservedNodesTypeDef]},
    total=False,
)


class ClientDescribeReservedNodesResponseTypeDef(_ClientDescribeReservedNodesResponseTypeDef):
    """
    Type definition for `ClientDescribeReservedNodes` `Response`

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **ReservedNodes** *(list) --*

      The list of ``ReservedNode`` objects.

      - *(dict) --*

        Describes a reserved node. You can call the  DescribeReservedNodeOfferings API to obtain the
        available reserved node offerings.

        - **ReservedNodeId** *(string) --*

          The unique identifier for the reservation.

        - **ReservedNodeOfferingId** *(string) --*

          The identifier for the reserved node offering.

        - **NodeType** *(string) --*

          The node type of the reserved node.

        - **StartTime** *(datetime) --*

          The time the reservation started. You purchase a reserved node offering for a duration.
          This is the start time of that duration.

        - **Duration** *(integer) --*

          The duration of the node reservation in seconds.

        - **FixedPrice** *(float) --*

          The fixed cost Amazon Redshift charges you for this reserved node.

        - **UsagePrice** *(float) --*

          The hourly rate Amazon Redshift charges you for this reserved node.

        - **CurrencyCode** *(string) --*

          The currency code for the reserved cluster.

        - **NodeCount** *(integer) --*

          The number of reserved compute nodes.

        - **State** *(string) --*

          The state of the reserved compute node.

          Possible Values:

          * pending-payment-This reserved node has recently been purchased, and the sale has been
          approved, but payment has not yet been confirmed.

          * active-This reserved node is owned by the caller and is available for use.

          * payment-failed-Payment failed for the purchase attempt.

          * retired-The reserved node is no longer available.

          * exchanging-The owner is exchanging the reserved node for another reserved node.

        - **OfferingType** *(string) --*

          The anticipated utilization of the reserved node, as defined in the reserved node
          offering.

        - **RecurringCharges** *(list) --*

          The recurring charges for the reserved node.

          - *(dict) --*

            Describes a recurring charge.

            - **RecurringChargeAmount** *(float) --*

              The amount charged per the period of time specified by the recurring charge frequency.

            - **RecurringChargeFrequency** *(string) --*

              The frequency at which the recurring charge amount is applied.

        - **ReservedNodeOfferingType** *(string) --*
    """


_ClientDescribeResizeResponseTypeDef = TypedDict(
    "_ClientDescribeResizeResponseTypeDef",
    {
        "TargetNodeType": str,
        "TargetNumberOfNodes": int,
        "TargetClusterType": str,
        "Status": str,
        "ImportTablesCompleted": List[str],
        "ImportTablesInProgress": List[str],
        "ImportTablesNotStarted": List[str],
        "AvgResizeRateInMegaBytesPerSecond": float,
        "TotalResizeDataInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ResizeType": str,
        "Message": str,
        "TargetEncryptionType": str,
        "DataTransferProgressPercent": float,
    },
    total=False,
)


class ClientDescribeResizeResponseTypeDef(_ClientDescribeResizeResponseTypeDef):
    """
    Type definition for `ClientDescribeResize` `Response`

    Describes the result of a cluster resize operation.

    - **TargetNodeType** *(string) --*

      The node type that the cluster will have after the resize operation is complete.

    - **TargetNumberOfNodes** *(integer) --*

      The number of nodes that the cluster will have after the resize operation is complete.

    - **TargetClusterType** *(string) --*

      The cluster type after the resize operation is complete.

      Valid Values: ``multi-node`` | ``single-node``

    - **Status** *(string) --*

      The status of the resize operation.

      Valid Values: ``NONE`` | ``IN_PROGRESS`` | ``FAILED`` | ``SUCCEEDED`` | ``CANCELLING``

    - **ImportTablesCompleted** *(list) --*

      The names of tables that have been completely imported .

      Valid Values: List of table names.

      - *(string) --*

    - **ImportTablesInProgress** *(list) --*

      The names of tables that are being currently imported.

      Valid Values: List of table names.

      - *(string) --*

    - **ImportTablesNotStarted** *(list) --*

      The names of tables that have not been yet imported.

      Valid Values: List of table names

      - *(string) --*

    - **AvgResizeRateInMegaBytesPerSecond** *(float) --*

      The average rate of the resize operation over the last few minutes, measured in megabytes per
      second. After the resize operation completes, this value shows the average rate of the entire
      resize operation.

    - **TotalResizeDataInMegaBytes** *(integer) --*

      The estimated total amount of data, in megabytes, on the cluster before the resize operation
      began.

    - **ProgressInMegaBytes** *(integer) --*

      While the resize operation is in progress, this value shows the current amount of data, in
      megabytes, that has been processed so far. When the resize operation is complete, this value
      shows the total amount of data, in megabytes, on the cluster, which may be more or less than
      TotalResizeDataInMegaBytes (the estimated total amount of data before resize).

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of seconds that have elapsed since the resize operation began. After the resize
      operation completes, this value shows the total actual time, in seconds, for the resize
      operation.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimated time remaining, in seconds, until the resize operation is complete. This value
      is calculated based on the average resize rate and the estimated amount of data remaining to
      be processed. Once the resize operation is complete, this value will be 0.

    - **ResizeType** *(string) --*

      An enum with possible values of ``ClassicResize`` and ``ElasticResize`` . These values
      describe the type of resize operation being performed.

    - **Message** *(string) --*

      An optional string to provide additional details about the resize action.

    - **TargetEncryptionType** *(string) --*

      The type of encryption for the cluster after the resize is complete.

      Possible values are ``KMS`` and ``None`` . In the China region possible values are: ``Legacy``
      and ``None`` .

    - **DataTransferProgressPercent** *(float) --*

      The percent of data transferred from source cluster to target cluster.
    """


_ClientDescribeScheduledActionsFiltersTypeDef = TypedDict(
    "_ClientDescribeScheduledActionsFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class ClientDescribeScheduledActionsFiltersTypeDef(_ClientDescribeScheduledActionsFiltersTypeDef):
    """
    Type definition for `ClientDescribeScheduledActions` `Filters`

    A set of elements to filter the returned scheduled actions.

    - **Name** *(string) --* **[REQUIRED]**

      The type of element to filter.

    - **Values** *(list) --* **[REQUIRED]**

      List of values. Compare if the value (of type defined by ``Name`` ) equals an item in the list
      of scheduled actions.

      - *(string) --*
    """


_ClientDescribeScheduledActionsResponseScheduledActionsTargetActionResizeClusterTypeDef = TypedDict(
    "_ClientDescribeScheduledActionsResponseScheduledActionsTargetActionResizeClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "ClusterType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "Classic": bool,
    },
    total=False,
)


class ClientDescribeScheduledActionsResponseScheduledActionsTargetActionResizeClusterTypeDef(
    _ClientDescribeScheduledActionsResponseScheduledActionsTargetActionResizeClusterTypeDef
):
    """
    Type definition for `ClientDescribeScheduledActionsResponseScheduledActionsTargetAction`
    `ResizeCluster`

    An action that runs a ``ResizeCluster`` API operation.

    - **ClusterIdentifier** *(string) --*

      The unique identifier for the cluster to resize.

    - **ClusterType** *(string) --*

      The new cluster type for the specified cluster.

    - **NodeType** *(string) --*

      The new node type for the nodes you are adding. If not specified, the cluster's current node
      type is used.

    - **NumberOfNodes** *(integer) --*

      The new number of nodes for the cluster.

    - **Classic** *(boolean) --*

      A boolean value indicating whether the resize operation is using the classic resize process.
      If you don't provide this parameter or set the value to ``false`` , the resize type is
      elastic.
    """


_ClientDescribeScheduledActionsResponseScheduledActionsTargetActionTypeDef = TypedDict(
    "_ClientDescribeScheduledActionsResponseScheduledActionsTargetActionTypeDef",
    {
        "ResizeCluster": ClientDescribeScheduledActionsResponseScheduledActionsTargetActionResizeClusterTypeDef
    },
    total=False,
)


class ClientDescribeScheduledActionsResponseScheduledActionsTargetActionTypeDef(
    _ClientDescribeScheduledActionsResponseScheduledActionsTargetActionTypeDef
):
    """
    Type definition for `ClientDescribeScheduledActionsResponseScheduledActions` `TargetAction`

    A JSON format string of the Amazon Redshift API operation with input parameters.

    "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
    ".

    - **ResizeCluster** *(dict) --*

      An action that runs a ``ResizeCluster`` API operation.

      - **ClusterIdentifier** *(string) --*

        The unique identifier for the cluster to resize.

      - **ClusterType** *(string) --*

        The new cluster type for the specified cluster.

      - **NodeType** *(string) --*

        The new node type for the nodes you are adding. If not specified, the cluster's current node
        type is used.

      - **NumberOfNodes** *(integer) --*

        The new number of nodes for the cluster.

      - **Classic** *(boolean) --*

        A boolean value indicating whether the resize operation is using the classic resize process.
        If you don't provide this parameter or set the value to ``false`` , the resize type is
        elastic.
    """


_ClientDescribeScheduledActionsResponseScheduledActionsTypeDef = TypedDict(
    "_ClientDescribeScheduledActionsResponseScheduledActionsTypeDef",
    {
        "ScheduledActionName": str,
        "TargetAction": ClientDescribeScheduledActionsResponseScheduledActionsTargetActionTypeDef,
        "Schedule": str,
        "IamRole": str,
        "ScheduledActionDescription": str,
        "State": str,
        "NextInvocations": List[datetime],
        "StartTime": datetime,
        "EndTime": datetime,
    },
    total=False,
)


class ClientDescribeScheduledActionsResponseScheduledActionsTypeDef(
    _ClientDescribeScheduledActionsResponseScheduledActionsTypeDef
):
    """
    Type definition for `ClientDescribeScheduledActionsResponse` `ScheduledActions`

    Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift API
    operations on a schedule. For information about which API operations can be scheduled, see
    ScheduledActionType .

    - **ScheduledActionName** *(string) --*

      The name of the scheduled action.

    - **TargetAction** *(dict) --*

      A JSON format string of the Amazon Redshift API operation with input parameters.

      "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
      ".

      - **ResizeCluster** *(dict) --*

        An action that runs a ``ResizeCluster`` API operation.

        - **ClusterIdentifier** *(string) --*

          The unique identifier for the cluster to resize.

        - **ClusterType** *(string) --*

          The new cluster type for the specified cluster.

        - **NodeType** *(string) --*

          The new node type for the nodes you are adding. If not specified, the cluster's current
          node type is used.

        - **NumberOfNodes** *(integer) --*

          The new number of nodes for the cluster.

        - **Classic** *(boolean) --*

          A boolean value indicating whether the resize operation is using the classic resize
          process. If you don't provide this parameter or set the value to ``false`` , the resize
          type is elastic.

    - **Schedule** *(string) --*

      The schedule for a one-time (at format) or recurring (cron format) scheduled action. Schedule
      invocations must be separated by at least one hour.

      Format of at expressions is "``at(yyyy-mm-ddThh:mm:ss)`` ". For example,
      "``at(2016-03-04T17:27:00)`` ".

      Format of cron expressions is "``cron(Minutes Hours Day-of-month Month Day-of-week Year)`` ".
      For example, "``cron(0, 10, *, *, MON, *)`` ". For more information, see `Cron Expressions
      <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions>`__
      in the *Amazon CloudWatch Events User Guide* .

    - **IamRole** *(string) --*

      The IAM role to assume to run the scheduled action. This IAM role must have permission to run
      the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon
      Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your
      behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see
      `Using Identity-Based Policies for Amazon Redshift
      <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html>`__
      in the *Amazon Redshift Cluster Management Guide* .

    - **ScheduledActionDescription** *(string) --*

      The description of the scheduled action.

    - **State** *(string) --*

      The state of the scheduled action. For example, ``DISABLED`` .

    - **NextInvocations** *(list) --*

      List of times when the scheduled action will run.

      - *(datetime) --*

    - **StartTime** *(datetime) --*

      The start time in UTC when the schedule is active. Before this time, the scheduled action does
      not trigger.

    - **EndTime** *(datetime) --*

      The end time in UTC when the schedule is no longer active. After this time, the scheduled
      action does not trigger.
    """


_ClientDescribeScheduledActionsResponseTypeDef = TypedDict(
    "_ClientDescribeScheduledActionsResponseTypeDef",
    {
        "Marker": str,
        "ScheduledActions": List[ClientDescribeScheduledActionsResponseScheduledActionsTypeDef],
    },
    total=False,
)


class ClientDescribeScheduledActionsResponseTypeDef(_ClientDescribeScheduledActionsResponseTypeDef):
    """
    Type definition for `ClientDescribeScheduledActions` `Response`

    - **Marker** *(string) --*

      An optional parameter that specifies the starting point to return a set of response records.
      When the results of a  DescribeScheduledActions request exceed the value specified in
      ``MaxRecords`` , AWS returns a value in the ``Marker`` field of the response. You can retrieve
      the next set of response records by providing the returned marker value in the ``Marker``
      parameter and retrying the request.

    - **ScheduledActions** *(list) --*

      List of retrieved scheduled actions.

      - *(dict) --*

        Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift
        API operations on a schedule. For information about which API operations can be scheduled,
        see  ScheduledActionType .

        - **ScheduledActionName** *(string) --*

          The name of the scheduled action.

        - **TargetAction** *(dict) --*

          A JSON format string of the Amazon Redshift API operation with input parameters.

          "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
          ".

          - **ResizeCluster** *(dict) --*

            An action that runs a ``ResizeCluster`` API operation.

            - **ClusterIdentifier** *(string) --*

              The unique identifier for the cluster to resize.

            - **ClusterType** *(string) --*

              The new cluster type for the specified cluster.

            - **NodeType** *(string) --*

              The new node type for the nodes you are adding. If not specified, the cluster's
              current node type is used.

            - **NumberOfNodes** *(integer) --*

              The new number of nodes for the cluster.

            - **Classic** *(boolean) --*

              A boolean value indicating whether the resize operation is using the classic resize
              process. If you don't provide this parameter or set the value to ``false`` , the
              resize type is elastic.

        - **Schedule** *(string) --*

          The schedule for a one-time (at format) or recurring (cron format) scheduled action.
          Schedule invocations must be separated by at least one hour.

          Format of at expressions is "``at(yyyy-mm-ddThh:mm:ss)`` ". For example,
          "``at(2016-03-04T17:27:00)`` ".

          Format of cron expressions is "``cron(Minutes Hours Day-of-month Month Day-of-week Year)``
          ". For example, "``cron(0, 10, *, *, MON, *)`` ". For more information, see `Cron
          Expressions
          <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions>`__
          in the *Amazon CloudWatch Events User Guide* .

        - **IamRole** *(string) --*

          The IAM role to assume to run the scheduled action. This IAM role must have permission to
          run the Amazon Redshift API operation in the scheduled action. This IAM role must allow
          the Amazon Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume
          permissions on your behalf. For more information about the IAM role to use with the Amazon
          Redshift scheduler, see `Using Identity-Based Policies for Amazon Redshift
          <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

        - **ScheduledActionDescription** *(string) --*

          The description of the scheduled action.

        - **State** *(string) --*

          The state of the scheduled action. For example, ``DISABLED`` .

        - **NextInvocations** *(list) --*

          List of times when the scheduled action will run.

          - *(datetime) --*

        - **StartTime** *(datetime) --*

          The start time in UTC when the schedule is active. Before this time, the scheduled action
          does not trigger.

        - **EndTime** *(datetime) --*

          The end time in UTC when the schedule is no longer active. After this time, the scheduled
          action does not trigger.
    """


_ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTagsTypeDef = TypedDict(
    "_ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTagsTypeDef(
    _ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTagsTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrants` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTypeDef = TypedDict(
    "_ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTypeDef",
    {
        "SnapshotCopyGrantName": str,
        "KmsKeyId": str,
        "Tags": List[ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTagsTypeDef],
    },
    total=False,
)


class ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTypeDef(
    _ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotCopyGrantsResponse` `SnapshotCopyGrants`

    The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with
    the specified customer master key (CMK) from AWS KMS in the destination region.

    For more information about managing snapshot copy grants, go to `Amazon Redshift Database
    Encryption <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html>`__
    in the *Amazon Redshift Cluster Management Guide* .

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.

    - **KmsKeyId** *(string) --*

      The unique identifier of the customer master key (CMK) in AWS KMS to which Amazon Redshift is
      granted permission.

    - **Tags** *(list) --*

      A list of tag instances.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientDescribeSnapshotCopyGrantsResponseTypeDef = TypedDict(
    "_ClientDescribeSnapshotCopyGrantsResponseTypeDef",
    {
        "Marker": str,
        "SnapshotCopyGrants": List[
            ClientDescribeSnapshotCopyGrantsResponseSnapshotCopyGrantsTypeDef
        ],
    },
    total=False,
)


class ClientDescribeSnapshotCopyGrantsResponseTypeDef(
    _ClientDescribeSnapshotCopyGrantsResponseTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotCopyGrants` `Response`

    - **Marker** *(string) --*

      An optional parameter that specifies the starting point to return a set of response records.
      When the results of a ``DescribeSnapshotCopyGrant`` request exceed the value specified in
      ``MaxRecords`` , AWS returns a value in the ``Marker`` field of the response. You can retrieve
      the next set of response records by providing the returned marker value in the ``Marker``
      parameter and retrying the request.

      Constraints: You can specify either the **SnapshotCopyGrantName** parameter or the **Marker**
      parameter, but not both.

    - **SnapshotCopyGrants** *(list) --*

      The list of ``SnapshotCopyGrant`` objects.

      - *(dict) --*

        The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots
        with the specified customer master key (CMK) from AWS KMS in the destination region.

        For more information about managing snapshot copy grants, go to `Amazon Redshift Database
        Encryption
        <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html>`__ in the
        *Amazon Redshift Cluster Management Guide* .

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

        - **KmsKeyId** *(string) --*

          The unique identifier of the customer master key (CMK) in AWS KMS to which Amazon Redshift
          is granted permission.

        - **Tags** *(list) --*

          A list of tag instances.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.
    """


_ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesAssociatedClustersTypeDef = TypedDict(
    "_ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesAssociatedClustersTypeDef",
    {"ClusterIdentifier": str, "ScheduleAssociationState": str},
    total=False,
)


class ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesAssociatedClustersTypeDef(
    _ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesAssociatedClustersTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotSchedulesResponseSnapshotSchedules`
    `AssociatedClusters`

    - **ClusterIdentifier** *(string) --*

    - **ScheduleAssociationState** *(string) --*
    """


_ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTagsTypeDef = TypedDict(
    "_ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTagsTypeDef(
    _ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTagsTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotSchedulesResponseSnapshotSchedules` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTypeDef = TypedDict(
    "_ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTypeDef",
    {
        "ScheduleDefinitions": List[str],
        "ScheduleIdentifier": str,
        "ScheduleDescription": str,
        "Tags": List[ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTagsTypeDef],
        "NextInvocations": List[datetime],
        "AssociatedClusterCount": int,
        "AssociatedClusters": List[
            ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesAssociatedClustersTypeDef
        ],
    },
    total=False,
)


class ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTypeDef(
    _ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotSchedulesResponse` `SnapshotSchedules`

    Describes a snapshot schedule. You can set a regular interval for creating snapshots of a
    cluster. You can also schedule snapshots for specific dates.

    - **ScheduleDefinitions** *(list) --*

      A list of ScheduleDefinitions.

      - *(string) --*

    - **ScheduleIdentifier** *(string) --*

      A unique identifier for the schedule.

    - **ScheduleDescription** *(string) --*

      The description of the schedule.

    - **Tags** *(list) --*

      An optional set of tags describing the schedule.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **NextInvocations** *(list) --*

      - *(datetime) --*

    - **AssociatedClusterCount** *(integer) --*

      The number of clusters associated with the schedule.

    - **AssociatedClusters** *(list) --*

      A list of clusters associated with the schedule. A maximum of 100 clusters is returned.

      - *(dict) --*

        - **ClusterIdentifier** *(string) --*

        - **ScheduleAssociationState** *(string) --*
    """


_ClientDescribeSnapshotSchedulesResponseTypeDef = TypedDict(
    "_ClientDescribeSnapshotSchedulesResponseTypeDef",
    {
        "SnapshotSchedules": List[ClientDescribeSnapshotSchedulesResponseSnapshotSchedulesTypeDef],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeSnapshotSchedulesResponseTypeDef(
    _ClientDescribeSnapshotSchedulesResponseTypeDef
):
    """
    Type definition for `ClientDescribeSnapshotSchedules` `Response`

    - **SnapshotSchedules** *(list) --*

      A list of SnapshotSchedules.

      - *(dict) --*

        Describes a snapshot schedule. You can set a regular interval for creating snapshots of a
        cluster. You can also schedule snapshots for specific dates.

        - **ScheduleDefinitions** *(list) --*

          A list of ScheduleDefinitions.

          - *(string) --*

        - **ScheduleIdentifier** *(string) --*

          A unique identifier for the schedule.

        - **ScheduleDescription** *(string) --*

          The description of the schedule.

        - **Tags** *(list) --*

          An optional set of tags describing the schedule.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

        - **NextInvocations** *(list) --*

          - *(datetime) --*

        - **AssociatedClusterCount** *(integer) --*

          The number of clusters associated with the schedule.

        - **AssociatedClusters** *(list) --*

          A list of clusters associated with the schedule. A maximum of 100 clusters is returned.

          - *(dict) --*

            - **ClusterIdentifier** *(string) --*

            - **ScheduleAssociationState** *(string) --*

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``marker`` parameter and retrying the command. If
      the ``marker`` field is empty, all response records have been retrieved for the request.
    """


_ClientDescribeStorageResponseTypeDef = TypedDict(
    "_ClientDescribeStorageResponseTypeDef",
    {"TotalBackupSizeInMegaBytes": float, "TotalProvisionedStorageInMegaBytes": float},
    total=False,
)


class ClientDescribeStorageResponseTypeDef(_ClientDescribeStorageResponseTypeDef):
    """
    Type definition for `ClientDescribeStorage` `Response`

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The total amount of storage currently used for snapshots.

    - **TotalProvisionedStorageInMegaBytes** *(float) --*

      The total amount of storage currently provisioned.
    """


_ClientDescribeTableRestoreStatusResponseTableRestoreStatusDetailsTypeDef = TypedDict(
    "_ClientDescribeTableRestoreStatusResponseTableRestoreStatusDetailsTypeDef",
    {
        "TableRestoreRequestId": str,
        "Status": str,
        "Message": str,
        "RequestTime": datetime,
        "ProgressInMegaBytes": int,
        "TotalDataInMegaBytes": int,
        "ClusterIdentifier": str,
        "SnapshotIdentifier": str,
        "SourceDatabaseName": str,
        "SourceSchemaName": str,
        "SourceTableName": str,
        "TargetDatabaseName": str,
        "TargetSchemaName": str,
        "NewTableName": str,
    },
    total=False,
)


class ClientDescribeTableRestoreStatusResponseTableRestoreStatusDetailsTypeDef(
    _ClientDescribeTableRestoreStatusResponseTableRestoreStatusDetailsTypeDef
):
    """
    Type definition for `ClientDescribeTableRestoreStatusResponse` `TableRestoreStatusDetails`

    Describes the status of a  RestoreTableFromClusterSnapshot operation.

    - **TableRestoreRequestId** *(string) --*

      The unique identifier for the table restore request.

    - **Status** *(string) --*

      A value that describes the current state of the table restore request.

      Valid Values: ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS``

    - **Message** *(string) --*

      A description of the status of the table restore request. Status values include ``SUCCEEDED``
      , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS`` .

    - **RequestTime** *(datetime) --*

      The time that the table restore request was made, in Universal Coordinated Time (UTC).

    - **ProgressInMegaBytes** *(integer) --*

      The amount of data restored to the new table so far, in megabytes (MB).

    - **TotalDataInMegaBytes** *(integer) --*

      The total amount of data to restore to the new table, in megabytes (MB).

    - **ClusterIdentifier** *(string) --*

      The identifier of the Amazon Redshift cluster that the table is being restored to.

    - **SnapshotIdentifier** *(string) --*

      The identifier of the snapshot that the table is being restored from.

    - **SourceDatabaseName** *(string) --*

      The name of the source database that contains the table being restored.

    - **SourceSchemaName** *(string) --*

      The name of the source schema that contains the table being restored.

    - **SourceTableName** *(string) --*

      The name of the source table being restored.

    - **TargetDatabaseName** *(string) --*

      The name of the database to restore the table to.

    - **TargetSchemaName** *(string) --*

      The name of the schema to restore the table to.

    - **NewTableName** *(string) --*

      The name of the table to create as a result of the table restore request.
    """


_ClientDescribeTableRestoreStatusResponseTypeDef = TypedDict(
    "_ClientDescribeTableRestoreStatusResponseTypeDef",
    {
        "TableRestoreStatusDetails": List[
            ClientDescribeTableRestoreStatusResponseTableRestoreStatusDetailsTypeDef
        ],
        "Marker": str,
    },
    total=False,
)


class ClientDescribeTableRestoreStatusResponseTypeDef(
    _ClientDescribeTableRestoreStatusResponseTypeDef
):
    """
    Type definition for `ClientDescribeTableRestoreStatus` `Response`

    - **TableRestoreStatusDetails** *(list) --*

      A list of status details for one or more table restore requests.

      - *(dict) --*

        Describes the status of a  RestoreTableFromClusterSnapshot operation.

        - **TableRestoreRequestId** *(string) --*

          The unique identifier for the table restore request.

        - **Status** *(string) --*

          A value that describes the current state of the table restore request.

          Valid Values: ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS``

        - **Message** *(string) --*

          A description of the status of the table restore request. Status values include
          ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS`` .

        - **RequestTime** *(datetime) --*

          The time that the table restore request was made, in Universal Coordinated Time (UTC).

        - **ProgressInMegaBytes** *(integer) --*

          The amount of data restored to the new table so far, in megabytes (MB).

        - **TotalDataInMegaBytes** *(integer) --*

          The total amount of data to restore to the new table, in megabytes (MB).

        - **ClusterIdentifier** *(string) --*

          The identifier of the Amazon Redshift cluster that the table is being restored to.

        - **SnapshotIdentifier** *(string) --*

          The identifier of the snapshot that the table is being restored from.

        - **SourceDatabaseName** *(string) --*

          The name of the source database that contains the table being restored.

        - **SourceSchemaName** *(string) --*

          The name of the source schema that contains the table being restored.

        - **SourceTableName** *(string) --*

          The name of the source table being restored.

        - **TargetDatabaseName** *(string) --*

          The name of the database to restore the table to.

        - **TargetSchemaName** *(string) --*

          The name of the schema to restore the table to.

        - **NewTableName** *(string) --*

          The name of the table to create as a result of the table restore request.

    - **Marker** *(string) --*

      A pagination token that can be used in a subsequent  DescribeTableRestoreStatus request.
    """


_ClientDescribeTagsResponseTaggedResourcesTagTypeDef = TypedDict(
    "_ClientDescribeTagsResponseTaggedResourcesTagTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientDescribeTagsResponseTaggedResourcesTagTypeDef(
    _ClientDescribeTagsResponseTaggedResourcesTagTypeDef
):
    """
    Type definition for `ClientDescribeTagsResponseTaggedResources` `Tag`

    The tag for the resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDescribeTagsResponseTaggedResourcesTypeDef = TypedDict(
    "_ClientDescribeTagsResponseTaggedResourcesTypeDef",
    {
        "Tag": ClientDescribeTagsResponseTaggedResourcesTagTypeDef,
        "ResourceName": str,
        "ResourceType": str,
    },
    total=False,
)


class ClientDescribeTagsResponseTaggedResourcesTypeDef(
    _ClientDescribeTagsResponseTaggedResourcesTypeDef
):
    """
    Type definition for `ClientDescribeTagsResponse` `TaggedResources`

    A tag and its associated resource.

    - **Tag** *(dict) --*

      The tag for the resource.

      - **Key** *(string) --*

        The key, or name, for the resource tag.

      - **Value** *(string) --*

        The value for the resource tag.

    - **ResourceName** *(string) --*

      The Amazon Resource Name (ARN) with which the tag is associated, for example:
      ``arn:aws:redshift:us-east-1:123456789:cluster:t1`` .

    - **ResourceType** *(string) --*

      The type of resource with which the tag is associated. Valid resource types are:

      * Cluster

      * CIDR/IP

      * EC2 security group

      * Snapshot

      * Cluster security group

      * Subnet group

      * HSM connection

      * HSM certificate

      * Parameter group

      For more information about Amazon Redshift resource types and constructing ARNs, go to
      `Constructing an Amazon Redshift Amazon Resource Name (ARN)
      <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions>`__
      in the Amazon Redshift Cluster Management Guide.
    """


_ClientDescribeTagsResponseTypeDef = TypedDict(
    "_ClientDescribeTagsResponseTypeDef",
    {"TaggedResources": List[ClientDescribeTagsResponseTaggedResourcesTypeDef], "Marker": str},
    total=False,
)


class ClientDescribeTagsResponseTypeDef(_ClientDescribeTagsResponseTypeDef):
    """
    Type definition for `ClientDescribeTags` `Response`

    - **TaggedResources** *(list) --*

      A list of tags with their associated resources.

      - *(dict) --*

        A tag and its associated resource.

        - **Tag** *(dict) --*

          The tag for the resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

        - **ResourceName** *(string) --*

          The Amazon Resource Name (ARN) with which the tag is associated, for example:
          ``arn:aws:redshift:us-east-1:123456789:cluster:t1`` .

        - **ResourceType** *(string) --*

          The type of resource with which the tag is associated. Valid resource types are:

          * Cluster

          * CIDR/IP

          * EC2 security group

          * Snapshot

          * Cluster security group

          * Subnet group

          * HSM connection

          * HSM certificate

          * Parameter group

          For more information about Amazon Redshift resource types and constructing ARNs, go to
          `Constructing an Amazon Redshift Amazon Resource Name (ARN)
          <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions>`__
          in the Amazon Redshift Cluster Management Guide.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.
    """


_ClientDisableLoggingResponseTypeDef = TypedDict(
    "_ClientDisableLoggingResponseTypeDef",
    {
        "LoggingEnabled": bool,
        "BucketName": str,
        "S3KeyPrefix": str,
        "LastSuccessfulDeliveryTime": datetime,
        "LastFailureTime": datetime,
        "LastFailureMessage": str,
    },
    total=False,
)


class ClientDisableLoggingResponseTypeDef(_ClientDisableLoggingResponseTypeDef):
    """
    Type definition for `ClientDisableLogging` `Response`

    Describes the status of logging for a cluster.

    - **LoggingEnabled** *(boolean) --*

       ``true`` if logging is on, ``false`` if logging is off.

    - **BucketName** *(string) --*

      The name of the S3 bucket where the log files are stored.

    - **S3KeyPrefix** *(string) --*

      The prefix applied to the log file names.

    - **LastSuccessfulDeliveryTime** *(datetime) --*

      The last time that logs were delivered.

    - **LastFailureTime** *(datetime) --*

      The last time when logs failed to be delivered.

    - **LastFailureMessage** *(string) --*

      The message indicating that logs failed to be delivered.
    """


_ClientDisableSnapshotCopyResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterClusterNodesTypeDef(
    _ClientDisableSnapshotCopyResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef(
    _ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientDisableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef(
    _ClientDisableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientDisableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientDisableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientDisableSnapshotCopyResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterDataTransferProgressTypeDef(
    _ClientDisableSnapshotCopyResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientDisableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientDisableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientDisableSnapshotCopyResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterElasticIpStatusTypeDef(
    _ClientDisableSnapshotCopyResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientDisableSnapshotCopyResponseClusterEndpointTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterEndpointTypeDef(
    _ClientDisableSnapshotCopyResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientDisableSnapshotCopyResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterHsmStatusTypeDef(
    _ClientDisableSnapshotCopyResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientDisableSnapshotCopyResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterIamRolesTypeDef(
    _ClientDisableSnapshotCopyResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientDisableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef(
    _ClientDisableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientDisableSnapshotCopyResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterResizeInfoTypeDef(
    _ClientDisableSnapshotCopyResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDisableSnapshotCopyResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterRestoreStatusTypeDef(
    _ClientDisableSnapshotCopyResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientDisableSnapshotCopyResponseClusterTagsTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientDisableSnapshotCopyResponseClusterTagsTypeDef(
    _ClientDisableSnapshotCopyResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientDisableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef(
    _ClientDisableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientDisableSnapshotCopyResponseClusterTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientDisableSnapshotCopyResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientDisableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientDisableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientDisableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientDisableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientDisableSnapshotCopyResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientDisableSnapshotCopyResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientDisableSnapshotCopyResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientDisableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientDisableSnapshotCopyResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientDisableSnapshotCopyResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientDisableSnapshotCopyResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientDisableSnapshotCopyResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientDisableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientDisableSnapshotCopyResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientDisableSnapshotCopyResponseClusterTypeDef(
    _ClientDisableSnapshotCopyResponseClusterTypeDef
):
    """
    Type definition for `ClientDisableSnapshotCopyResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientDisableSnapshotCopyResponseTypeDef = TypedDict(
    "_ClientDisableSnapshotCopyResponseTypeDef",
    {"Cluster": ClientDisableSnapshotCopyResponseClusterTypeDef},
    total=False,
)


class ClientDisableSnapshotCopyResponseTypeDef(_ClientDisableSnapshotCopyResponseTypeDef):
    """
    Type definition for `ClientDisableSnapshotCopy` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientEnableLoggingResponseTypeDef = TypedDict(
    "_ClientEnableLoggingResponseTypeDef",
    {
        "LoggingEnabled": bool,
        "BucketName": str,
        "S3KeyPrefix": str,
        "LastSuccessfulDeliveryTime": datetime,
        "LastFailureTime": datetime,
        "LastFailureMessage": str,
    },
    total=False,
)


class ClientEnableLoggingResponseTypeDef(_ClientEnableLoggingResponseTypeDef):
    """
    Type definition for `ClientEnableLogging` `Response`

    Describes the status of logging for a cluster.

    - **LoggingEnabled** *(boolean) --*

       ``true`` if logging is on, ``false`` if logging is off.

    - **BucketName** *(string) --*

      The name of the S3 bucket where the log files are stored.

    - **S3KeyPrefix** *(string) --*

      The prefix applied to the log file names.

    - **LastSuccessfulDeliveryTime** *(datetime) --*

      The last time that logs were delivered.

    - **LastFailureTime** *(datetime) --*

      The last time when logs failed to be delivered.

    - **LastFailureMessage** *(string) --*

      The message indicating that logs failed to be delivered.
    """


_ClientEnableSnapshotCopyResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterClusterNodesTypeDef(
    _ClientEnableSnapshotCopyResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef(
    _ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientEnableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef(
    _ClientEnableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientEnableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientEnableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientEnableSnapshotCopyResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterDataTransferProgressTypeDef(
    _ClientEnableSnapshotCopyResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientEnableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientEnableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientEnableSnapshotCopyResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterElasticIpStatusTypeDef(
    _ClientEnableSnapshotCopyResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientEnableSnapshotCopyResponseClusterEndpointTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterEndpointTypeDef(
    _ClientEnableSnapshotCopyResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientEnableSnapshotCopyResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterHsmStatusTypeDef(
    _ClientEnableSnapshotCopyResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientEnableSnapshotCopyResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterIamRolesTypeDef(
    _ClientEnableSnapshotCopyResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientEnableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef(
    _ClientEnableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientEnableSnapshotCopyResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterResizeInfoTypeDef(
    _ClientEnableSnapshotCopyResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientEnableSnapshotCopyResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterRestoreStatusTypeDef(
    _ClientEnableSnapshotCopyResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientEnableSnapshotCopyResponseClusterTagsTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientEnableSnapshotCopyResponseClusterTagsTypeDef(
    _ClientEnableSnapshotCopyResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientEnableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef(
    _ClientEnableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientEnableSnapshotCopyResponseClusterTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientEnableSnapshotCopyResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientEnableSnapshotCopyResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientEnableSnapshotCopyResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientEnableSnapshotCopyResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientEnableSnapshotCopyResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientEnableSnapshotCopyResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientEnableSnapshotCopyResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientEnableSnapshotCopyResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientEnableSnapshotCopyResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientEnableSnapshotCopyResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientEnableSnapshotCopyResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientEnableSnapshotCopyResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientEnableSnapshotCopyResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientEnableSnapshotCopyResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientEnableSnapshotCopyResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientEnableSnapshotCopyResponseClusterTypeDef(
    _ClientEnableSnapshotCopyResponseClusterTypeDef
):
    """
    Type definition for `ClientEnableSnapshotCopyResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientEnableSnapshotCopyResponseTypeDef = TypedDict(
    "_ClientEnableSnapshotCopyResponseTypeDef",
    {"Cluster": ClientEnableSnapshotCopyResponseClusterTypeDef},
    total=False,
)


class ClientEnableSnapshotCopyResponseTypeDef(_ClientEnableSnapshotCopyResponseTypeDef):
    """
    Type definition for `ClientEnableSnapshotCopy` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientGetClusterCredentialsResponseTypeDef = TypedDict(
    "_ClientGetClusterCredentialsResponseTypeDef",
    {"DbUser": str, "DbPassword": str, "Expiration": datetime},
    total=False,
)


class ClientGetClusterCredentialsResponseTypeDef(_ClientGetClusterCredentialsResponseTypeDef):
    """
    Type definition for `ClientGetClusterCredentials` `Response`

    Temporary credentials with authorization to log on to an Amazon Redshift database.

    - **DbUser** *(string) --*

      A database user name that is authorized to log on to the database ``DbName`` using the
      password ``DbPassword`` . If the specified DbUser exists in the database, the new user name
      has the same database privileges as the the user named in DbUser. By default, the user is
      added to PUBLIC. If the ``DbGroups`` parameter is specifed, ``DbUser`` is added to the listed
      groups for any sessions created using these credentials.

    - **DbPassword** *(string) --*

      A temporary password that authorizes the user name returned by ``DbUser`` to log on to the
      database ``DbName`` .

    - **Expiration** *(datetime) --*

      The date and time the password in ``DbPassword`` expires.
    """


_ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef = TypedDict(
    "_ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef(
    _ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef
):
    """
    Type definition for `ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferings`
    `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsTypeDef = TypedDict(
    "_ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsTypeDef",
    {
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "OfferingType": str,
        "RecurringCharges": List[
            ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsTypeDef(
    _ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsTypeDef
):
    """
    Type definition for `ClientGetReservedNodeExchangeOfferingsResponse` `ReservedNodeOfferings`

    Describes a reserved node offering.

    - **ReservedNodeOfferingId** *(string) --*

      The offering identifier.

    - **NodeType** *(string) --*

      The node type offered by the reserved node offering.

    - **Duration** *(integer) --*

      The duration, in seconds, for which the offering will reserve the node.

    - **FixedPrice** *(float) --*

      The upfront fixed charge you will pay to purchase the specific reserved node offering.

    - **UsagePrice** *(float) --*

      The rate you are charged for each hour the cluster that is using the offering is running.

    - **CurrencyCode** *(string) --*

      The currency code for the compute nodes offering.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The charge to your account regardless of whether you are creating any clusters using the node
      offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_ClientGetReservedNodeExchangeOfferingsResponseTypeDef = TypedDict(
    "_ClientGetReservedNodeExchangeOfferingsResponseTypeDef",
    {
        "Marker": str,
        "ReservedNodeOfferings": List[
            ClientGetReservedNodeExchangeOfferingsResponseReservedNodeOfferingsTypeDef
        ],
    },
    total=False,
)


class ClientGetReservedNodeExchangeOfferingsResponseTypeDef(
    _ClientGetReservedNodeExchangeOfferingsResponseTypeDef
):
    """
    Type definition for `ClientGetReservedNodeExchangeOfferings` `Response`

    - **Marker** *(string) --*

      An optional parameter that specifies the starting point for returning a set of response
      records. When the results of a ``GetReservedNodeExchangeOfferings`` request exceed the value
      specified in MaxRecords, Amazon Redshift returns a value in the marker field of the response.
      You can retrieve the next set of response records by providing the returned marker value in
      the marker parameter and retrying the request.

    - **ReservedNodeOfferings** *(list) --*

      Returns an array of  ReservedNodeOffering objects.

      - *(dict) --*

        Describes a reserved node offering.

        - **ReservedNodeOfferingId** *(string) --*

          The offering identifier.

        - **NodeType** *(string) --*

          The node type offered by the reserved node offering.

        - **Duration** *(integer) --*

          The duration, in seconds, for which the offering will reserve the node.

        - **FixedPrice** *(float) --*

          The upfront fixed charge you will pay to purchase the specific reserved node offering.

        - **UsagePrice** *(float) --*

          The rate you are charged for each hour the cluster that is using the offering is running.

        - **CurrencyCode** *(string) --*

          The currency code for the compute nodes offering.

        - **OfferingType** *(string) --*

          The anticipated utilization of the reserved node, as defined in the reserved node
          offering.

        - **RecurringCharges** *(list) --*

          The charge to your account regardless of whether you are creating any clusters using the
          node offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

          - *(dict) --*

            Describes a recurring charge.

            - **RecurringChargeAmount** *(float) --*

              The amount charged per the period of time specified by the recurring charge frequency.

            - **RecurringChargeFrequency** *(string) --*

              The frequency at which the recurring charge amount is applied.

        - **ReservedNodeOfferingType** *(string) --*
    """


_ClientModifyClusterDbRevisionResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterClusterNodesTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterDbRevisionResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterClusterSecurityGroupsTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientModifyClusterDbRevisionResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientModifyClusterDbRevisionResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterDataTransferProgressTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientModifyClusterDbRevisionResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientModifyClusterDbRevisionResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterElasticIpStatusTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientModifyClusterDbRevisionResponseClusterEndpointTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterEndpointTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientModifyClusterDbRevisionResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterHsmStatusTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientModifyClusterDbRevisionResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterIamRolesTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientModifyClusterDbRevisionResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterPendingModifiedValuesTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientModifyClusterDbRevisionResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterResizeInfoTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterDbRevisionResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterRestoreStatusTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientModifyClusterDbRevisionResponseClusterTagsTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterTagsTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyClusterDbRevisionResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterVpcSecurityGroupsTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyClusterDbRevisionResponseClusterTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientModifyClusterDbRevisionResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientModifyClusterDbRevisionResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientModifyClusterDbRevisionResponseClusterVpcSecurityGroupsTypeDef
        ],
        "ClusterParameterGroups": List[
            ClientModifyClusterDbRevisionResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientModifyClusterDbRevisionResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientModifyClusterDbRevisionResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientModifyClusterDbRevisionResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientModifyClusterDbRevisionResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientModifyClusterDbRevisionResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientModifyClusterDbRevisionResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientModifyClusterDbRevisionResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientModifyClusterDbRevisionResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientModifyClusterDbRevisionResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientModifyClusterDbRevisionResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientModifyClusterDbRevisionResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientModifyClusterDbRevisionResponseClusterTypeDef(
    _ClientModifyClusterDbRevisionResponseClusterTypeDef
):
    """
    Type definition for `ClientModifyClusterDbRevisionResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterDbRevisionResponseTypeDef = TypedDict(
    "_ClientModifyClusterDbRevisionResponseTypeDef",
    {"Cluster": ClientModifyClusterDbRevisionResponseClusterTypeDef},
    total=False,
)


class ClientModifyClusterDbRevisionResponseTypeDef(_ClientModifyClusterDbRevisionResponseTypeDef):
    """
    Type definition for `ClientModifyClusterDbRevision` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterIamRolesResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterClusterNodesTypeDef(
    _ClientModifyClusterIamRolesResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsTypeDef(
    _ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterIamRolesResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterClusterSecurityGroupsTypeDef(
    _ClientModifyClusterIamRolesResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientModifyClusterIamRolesResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientModifyClusterIamRolesResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientModifyClusterIamRolesResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterDataTransferProgressTypeDef(
    _ClientModifyClusterIamRolesResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientModifyClusterIamRolesResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientModifyClusterIamRolesResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientModifyClusterIamRolesResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterElasticIpStatusTypeDef(
    _ClientModifyClusterIamRolesResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientModifyClusterIamRolesResponseClusterEndpointTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterEndpointTypeDef(
    _ClientModifyClusterIamRolesResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientModifyClusterIamRolesResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterHsmStatusTypeDef(
    _ClientModifyClusterIamRolesResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientModifyClusterIamRolesResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterIamRolesTypeDef(
    _ClientModifyClusterIamRolesResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientModifyClusterIamRolesResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterPendingModifiedValuesTypeDef(
    _ClientModifyClusterIamRolesResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientModifyClusterIamRolesResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterResizeInfoTypeDef(
    _ClientModifyClusterIamRolesResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterIamRolesResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterRestoreStatusTypeDef(
    _ClientModifyClusterIamRolesResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientModifyClusterIamRolesResponseClusterTagsTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterTagsTypeDef(
    _ClientModifyClusterIamRolesResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyClusterIamRolesResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterVpcSecurityGroupsTypeDef(
    _ClientModifyClusterIamRolesResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyClusterIamRolesResponseClusterTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientModifyClusterIamRolesResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientModifyClusterIamRolesResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientModifyClusterIamRolesResponseClusterVpcSecurityGroupsTypeDef
        ],
        "ClusterParameterGroups": List[
            ClientModifyClusterIamRolesResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientModifyClusterIamRolesResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientModifyClusterIamRolesResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientModifyClusterIamRolesResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientModifyClusterIamRolesResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientModifyClusterIamRolesResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientModifyClusterIamRolesResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientModifyClusterIamRolesResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientModifyClusterIamRolesResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientModifyClusterIamRolesResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientModifyClusterIamRolesResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientModifyClusterIamRolesResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientModifyClusterIamRolesResponseClusterTypeDef(
    _ClientModifyClusterIamRolesResponseClusterTypeDef
):
    """
    Type definition for `ClientModifyClusterIamRolesResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterIamRolesResponseTypeDef = TypedDict(
    "_ClientModifyClusterIamRolesResponseTypeDef",
    {"Cluster": ClientModifyClusterIamRolesResponseClusterTypeDef},
    total=False,
)


class ClientModifyClusterIamRolesResponseTypeDef(_ClientModifyClusterIamRolesResponseTypeDef):
    """
    Type definition for `ClientModifyClusterIamRoles` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterMaintenanceResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterClusterNodesTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterMaintenanceResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterClusterSecurityGroupsTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientModifyClusterMaintenanceResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientModifyClusterMaintenanceResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterDataTransferProgressTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientModifyClusterMaintenanceResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientModifyClusterMaintenanceResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterElasticIpStatusTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientModifyClusterMaintenanceResponseClusterEndpointTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterEndpointTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientModifyClusterMaintenanceResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterHsmStatusTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientModifyClusterMaintenanceResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterIamRolesTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientModifyClusterMaintenanceResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterPendingModifiedValuesTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientModifyClusterMaintenanceResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterResizeInfoTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterMaintenanceResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterRestoreStatusTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientModifyClusterMaintenanceResponseClusterTagsTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterTagsTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyClusterMaintenanceResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterVpcSecurityGroupsTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyClusterMaintenanceResponseClusterTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientModifyClusterMaintenanceResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientModifyClusterMaintenanceResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientModifyClusterMaintenanceResponseClusterVpcSecurityGroupsTypeDef
        ],
        "ClusterParameterGroups": List[
            ClientModifyClusterMaintenanceResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientModifyClusterMaintenanceResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientModifyClusterMaintenanceResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientModifyClusterMaintenanceResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientModifyClusterMaintenanceResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientModifyClusterMaintenanceResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientModifyClusterMaintenanceResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientModifyClusterMaintenanceResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientModifyClusterMaintenanceResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientModifyClusterMaintenanceResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientModifyClusterMaintenanceResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientModifyClusterMaintenanceResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientModifyClusterMaintenanceResponseClusterTypeDef(
    _ClientModifyClusterMaintenanceResponseClusterTypeDef
):
    """
    Type definition for `ClientModifyClusterMaintenanceResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterMaintenanceResponseTypeDef = TypedDict(
    "_ClientModifyClusterMaintenanceResponseTypeDef",
    {"Cluster": ClientModifyClusterMaintenanceResponseClusterTypeDef},
    total=False,
)


class ClientModifyClusterMaintenanceResponseTypeDef(_ClientModifyClusterMaintenanceResponseTypeDef):
    """
    Type definition for `ClientModifyClusterMaintenance` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterParameterGroupParametersTypeDef = TypedDict(
    "_ClientModifyClusterParameterGroupParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "DataType": str,
        "AllowedValues": str,
        "ApplyType": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
    },
    total=False,
)


class ClientModifyClusterParameterGroupParametersTypeDef(
    _ClientModifyClusterParameterGroupParametersTypeDef
):
    """
    Type definition for `ClientModifyClusterParameterGroup` `Parameters`

    Describes a parameter in a cluster parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterValue** *(string) --*

      The value of the parameter.

    - **Description** *(string) --*

      A description of the parameter.

    - **Source** *(string) --*

      The source of the parameter value, such as "engine-default" or "user".

    - **DataType** *(string) --*

      The data type of the parameter.

    - **AllowedValues** *(string) --*

      The valid range of values for the parameter.

    - **ApplyType** *(string) --*

      Specifies how to apply the WLM configuration parameter. Some properties can be applied
      dynamically, while other properties require that any associated clusters be rebooted for the
      configuration changes to be applied. For more information about parameters and parameter
      groups, go to `Amazon Redshift Parameter Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

    - **IsModifiable** *(boolean) --*

      If ``true`` , the parameter can be modified. Some parameters have security or operational
      implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.
    """


_ClientModifyClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientModifyClusterParameterGroupResponseTypeDef",
    {"ParameterGroupName": str, "ParameterGroupStatus": str},
    total=False,
)


class ClientModifyClusterParameterGroupResponseTypeDef(
    _ClientModifyClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientModifyClusterParameterGroup` `Response`

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterGroupStatus** *(string) --*

      The status of the parameter group. For example, if you made a change to a parameter group
      name-value pair, then the change could be pending a reboot of an associated cluster.
    """


_ClientModifyClusterResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientModifyClusterResponseClusterClusterNodesTypeDef(
    _ClientModifyClusterResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientModifyClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientModifyClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientModifyClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientModifyClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientModifyClusterResponseClusterClusterParameterGroupsTypeDef(
    _ClientModifyClusterResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientModifyClusterResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifyClusterResponseClusterClusterSecurityGroupsTypeDef(
    _ClientModifyClusterResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientModifyClusterResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientModifyClusterResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientModifyClusterResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientModifyClusterResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterResponseClusterDataTransferProgressTypeDef(
    _ClientModifyClusterResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientModifyClusterResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientModifyClusterResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientModifyClusterResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientModifyClusterResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientModifyClusterResponseClusterElasticIpStatusTypeDef(
    _ClientModifyClusterResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientModifyClusterResponseClusterEndpointTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterEndpointTypeDef", {"Address": str, "Port": int}, total=False
)


class ClientModifyClusterResponseClusterEndpointTypeDef(
    _ClientModifyClusterResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientModifyClusterResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientModifyClusterResponseClusterHsmStatusTypeDef(
    _ClientModifyClusterResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientModifyClusterResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientModifyClusterResponseClusterIamRolesTypeDef(
    _ClientModifyClusterResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientModifyClusterResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientModifyClusterResponseClusterPendingModifiedValuesTypeDef(
    _ClientModifyClusterResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientModifyClusterResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientModifyClusterResponseClusterResizeInfoTypeDef(
    _ClientModifyClusterResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientModifyClusterResponseClusterRestoreStatusTypeDef(
    _ClientModifyClusterResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientModifyClusterResponseClusterTagsTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientModifyClusterResponseClusterTagsTypeDef(_ClientModifyClusterResponseClusterTagsTypeDef):
    """
    Type definition for `ClientModifyClusterResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyClusterResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifyClusterResponseClusterVpcSecurityGroupsTypeDef(
    _ClientModifyClusterResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifyClusterResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifyClusterResponseClusterTypeDef = TypedDict(
    "_ClientModifyClusterResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientModifyClusterResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientModifyClusterResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientModifyClusterResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientModifyClusterResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientModifyClusterResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientModifyClusterResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientModifyClusterResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientModifyClusterResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientModifyClusterResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientModifyClusterResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientModifyClusterResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientModifyClusterResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientModifyClusterResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientModifyClusterResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientModifyClusterResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientModifyClusterResponseClusterTypeDef(_ClientModifyClusterResponseClusterTypeDef):
    """
    Type definition for `ClientModifyClusterResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterResponseTypeDef = TypedDict(
    "_ClientModifyClusterResponseTypeDef",
    {"Cluster": ClientModifyClusterResponseClusterTypeDef},
    total=False,
)


class ClientModifyClusterResponseTypeDef(_ClientModifyClusterResponseTypeDef):
    """
    Type definition for `ClientModifyCluster` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientModifyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientModifyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef(
    _ClientModifyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientModifyClusterSnapshotResponseSnapshot` `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientModifyClusterSnapshotResponseSnapshotTagsTypeDef = TypedDict(
    "_ClientModifyClusterSnapshotResponseSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifyClusterSnapshotResponseSnapshotTagsTypeDef(
    _ClientModifyClusterSnapshotResponseSnapshotTagsTypeDef
):
    """
    Type definition for `ClientModifyClusterSnapshotResponseSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyClusterSnapshotResponseSnapshotTypeDef = TypedDict(
    "_ClientModifyClusterSnapshotResponseSnapshotTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientModifyClusterSnapshotResponseSnapshotAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientModifyClusterSnapshotResponseSnapshotTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientModifyClusterSnapshotResponseSnapshotTypeDef(
    _ClientModifyClusterSnapshotResponseSnapshotTypeDef
):
    """
    Type definition for `ClientModifyClusterSnapshotResponse` `Snapshot`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientModifyClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientModifyClusterSnapshotResponseTypeDef",
    {"Snapshot": ClientModifyClusterSnapshotResponseSnapshotTypeDef},
    total=False,
)


class ClientModifyClusterSnapshotResponseTypeDef(_ClientModifyClusterSnapshotResponseTypeDef):
    """
    Type definition for `ClientModifyClusterSnapshot` `Response`

    - **Snapshot** *(dict) --*

      Describes a snapshot.

      - **SnapshotIdentifier** *(string) --*

        The snapshot identifier that is provided in the request.

      - **ClusterIdentifier** *(string) --*

        The identifier of the cluster for which the snapshot was taken.

      - **SnapshotCreateTime** *(datetime) --*

        The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
        of the cluster data as of this exact time.

      - **Status** *(string) --*

        The snapshot status. The value of the status depends on the API operation used:

        *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

        *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
        "failed".

        *  DeleteClusterSnapshot returns status as "deleted".

      - **Port** *(integer) --*

        The port that the cluster is listening on.

      - **AvailabilityZone** *(string) --*

        The Availability Zone in which the cluster was created.

      - **ClusterCreateTime** *(datetime) --*

        The time (UTC) when the cluster was originally created.

      - **MasterUsername** *(string) --*

        The master user name for the cluster.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **SnapshotType** *(string) --*

        The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
        are of type "manual".

      - **NodeType** *(string) --*

        The node type of the nodes in the cluster.

      - **NumberOfNodes** *(integer) --*

        The number of nodes in the cluster.

      - **DBName** *(string) --*

        The name of the database that was created when the cluster was created.

      - **VpcId** *(string) --*

        The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
        this field is not in the output.

      - **Encrypted** *(boolean) --*

        If ``true`` , the data in the snapshot is encrypted at rest.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
        data in the cluster from which the snapshot was taken.

      - **EncryptedWithHSM** *(boolean) --*

        A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
        source cluster. ``true`` indicates that the data is encrypted using HSM keys.

      - **AccountsWithRestoreAccess** *(list) --*

        A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if
        no accounts are authorized. Visible only to the snapshot owner.

        - *(dict) --*

          Describes an AWS customer account authorized to restore a snapshot.

          - **AccountId** *(string) --*

            The identifier of an AWS customer account authorized to restore a snapshot.

          - **AccountAlias** *(string) --*

            The identifier of an AWS support account authorized to restore a snapshot. For AWS
            support, the identifier is ``amazon-redshift-support`` .

      - **OwnerAccount** *(string) --*

        For manual snapshots, the AWS customer account used to create or copy the snapshot. For
        automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
        such as sharing a manual snapshot.

      - **TotalBackupSizeInMegaBytes** *(float) --*

        The size of the complete set of backup data that would be used to restore the cluster.

      - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

        The size of the incremental backup.

      - **BackupProgressInMegaBytes** *(float) --*

        The number of megabytes that have been transferred to the snapshot backup.

      - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
        for a completed backup.

      - **EstimatedSecondsToCompletion** *(integer) --*

        The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
        for a completed backup.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress snapshot backup has been running, or the amount of time it
        took a completed backup to finish.

      - **SourceRegion** *(string) --*

        The source region from which the snapshot was copied.

      - **Tags** *(list) --*

        The list of tags for the cluster snapshot.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **RestorableNodeTypes** *(list) --*

        The list of node types that this cluster snapshot is able to restore into.

        - *(string) --*

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the snapshot.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that a manual snapshot is retained. If the value is -1, the manual
        snapshot is retained indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ManualSnapshotRemainingDays** *(integer) --*

        The number of days until a manual snapshot will pass its retention period.

      - **SnapshotRetentionStartTime** *(datetime) --*

        A timestamp representing the start of the retention period for the snapshot.
    """


_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef = TypedDict(
    "_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    {"Name": str},
    total=False,
)


class ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef(
    _ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
):
    """
    Type definition for
    `ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZone`
    `SupportedPlatforms`

    A list of supported platforms for orderable clusters.

    - **Name** *(string) --*
    """


_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef",
    {
        "Name": str,
        "SupportedPlatforms": List[
            ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
        ],
    },
    total=False,
)


class ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef(
    _ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnets`
    `SubnetAvailabilityZone`

    - **Name** *(string) --*

      The name of the availability zone.

    - **SupportedPlatforms** *(list) --*

      - *(dict) --*

        A list of supported platforms for orderable clusters.

        - **Name** *(string) --*
    """


_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef = TypedDict(
    "_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef(
    _ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef
):
    """
    Type definition for `ClientModifyClusterSubnetGroupResponseClusterSubnetGroup` `Subnets`

    Describes a subnet.

    - **SubnetIdentifier** *(string) --*

      The identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      - **Name** *(string) --*

        The name of the availability zone.

      - **SupportedPlatforms** *(list) --*

        - *(dict) --*

          A list of supported platforms for orderable clusters.

          - **Name** *(string) --*

    - **SubnetStatus** *(string) --*

      The status of the subnet.
    """


_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef = TypedDict(
    "_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef(
    _ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef
):
    """
    Type definition for `ClientModifyClusterSubnetGroupResponseClusterSubnetGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTypeDef = TypedDict(
    "_ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTypeDef",
    {
        "ClusterSubnetGroupName": str,
        "Description": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[ClientModifyClusterSubnetGroupResponseClusterSubnetGroupSubnetsTypeDef],
        "Tags": List[ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTagsTypeDef],
    },
    total=False,
)


class ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTypeDef(
    _ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTypeDef
):
    """
    Type definition for `ClientModifyClusterSubnetGroupResponse` `ClusterSubnetGroup`

    Describes a subnet group.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the cluster subnet group.

    - **Description** *(string) --*

      The description of the cluster subnet group.

    - **VpcId** *(string) --*

      The VPC ID of the cluster subnet group.

    - **SubnetGroupStatus** *(string) --*

      The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete`` and
      ``Invalid`` .

    - **Subnets** *(list) --*

      A list of the VPC  Subnet elements.

      - *(dict) --*

        Describes a subnet.

        - **SubnetIdentifier** *(string) --*

          The identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          - **Name** *(string) --*

            The name of the availability zone.

          - **SupportedPlatforms** *(list) --*

            - *(dict) --*

              A list of supported platforms for orderable clusters.

              - **Name** *(string) --*

        - **SubnetStatus** *(string) --*

          The status of the subnet.

    - **Tags** *(list) --*

      The list of tags for the cluster subnet group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientModifyClusterSubnetGroupResponseTypeDef = TypedDict(
    "_ClientModifyClusterSubnetGroupResponseTypeDef",
    {"ClusterSubnetGroup": ClientModifyClusterSubnetGroupResponseClusterSubnetGroupTypeDef},
    total=False,
)


class ClientModifyClusterSubnetGroupResponseTypeDef(_ClientModifyClusterSubnetGroupResponseTypeDef):
    """
    Type definition for `ClientModifyClusterSubnetGroup` `Response`

    - **ClusterSubnetGroup** *(dict) --*

      Describes a subnet group.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the cluster subnet group.

      - **Description** *(string) --*

        The description of the cluster subnet group.

      - **VpcId** *(string) --*

        The VPC ID of the cluster subnet group.

      - **SubnetGroupStatus** *(string) --*

        The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete``
        and ``Invalid`` .

      - **Subnets** *(list) --*

        A list of the VPC  Subnet elements.

        - *(dict) --*

          Describes a subnet.

          - **SubnetIdentifier** *(string) --*

            The identifier of the subnet.

          - **SubnetAvailabilityZone** *(dict) --*

            - **Name** *(string) --*

              The name of the availability zone.

            - **SupportedPlatforms** *(list) --*

              - *(dict) --*

                A list of supported platforms for orderable clusters.

                - **Name** *(string) --*

          - **SubnetStatus** *(string) --*

            The status of the subnet.

      - **Tags** *(list) --*

        The list of tags for the cluster subnet group.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientModifyEventSubscriptionResponseEventSubscriptionTagsTypeDef = TypedDict(
    "_ClientModifyEventSubscriptionResponseEventSubscriptionTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifyEventSubscriptionResponseEventSubscriptionTagsTypeDef(
    _ClientModifyEventSubscriptionResponseEventSubscriptionTagsTypeDef
):
    """
    Type definition for `ClientModifyEventSubscriptionResponseEventSubscription` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef = TypedDict(
    "_ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": datetime,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Severity": str,
        "Enabled": bool,
        "Tags": List[ClientModifyEventSubscriptionResponseEventSubscriptionTagsTypeDef],
    },
    total=False,
)


class ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef(
    _ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef
):
    """
    Type definition for `ClientModifyEventSubscriptionResponse` `EventSubscription`

    Describes event subscriptions.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the Amazon Redshift event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The name of the Amazon Redshift event notification subscription.

    - **SnsTopicArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
      subscription.

    - **Status** *(string) --*

      The status of the Amazon Redshift event notification subscription.

      Constraints:

      * Can be one of the following: active | no-permission | topic-not-exist

      * The status "no-permission" indicates that Amazon Redshift no longer has permission to post
      to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted
      after the subscription was created.

    - **SubscriptionCreationTime** *(datetime) --*

      The date and time the Amazon Redshift event notification subscription was created.

    - **SourceType** *(string) --*

      The source type of the events returned the Amazon Redshift event notification, such as
      cluster, or cluster-snapshot.

    - **SourceIdsList** *(list) --*

      A list of the sources that publish events to the Amazon Redshift event notification
      subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      The list of Amazon Redshift event categories specified in the event notification subscription.

      Values: Configuration, Management, Monitoring, Security

      - *(string) --*

    - **Severity** *(string) --*

      The event severity specified in the Amazon Redshift event notification subscription.

      Values: ERROR, INFO

    - **Enabled** *(boolean) --*

      A boolean value indicating whether the subscription is enabled; ``true`` indicates that the
      subscription is enabled.

    - **Tags** *(list) --*

      The list of tags for the event subscription.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientModifyEventSubscriptionResponseTypeDef = TypedDict(
    "_ClientModifyEventSubscriptionResponseTypeDef",
    {"EventSubscription": ClientModifyEventSubscriptionResponseEventSubscriptionTypeDef},
    total=False,
)


class ClientModifyEventSubscriptionResponseTypeDef(_ClientModifyEventSubscriptionResponseTypeDef):
    """
    Type definition for `ClientModifyEventSubscription` `Response`

    - **EventSubscription** *(dict) --*

      Describes event subscriptions.

      - **CustomerAwsId** *(string) --*

        The AWS customer account associated with the Amazon Redshift event notification
        subscription.

      - **CustSubscriptionId** *(string) --*

        The name of the Amazon Redshift event notification subscription.

      - **SnsTopicArn** *(string) --*

        The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
        subscription.

      - **Status** *(string) --*

        The status of the Amazon Redshift event notification subscription.

        Constraints:

        * Can be one of the following: active | no-permission | topic-not-exist

        * The status "no-permission" indicates that Amazon Redshift no longer has permission to post
        to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted
        after the subscription was created.

      - **SubscriptionCreationTime** *(datetime) --*

        The date and time the Amazon Redshift event notification subscription was created.

      - **SourceType** *(string) --*

        The source type of the events returned the Amazon Redshift event notification, such as
        cluster, or cluster-snapshot.

      - **SourceIdsList** *(list) --*

        A list of the sources that publish events to the Amazon Redshift event notification
        subscription.

        - *(string) --*

      - **EventCategoriesList** *(list) --*

        The list of Amazon Redshift event categories specified in the event notification
        subscription.

        Values: Configuration, Management, Monitoring, Security

        - *(string) --*

      - **Severity** *(string) --*

        The event severity specified in the Amazon Redshift event notification subscription.

        Values: ERROR, INFO

      - **Enabled** *(boolean) --*

        A boolean value indicating whether the subscription is enabled; ``true`` indicates that the
        subscription is enabled.

      - **Tags** *(list) --*

        The list of tags for the event subscription.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientModifyScheduledActionResponseTargetActionResizeClusterTypeDef = TypedDict(
    "_ClientModifyScheduledActionResponseTargetActionResizeClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "ClusterType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "Classic": bool,
    },
    total=False,
)


class ClientModifyScheduledActionResponseTargetActionResizeClusterTypeDef(
    _ClientModifyScheduledActionResponseTargetActionResizeClusterTypeDef
):
    """
    Type definition for `ClientModifyScheduledActionResponseTargetAction` `ResizeCluster`

    An action that runs a ``ResizeCluster`` API operation.

    - **ClusterIdentifier** *(string) --*

      The unique identifier for the cluster to resize.

    - **ClusterType** *(string) --*

      The new cluster type for the specified cluster.

    - **NodeType** *(string) --*

      The new node type for the nodes you are adding. If not specified, the cluster's current node
      type is used.

    - **NumberOfNodes** *(integer) --*

      The new number of nodes for the cluster.

    - **Classic** *(boolean) --*

      A boolean value indicating whether the resize operation is using the classic resize process.
      If you don't provide this parameter or set the value to ``false`` , the resize type is
      elastic.
    """


_ClientModifyScheduledActionResponseTargetActionTypeDef = TypedDict(
    "_ClientModifyScheduledActionResponseTargetActionTypeDef",
    {"ResizeCluster": ClientModifyScheduledActionResponseTargetActionResizeClusterTypeDef},
    total=False,
)


class ClientModifyScheduledActionResponseTargetActionTypeDef(
    _ClientModifyScheduledActionResponseTargetActionTypeDef
):
    """
    Type definition for `ClientModifyScheduledActionResponse` `TargetAction`

    A JSON format string of the Amazon Redshift API operation with input parameters.

    "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
    ".

    - **ResizeCluster** *(dict) --*

      An action that runs a ``ResizeCluster`` API operation.

      - **ClusterIdentifier** *(string) --*

        The unique identifier for the cluster to resize.

      - **ClusterType** *(string) --*

        The new cluster type for the specified cluster.

      - **NodeType** *(string) --*

        The new node type for the nodes you are adding. If not specified, the cluster's current node
        type is used.

      - **NumberOfNodes** *(integer) --*

        The new number of nodes for the cluster.

      - **Classic** *(boolean) --*

        A boolean value indicating whether the resize operation is using the classic resize process.
        If you don't provide this parameter or set the value to ``false`` , the resize type is
        elastic.
    """


_ClientModifyScheduledActionResponseTypeDef = TypedDict(
    "_ClientModifyScheduledActionResponseTypeDef",
    {
        "ScheduledActionName": str,
        "TargetAction": ClientModifyScheduledActionResponseTargetActionTypeDef,
        "Schedule": str,
        "IamRole": str,
        "ScheduledActionDescription": str,
        "State": str,
        "NextInvocations": List[datetime],
        "StartTime": datetime,
        "EndTime": datetime,
    },
    total=False,
)


class ClientModifyScheduledActionResponseTypeDef(_ClientModifyScheduledActionResponseTypeDef):
    """
    Type definition for `ClientModifyScheduledAction` `Response`

    Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift API
    operations on a schedule. For information about which API operations can be scheduled, see
    ScheduledActionType .

    - **ScheduledActionName** *(string) --*

      The name of the scheduled action.

    - **TargetAction** *(dict) --*

      A JSON format string of the Amazon Redshift API operation with input parameters.

      "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
      ".

      - **ResizeCluster** *(dict) --*

        An action that runs a ``ResizeCluster`` API operation.

        - **ClusterIdentifier** *(string) --*

          The unique identifier for the cluster to resize.

        - **ClusterType** *(string) --*

          The new cluster type for the specified cluster.

        - **NodeType** *(string) --*

          The new node type for the nodes you are adding. If not specified, the cluster's current
          node type is used.

        - **NumberOfNodes** *(integer) --*

          The new number of nodes for the cluster.

        - **Classic** *(boolean) --*

          A boolean value indicating whether the resize operation is using the classic resize
          process. If you don't provide this parameter or set the value to ``false`` , the resize
          type is elastic.

    - **Schedule** *(string) --*

      The schedule for a one-time (at format) or recurring (cron format) scheduled action. Schedule
      invocations must be separated by at least one hour.

      Format of at expressions is "``at(yyyy-mm-ddThh:mm:ss)`` ". For example,
      "``at(2016-03-04T17:27:00)`` ".

      Format of cron expressions is "``cron(Minutes Hours Day-of-month Month Day-of-week Year)`` ".
      For example, "``cron(0, 10, *, *, MON, *)`` ". For more information, see `Cron Expressions
      <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions>`__
      in the *Amazon CloudWatch Events User Guide* .

    - **IamRole** *(string) --*

      The IAM role to assume to run the scheduled action. This IAM role must have permission to run
      the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon
      Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your
      behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see
      `Using Identity-Based Policies for Amazon Redshift
      <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html>`__
      in the *Amazon Redshift Cluster Management Guide* .

    - **ScheduledActionDescription** *(string) --*

      The description of the scheduled action.

    - **State** *(string) --*

      The state of the scheduled action. For example, ``DISABLED`` .

    - **NextInvocations** *(list) --*

      List of times when the scheduled action will run.

      - *(datetime) --*

    - **StartTime** *(datetime) --*

      The start time in UTC when the schedule is active. Before this time, the scheduled action does
      not trigger.

    - **EndTime** *(datetime) --*

      The end time in UTC when the schedule is no longer active. After this time, the scheduled
      action does not trigger.
    """


_RequiredClientModifyScheduledActionTargetActionResizeClusterTypeDef = TypedDict(
    "_RequiredClientModifyScheduledActionTargetActionResizeClusterTypeDef",
    {"ClusterIdentifier": str, "NumberOfNodes": int},
)
_OptionalClientModifyScheduledActionTargetActionResizeClusterTypeDef = TypedDict(
    "_OptionalClientModifyScheduledActionTargetActionResizeClusterTypeDef",
    {"ClusterType": str, "NodeType": str, "Classic": bool},
    total=False,
)


class ClientModifyScheduledActionTargetActionResizeClusterTypeDef(
    _RequiredClientModifyScheduledActionTargetActionResizeClusterTypeDef,
    _OptionalClientModifyScheduledActionTargetActionResizeClusterTypeDef,
):
    """
    Type definition for `ClientModifyScheduledActionTargetAction` `ResizeCluster`

    An action that runs a ``ResizeCluster`` API operation.

    - **ClusterIdentifier** *(string) --* **[REQUIRED]**

      The unique identifier for the cluster to resize.

    - **ClusterType** *(string) --*

      The new cluster type for the specified cluster.

    - **NodeType** *(string) --*

      The new node type for the nodes you are adding. If not specified, the cluster's current node
      type is used.

    - **NumberOfNodes** *(integer) --* **[REQUIRED]**

      The new number of nodes for the cluster.

    - **Classic** *(boolean) --*

      A boolean value indicating whether the resize operation is using the classic resize process.
      If you don't provide this parameter or set the value to ``false`` , the resize type is
      elastic.
    """


_ClientModifyScheduledActionTargetActionTypeDef = TypedDict(
    "_ClientModifyScheduledActionTargetActionTypeDef",
    {"ResizeCluster": ClientModifyScheduledActionTargetActionResizeClusterTypeDef},
    total=False,
)


class ClientModifyScheduledActionTargetActionTypeDef(
    _ClientModifyScheduledActionTargetActionTypeDef
):
    """
    Type definition for `ClientModifyScheduledAction` `TargetAction`

    A modified JSON format of the scheduled action. For more information about this parameter, see
    ScheduledAction .

    - **ResizeCluster** *(dict) --*

      An action that runs a ``ResizeCluster`` API operation.

      - **ClusterIdentifier** *(string) --* **[REQUIRED]**

        The unique identifier for the cluster to resize.

      - **ClusterType** *(string) --*

        The new cluster type for the specified cluster.

      - **NodeType** *(string) --*

        The new node type for the nodes you are adding. If not specified, the cluster's current node
        type is used.

      - **NumberOfNodes** *(integer) --* **[REQUIRED]**

        The new number of nodes for the cluster.

      - **Classic** *(boolean) --*

        A boolean value indicating whether the resize operation is using the classic resize process.
        If you don't provide this parameter or set the value to ``false`` , the resize type is
        elastic.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterNodesTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for
    `ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster`
    `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSecurityGroupsTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster`
    `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster`
    `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterDataTransferProgressTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster`
    `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster`
    `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterElasticIpStatusTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterEndpointTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterEndpointTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterHsmStatusTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterIamRolesTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterPendingModifiedValuesTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster`
    `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterResizeInfoTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterRestoreStatusTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterTagsTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterTagsTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterVpcSecurityGroupsTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseClusterTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientModifySnapshotCopyRetentionPeriodResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientModifySnapshotCopyRetentionPeriodResponseClusterVpcSecurityGroupsTypeDef
        ],
        "ClusterParameterGroups": List[
            ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientModifySnapshotCopyRetentionPeriodResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientModifySnapshotCopyRetentionPeriodResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientModifySnapshotCopyRetentionPeriodResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientModifySnapshotCopyRetentionPeriodResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[
            ClientModifySnapshotCopyRetentionPeriodResponseClusterClusterNodesTypeDef
        ],
        "ElasticIpStatus": ClientModifySnapshotCopyRetentionPeriodResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientModifySnapshotCopyRetentionPeriodResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientModifySnapshotCopyRetentionPeriodResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientModifySnapshotCopyRetentionPeriodResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientModifySnapshotCopyRetentionPeriodResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseClusterTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseClusterTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriodResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifySnapshotCopyRetentionPeriodResponseTypeDef = TypedDict(
    "_ClientModifySnapshotCopyRetentionPeriodResponseTypeDef",
    {"Cluster": ClientModifySnapshotCopyRetentionPeriodResponseClusterTypeDef},
    total=False,
)


class ClientModifySnapshotCopyRetentionPeriodResponseTypeDef(
    _ClientModifySnapshotCopyRetentionPeriodResponseTypeDef
):
    """
    Type definition for `ClientModifySnapshotCopyRetentionPeriod` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientModifySnapshotScheduleResponseAssociatedClustersTypeDef = TypedDict(
    "_ClientModifySnapshotScheduleResponseAssociatedClustersTypeDef",
    {"ClusterIdentifier": str, "ScheduleAssociationState": str},
    total=False,
)


class ClientModifySnapshotScheduleResponseAssociatedClustersTypeDef(
    _ClientModifySnapshotScheduleResponseAssociatedClustersTypeDef
):
    """
    Type definition for `ClientModifySnapshotScheduleResponse` `AssociatedClusters`

    - **ClusterIdentifier** *(string) --*

    - **ScheduleAssociationState** *(string) --*
    """


_ClientModifySnapshotScheduleResponseTagsTypeDef = TypedDict(
    "_ClientModifySnapshotScheduleResponseTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientModifySnapshotScheduleResponseTagsTypeDef(
    _ClientModifySnapshotScheduleResponseTagsTypeDef
):
    """
    Type definition for `ClientModifySnapshotScheduleResponse` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientModifySnapshotScheduleResponseTypeDef = TypedDict(
    "_ClientModifySnapshotScheduleResponseTypeDef",
    {
        "ScheduleDefinitions": List[str],
        "ScheduleIdentifier": str,
        "ScheduleDescription": str,
        "Tags": List[ClientModifySnapshotScheduleResponseTagsTypeDef],
        "NextInvocations": List[datetime],
        "AssociatedClusterCount": int,
        "AssociatedClusters": List[ClientModifySnapshotScheduleResponseAssociatedClustersTypeDef],
    },
    total=False,
)


class ClientModifySnapshotScheduleResponseTypeDef(_ClientModifySnapshotScheduleResponseTypeDef):
    """
    Type definition for `ClientModifySnapshotSchedule` `Response`

    Describes a snapshot schedule. You can set a regular interval for creating snapshots of a
    cluster. You can also schedule snapshots for specific dates.

    - **ScheduleDefinitions** *(list) --*

      A list of ScheduleDefinitions.

      - *(string) --*

    - **ScheduleIdentifier** *(string) --*

      A unique identifier for the schedule.

    - **ScheduleDescription** *(string) --*

      The description of the schedule.

    - **Tags** *(list) --*

      An optional set of tags describing the schedule.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **NextInvocations** *(list) --*

      - *(datetime) --*

    - **AssociatedClusterCount** *(integer) --*

      The number of clusters associated with the schedule.

    - **AssociatedClusters** *(list) --*

      A list of clusters associated with the schedule. A maximum of 100 clusters is returned.

      - *(dict) --*

        - **ClusterIdentifier** *(string) --*

        - **ScheduleAssociationState** *(string) --*
    """


_ClientPurchaseReservedNodeOfferingResponseReservedNodeRecurringChargesTypeDef = TypedDict(
    "_ClientPurchaseReservedNodeOfferingResponseReservedNodeRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class ClientPurchaseReservedNodeOfferingResponseReservedNodeRecurringChargesTypeDef(
    _ClientPurchaseReservedNodeOfferingResponseReservedNodeRecurringChargesTypeDef
):
    """
    Type definition for `ClientPurchaseReservedNodeOfferingResponseReservedNode` `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_ClientPurchaseReservedNodeOfferingResponseReservedNodeTypeDef = TypedDict(
    "_ClientPurchaseReservedNodeOfferingResponseReservedNodeTypeDef",
    {
        "ReservedNodeId": str,
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "NodeCount": int,
        "State": str,
        "OfferingType": str,
        "RecurringCharges": List[
            ClientPurchaseReservedNodeOfferingResponseReservedNodeRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class ClientPurchaseReservedNodeOfferingResponseReservedNodeTypeDef(
    _ClientPurchaseReservedNodeOfferingResponseReservedNodeTypeDef
):
    """
    Type definition for `ClientPurchaseReservedNodeOfferingResponse` `ReservedNode`

    Describes a reserved node. You can call the  DescribeReservedNodeOfferings API to obtain the
    available reserved node offerings.

    - **ReservedNodeId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedNodeOfferingId** *(string) --*

      The identifier for the reserved node offering.

    - **NodeType** *(string) --*

      The node type of the reserved node.

    - **StartTime** *(datetime) --*

      The time the reservation started. You purchase a reserved node offering for a duration. This
      is the start time of that duration.

    - **Duration** *(integer) --*

      The duration of the node reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed cost Amazon Redshift charges you for this reserved node.

    - **UsagePrice** *(float) --*

      The hourly rate Amazon Redshift charges you for this reserved node.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved cluster.

    - **NodeCount** *(integer) --*

      The number of reserved compute nodes.

    - **State** *(string) --*

      The state of the reserved compute node.

      Possible Values:

      * pending-payment-This reserved node has recently been purchased, and the sale has been
      approved, but payment has not yet been confirmed.

      * active-This reserved node is owned by the caller and is available for use.

      * payment-failed-Payment failed for the purchase attempt.

      * retired-The reserved node is no longer available.

      * exchanging-The owner is exchanging the reserved node for another reserved node.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The recurring charges for the reserved node.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_ClientPurchaseReservedNodeOfferingResponseTypeDef = TypedDict(
    "_ClientPurchaseReservedNodeOfferingResponseTypeDef",
    {"ReservedNode": ClientPurchaseReservedNodeOfferingResponseReservedNodeTypeDef},
    total=False,
)


class ClientPurchaseReservedNodeOfferingResponseTypeDef(
    _ClientPurchaseReservedNodeOfferingResponseTypeDef
):
    """
    Type definition for `ClientPurchaseReservedNodeOffering` `Response`

    - **ReservedNode** *(dict) --*

      Describes a reserved node. You can call the  DescribeReservedNodeOfferings API to obtain the
      available reserved node offerings.

      - **ReservedNodeId** *(string) --*

        The unique identifier for the reservation.

      - **ReservedNodeOfferingId** *(string) --*

        The identifier for the reserved node offering.

      - **NodeType** *(string) --*

        The node type of the reserved node.

      - **StartTime** *(datetime) --*

        The time the reservation started. You purchase a reserved node offering for a duration. This
        is the start time of that duration.

      - **Duration** *(integer) --*

        The duration of the node reservation in seconds.

      - **FixedPrice** *(float) --*

        The fixed cost Amazon Redshift charges you for this reserved node.

      - **UsagePrice** *(float) --*

        The hourly rate Amazon Redshift charges you for this reserved node.

      - **CurrencyCode** *(string) --*

        The currency code for the reserved cluster.

      - **NodeCount** *(integer) --*

        The number of reserved compute nodes.

      - **State** *(string) --*

        The state of the reserved compute node.

        Possible Values:

        * pending-payment-This reserved node has recently been purchased, and the sale has been
        approved, but payment has not yet been confirmed.

        * active-This reserved node is owned by the caller and is available for use.

        * payment-failed-Payment failed for the purchase attempt.

        * retired-The reserved node is no longer available.

        * exchanging-The owner is exchanging the reserved node for another reserved node.

      - **OfferingType** *(string) --*

        The anticipated utilization of the reserved node, as defined in the reserved node offering.

      - **RecurringCharges** *(list) --*

        The recurring charges for the reserved node.

        - *(dict) --*

          Describes a recurring charge.

          - **RecurringChargeAmount** *(float) --*

            The amount charged per the period of time specified by the recurring charge frequency.

          - **RecurringChargeFrequency** *(string) --*

            The frequency at which the recurring charge amount is applied.

      - **ReservedNodeOfferingType** *(string) --*
    """


_ClientRebootClusterResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientRebootClusterResponseClusterClusterNodesTypeDef(
    _ClientRebootClusterResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientRebootClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientRebootClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientRebootClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientRebootClusterResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientRebootClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientRebootClusterResponseClusterClusterParameterGroupsTypeDef(
    _ClientRebootClusterResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientRebootClusterResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRebootClusterResponseClusterClusterSecurityGroupsTypeDef(
    _ClientRebootClusterResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientRebootClusterResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientRebootClusterResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientRebootClusterResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientRebootClusterResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientRebootClusterResponseClusterDataTransferProgressTypeDef(
    _ClientRebootClusterResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientRebootClusterResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientRebootClusterResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientRebootClusterResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientRebootClusterResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientRebootClusterResponseClusterElasticIpStatusTypeDef(
    _ClientRebootClusterResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientRebootClusterResponseClusterEndpointTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterEndpointTypeDef", {"Address": str, "Port": int}, total=False
)


class ClientRebootClusterResponseClusterEndpointTypeDef(
    _ClientRebootClusterResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientRebootClusterResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientRebootClusterResponseClusterHsmStatusTypeDef(
    _ClientRebootClusterResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientRebootClusterResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientRebootClusterResponseClusterIamRolesTypeDef(
    _ClientRebootClusterResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientRebootClusterResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientRebootClusterResponseClusterPendingModifiedValuesTypeDef(
    _ClientRebootClusterResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientRebootClusterResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientRebootClusterResponseClusterResizeInfoTypeDef(
    _ClientRebootClusterResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRebootClusterResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientRebootClusterResponseClusterRestoreStatusTypeDef(
    _ClientRebootClusterResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientRebootClusterResponseClusterTagsTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientRebootClusterResponseClusterTagsTypeDef(_ClientRebootClusterResponseClusterTagsTypeDef):
    """
    Type definition for `ClientRebootClusterResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRebootClusterResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRebootClusterResponseClusterVpcSecurityGroupsTypeDef(
    _ClientRebootClusterResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRebootClusterResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRebootClusterResponseClusterTypeDef = TypedDict(
    "_ClientRebootClusterResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRebootClusterResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientRebootClusterResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientRebootClusterResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientRebootClusterResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRebootClusterResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientRebootClusterResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientRebootClusterResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientRebootClusterResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientRebootClusterResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientRebootClusterResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientRebootClusterResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientRebootClusterResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientRebootClusterResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientRebootClusterResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientRebootClusterResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientRebootClusterResponseClusterTypeDef(_ClientRebootClusterResponseClusterTypeDef):
    """
    Type definition for `ClientRebootClusterResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRebootClusterResponseTypeDef = TypedDict(
    "_ClientRebootClusterResponseTypeDef",
    {"Cluster": ClientRebootClusterResponseClusterTypeDef},
    total=False,
)


class ClientRebootClusterResponseTypeDef(_ClientRebootClusterResponseTypeDef):
    """
    Type definition for `ClientRebootCluster` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientResetClusterParameterGroupParametersTypeDef = TypedDict(
    "_ClientResetClusterParameterGroupParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "DataType": str,
        "AllowedValues": str,
        "ApplyType": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
    },
    total=False,
)


class ClientResetClusterParameterGroupParametersTypeDef(
    _ClientResetClusterParameterGroupParametersTypeDef
):
    """
    Type definition for `ClientResetClusterParameterGroup` `Parameters`

    Describes a parameter in a cluster parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterValue** *(string) --*

      The value of the parameter.

    - **Description** *(string) --*

      A description of the parameter.

    - **Source** *(string) --*

      The source of the parameter value, such as "engine-default" or "user".

    - **DataType** *(string) --*

      The data type of the parameter.

    - **AllowedValues** *(string) --*

      The valid range of values for the parameter.

    - **ApplyType** *(string) --*

      Specifies how to apply the WLM configuration parameter. Some properties can be applied
      dynamically, while other properties require that any associated clusters be rebooted for the
      configuration changes to be applied. For more information about parameters and parameter
      groups, go to `Amazon Redshift Parameter Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

    - **IsModifiable** *(boolean) --*

      If ``true`` , the parameter can be modified. Some parameters have security or operational
      implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.
    """


_ClientResetClusterParameterGroupResponseTypeDef = TypedDict(
    "_ClientResetClusterParameterGroupResponseTypeDef",
    {"ParameterGroupName": str, "ParameterGroupStatus": str},
    total=False,
)


class ClientResetClusterParameterGroupResponseTypeDef(
    _ClientResetClusterParameterGroupResponseTypeDef
):
    """
    Type definition for `ClientResetClusterParameterGroup` `Response`

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterGroupStatus** *(string) --*

      The status of the parameter group. For example, if you made a change to a parameter group
      name-value pair, then the change could be pending a reboot of an associated cluster.
    """


_ClientResizeClusterResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientResizeClusterResponseClusterClusterNodesTypeDef(
    _ClientResizeClusterResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientResizeClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientResizeClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientResizeClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientResizeClusterResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientResizeClusterResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientResizeClusterResponseClusterClusterParameterGroupsTypeDef(
    _ClientResizeClusterResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientResizeClusterResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientResizeClusterResponseClusterClusterSecurityGroupsTypeDef(
    _ClientResizeClusterResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientResizeClusterResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientResizeClusterResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientResizeClusterResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientResizeClusterResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientResizeClusterResponseClusterDataTransferProgressTypeDef(
    _ClientResizeClusterResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientResizeClusterResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientResizeClusterResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientResizeClusterResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientResizeClusterResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientResizeClusterResponseClusterElasticIpStatusTypeDef(
    _ClientResizeClusterResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientResizeClusterResponseClusterEndpointTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterEndpointTypeDef", {"Address": str, "Port": int}, total=False
)


class ClientResizeClusterResponseClusterEndpointTypeDef(
    _ClientResizeClusterResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientResizeClusterResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientResizeClusterResponseClusterHsmStatusTypeDef(
    _ClientResizeClusterResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientResizeClusterResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientResizeClusterResponseClusterIamRolesTypeDef(
    _ClientResizeClusterResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientResizeClusterResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientResizeClusterResponseClusterPendingModifiedValuesTypeDef(
    _ClientResizeClusterResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientResizeClusterResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientResizeClusterResponseClusterResizeInfoTypeDef(
    _ClientResizeClusterResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientResizeClusterResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientResizeClusterResponseClusterRestoreStatusTypeDef(
    _ClientResizeClusterResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientResizeClusterResponseClusterTagsTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientResizeClusterResponseClusterTagsTypeDef(_ClientResizeClusterResponseClusterTagsTypeDef):
    """
    Type definition for `ClientResizeClusterResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientResizeClusterResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientResizeClusterResponseClusterVpcSecurityGroupsTypeDef(
    _ClientResizeClusterResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientResizeClusterResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientResizeClusterResponseClusterTypeDef = TypedDict(
    "_ClientResizeClusterResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientResizeClusterResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientResizeClusterResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientResizeClusterResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientResizeClusterResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientResizeClusterResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientResizeClusterResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientResizeClusterResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientResizeClusterResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientResizeClusterResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientResizeClusterResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientResizeClusterResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientResizeClusterResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientResizeClusterResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientResizeClusterResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientResizeClusterResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientResizeClusterResponseClusterTypeDef(_ClientResizeClusterResponseClusterTypeDef):
    """
    Type definition for `ClientResizeClusterResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientResizeClusterResponseTypeDef = TypedDict(
    "_ClientResizeClusterResponseTypeDef",
    {"Cluster": ClientResizeClusterResponseClusterTypeDef},
    total=False,
)


class ClientResizeClusterResponseTypeDef(_ClientResizeClusterResponseTypeDef):
    """
    Type definition for `ClientResizeCluster` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRestoreFromClusterSnapshotResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterClusterNodesTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientRestoreFromClusterSnapshotResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterClusterSecurityGroupsTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientRestoreFromClusterSnapshotResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster`
    `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientRestoreFromClusterSnapshotResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterDataTransferProgressTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientRestoreFromClusterSnapshotResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster`
    `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientRestoreFromClusterSnapshotResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterElasticIpStatusTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientRestoreFromClusterSnapshotResponseClusterEndpointTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterEndpointTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientRestoreFromClusterSnapshotResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterHsmStatusTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientRestoreFromClusterSnapshotResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterIamRolesTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientRestoreFromClusterSnapshotResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterPendingModifiedValuesTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientRestoreFromClusterSnapshotResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterResizeInfoTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRestoreFromClusterSnapshotResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterRestoreStatusTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientRestoreFromClusterSnapshotResponseClusterTagsTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterTagsTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRestoreFromClusterSnapshotResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterVpcSecurityGroupsTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRestoreFromClusterSnapshotResponseClusterTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRestoreFromClusterSnapshotResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientRestoreFromClusterSnapshotResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[
            ClientRestoreFromClusterSnapshotResponseClusterVpcSecurityGroupsTypeDef
        ],
        "ClusterParameterGroups": List[
            ClientRestoreFromClusterSnapshotResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRestoreFromClusterSnapshotResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientRestoreFromClusterSnapshotResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientRestoreFromClusterSnapshotResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientRestoreFromClusterSnapshotResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientRestoreFromClusterSnapshotResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientRestoreFromClusterSnapshotResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientRestoreFromClusterSnapshotResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientRestoreFromClusterSnapshotResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientRestoreFromClusterSnapshotResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientRestoreFromClusterSnapshotResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientRestoreFromClusterSnapshotResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseClusterTypeDef(
    _ClientRestoreFromClusterSnapshotResponseClusterTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshotResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRestoreFromClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientRestoreFromClusterSnapshotResponseTypeDef",
    {"Cluster": ClientRestoreFromClusterSnapshotResponseClusterTypeDef},
    total=False,
)


class ClientRestoreFromClusterSnapshotResponseTypeDef(
    _ClientRestoreFromClusterSnapshotResponseTypeDef
):
    """
    Type definition for `ClientRestoreFromClusterSnapshot` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRestoreTableFromClusterSnapshotResponseTableRestoreStatusTypeDef = TypedDict(
    "_ClientRestoreTableFromClusterSnapshotResponseTableRestoreStatusTypeDef",
    {
        "TableRestoreRequestId": str,
        "Status": str,
        "Message": str,
        "RequestTime": datetime,
        "ProgressInMegaBytes": int,
        "TotalDataInMegaBytes": int,
        "ClusterIdentifier": str,
        "SnapshotIdentifier": str,
        "SourceDatabaseName": str,
        "SourceSchemaName": str,
        "SourceTableName": str,
        "TargetDatabaseName": str,
        "TargetSchemaName": str,
        "NewTableName": str,
    },
    total=False,
)


class ClientRestoreTableFromClusterSnapshotResponseTableRestoreStatusTypeDef(
    _ClientRestoreTableFromClusterSnapshotResponseTableRestoreStatusTypeDef
):
    """
    Type definition for `ClientRestoreTableFromClusterSnapshotResponse` `TableRestoreStatus`

    Describes the status of a  RestoreTableFromClusterSnapshot operation.

    - **TableRestoreRequestId** *(string) --*

      The unique identifier for the table restore request.

    - **Status** *(string) --*

      A value that describes the current state of the table restore request.

      Valid Values: ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS``

    - **Message** *(string) --*

      A description of the status of the table restore request. Status values include ``SUCCEEDED``
      , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS`` .

    - **RequestTime** *(datetime) --*

      The time that the table restore request was made, in Universal Coordinated Time (UTC).

    - **ProgressInMegaBytes** *(integer) --*

      The amount of data restored to the new table so far, in megabytes (MB).

    - **TotalDataInMegaBytes** *(integer) --*

      The total amount of data to restore to the new table, in megabytes (MB).

    - **ClusterIdentifier** *(string) --*

      The identifier of the Amazon Redshift cluster that the table is being restored to.

    - **SnapshotIdentifier** *(string) --*

      The identifier of the snapshot that the table is being restored from.

    - **SourceDatabaseName** *(string) --*

      The name of the source database that contains the table being restored.

    - **SourceSchemaName** *(string) --*

      The name of the source schema that contains the table being restored.

    - **SourceTableName** *(string) --*

      The name of the source table being restored.

    - **TargetDatabaseName** *(string) --*

      The name of the database to restore the table to.

    - **TargetSchemaName** *(string) --*

      The name of the schema to restore the table to.

    - **NewTableName** *(string) --*

      The name of the table to create as a result of the table restore request.
    """


_ClientRestoreTableFromClusterSnapshotResponseTypeDef = TypedDict(
    "_ClientRestoreTableFromClusterSnapshotResponseTypeDef",
    {"TableRestoreStatus": ClientRestoreTableFromClusterSnapshotResponseTableRestoreStatusTypeDef},
    total=False,
)


class ClientRestoreTableFromClusterSnapshotResponseTypeDef(
    _ClientRestoreTableFromClusterSnapshotResponseTypeDef
):
    """
    Type definition for `ClientRestoreTableFromClusterSnapshot` `Response`

    - **TableRestoreStatus** *(dict) --*

      Describes the status of a  RestoreTableFromClusterSnapshot operation.

      - **TableRestoreRequestId** *(string) --*

        The unique identifier for the table restore request.

      - **Status** *(string) --*

        A value that describes the current state of the table restore request.

        Valid Values: ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS``

      - **Message** *(string) --*

        A description of the status of the table restore request. Status values include
        ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS`` .

      - **RequestTime** *(datetime) --*

        The time that the table restore request was made, in Universal Coordinated Time (UTC).

      - **ProgressInMegaBytes** *(integer) --*

        The amount of data restored to the new table so far, in megabytes (MB).

      - **TotalDataInMegaBytes** *(integer) --*

        The total amount of data to restore to the new table, in megabytes (MB).

      - **ClusterIdentifier** *(string) --*

        The identifier of the Amazon Redshift cluster that the table is being restored to.

      - **SnapshotIdentifier** *(string) --*

        The identifier of the snapshot that the table is being restored from.

      - **SourceDatabaseName** *(string) --*

        The name of the source database that contains the table being restored.

      - **SourceSchemaName** *(string) --*

        The name of the source schema that contains the table being restored.

      - **SourceTableName** *(string) --*

        The name of the source table being restored.

      - **TargetDatabaseName** *(string) --*

        The name of the database to restore the table to.

      - **TargetSchemaName** *(string) --*

        The name of the schema to restore the table to.

      - **NewTableName** *(string) --*

        The name of the table to create as a result of the table restore request.
    """


_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef
):
    """
    Type definition for
    `ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupOwnerId": str,
        "Tags": List[
            ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTagsTypeDef
        ],
    },
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef
):
    """
    Type definition for `ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroup`
    `EC2SecurityGroups`

    Describes an Amazon EC2 security group.

    - **Status** *(string) --*

      The status of the EC2 security group.

    - **EC2SecurityGroupName** *(string) --*

      The name of the EC2 Security Group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      The AWS ID of the owner of the EC2 security group specified in the ``EC2SecurityGroupName``
      field.

    - **Tags** *(list) --*

      The list of tags for the EC2 security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef
):
    """
    Type definition for
    `ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRanges` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef",
    {
        "Status": str,
        "CIDRIP": str,
        "Tags": List[
            ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTagsTypeDef
        ],
    },
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef
):
    """
    Type definition for `ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroup`
    `IPRanges`

    Describes an IP range used in a security group.

    - **Status** *(string) --*

      The status of the IP range, for example, "authorized".

    - **CIDRIP** *(string) --*

      The IP range in Classless Inter-Domain Routing (CIDR) notation.

    - **Tags** *(list) --*

      The list of tags for the IP range.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef
):
    """
    Type definition for `ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroup` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef",
    {
        "ClusterSecurityGroupName": str,
        "Description": str,
        "EC2SecurityGroups": List[
            ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupIPRangesTypeDef
        ],
        "Tags": List[
            ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTagsTypeDef
        ],
    },
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef
):
    """
    Type definition for `ClientRevokeClusterSecurityGroupIngressResponse` `ClusterSecurityGroup`

    Describes a security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group to which the operation was applied.

    - **Description** *(string) --*

      A description of the security group.

    - **EC2SecurityGroups** *(list) --*

      A list of EC2 security groups that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an Amazon EC2 security group.

        - **Status** *(string) --*

          The status of the EC2 security group.

        - **EC2SecurityGroupName** *(string) --*

          The name of the EC2 Security Group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          The AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

        - **Tags** *(list) --*

          The list of tags for the EC2 security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **IPRanges** *(list) --*

      A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an IP range used in a security group.

        - **Status** *(string) --*

          The status of the IP range, for example, "authorized".

        - **CIDRIP** *(string) --*

          The IP range in Classless Inter-Domain Routing (CIDR) notation.

        - **Tags** *(list) --*

          The list of tags for the IP range.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **Tags** *(list) --*

      The list of tags for the cluster security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_ClientRevokeClusterSecurityGroupIngressResponseTypeDef = TypedDict(
    "_ClientRevokeClusterSecurityGroupIngressResponseTypeDef",
    {
        "ClusterSecurityGroup": ClientRevokeClusterSecurityGroupIngressResponseClusterSecurityGroupTypeDef
    },
    total=False,
)


class ClientRevokeClusterSecurityGroupIngressResponseTypeDef(
    _ClientRevokeClusterSecurityGroupIngressResponseTypeDef
):
    """
    Type definition for `ClientRevokeClusterSecurityGroupIngress` `Response`

    - **ClusterSecurityGroup** *(dict) --*

      Describes a security group.

      - **ClusterSecurityGroupName** *(string) --*

        The name of the cluster security group to which the operation was applied.

      - **Description** *(string) --*

        A description of the security group.

      - **EC2SecurityGroups** *(list) --*

        A list of EC2 security groups that are permitted to access clusters associated with this
        cluster security group.

        - *(dict) --*

          Describes an Amazon EC2 security group.

          - **Status** *(string) --*

            The status of the EC2 security group.

          - **EC2SecurityGroupName** *(string) --*

            The name of the EC2 Security Group.

          - **EC2SecurityGroupOwnerId** *(string) --*

            The AWS ID of the owner of the EC2 security group specified in the
            ``EC2SecurityGroupName`` field.

          - **Tags** *(list) --*

            The list of tags for the EC2 security group.

            - *(dict) --*

              A tag consisting of a name/value pair for a resource.

              - **Key** *(string) --*

                The key, or name, for the resource tag.

              - **Value** *(string) --*

                The value for the resource tag.

      - **IPRanges** *(list) --*

        A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
        cluster security group.

        - *(dict) --*

          Describes an IP range used in a security group.

          - **Status** *(string) --*

            The status of the IP range, for example, "authorized".

          - **CIDRIP** *(string) --*

            The IP range in Classless Inter-Domain Routing (CIDR) notation.

          - **Tags** *(list) --*

            The list of tags for the IP range.

            - *(dict) --*

              A tag consisting of a name/value pair for a resource.

              - **Key** *(string) --*

                The key, or name, for the resource tag.

              - **Value** *(string) --*

                The value for the resource tag.

      - **Tags** *(list) --*

        The list of tags for the cluster security group.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.
    """


_ClientRevokeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef = TypedDict(
    "_ClientRevokeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class ClientRevokeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef(
    _ClientRevokeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `ClientRevokeSnapshotAccessResponseSnapshot` `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_ClientRevokeSnapshotAccessResponseSnapshotTagsTypeDef = TypedDict(
    "_ClientRevokeSnapshotAccessResponseSnapshotTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class ClientRevokeSnapshotAccessResponseSnapshotTagsTypeDef(
    _ClientRevokeSnapshotAccessResponseSnapshotTagsTypeDef
):
    """
    Type definition for `ClientRevokeSnapshotAccessResponseSnapshot` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRevokeSnapshotAccessResponseSnapshotTypeDef = TypedDict(
    "_ClientRevokeSnapshotAccessResponseSnapshotTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            ClientRevokeSnapshotAccessResponseSnapshotAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[ClientRevokeSnapshotAccessResponseSnapshotTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class ClientRevokeSnapshotAccessResponseSnapshotTypeDef(
    _ClientRevokeSnapshotAccessResponseSnapshotTypeDef
):
    """
    Type definition for `ClientRevokeSnapshotAccessResponse` `Snapshot`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_ClientRevokeSnapshotAccessResponseTypeDef = TypedDict(
    "_ClientRevokeSnapshotAccessResponseTypeDef",
    {"Snapshot": ClientRevokeSnapshotAccessResponseSnapshotTypeDef},
    total=False,
)


class ClientRevokeSnapshotAccessResponseTypeDef(_ClientRevokeSnapshotAccessResponseTypeDef):
    """
    Type definition for `ClientRevokeSnapshotAccess` `Response`

    - **Snapshot** *(dict) --*

      Describes a snapshot.

      - **SnapshotIdentifier** *(string) --*

        The snapshot identifier that is provided in the request.

      - **ClusterIdentifier** *(string) --*

        The identifier of the cluster for which the snapshot was taken.

      - **SnapshotCreateTime** *(datetime) --*

        The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
        of the cluster data as of this exact time.

      - **Status** *(string) --*

        The snapshot status. The value of the status depends on the API operation used:

        *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

        *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
        "failed".

        *  DeleteClusterSnapshot returns status as "deleted".

      - **Port** *(integer) --*

        The port that the cluster is listening on.

      - **AvailabilityZone** *(string) --*

        The Availability Zone in which the cluster was created.

      - **ClusterCreateTime** *(datetime) --*

        The time (UTC) when the cluster was originally created.

      - **MasterUsername** *(string) --*

        The master user name for the cluster.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **SnapshotType** *(string) --*

        The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
        are of type "manual".

      - **NodeType** *(string) --*

        The node type of the nodes in the cluster.

      - **NumberOfNodes** *(integer) --*

        The number of nodes in the cluster.

      - **DBName** *(string) --*

        The name of the database that was created when the cluster was created.

      - **VpcId** *(string) --*

        The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
        this field is not in the output.

      - **Encrypted** *(boolean) --*

        If ``true`` , the data in the snapshot is encrypted at rest.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
        data in the cluster from which the snapshot was taken.

      - **EncryptedWithHSM** *(boolean) --*

        A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
        source cluster. ``true`` indicates that the data is encrypted using HSM keys.

      - **AccountsWithRestoreAccess** *(list) --*

        A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if
        no accounts are authorized. Visible only to the snapshot owner.

        - *(dict) --*

          Describes an AWS customer account authorized to restore a snapshot.

          - **AccountId** *(string) --*

            The identifier of an AWS customer account authorized to restore a snapshot.

          - **AccountAlias** *(string) --*

            The identifier of an AWS support account authorized to restore a snapshot. For AWS
            support, the identifier is ``amazon-redshift-support`` .

      - **OwnerAccount** *(string) --*

        For manual snapshots, the AWS customer account used to create or copy the snapshot. For
        automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
        such as sharing a manual snapshot.

      - **TotalBackupSizeInMegaBytes** *(float) --*

        The size of the complete set of backup data that would be used to restore the cluster.

      - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

        The size of the incremental backup.

      - **BackupProgressInMegaBytes** *(float) --*

        The number of megabytes that have been transferred to the snapshot backup.

      - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
        for a completed backup.

      - **EstimatedSecondsToCompletion** *(integer) --*

        The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
        for a completed backup.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress snapshot backup has been running, or the amount of time it
        took a completed backup to finish.

      - **SourceRegion** *(string) --*

        The source region from which the snapshot was copied.

      - **Tags** *(list) --*

        The list of tags for the cluster snapshot.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **RestorableNodeTypes** *(list) --*

        The list of node types that this cluster snapshot is able to restore into.

        - *(string) --*

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the snapshot.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that a manual snapshot is retained. If the value is -1, the manual
        snapshot is retained indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ManualSnapshotRemainingDays** *(integer) --*

        The number of days until a manual snapshot will pass its retention period.

      - **SnapshotRetentionStartTime** *(datetime) --*

        A timestamp representing the start of the retention period for the snapshot.
    """


_ClientRotateEncryptionKeyResponseClusterClusterNodesTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterClusterNodesTypeDef(
    _ClientRotateEncryptionKeyResponseClusterClusterNodesTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef(
    _ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseClusterClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsTypeDef(
    _ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_ClientRotateEncryptionKeyResponseClusterClusterSecurityGroupsTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterClusterSecurityGroupsTypeDef(
    _ClientRotateEncryptionKeyResponseClusterClusterSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_ClientRotateEncryptionKeyResponseClusterClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterClusterSnapshotCopyStatusTypeDef(
    _ClientRotateEncryptionKeyResponseClusterClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_ClientRotateEncryptionKeyResponseClusterDataTransferProgressTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterDataTransferProgressTypeDef(
    _ClientRotateEncryptionKeyResponseClusterDataTransferProgressTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_ClientRotateEncryptionKeyResponseClusterDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterDeferredMaintenanceWindowsTypeDef(
    _ClientRotateEncryptionKeyResponseClusterDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_ClientRotateEncryptionKeyResponseClusterElasticIpStatusTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterElasticIpStatusTypeDef(
    _ClientRotateEncryptionKeyResponseClusterElasticIpStatusTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_ClientRotateEncryptionKeyResponseClusterEndpointTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterEndpointTypeDef(
    _ClientRotateEncryptionKeyResponseClusterEndpointTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_ClientRotateEncryptionKeyResponseClusterHsmStatusTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterHsmStatusTypeDef(
    _ClientRotateEncryptionKeyResponseClusterHsmStatusTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_ClientRotateEncryptionKeyResponseClusterIamRolesTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterIamRolesTypeDef(
    _ClientRotateEncryptionKeyResponseClusterIamRolesTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_ClientRotateEncryptionKeyResponseClusterPendingModifiedValuesTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterPendingModifiedValuesTypeDef(
    _ClientRotateEncryptionKeyResponseClusterPendingModifiedValuesTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_ClientRotateEncryptionKeyResponseClusterResizeInfoTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterResizeInfoTypeDef(
    _ClientRotateEncryptionKeyResponseClusterResizeInfoTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRotateEncryptionKeyResponseClusterRestoreStatusTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterRestoreStatusTypeDef(
    _ClientRotateEncryptionKeyResponseClusterRestoreStatusTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_ClientRotateEncryptionKeyResponseClusterTagsTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class ClientRotateEncryptionKeyResponseClusterTagsTypeDef(
    _ClientRotateEncryptionKeyResponseClusterTagsTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_ClientRotateEncryptionKeyResponseClusterVpcSecurityGroupsTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterVpcSecurityGroupsTypeDef(
    _ClientRotateEncryptionKeyResponseClusterVpcSecurityGroupsTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponseCluster` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_ClientRotateEncryptionKeyResponseClusterTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": ClientRotateEncryptionKeyResponseClusterEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            ClientRotateEncryptionKeyResponseClusterClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[ClientRotateEncryptionKeyResponseClusterVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            ClientRotateEncryptionKeyResponseClusterClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": ClientRotateEncryptionKeyResponseClusterPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": ClientRotateEncryptionKeyResponseClusterRestoreStatusTypeDef,
        "DataTransferProgress": ClientRotateEncryptionKeyResponseClusterDataTransferProgressTypeDef,
        "HsmStatus": ClientRotateEncryptionKeyResponseClusterHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": ClientRotateEncryptionKeyResponseClusterClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[ClientRotateEncryptionKeyResponseClusterClusterNodesTypeDef],
        "ElasticIpStatus": ClientRotateEncryptionKeyResponseClusterElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[ClientRotateEncryptionKeyResponseClusterTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[ClientRotateEncryptionKeyResponseClusterIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            ClientRotateEncryptionKeyResponseClusterDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": ClientRotateEncryptionKeyResponseClusterResizeInfoTypeDef,
    },
    total=False,
)


class ClientRotateEncryptionKeyResponseClusterTypeDef(
    _ClientRotateEncryptionKeyResponseClusterTypeDef
):
    """
    Type definition for `ClientRotateEncryptionKeyResponse` `Cluster`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_ClientRotateEncryptionKeyResponseTypeDef = TypedDict(
    "_ClientRotateEncryptionKeyResponseTypeDef",
    {"Cluster": ClientRotateEncryptionKeyResponseClusterTypeDef},
    total=False,
)


class ClientRotateEncryptionKeyResponseTypeDef(_ClientRotateEncryptionKeyResponseTypeDef):
    """
    Type definition for `ClientRotateEncryptionKey` `Response`

    - **Cluster** *(dict) --*

      Describes a cluster.

      - **ClusterIdentifier** *(string) --*

        The unique identifier of the cluster.

      - **NodeType** *(string) --*

        The node type for the nodes in the cluster.

      - **ClusterStatus** *(string) --*

        The current state of the cluster. Possible values are the following:

        * ``available``

        * ``available, prep-for-resize``

        * ``available, resize-cleanup``

        * ``cancelling-resize``

        * ``creating``

        * ``deleting``

        * ``final-snapshot``

        * ``hardware-failure``

        * ``incompatible-hsm``

        * ``incompatible-network``

        * ``incompatible-parameters``

        * ``incompatible-restore``

        * ``modifying``

        * ``rebooting``

        * ``renaming``

        * ``resizing``

        * ``rotating-keys``

        * ``storage-full``

        * ``updating-hsm``

      - **ClusterAvailabilityStatus** *(string) --*

        The availability status of the cluster for queries. Possible values are the following:

        * Available - The cluster is available for queries.

        * Unavailable - The cluster is not available for queries.

        * Maintenance - The cluster is intermittently available for queries due to maintenance
        activities.

        * Modifying - The cluster is intermittently available for queries due to changes that modify
        the cluster.

        * Failed - The cluster failed and is not available for queries.

      - **ModifyStatus** *(string) --*

        The status of a modify operation, if any, initiated for the cluster.

      - **MasterUsername** *(string) --*

        The master user name for the cluster. This name is used to connect to the database that is
        specified in the **DBName** parameter.

      - **DBName** *(string) --*

        The name of the initial database that was created when the cluster was created. This same
        name is returned for the life of the cluster. If an initial database was not specified, a
        database named ``dev`` dev was created by default.

      - **Endpoint** *(dict) --*

        The connection endpoint.

        - **Address** *(string) --*

          The DNS address of the Cluster.

        - **Port** *(integer) --*

          The port that the database engine is listening on.

      - **ClusterCreateTime** *(datetime) --*

        The date and time that the cluster was created.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The number of days that automatic cluster snapshots are retained.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
        retained indefinitely. This setting doesn't change the retention period of existing
        snapshots.

        The value must be either -1 or an integer between 1 and 3,653.

      - **ClusterSecurityGroups** *(list) --*

        A list of cluster security group that are associated with the cluster. Each security group
        is represented by an element that contains ``ClusterSecurityGroup.Name`` and
        ``ClusterSecurityGroup.Status`` subelements.

        Cluster security groups are used when the cluster is not created in an Amazon Virtual
        Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
        listed by the **VpcSecurityGroups** parameter.

        - *(dict) --*

          Describes a cluster security group.

          - **ClusterSecurityGroupName** *(string) --*

            The name of the cluster security group.

          - **Status** *(string) --*

            The status of the cluster security group.

      - **VpcSecurityGroups** *(list) --*

        A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
        the cluster. This parameter is returned only if the cluster is in a VPC.

        - *(dict) --*

          Describes the members of a VPC security group.

          - **VpcSecurityGroupId** *(string) --*

            The identifier of the VPC security group.

          - **Status** *(string) --*

            The status of the VPC security group.

      - **ClusterParameterGroups** *(list) --*

        The list of cluster parameter groups that are associated with this cluster. Each parameter
        group in the list is returned with its status.

        - *(dict) --*

          Describes the status of a parameter group.

          - **ParameterGroupName** *(string) --*

            The name of the cluster parameter group.

          - **ParameterApplyStatus** *(string) --*

            The status of parameter updates.

          - **ClusterParameterStatusList** *(list) --*

            The list of parameter statuses.

            For more information about parameters and parameter groups, go to `Amazon Redshift
            Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

            - *(dict) --*

              Describes the status of a parameter group.

              - **ParameterName** *(string) --*

                The name of the parameter.

              - **ParameterApplyStatus** *(string) --*

                The status of the parameter that indicates whether the parameter is in sync with the
                database, waiting for a cluster reboot, or encountered an error when being applied.

                The following are possible statuses and descriptions.

                * ``in-sync`` : The parameter value is in sync with the database.

                * ``pending-reboot`` : The parameter value will be applied after the cluster
                reboots.

                * ``applying`` : The parameter value is being applied to the database.

                * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
                value or syntax.

                * ``apply-deferred`` : The parameter contains static property changes. The changes
                are deferred until the cluster reboots.

                * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                applied after the cluster reboots.

                * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                be applied after the cluster reboots.

              - **ParameterApplyErrorDescription** *(string) --*

                The error that prevented the parameter from being applied to the database.

      - **ClusterSubnetGroupName** *(string) --*

        The name of the subnet group that is associated with the cluster. This parameter is valid
        only when the cluster is in a VPC.

      - **VpcId** *(string) --*

        The identifier of the VPC the cluster is in, if the cluster is in a VPC.

      - **AvailabilityZone** *(string) --*

        The name of the Availability Zone in which the cluster is located.

      - **PreferredMaintenanceWindow** *(string) --*

        The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
        can occur.

      - **PendingModifiedValues** *(dict) --*

        A value that, if present, indicates that changes to the cluster are pending. Specific
        pending changes are identified by subelements.

        - **MasterUserPassword** *(string) --*

          The pending or in-progress change of the master user password for the cluster.

        - **NodeType** *(string) --*

          The pending or in-progress change of the cluster's node type.

        - **NumberOfNodes** *(integer) --*

          The pending or in-progress change of the number of nodes in the cluster.

        - **ClusterType** *(string) --*

          The pending or in-progress change of the cluster type.

        - **ClusterVersion** *(string) --*

          The pending or in-progress change of the service version.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The pending or in-progress change of the automated snapshot retention period.

        - **ClusterIdentifier** *(string) --*

          The pending or in-progress change of the new identifier for the cluster.

        - **PubliclyAccessible** *(boolean) --*

          The pending or in-progress change of the ability to connect to the cluster from the public
          network.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track that the cluster will change to during the next
          maintenance window.

        - **EncryptionType** *(string) --*

          The encryption type for a cluster. Possible values are: KMS and None. For the China region
          the possible values are None, and Legacy.

      - **ClusterVersion** *(string) --*

        The version ID of the Amazon Redshift engine that is running on the cluster.

      - **AllowVersionUpgrade** *(boolean) --*

        A boolean value that, if ``true`` , indicates that major version upgrades will be applied
        automatically to the cluster during the maintenance window.

      - **NumberOfNodes** *(integer) --*

        The number of compute nodes in the cluster.

      - **PubliclyAccessible** *(boolean) --*

        A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
        network.

      - **Encrypted** *(boolean) --*

        A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

      - **RestoreStatus** *(dict) --*

        A value that describes the status of a cluster restore action. This parameter returns null
        if the cluster was not created by restoring a snapshot.

        - **Status** *(string) --*

          The status of the restore action. Returns starting, restoring, completed, or failed.

        - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred from the backup storage. Returns the
          average rate for a completed backup. This field is only updated when you restore to DC2
          and DS2 node types.

        - **SnapshotSizeInMegaBytes** *(integer) --*

          The size of the set of snapshot data used to restore the cluster. This field is only
          updated when you restore to DC2 and DS2 node types.

        - **ProgressInMegaBytes** *(integer) --*

          The number of megabytes that have been transferred from snapshot storage. This field is
          only updated when you restore to DC2 and DS2 node types.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress restore has been running, or the amount of time it took
          a completed restore to finish. This field is only updated when you restore to DC2 and DS2
          node types.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          The estimate of the time remaining before the restore will complete. Returns 0 for a
          completed restore. This field is only updated when you restore to DC2 and DS2 node types.

      - **DataTransferProgress** *(dict) --*

        - **Status** *(string) --*

          Describes the status of the cluster. While the transfer is in progress the status is
          ``transferringdata`` .

        - **CurrentRateInMegaBytesPerSecond** *(float) --*

          Describes the data transfer rate in MB's per second.

        - **TotalDataInMegaBytes** *(integer) --*

          Describes the total amount of data to be transfered in megabytes.

        - **DataTransferredInMegaBytes** *(integer) --*

          Describes the total amount of data that has been transfered in MB's.

        - **EstimatedTimeToCompletionInSeconds** *(integer) --*

          Describes the estimated number of seconds remaining to complete the transfer.

        - **ElapsedTimeInSeconds** *(integer) --*

          Describes the number of seconds that have elapsed during the data transfer.

      - **HsmStatus** *(dict) --*

        A value that reports whether the Amazon Redshift cluster has finished applying any hardware
        security module (HSM) settings changes specified in a modify cluster command.

        Values: active, applying

        - **HsmClientCertificateIdentifier** *(string) --*

          Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
          retrieve the data encryption keys stored in an HSM.

        - **HsmConfigurationIdentifier** *(string) --*

          Specifies the name of the HSM configuration that contains the information the Amazon
          Redshift cluster can use to retrieve and store keys in an HSM.

        - **Status** *(string) --*

          Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
          specified in a modify cluster command.

          Values: active, applying

      - **ClusterSnapshotCopyStatus** *(dict) --*

        A value that returns the destination region and retention period that are configured for
        cross-region snapshot copy.

        - **DestinationRegion** *(string) --*

          The destination region that snapshots are automatically copied to when cross-region
          snapshot copy is enabled.

        - **RetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that automated snapshots are retained in the destination region after
          they are copied from a source region. If the value is -1, the manual snapshot is retained
          indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

      - **ClusterPublicKey** *(string) --*

        The public key for the cluster.

      - **ClusterNodes** *(list) --*

        The nodes in the cluster.

        - *(dict) --*

          The identifier of a node in a cluster.

          - **NodeRole** *(string) --*

            Whether the node is a leader node or a compute node.

          - **PrivateIPAddress** *(string) --*

            The private IP address of a node within a cluster.

          - **PublicIPAddress** *(string) --*

            The public IP address of a node within a cluster.

      - **ElasticIpStatus** *(dict) --*

        The status of the elastic IP (EIP) address.

        - **ElasticIp** *(string) --*

          The elastic IP (EIP) address for the cluster.

        - **Status** *(string) --*

          The status of the elastic IP (EIP) address.

      - **ClusterRevisionNumber** *(string) --*

        The specific revision number of the database in the cluster.

      - **Tags** *(list) --*

        The list of tags for the cluster.

        - *(dict) --*

          A tag consisting of a name/value pair for a resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

      - **KmsKeyId** *(string) --*

        The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
        in the cluster.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **IamRoles** *(list) --*

        A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
        access other AWS services.

        - *(dict) --*

          An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
          Redshift cluster to access other AWS services.

          - **IamRoleArn** *(string) --*

            The Amazon Resource Name (ARN) of the IAM role, for example,
            ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

          - **ApplyStatus** *(string) --*

            A value that describes the status of the IAM role's association with an Amazon Redshift
            cluster.

            The following are possible statuses and descriptions.

            * ``in-sync`` : The role is available for use by the cluster.

            * ``adding`` : The role is in the process of being associated with the cluster.

            * ``removing`` : The role is in the process of being disassociated with the cluster.

      - **PendingActions** *(list) --*

        Cluster operations that are waiting to be started.

        - *(string) --*

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track for the cluster.

      - **ElasticResizeNumberOfNodeOptions** *(string) --*

        The number of nodes that you can resize the cluster to with the elastic resize method.

      - **DeferredMaintenanceWindows** *(list) --*

        Describes a group of ``DeferredMaintenanceWindow`` objects.

        - *(dict) --*

          Describes a deferred maintenance window

          - **DeferMaintenanceIdentifier** *(string) --*

            A unique identifier for the maintenance window.

          - **DeferMaintenanceStartTime** *(datetime) --*

            A timestamp for the beginning of the time period when we defer maintenance.

          - **DeferMaintenanceEndTime** *(datetime) --*

            A timestamp for the end of the time period when we defer maintenance.

      - **SnapshotScheduleIdentifier** *(string) --*

        A unique identifier for the cluster snapshot schedule.

      - **SnapshotScheduleState** *(string) --*

        The current state of the cluster snapshot schedule.

      - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

        The date and time when the next snapshot is expected to be taken for clusters with a valid
        snapshot schedule and backups enabled.

      - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

        The status of next expected snapshot for clusters having a valid snapshot schedule and
        backups enabled. Possible values are the following:

        * OnTrack - The next snapshot is expected to be taken on time.

        * Pending - The next snapshot is pending to be taken.

      - **NextMaintenanceWindowStartTime** *(datetime) --*

        The date and time in UTC when system maintenance can begin.

      - **ResizeInfo** *(dict) --*

        Returns the following:

        * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

        * ResizeType: Returns ClassicResize

        - **ResizeType** *(string) --*

          Returns the value ``ClassicResize`` .

        - **AllowCancelResize** *(boolean) --*

          A boolean value indicating if the resize operation can be cancelled.
    """


_ClusterAvailableWaitWaiterConfigTypeDef = TypedDict(
    "_ClusterAvailableWaitWaiterConfigTypeDef", {"Delay": int, "MaxAttempts": int}, total=False
)


class ClusterAvailableWaitWaiterConfigTypeDef(_ClusterAvailableWaitWaiterConfigTypeDef):
    """
    Type definition for `ClusterAvailableWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 60

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 30
    """


_ClusterDeletedWaitWaiterConfigTypeDef = TypedDict(
    "_ClusterDeletedWaitWaiterConfigTypeDef", {"Delay": int, "MaxAttempts": int}, total=False
)


class ClusterDeletedWaitWaiterConfigTypeDef(_ClusterDeletedWaitWaiterConfigTypeDef):
    """
    Type definition for `ClusterDeletedWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 60

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 30
    """


_ClusterRestoredWaitWaiterConfigTypeDef = TypedDict(
    "_ClusterRestoredWaitWaiterConfigTypeDef", {"Delay": int, "MaxAttempts": int}, total=False
)


class ClusterRestoredWaitWaiterConfigTypeDef(_ClusterRestoredWaitWaiterConfigTypeDef):
    """
    Type definition for `ClusterRestoredWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 60

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 30
    """


_DescribeClusterDbRevisionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterDbRevisionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterDbRevisionsPaginatePaginationConfigTypeDef(
    _DescribeClusterDbRevisionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterDbRevisionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsRevisionTargetsTypeDef = TypedDict(
    "_DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsRevisionTargetsTypeDef",
    {"DatabaseRevision": str, "Description": str, "DatabaseRevisionReleaseDate": datetime},
    total=False,
)


class DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsRevisionTargetsTypeDef(
    _DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsRevisionTargetsTypeDef
):
    """
    Type definition for `DescribeClusterDbRevisionsPaginateResponseClusterDbRevisions`
    `RevisionTargets`

    Describes a ``RevisionTarget`` .

    - **DatabaseRevision** *(string) --*

      A unique string that identifies the version to update the cluster to. You can use this value
      in  ModifyClusterDbRevision .

    - **Description** *(string) --*

      A string that describes the changes and features that will be applied to the cluster when it
      is updated to the corresponding  ClusterDbRevision .

    - **DatabaseRevisionReleaseDate** *(datetime) --*

      The date on which the database revision was released.
    """


_DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsTypeDef = TypedDict(
    "_DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsTypeDef",
    {
        "ClusterIdentifier": str,
        "CurrentDatabaseRevision": str,
        "DatabaseRevisionReleaseDate": datetime,
        "RevisionTargets": List[
            DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsRevisionTargetsTypeDef
        ],
    },
    total=False,
)


class DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsTypeDef(
    _DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsTypeDef
):
    """
    Type definition for `DescribeClusterDbRevisionsPaginateResponse` `ClusterDbRevisions`

    Describes a ``ClusterDbRevision`` .

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **CurrentDatabaseRevision** *(string) --*

      A string representing the current cluster version.

    - **DatabaseRevisionReleaseDate** *(datetime) --*

      The date on which the database revision was released.

    - **RevisionTargets** *(list) --*

      A list of ``RevisionTarget`` objects, where each object describes the database revision that a
      cluster can be updated to.

      - *(dict) --*

        Describes a ``RevisionTarget`` .

        - **DatabaseRevision** *(string) --*

          A unique string that identifies the version to update the cluster to. You can use this
          value in  ModifyClusterDbRevision .

        - **Description** *(string) --*

          A string that describes the changes and features that will be applied to the cluster when
          it is updated to the corresponding  ClusterDbRevision .

        - **DatabaseRevisionReleaseDate** *(datetime) --*

          The date on which the database revision was released.
    """


_DescribeClusterDbRevisionsPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterDbRevisionsPaginateResponseTypeDef",
    {
        "ClusterDbRevisions": List[
            DescribeClusterDbRevisionsPaginateResponseClusterDbRevisionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterDbRevisionsPaginateResponseTypeDef(
    _DescribeClusterDbRevisionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterDbRevisionsPaginate` `Response`

    - **ClusterDbRevisions** *(list) --*

      A list of revisions.

      - *(dict) --*

        Describes a ``ClusterDbRevision`` .

        - **ClusterIdentifier** *(string) --*

          The unique identifier of the cluster.

        - **CurrentDatabaseRevision** *(string) --*

          A string representing the current cluster version.

        - **DatabaseRevisionReleaseDate** *(datetime) --*

          The date on which the database revision was released.

        - **RevisionTargets** *(list) --*

          A list of ``RevisionTarget`` objects, where each object describes the database revision
          that a cluster can be updated to.

          - *(dict) --*

            Describes a ``RevisionTarget`` .

            - **DatabaseRevision** *(string) --*

              A unique string that identifies the version to update the cluster to. You can use this
              value in  ModifyClusterDbRevision .

            - **Description** *(string) --*

              A string that describes the changes and features that will be applied to the cluster
              when it is updated to the corresponding  ClusterDbRevision .

            - **DatabaseRevisionReleaseDate** *(datetime) --*

              The date on which the database revision was released.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClusterParameterGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterParameterGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterParameterGroupsPaginatePaginationConfigTypeDef(
    _DescribeClusterParameterGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterParameterGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterParameterGroupsPaginateResponseParameterGroupsTagsTypeDef = TypedDict(
    "_DescribeClusterParameterGroupsPaginateResponseParameterGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeClusterParameterGroupsPaginateResponseParameterGroupsTagsTypeDef(
    _DescribeClusterParameterGroupsPaginateResponseParameterGroupsTagsTypeDef
):
    """
    Type definition for `DescribeClusterParameterGroupsPaginateResponseParameterGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClusterParameterGroupsPaginateResponseParameterGroupsTypeDef = TypedDict(
    "_DescribeClusterParameterGroupsPaginateResponseParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterGroupFamily": str,
        "Description": str,
        "Tags": List[DescribeClusterParameterGroupsPaginateResponseParameterGroupsTagsTypeDef],
    },
    total=False,
)


class DescribeClusterParameterGroupsPaginateResponseParameterGroupsTypeDef(
    _DescribeClusterParameterGroupsPaginateResponseParameterGroupsTypeDef
):
    """
    Type definition for `DescribeClusterParameterGroupsPaginateResponse` `ParameterGroups`

    Describes a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family that this cluster parameter group is compatible
      with.

    - **Description** *(string) --*

      The description of the parameter group.

    - **Tags** *(list) --*

      The list of tags for the cluster parameter group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeClusterParameterGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterParameterGroupsPaginateResponseTypeDef",
    {
        "ParameterGroups": List[
            DescribeClusterParameterGroupsPaginateResponseParameterGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterParameterGroupsPaginateResponseTypeDef(
    _DescribeClusterParameterGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterParameterGroupsPaginate` `Response`

    Contains the output from the  DescribeClusterParameterGroups action.

    - **ParameterGroups** *(list) --*

      A list of  ClusterParameterGroup instances. Each instance describes one cluster parameter
      group.

      - *(dict) --*

        Describes a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterGroupFamily** *(string) --*

          The name of the cluster parameter group family that this cluster parameter group is
          compatible with.

        - **Description** *(string) --*

          The description of the parameter group.

        - **Tags** *(list) --*

          The list of tags for the cluster parameter group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClusterParametersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterParametersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterParametersPaginatePaginationConfigTypeDef(
    _DescribeClusterParametersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterParametersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterParametersPaginateResponseParametersTypeDef = TypedDict(
    "_DescribeClusterParametersPaginateResponseParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "DataType": str,
        "AllowedValues": str,
        "ApplyType": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
    },
    total=False,
)


class DescribeClusterParametersPaginateResponseParametersTypeDef(
    _DescribeClusterParametersPaginateResponseParametersTypeDef
):
    """
    Type definition for `DescribeClusterParametersPaginateResponse` `Parameters`

    Describes a parameter in a cluster parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterValue** *(string) --*

      The value of the parameter.

    - **Description** *(string) --*

      A description of the parameter.

    - **Source** *(string) --*

      The source of the parameter value, such as "engine-default" or "user".

    - **DataType** *(string) --*

      The data type of the parameter.

    - **AllowedValues** *(string) --*

      The valid range of values for the parameter.

    - **ApplyType** *(string) --*

      Specifies how to apply the WLM configuration parameter. Some properties can be applied
      dynamically, while other properties require that any associated clusters be rebooted for the
      configuration changes to be applied. For more information about parameters and parameter
      groups, go to `Amazon Redshift Parameter Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

    - **IsModifiable** *(boolean) --*

      If ``true`` , the parameter can be modified. Some parameters have security or operational
      implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.
    """


_DescribeClusterParametersPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterParametersPaginateResponseTypeDef",
    {
        "Parameters": List[DescribeClusterParametersPaginateResponseParametersTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterParametersPaginateResponseTypeDef(
    _DescribeClusterParametersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterParametersPaginate` `Response`

    Contains the output from the  DescribeClusterParameters action.

    - **Parameters** *(list) --*

      A list of  Parameter instances. Each instance lists the parameters of one cluster parameter
      group.

      - *(dict) --*

        Describes a parameter in a cluster parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterValue** *(string) --*

          The value of the parameter.

        - **Description** *(string) --*

          A description of the parameter.

        - **Source** *(string) --*

          The source of the parameter value, such as "engine-default" or "user".

        - **DataType** *(string) --*

          The data type of the parameter.

        - **AllowedValues** *(string) --*

          The valid range of values for the parameter.

        - **ApplyType** *(string) --*

          Specifies how to apply the WLM configuration parameter. Some properties can be applied
          dynamically, while other properties require that any associated clusters be rebooted for
          the configuration changes to be applied. For more information about parameters and
          parameter groups, go to `Amazon Redshift Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

        - **IsModifiable** *(boolean) --*

          If ``true`` , the parameter can be modified. Some parameters have security or operational
          implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClusterSecurityGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterSecurityGroupsPaginatePaginationConfigTypeDef(
    _DescribeClusterSecurityGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef
):
    """
    Type definition for
    `DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef",
    {
        "Status": str,
        "EC2SecurityGroupName": str,
        "EC2SecurityGroupOwnerId": str,
        "Tags": List[
            DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTagsTypeDef
        ],
    },
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroups`
    `EC2SecurityGroups`

    Describes an Amazon EC2 security group.

    - **Status** *(string) --*

      The status of the EC2 security group.

    - **EC2SecurityGroupName** *(string) --*

      The name of the EC2 Security Group.

    - **EC2SecurityGroupOwnerId** *(string) --*

      The AWS ID of the owner of the EC2 security group specified in the ``EC2SecurityGroupName``
      field.

    - **Tags** *(list) --*

      The list of tags for the EC2 security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTagsTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTagsTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTagsTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRanges`
    `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTypeDef",
    {
        "Status": str,
        "CIDRIP": str,
        "Tags": List[
            DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTagsTypeDef
        ],
    },
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroups`
    `IPRanges`

    Describes an IP range used in a security group.

    - **Status** *(string) --*

      The status of the IP range, for example, "authorized".

    - **CIDRIP** *(string) --*

      The IP range in Classless Inter-Domain Routing (CIDR) notation.

    - **Tags** *(list) --*

      The list of tags for the IP range.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTagsTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTagsTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTagsTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTypeDef",
    {
        "ClusterSecurityGroupName": str,
        "Description": str,
        "EC2SecurityGroups": List[
            DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsEC2SecurityGroupsTypeDef
        ],
        "IPRanges": List[
            DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsIPRangesTypeDef
        ],
        "Tags": List[DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTagsTypeDef],
    },
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginateResponse` `ClusterSecurityGroups`

    Describes a security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group to which the operation was applied.

    - **Description** *(string) --*

      A description of the security group.

    - **EC2SecurityGroups** *(list) --*

      A list of EC2 security groups that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an Amazon EC2 security group.

        - **Status** *(string) --*

          The status of the EC2 security group.

        - **EC2SecurityGroupName** *(string) --*

          The name of the EC2 Security Group.

        - **EC2SecurityGroupOwnerId** *(string) --*

          The AWS ID of the owner of the EC2 security group specified in the
          ``EC2SecurityGroupName`` field.

        - **Tags** *(list) --*

          The list of tags for the EC2 security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **IPRanges** *(list) --*

      A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with this
      cluster security group.

      - *(dict) --*

        Describes an IP range used in a security group.

        - **Status** *(string) --*

          The status of the IP range, for example, "authorized".

        - **CIDRIP** *(string) --*

          The IP range in Classless Inter-Domain Routing (CIDR) notation.

        - **Tags** *(list) --*

          The list of tags for the IP range.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **Tags** *(list) --*

      The list of tags for the cluster security group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeClusterSecurityGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterSecurityGroupsPaginateResponseTypeDef",
    {
        "ClusterSecurityGroups": List[
            DescribeClusterSecurityGroupsPaginateResponseClusterSecurityGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterSecurityGroupsPaginateResponseTypeDef(
    _DescribeClusterSecurityGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterSecurityGroupsPaginate` `Response`

    - **ClusterSecurityGroups** *(list) --*

      A list of  ClusterSecurityGroup instances.

      - *(dict) --*

        Describes a security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group to which the operation was applied.

        - **Description** *(string) --*

          A description of the security group.

        - **EC2SecurityGroups** *(list) --*

          A list of EC2 security groups that are permitted to access clusters associated with this
          cluster security group.

          - *(dict) --*

            Describes an Amazon EC2 security group.

            - **Status** *(string) --*

              The status of the EC2 security group.

            - **EC2SecurityGroupName** *(string) --*

              The name of the EC2 Security Group.

            - **EC2SecurityGroupOwnerId** *(string) --*

              The AWS ID of the owner of the EC2 security group specified in the
              ``EC2SecurityGroupName`` field.

            - **Tags** *(list) --*

              The list of tags for the EC2 security group.

              - *(dict) --*

                A tag consisting of a name/value pair for a resource.

                - **Key** *(string) --*

                  The key, or name, for the resource tag.

                - **Value** *(string) --*

                  The value for the resource tag.

        - **IPRanges** *(list) --*

          A list of IP ranges (CIDR blocks) that are permitted to access clusters associated with
          this cluster security group.

          - *(dict) --*

            Describes an IP range used in a security group.

            - **Status** *(string) --*

              The status of the IP range, for example, "authorized".

            - **CIDRIP** *(string) --*

              The IP range in Classless Inter-Domain Routing (CIDR) notation.

            - **Tags** *(list) --*

              The list of tags for the IP range.

              - *(dict) --*

                A tag consisting of a name/value pair for a resource.

                - **Key** *(string) --*

                  The key, or name, for the resource tag.

                - **Value** *(string) --*

                  The value for the resource tag.

        - **Tags** *(list) --*

          The list of tags for the cluster security group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClusterSnapshotsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterSnapshotsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterSnapshotsPaginatePaginationConfigTypeDef(
    _DescribeClusterSnapshotsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterSnapshotsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterSnapshotsPaginateResponseSnapshotsAccountsWithRestoreAccessTypeDef = TypedDict(
    "_DescribeClusterSnapshotsPaginateResponseSnapshotsAccountsWithRestoreAccessTypeDef",
    {"AccountId": str, "AccountAlias": str},
    total=False,
)


class DescribeClusterSnapshotsPaginateResponseSnapshotsAccountsWithRestoreAccessTypeDef(
    _DescribeClusterSnapshotsPaginateResponseSnapshotsAccountsWithRestoreAccessTypeDef
):
    """
    Type definition for `DescribeClusterSnapshotsPaginateResponseSnapshots`
    `AccountsWithRestoreAccess`

    Describes an AWS customer account authorized to restore a snapshot.

    - **AccountId** *(string) --*

      The identifier of an AWS customer account authorized to restore a snapshot.

    - **AccountAlias** *(string) --*

      The identifier of an AWS support account authorized to restore a snapshot. For AWS support,
      the identifier is ``amazon-redshift-support`` .
    """


_DescribeClusterSnapshotsPaginateResponseSnapshotsTagsTypeDef = TypedDict(
    "_DescribeClusterSnapshotsPaginateResponseSnapshotsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeClusterSnapshotsPaginateResponseSnapshotsTagsTypeDef(
    _DescribeClusterSnapshotsPaginateResponseSnapshotsTagsTypeDef
):
    """
    Type definition for `DescribeClusterSnapshotsPaginateResponseSnapshots` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClusterSnapshotsPaginateResponseSnapshotsTypeDef = TypedDict(
    "_DescribeClusterSnapshotsPaginateResponseSnapshotsTypeDef",
    {
        "SnapshotIdentifier": str,
        "ClusterIdentifier": str,
        "SnapshotCreateTime": datetime,
        "Status": str,
        "Port": int,
        "AvailabilityZone": str,
        "ClusterCreateTime": datetime,
        "MasterUsername": str,
        "ClusterVersion": str,
        "SnapshotType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "DBName": str,
        "VpcId": str,
        "Encrypted": bool,
        "KmsKeyId": str,
        "EncryptedWithHSM": bool,
        "AccountsWithRestoreAccess": List[
            DescribeClusterSnapshotsPaginateResponseSnapshotsAccountsWithRestoreAccessTypeDef
        ],
        "OwnerAccount": str,
        "TotalBackupSizeInMegaBytes": float,
        "ActualIncrementalBackupSizeInMegaBytes": float,
        "BackupProgressInMegaBytes": float,
        "CurrentBackupRateInMegaBytesPerSecond": float,
        "EstimatedSecondsToCompletion": int,
        "ElapsedTimeInSeconds": int,
        "SourceRegion": str,
        "Tags": List[DescribeClusterSnapshotsPaginateResponseSnapshotsTagsTypeDef],
        "RestorableNodeTypes": List[str],
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "ManualSnapshotRetentionPeriod": int,
        "ManualSnapshotRemainingDays": int,
        "SnapshotRetentionStartTime": datetime,
    },
    total=False,
)


class DescribeClusterSnapshotsPaginateResponseSnapshotsTypeDef(
    _DescribeClusterSnapshotsPaginateResponseSnapshotsTypeDef
):
    """
    Type definition for `DescribeClusterSnapshotsPaginateResponse` `Snapshots`

    Describes a snapshot.

    - **SnapshotIdentifier** *(string) --*

      The snapshot identifier that is provided in the request.

    - **ClusterIdentifier** *(string) --*

      The identifier of the cluster for which the snapshot was taken.

    - **SnapshotCreateTime** *(datetime) --*

      The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a copy
      of the cluster data as of this exact time.

    - **Status** *(string) --*

      The snapshot status. The value of the status depends on the API operation used:

      *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

      *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot", or
      "failed".

      *  DeleteClusterSnapshot returns status as "deleted".

    - **Port** *(integer) --*

      The port that the cluster is listening on.

    - **AvailabilityZone** *(string) --*

      The Availability Zone in which the cluster was created.

    - **ClusterCreateTime** *(datetime) --*

      The time (UTC) when the cluster was originally created.

    - **MasterUsername** *(string) --*

      The master user name for the cluster.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **SnapshotType** *(string) --*

      The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot are
      of type "manual".

    - **NodeType** *(string) --*

      The node type of the nodes in the cluster.

    - **NumberOfNodes** *(integer) --*

      The number of nodes in the cluster.

    - **DBName** *(string) --*

      The name of the database that was created when the cluster was created.

    - **VpcId** *(string) --*

      The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise, this
      field is not in the output.

    - **Encrypted** *(boolean) --*

      If ``true`` , the data in the snapshot is encrypted at rest.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
      data in the cluster from which the snapshot was taken.

    - **EncryptedWithHSM** *(boolean) --*

      A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
      source cluster. ``true`` indicates that the data is encrypted using HSM keys.

    - **AccountsWithRestoreAccess** *(list) --*

      A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null`` if no
      accounts are authorized. Visible only to the snapshot owner.

      - *(dict) --*

        Describes an AWS customer account authorized to restore a snapshot.

        - **AccountId** *(string) --*

          The identifier of an AWS customer account authorized to restore a snapshot.

        - **AccountAlias** *(string) --*

          The identifier of an AWS support account authorized to restore a snapshot. For AWS
          support, the identifier is ``amazon-redshift-support`` .

    - **OwnerAccount** *(string) --*

      For manual snapshots, the AWS customer account used to create or copy the snapshot. For
      automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
      such as sharing a manual snapshot.

    - **TotalBackupSizeInMegaBytes** *(float) --*

      The size of the complete set of backup data that would be used to restore the cluster.

    - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

      The size of the incremental backup.

    - **BackupProgressInMegaBytes** *(float) --*

      The number of megabytes that have been transferred to the snapshot backup.

    - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred to the snapshot backup. Returns ``0`` for
      a completed backup.

    - **EstimatedSecondsToCompletion** *(integer) --*

      The estimate of the time remaining before the snapshot backup will complete. Returns ``0`` for
      a completed backup.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress snapshot backup has been running, or the amount of time it
      took a completed backup to finish.

    - **SourceRegion** *(string) --*

      The source region from which the snapshot was copied.

    - **Tags** *(list) --*

      The list of tags for the cluster snapshot.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **RestorableNodeTypes** *(list) --*

      The list of node types that this cluster snapshot is able to restore into.

      - *(string) --*

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the snapshot.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot
      is retained indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ManualSnapshotRemainingDays** *(integer) --*

      The number of days until a manual snapshot will pass its retention period.

    - **SnapshotRetentionStartTime** *(datetime) --*

      A timestamp representing the start of the retention period for the snapshot.
    """


_DescribeClusterSnapshotsPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterSnapshotsPaginateResponseTypeDef",
    {"Snapshots": List[DescribeClusterSnapshotsPaginateResponseSnapshotsTypeDef], "NextToken": str},
    total=False,
)


class DescribeClusterSnapshotsPaginateResponseTypeDef(
    _DescribeClusterSnapshotsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterSnapshotsPaginate` `Response`

    Contains the output from the  DescribeClusterSnapshots action.

    - **Snapshots** *(list) --*

      A list of  Snapshot instances.

      - *(dict) --*

        Describes a snapshot.

        - **SnapshotIdentifier** *(string) --*

          The snapshot identifier that is provided in the request.

        - **ClusterIdentifier** *(string) --*

          The identifier of the cluster for which the snapshot was taken.

        - **SnapshotCreateTime** *(datetime) --*

          The time (in UTC format) when Amazon Redshift began the snapshot. A snapshot contains a
          copy of the cluster data as of this exact time.

        - **Status** *(string) --*

          The snapshot status. The value of the status depends on the API operation used:

          *  CreateClusterSnapshot and  CopyClusterSnapshot returns status as "creating".

          *  DescribeClusterSnapshots returns status as "creating", "available", "final snapshot",
          or "failed".

          *  DeleteClusterSnapshot returns status as "deleted".

        - **Port** *(integer) --*

          The port that the cluster is listening on.

        - **AvailabilityZone** *(string) --*

          The Availability Zone in which the cluster was created.

        - **ClusterCreateTime** *(datetime) --*

          The time (UTC) when the cluster was originally created.

        - **MasterUsername** *(string) --*

          The master user name for the cluster.

        - **ClusterVersion** *(string) --*

          The version ID of the Amazon Redshift engine that is running on the cluster.

        - **SnapshotType** *(string) --*

          The snapshot type. Snapshots created using  CreateClusterSnapshot and  CopyClusterSnapshot
          are of type "manual".

        - **NodeType** *(string) --*

          The node type of the nodes in the cluster.

        - **NumberOfNodes** *(integer) --*

          The number of nodes in the cluster.

        - **DBName** *(string) --*

          The name of the database that was created when the cluster was created.

        - **VpcId** *(string) --*

          The VPC identifier of the cluster if the snapshot is from a cluster in a VPC. Otherwise,
          this field is not in the output.

        - **Encrypted** *(boolean) --*

          If ``true`` , the data in the snapshot is encrypted at rest.

        - **KmsKeyId** *(string) --*

          The AWS Key Management Service (KMS) key ID of the encryption key that was used to encrypt
          data in the cluster from which the snapshot was taken.

        - **EncryptedWithHSM** *(boolean) --*

          A boolean that indicates whether the snapshot data is encrypted using the HSM keys of the
          source cluster. ``true`` indicates that the data is encrypted using HSM keys.

        - **AccountsWithRestoreAccess** *(list) --*

          A list of the AWS customer accounts authorized to restore the snapshot. Returns ``null``
          if no accounts are authorized. Visible only to the snapshot owner.

          - *(dict) --*

            Describes an AWS customer account authorized to restore a snapshot.

            - **AccountId** *(string) --*

              The identifier of an AWS customer account authorized to restore a snapshot.

            - **AccountAlias** *(string) --*

              The identifier of an AWS support account authorized to restore a snapshot. For AWS
              support, the identifier is ``amazon-redshift-support`` .

        - **OwnerAccount** *(string) --*

          For manual snapshots, the AWS customer account used to create or copy the snapshot. For
          automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions,
          such as sharing a manual snapshot.

        - **TotalBackupSizeInMegaBytes** *(float) --*

          The size of the complete set of backup data that would be used to restore the cluster.

        - **ActualIncrementalBackupSizeInMegaBytes** *(float) --*

          The size of the incremental backup.

        - **BackupProgressInMegaBytes** *(float) --*

          The number of megabytes that have been transferred to the snapshot backup.

        - **CurrentBackupRateInMegaBytesPerSecond** *(float) --*

          The number of megabytes per second being transferred to the snapshot backup. Returns ``0``
          for a completed backup.

        - **EstimatedSecondsToCompletion** *(integer) --*

          The estimate of the time remaining before the snapshot backup will complete. Returns ``0``
          for a completed backup.

        - **ElapsedTimeInSeconds** *(integer) --*

          The amount of time an in-progress snapshot backup has been running, or the amount of time
          it took a completed backup to finish.

        - **SourceRegion** *(string) --*

          The source region from which the snapshot was copied.

        - **Tags** *(list) --*

          The list of tags for the cluster snapshot.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

        - **RestorableNodeTypes** *(list) --*

          The list of node types that this cluster snapshot is able to restore into.

          - *(string) --*

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track for the snapshot.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The number of days that a manual snapshot is retained. If the value is -1, the manual
          snapshot is retained indefinitely.

          The value must be either -1 or an integer between 1 and 3,653.

        - **ManualSnapshotRemainingDays** *(integer) --*

          The number of days until a manual snapshot will pass its retention period.

        - **SnapshotRetentionStartTime** *(datetime) --*

          A timestamp representing the start of the retention period for the snapshot.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_RequiredDescribeClusterSnapshotsPaginateSortingEntitiesTypeDef = TypedDict(
    "_RequiredDescribeClusterSnapshotsPaginateSortingEntitiesTypeDef", {"Attribute": str}
)
_OptionalDescribeClusterSnapshotsPaginateSortingEntitiesTypeDef = TypedDict(
    "_OptionalDescribeClusterSnapshotsPaginateSortingEntitiesTypeDef",
    {"SortOrder": str},
    total=False,
)


class DescribeClusterSnapshotsPaginateSortingEntitiesTypeDef(
    _RequiredDescribeClusterSnapshotsPaginateSortingEntitiesTypeDef,
    _OptionalDescribeClusterSnapshotsPaginateSortingEntitiesTypeDef,
):
    """
    Type definition for `DescribeClusterSnapshotsPaginate` `SortingEntities`

    Describes a sorting entity

    - **Attribute** *(string) --* **[REQUIRED]**

      The category for sorting the snapshots.

    - **SortOrder** *(string) --*

      The order for listing the attributes.
    """


_DescribeClusterSubnetGroupsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterSubnetGroupsPaginatePaginationConfigTypeDef(
    _DescribeClusterSubnetGroupsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterSubnetGroupsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef",
    {"Name": str},
    total=False,
)


class DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef(
    _DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
):
    """
    Type definition for
    `DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZone`
    `SupportedPlatforms`

    A list of supported platforms for orderable clusters.

    - **Name** *(string) --*
    """


_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef",
    {
        "Name": str,
        "SupportedPlatforms": List[
            DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneSupportedPlatformsTypeDef
        ],
    },
    total=False,
)


class DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef(
    _DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef
):
    """
    Type definition for `DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnets`
    `SubnetAvailabilityZone`

    - **Name** *(string) --*

      The name of the availability zone.

    - **SupportedPlatforms** *(list) --*

      - *(dict) --*

        A list of supported platforms for orderable clusters.

        - **Name** *(string) --*
    """


_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsTypeDef",
    {
        "SubnetIdentifier": str,
        "SubnetAvailabilityZone": DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsSubnetAvailabilityZoneTypeDef,
        "SubnetStatus": str,
    },
    total=False,
)


class DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsTypeDef(
    _DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsTypeDef
):
    """
    Type definition for `DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroups` `Subnets`

    Describes a subnet.

    - **SubnetIdentifier** *(string) --*

      The identifier of the subnet.

    - **SubnetAvailabilityZone** *(dict) --*

      - **Name** *(string) --*

        The name of the availability zone.

      - **SupportedPlatforms** *(list) --*

        - *(dict) --*

          A list of supported platforms for orderable clusters.

          - **Name** *(string) --*

    - **SubnetStatus** *(string) --*

      The status of the subnet.
    """


_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTagsTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTagsTypeDef(
    _DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTagsTypeDef
):
    """
    Type definition for `DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroups` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTypeDef",
    {
        "ClusterSubnetGroupName": str,
        "Description": str,
        "VpcId": str,
        "SubnetGroupStatus": str,
        "Subnets": List[
            DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsSubnetsTypeDef
        ],
        "Tags": List[DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTagsTypeDef],
    },
    total=False,
)


class DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTypeDef(
    _DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTypeDef
):
    """
    Type definition for `DescribeClusterSubnetGroupsPaginateResponse` `ClusterSubnetGroups`

    Describes a subnet group.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the cluster subnet group.

    - **Description** *(string) --*

      The description of the cluster subnet group.

    - **VpcId** *(string) --*

      The VPC ID of the cluster subnet group.

    - **SubnetGroupStatus** *(string) --*

      The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete`` and
      ``Invalid`` .

    - **Subnets** *(list) --*

      A list of the VPC  Subnet elements.

      - *(dict) --*

        Describes a subnet.

        - **SubnetIdentifier** *(string) --*

          The identifier of the subnet.

        - **SubnetAvailabilityZone** *(dict) --*

          - **Name** *(string) --*

            The name of the availability zone.

          - **SupportedPlatforms** *(list) --*

            - *(dict) --*

              A list of supported platforms for orderable clusters.

              - **Name** *(string) --*

        - **SubnetStatus** *(string) --*

          The status of the subnet.

    - **Tags** *(list) --*

      The list of tags for the cluster subnet group.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeClusterSubnetGroupsPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterSubnetGroupsPaginateResponseTypeDef",
    {
        "ClusterSubnetGroups": List[
            DescribeClusterSubnetGroupsPaginateResponseClusterSubnetGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterSubnetGroupsPaginateResponseTypeDef(
    _DescribeClusterSubnetGroupsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterSubnetGroupsPaginate` `Response`

    Contains the output from the  DescribeClusterSubnetGroups action.

    - **ClusterSubnetGroups** *(list) --*

      A list of  ClusterSubnetGroup instances.

      - *(dict) --*

        Describes a subnet group.

        - **ClusterSubnetGroupName** *(string) --*

          The name of the cluster subnet group.

        - **Description** *(string) --*

          The description of the cluster subnet group.

        - **VpcId** *(string) --*

          The VPC ID of the cluster subnet group.

        - **SubnetGroupStatus** *(string) --*

          The status of the cluster subnet group. Possible values are ``Complete`` , ``Incomplete``
          and ``Invalid`` .

        - **Subnets** *(list) --*

          A list of the VPC  Subnet elements.

          - *(dict) --*

            Describes a subnet.

            - **SubnetIdentifier** *(string) --*

              The identifier of the subnet.

            - **SubnetAvailabilityZone** *(dict) --*

              - **Name** *(string) --*

                The name of the availability zone.

              - **SupportedPlatforms** *(list) --*

                - *(dict) --*

                  A list of supported platforms for orderable clusters.

                  - **Name** *(string) --*

            - **SubnetStatus** *(string) --*

              The status of the subnet.

        - **Tags** *(list) --*

          The list of tags for the cluster subnet group.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClusterTracksPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterTracksPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterTracksPaginatePaginationConfigTypeDef(
    _DescribeClusterTracksPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterTracksPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef = TypedDict(
    "_DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef",
    {"OperationName": str},
    total=False,
)


class DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef(
    _DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef
):
    """
    Type definition for `DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargets`
    `SupportedOperations`

    Describes the operations that are allowed on a maintenance track.

    - **OperationName** *(string) --*

      A list of the supported operations.
    """


_DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsTypeDef = TypedDict(
    "_DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsTypeDef",
    {
        "MaintenanceTrackName": str,
        "DatabaseVersion": str,
        "SupportedOperations": List[
            DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsSupportedOperationsTypeDef
        ],
    },
    total=False,
)


class DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsTypeDef(
    _DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsTypeDef
):
    """
    Type definition for `DescribeClusterTracksPaginateResponseMaintenanceTracks` `UpdateTargets`

    A maintenance track that you can switch the current track to.

    - **MaintenanceTrackName** *(string) --*

      The name of the new maintenance track.

    - **DatabaseVersion** *(string) --*

      The cluster version for the new maintenance track.

    - **SupportedOperations** *(list) --*

      A list of operations supported by the maintenance track.

      - *(dict) --*

        Describes the operations that are allowed on a maintenance track.

        - **OperationName** *(string) --*

          A list of the supported operations.
    """


_DescribeClusterTracksPaginateResponseMaintenanceTracksTypeDef = TypedDict(
    "_DescribeClusterTracksPaginateResponseMaintenanceTracksTypeDef",
    {
        "MaintenanceTrackName": str,
        "DatabaseVersion": str,
        "UpdateTargets": List[
            DescribeClusterTracksPaginateResponseMaintenanceTracksUpdateTargetsTypeDef
        ],
    },
    total=False,
)


class DescribeClusterTracksPaginateResponseMaintenanceTracksTypeDef(
    _DescribeClusterTracksPaginateResponseMaintenanceTracksTypeDef
):
    """
    Type definition for `DescribeClusterTracksPaginateResponse` `MaintenanceTracks`

    Defines a maintenance track that determines which Amazon Redshift version to apply during a
    maintenance window. If the value for ``MaintenanceTrack`` is ``current`` , the cluster is
    updated to the most recently certified maintenance release. If the value is ``trailing`` , the
    cluster is updated to the previously certified maintenance release.

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track. Possible values are ``current`` and ``trailing`` .

    - **DatabaseVersion** *(string) --*

      The version number for the cluster release.

    - **UpdateTargets** *(list) --*

      An array of  UpdateTarget objects to update with the maintenance track.

      - *(dict) --*

        A maintenance track that you can switch the current track to.

        - **MaintenanceTrackName** *(string) --*

          The name of the new maintenance track.

        - **DatabaseVersion** *(string) --*

          The cluster version for the new maintenance track.

        - **SupportedOperations** *(list) --*

          A list of operations supported by the maintenance track.

          - *(dict) --*

            Describes the operations that are allowed on a maintenance track.

            - **OperationName** *(string) --*

              A list of the supported operations.
    """


_DescribeClusterTracksPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterTracksPaginateResponseTypeDef",
    {
        "MaintenanceTracks": List[DescribeClusterTracksPaginateResponseMaintenanceTracksTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterTracksPaginateResponseTypeDef(_DescribeClusterTracksPaginateResponseTypeDef):
    """
    Type definition for `DescribeClusterTracksPaginate` `Response`

    - **MaintenanceTracks** *(list) --*

      A list of maintenance tracks output by the ``DescribeClusterTracks`` operation.

      - *(dict) --*

        Defines a maintenance track that determines which Amazon Redshift version to apply during a
        maintenance window. If the value for ``MaintenanceTrack`` is ``current`` , the cluster is
        updated to the most recently certified maintenance release. If the value is ``trailing`` ,
        the cluster is updated to the previously certified maintenance release.

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track. Possible values are ``current`` and ``trailing`` .

        - **DatabaseVersion** *(string) --*

          The version number for the cluster release.

        - **UpdateTargets** *(list) --*

          An array of  UpdateTarget objects to update with the maintenance track.

          - *(dict) --*

            A maintenance track that you can switch the current track to.

            - **MaintenanceTrackName** *(string) --*

              The name of the new maintenance track.

            - **DatabaseVersion** *(string) --*

              The cluster version for the new maintenance track.

            - **SupportedOperations** *(list) --*

              A list of operations supported by the maintenance track.

              - *(dict) --*

                Describes the operations that are allowed on a maintenance track.

                - **OperationName** *(string) --*

                  A list of the supported operations.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClusterVersionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClusterVersionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClusterVersionsPaginatePaginationConfigTypeDef(
    _DescribeClusterVersionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClusterVersionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClusterVersionsPaginateResponseClusterVersionsTypeDef = TypedDict(
    "_DescribeClusterVersionsPaginateResponseClusterVersionsTypeDef",
    {"ClusterVersion": str, "ClusterParameterGroupFamily": str, "Description": str},
    total=False,
)


class DescribeClusterVersionsPaginateResponseClusterVersionsTypeDef(
    _DescribeClusterVersionsPaginateResponseClusterVersionsTypeDef
):
    """
    Type definition for `DescribeClusterVersionsPaginateResponse` `ClusterVersions`

    Describes a cluster version, including the parameter group family and description of the
    version.

    - **ClusterVersion** *(string) --*

      The version number used by the cluster.

    - **ClusterParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family for the cluster.

    - **Description** *(string) --*

      The description of the cluster version.
    """


_DescribeClusterVersionsPaginateResponseTypeDef = TypedDict(
    "_DescribeClusterVersionsPaginateResponseTypeDef",
    {
        "ClusterVersions": List[DescribeClusterVersionsPaginateResponseClusterVersionsTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeClusterVersionsPaginateResponseTypeDef(
    _DescribeClusterVersionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeClusterVersionsPaginate` `Response`

    Contains the output from the  DescribeClusterVersions action.

    - **ClusterVersions** *(list) --*

      A list of ``Version`` elements.

      - *(dict) --*

        Describes a cluster version, including the parameter group family and description of the
        version.

        - **ClusterVersion** *(string) --*

          The version number used by the cluster.

        - **ClusterParameterGroupFamily** *(string) --*

          The name of the cluster parameter group family for the cluster.

        - **Description** *(string) --*

          The description of the cluster version.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeClustersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeClustersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeClustersPaginatePaginationConfigTypeDef(
    _DescribeClustersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeClustersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeClustersPaginateResponseClustersClusterNodesTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersClusterNodesTypeDef",
    {"NodeRole": str, "PrivateIPAddress": str, "PublicIPAddress": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersClusterNodesTypeDef(
    _DescribeClustersPaginateResponseClustersClusterNodesTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `ClusterNodes`

    The identifier of a node in a cluster.

    - **NodeRole** *(string) --*

      Whether the node is a leader node or a compute node.

    - **PrivateIPAddress** *(string) --*

      The private IP address of a node within a cluster.

    - **PublicIPAddress** *(string) --*

      The public IP address of a node within a cluster.
    """


_DescribeClustersPaginateResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef",
    {"ParameterName": str, "ParameterApplyStatus": str, "ParameterApplyErrorDescription": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef(
    _DescribeClustersPaginateResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClustersClusterParameterGroups`
    `ClusterParameterStatusList`

    Describes the status of a parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterApplyStatus** *(string) --*

      The status of the parameter that indicates whether the parameter is in sync with the database,
      waiting for a cluster reboot, or encountered an error when being applied.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The parameter value is in sync with the database.

      * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

      * ``applying`` : The parameter value is being applied to the database.

      * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value or
      syntax.

      * ``apply-deferred`` : The parameter contains static property changes. The changes are
      deferred until the cluster reboots.

      * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied after
      the cluster reboots.

      * ``unknown-error`` : Cannot apply the parameter change right now. The change will be applied
      after the cluster reboots.

    - **ParameterApplyErrorDescription** *(string) --*

      The error that prevented the parameter from being applied to the database.
    """


_DescribeClustersPaginateResponseClustersClusterParameterGroupsTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersClusterParameterGroupsTypeDef",
    {
        "ParameterGroupName": str,
        "ParameterApplyStatus": str,
        "ClusterParameterStatusList": List[
            DescribeClustersPaginateResponseClustersClusterParameterGroupsClusterParameterStatusListTypeDef
        ],
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersClusterParameterGroupsTypeDef(
    _DescribeClustersPaginateResponseClustersClusterParameterGroupsTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `ClusterParameterGroups`

    Describes the status of a parameter group.

    - **ParameterGroupName** *(string) --*

      The name of the cluster parameter group.

    - **ParameterApplyStatus** *(string) --*

      The status of parameter updates.

    - **ClusterParameterStatusList** *(list) --*

      The list of parameter statuses.

      For more information about parameters and parameter groups, go to `Amazon Redshift Parameter
      Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterApplyStatus** *(string) --*

          The status of the parameter that indicates whether the parameter is in sync with the
          database, waiting for a cluster reboot, or encountered an error when being applied.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The parameter value is in sync with the database.

          * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

          * ``applying`` : The parameter value is being applied to the database.

          * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid value
          or syntax.

          * ``apply-deferred`` : The parameter contains static property changes. The changes are
          deferred until the cluster reboots.

          * ``apply-error`` : Cannot connect to the cluster. The parameter change will be applied
          after the cluster reboots.

          * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
          applied after the cluster reboots.

        - **ParameterApplyErrorDescription** *(string) --*

          The error that prevented the parameter from being applied to the database.
    """


_DescribeClustersPaginateResponseClustersClusterSecurityGroupsTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersClusterSecurityGroupsTypeDef",
    {"ClusterSecurityGroupName": str, "Status": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersClusterSecurityGroupsTypeDef(
    _DescribeClustersPaginateResponseClustersClusterSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `ClusterSecurityGroups`

    Describes a cluster security group.

    - **ClusterSecurityGroupName** *(string) --*

      The name of the cluster security group.

    - **Status** *(string) --*

      The status of the cluster security group.
    """


_DescribeClustersPaginateResponseClustersClusterSnapshotCopyStatusTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersClusterSnapshotCopyStatusTypeDef",
    {
        "DestinationRegion": str,
        "RetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "SnapshotCopyGrantName": str,
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersClusterSnapshotCopyStatusTypeDef(
    _DescribeClustersPaginateResponseClustersClusterSnapshotCopyStatusTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `ClusterSnapshotCopyStatus`

    A value that returns the destination region and retention period that are configured for
    cross-region snapshot copy.

    - **DestinationRegion** *(string) --*

      The destination region that snapshots are automatically copied to when cross-region snapshot
      copy is enabled.

    - **RetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The number of days that automated snapshots are retained in the destination region after they
      are copied from a source region. If the value is -1, the manual snapshot is retained
      indefinitely.

      The value must be either -1 or an integer between 1 and 3,653.

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.
    """


_DescribeClustersPaginateResponseClustersDataTransferProgressTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersDataTransferProgressTypeDef",
    {
        "Status": str,
        "CurrentRateInMegaBytesPerSecond": float,
        "TotalDataInMegaBytes": int,
        "DataTransferredInMegaBytes": int,
        "EstimatedTimeToCompletionInSeconds": int,
        "ElapsedTimeInSeconds": int,
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersDataTransferProgressTypeDef(
    _DescribeClustersPaginateResponseClustersDataTransferProgressTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `DataTransferProgress`

    - **Status** *(string) --*

      Describes the status of the cluster. While the transfer is in progress the status is
      ``transferringdata`` .

    - **CurrentRateInMegaBytesPerSecond** *(float) --*

      Describes the data transfer rate in MB's per second.

    - **TotalDataInMegaBytes** *(integer) --*

      Describes the total amount of data to be transfered in megabytes.

    - **DataTransferredInMegaBytes** *(integer) --*

      Describes the total amount of data that has been transfered in MB's.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      Describes the estimated number of seconds remaining to complete the transfer.

    - **ElapsedTimeInSeconds** *(integer) --*

      Describes the number of seconds that have elapsed during the data transfer.
    """


_DescribeClustersPaginateResponseClustersDeferredMaintenanceWindowsTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersDeferredMaintenanceWindowsTypeDef",
    {
        "DeferMaintenanceIdentifier": str,
        "DeferMaintenanceStartTime": datetime,
        "DeferMaintenanceEndTime": datetime,
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersDeferredMaintenanceWindowsTypeDef(
    _DescribeClustersPaginateResponseClustersDeferredMaintenanceWindowsTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `DeferredMaintenanceWindows`

    Describes a deferred maintenance window

    - **DeferMaintenanceIdentifier** *(string) --*

      A unique identifier for the maintenance window.

    - **DeferMaintenanceStartTime** *(datetime) --*

      A timestamp for the beginning of the time period when we defer maintenance.

    - **DeferMaintenanceEndTime** *(datetime) --*

      A timestamp for the end of the time period when we defer maintenance.
    """


_DescribeClustersPaginateResponseClustersElasticIpStatusTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersElasticIpStatusTypeDef",
    {"ElasticIp": str, "Status": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersElasticIpStatusTypeDef(
    _DescribeClustersPaginateResponseClustersElasticIpStatusTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `ElasticIpStatus`

    The status of the elastic IP (EIP) address.

    - **ElasticIp** *(string) --*

      The elastic IP (EIP) address for the cluster.

    - **Status** *(string) --*

      The status of the elastic IP (EIP) address.
    """


_DescribeClustersPaginateResponseClustersEndpointTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersEndpointTypeDef",
    {"Address": str, "Port": int},
    total=False,
)


class DescribeClustersPaginateResponseClustersEndpointTypeDef(
    _DescribeClustersPaginateResponseClustersEndpointTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `Endpoint`

    The connection endpoint.

    - **Address** *(string) --*

      The DNS address of the Cluster.

    - **Port** *(integer) --*

      The port that the database engine is listening on.
    """


_DescribeClustersPaginateResponseClustersHsmStatusTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersHsmStatusTypeDef",
    {"HsmClientCertificateIdentifier": str, "HsmConfigurationIdentifier": str, "Status": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersHsmStatusTypeDef(
    _DescribeClustersPaginateResponseClustersHsmStatusTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `HsmStatus`

    A value that reports whether the Amazon Redshift cluster has finished applying any hardware
    security module (HSM) settings changes specified in a modify cluster command.

    Values: active, applying

    - **HsmClientCertificateIdentifier** *(string) --*

      Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve
      the data encryption keys stored in an HSM.

    - **HsmConfigurationIdentifier** *(string) --*

      Specifies the name of the HSM configuration that contains the information the Amazon Redshift
      cluster can use to retrieve and store keys in an HSM.

    - **Status** *(string) --*

      Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
      specified in a modify cluster command.

      Values: active, applying
    """


_DescribeClustersPaginateResponseClustersIamRolesTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersIamRolesTypeDef",
    {"IamRoleArn": str, "ApplyStatus": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersIamRolesTypeDef(
    _DescribeClustersPaginateResponseClustersIamRolesTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `IamRoles`

    An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
    Redshift cluster to access other AWS services.

    - **IamRoleArn** *(string) --*

      The Amazon Resource Name (ARN) of the IAM role, for example,
      ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

    - **ApplyStatus** *(string) --*

      A value that describes the status of the IAM role's association with an Amazon Redshift
      cluster.

      The following are possible statuses and descriptions.

      * ``in-sync`` : The role is available for use by the cluster.

      * ``adding`` : The role is in the process of being associated with the cluster.

      * ``removing`` : The role is in the process of being disassociated with the cluster.
    """


_DescribeClustersPaginateResponseClustersPendingModifiedValuesTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersPendingModifiedValuesTypeDef",
    {
        "MasterUserPassword": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "ClusterType": str,
        "ClusterVersion": str,
        "AutomatedSnapshotRetentionPeriod": int,
        "ClusterIdentifier": str,
        "PubliclyAccessible": bool,
        "EnhancedVpcRouting": bool,
        "MaintenanceTrackName": str,
        "EncryptionType": str,
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersPendingModifiedValuesTypeDef(
    _DescribeClustersPaginateResponseClustersPendingModifiedValuesTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `PendingModifiedValues`

    A value that, if present, indicates that changes to the cluster are pending. Specific pending
    changes are identified by subelements.

    - **MasterUserPassword** *(string) --*

      The pending or in-progress change of the master user password for the cluster.

    - **NodeType** *(string) --*

      The pending or in-progress change of the cluster's node type.

    - **NumberOfNodes** *(integer) --*

      The pending or in-progress change of the number of nodes in the cluster.

    - **ClusterType** *(string) --*

      The pending or in-progress change of the cluster type.

    - **ClusterVersion** *(string) --*

      The pending or in-progress change of the service version.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The pending or in-progress change of the automated snapshot retention period.

    - **ClusterIdentifier** *(string) --*

      The pending or in-progress change of the new identifier for the cluster.

    - **PubliclyAccessible** *(boolean) --*

      The pending or in-progress change of the ability to connect to the cluster from the public
      network.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track that the cluster will change to during the next maintenance
      window.

    - **EncryptionType** *(string) --*

      The encryption type for a cluster. Possible values are: KMS and None. For the China region the
      possible values are None, and Legacy.
    """


_DescribeClustersPaginateResponseClustersResizeInfoTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersResizeInfoTypeDef",
    {"ResizeType": str, "AllowCancelResize": bool},
    total=False,
)


class DescribeClustersPaginateResponseClustersResizeInfoTypeDef(
    _DescribeClustersPaginateResponseClustersResizeInfoTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `ResizeInfo`

    Returns the following:

    * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

    * ResizeType: Returns ClassicResize

    - **ResizeType** *(string) --*

      Returns the value ``ClassicResize`` .

    - **AllowCancelResize** *(boolean) --*

      A boolean value indicating if the resize operation can be cancelled.
    """


_DescribeClustersPaginateResponseClustersRestoreStatusTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersRestoreStatusTypeDef",
    {
        "Status": str,
        "CurrentRestoreRateInMegaBytesPerSecond": float,
        "SnapshotSizeInMegaBytes": int,
        "ProgressInMegaBytes": int,
        "ElapsedTimeInSeconds": int,
        "EstimatedTimeToCompletionInSeconds": int,
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersRestoreStatusTypeDef(
    _DescribeClustersPaginateResponseClustersRestoreStatusTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `RestoreStatus`

    A value that describes the status of a cluster restore action. This parameter returns null if
    the cluster was not created by restoring a snapshot.

    - **Status** *(string) --*

      The status of the restore action. Returns starting, restoring, completed, or failed.

    - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

      The number of megabytes per second being transferred from the backup storage. Returns the
      average rate for a completed backup. This field is only updated when you restore to DC2 and
      DS2 node types.

    - **SnapshotSizeInMegaBytes** *(integer) --*

      The size of the set of snapshot data used to restore the cluster. This field is only updated
      when you restore to DC2 and DS2 node types.

    - **ProgressInMegaBytes** *(integer) --*

      The number of megabytes that have been transferred from snapshot storage. This field is only
      updated when you restore to DC2 and DS2 node types.

    - **ElapsedTimeInSeconds** *(integer) --*

      The amount of time an in-progress restore has been running, or the amount of time it took a
      completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
      types.

    - **EstimatedTimeToCompletionInSeconds** *(integer) --*

      The estimate of the time remaining before the restore will complete. Returns 0 for a completed
      restore. This field is only updated when you restore to DC2 and DS2 node types.
    """


_DescribeClustersPaginateResponseClustersTagsTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersTagsTypeDef", {"Key": str, "Value": str}, total=False
)


class DescribeClustersPaginateResponseClustersTagsTypeDef(
    _DescribeClustersPaginateResponseClustersTagsTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeClustersPaginateResponseClustersVpcSecurityGroupsTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersVpcSecurityGroupsTypeDef",
    {"VpcSecurityGroupId": str, "Status": str},
    total=False,
)


class DescribeClustersPaginateResponseClustersVpcSecurityGroupsTypeDef(
    _DescribeClustersPaginateResponseClustersVpcSecurityGroupsTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponseClusters` `VpcSecurityGroups`

    Describes the members of a VPC security group.

    - **VpcSecurityGroupId** *(string) --*

      The identifier of the VPC security group.

    - **Status** *(string) --*

      The status of the VPC security group.
    """


_DescribeClustersPaginateResponseClustersTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseClustersTypeDef",
    {
        "ClusterIdentifier": str,
        "NodeType": str,
        "ClusterStatus": str,
        "ClusterAvailabilityStatus": str,
        "ModifyStatus": str,
        "MasterUsername": str,
        "DBName": str,
        "Endpoint": DescribeClustersPaginateResponseClustersEndpointTypeDef,
        "ClusterCreateTime": datetime,
        "AutomatedSnapshotRetentionPeriod": int,
        "ManualSnapshotRetentionPeriod": int,
        "ClusterSecurityGroups": List[
            DescribeClustersPaginateResponseClustersClusterSecurityGroupsTypeDef
        ],
        "VpcSecurityGroups": List[DescribeClustersPaginateResponseClustersVpcSecurityGroupsTypeDef],
        "ClusterParameterGroups": List[
            DescribeClustersPaginateResponseClustersClusterParameterGroupsTypeDef
        ],
        "ClusterSubnetGroupName": str,
        "VpcId": str,
        "AvailabilityZone": str,
        "PreferredMaintenanceWindow": str,
        "PendingModifiedValues": DescribeClustersPaginateResponseClustersPendingModifiedValuesTypeDef,
        "ClusterVersion": str,
        "AllowVersionUpgrade": bool,
        "NumberOfNodes": int,
        "PubliclyAccessible": bool,
        "Encrypted": bool,
        "RestoreStatus": DescribeClustersPaginateResponseClustersRestoreStatusTypeDef,
        "DataTransferProgress": DescribeClustersPaginateResponseClustersDataTransferProgressTypeDef,
        "HsmStatus": DescribeClustersPaginateResponseClustersHsmStatusTypeDef,
        "ClusterSnapshotCopyStatus": DescribeClustersPaginateResponseClustersClusterSnapshotCopyStatusTypeDef,
        "ClusterPublicKey": str,
        "ClusterNodes": List[DescribeClustersPaginateResponseClustersClusterNodesTypeDef],
        "ElasticIpStatus": DescribeClustersPaginateResponseClustersElasticIpStatusTypeDef,
        "ClusterRevisionNumber": str,
        "Tags": List[DescribeClustersPaginateResponseClustersTagsTypeDef],
        "KmsKeyId": str,
        "EnhancedVpcRouting": bool,
        "IamRoles": List[DescribeClustersPaginateResponseClustersIamRolesTypeDef],
        "PendingActions": List[str],
        "MaintenanceTrackName": str,
        "ElasticResizeNumberOfNodeOptions": str,
        "DeferredMaintenanceWindows": List[
            DescribeClustersPaginateResponseClustersDeferredMaintenanceWindowsTypeDef
        ],
        "SnapshotScheduleIdentifier": str,
        "SnapshotScheduleState": str,
        "ExpectedNextSnapshotScheduleTime": datetime,
        "ExpectedNextSnapshotScheduleTimeStatus": str,
        "NextMaintenanceWindowStartTime": datetime,
        "ResizeInfo": DescribeClustersPaginateResponseClustersResizeInfoTypeDef,
    },
    total=False,
)


class DescribeClustersPaginateResponseClustersTypeDef(
    _DescribeClustersPaginateResponseClustersTypeDef
):
    """
    Type definition for `DescribeClustersPaginateResponse` `Clusters`

    Describes a cluster.

    - **ClusterIdentifier** *(string) --*

      The unique identifier of the cluster.

    - **NodeType** *(string) --*

      The node type for the nodes in the cluster.

    - **ClusterStatus** *(string) --*

      The current state of the cluster. Possible values are the following:

      * ``available``

      * ``available, prep-for-resize``

      * ``available, resize-cleanup``

      * ``cancelling-resize``

      * ``creating``

      * ``deleting``

      * ``final-snapshot``

      * ``hardware-failure``

      * ``incompatible-hsm``

      * ``incompatible-network``

      * ``incompatible-parameters``

      * ``incompatible-restore``

      * ``modifying``

      * ``rebooting``

      * ``renaming``

      * ``resizing``

      * ``rotating-keys``

      * ``storage-full``

      * ``updating-hsm``

    - **ClusterAvailabilityStatus** *(string) --*

      The availability status of the cluster for queries. Possible values are the following:

      * Available - The cluster is available for queries.

      * Unavailable - The cluster is not available for queries.

      * Maintenance - The cluster is intermittently available for queries due to maintenance
      activities.

      * Modifying - The cluster is intermittently available for queries due to changes that modify
      the cluster.

      * Failed - The cluster failed and is not available for queries.

    - **ModifyStatus** *(string) --*

      The status of a modify operation, if any, initiated for the cluster.

    - **MasterUsername** *(string) --*

      The master user name for the cluster. This name is used to connect to the database that is
      specified in the **DBName** parameter.

    - **DBName** *(string) --*

      The name of the initial database that was created when the cluster was created. This same name
      is returned for the life of the cluster. If an initial database was not specified, a database
      named ``dev`` dev was created by default.

    - **Endpoint** *(dict) --*

      The connection endpoint.

      - **Address** *(string) --*

        The DNS address of the Cluster.

      - **Port** *(integer) --*

        The port that the database engine is listening on.

    - **ClusterCreateTime** *(datetime) --*

      The date and time that the cluster was created.

    - **AutomatedSnapshotRetentionPeriod** *(integer) --*

      The number of days that automatic cluster snapshots are retained.

    - **ManualSnapshotRetentionPeriod** *(integer) --*

      The default number of days to retain a manual snapshot. If the value is -1, the snapshot is
      retained indefinitely. This setting doesn't change the retention period of existing snapshots.

      The value must be either -1 or an integer between 1 and 3,653.

    - **ClusterSecurityGroups** *(list) --*

      A list of cluster security group that are associated with the cluster. Each security group is
      represented by an element that contains ``ClusterSecurityGroup.Name`` and
      ``ClusterSecurityGroup.Status`` subelements.

      Cluster security groups are used when the cluster is not created in an Amazon Virtual Private
      Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by
      the **VpcSecurityGroups** parameter.

      - *(dict) --*

        Describes a cluster security group.

        - **ClusterSecurityGroupName** *(string) --*

          The name of the cluster security group.

        - **Status** *(string) --*

          The status of the cluster security group.

    - **VpcSecurityGroups** *(list) --*

      A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with
      the cluster. This parameter is returned only if the cluster is in a VPC.

      - *(dict) --*

        Describes the members of a VPC security group.

        - **VpcSecurityGroupId** *(string) --*

          The identifier of the VPC security group.

        - **Status** *(string) --*

          The status of the VPC security group.

    - **ClusterParameterGroups** *(list) --*

      The list of cluster parameter groups that are associated with this cluster. Each parameter
      group in the list is returned with its status.

      - *(dict) --*

        Describes the status of a parameter group.

        - **ParameterGroupName** *(string) --*

          The name of the cluster parameter group.

        - **ParameterApplyStatus** *(string) --*

          The status of parameter updates.

        - **ClusterParameterStatusList** *(list) --*

          The list of parameter statuses.

          For more information about parameters and parameter groups, go to `Amazon Redshift
          Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterName** *(string) --*

              The name of the parameter.

            - **ParameterApplyStatus** *(string) --*

              The status of the parameter that indicates whether the parameter is in sync with the
              database, waiting for a cluster reboot, or encountered an error when being applied.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The parameter value is in sync with the database.

              * ``pending-reboot`` : The parameter value will be applied after the cluster reboots.

              * ``applying`` : The parameter value is being applied to the database.

              * ``invalid-parameter`` : Cannot apply the parameter value because it has an invalid
              value or syntax.

              * ``apply-deferred`` : The parameter contains static property changes. The changes are
              deferred until the cluster reboots.

              * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
              applied after the cluster reboots.

              * ``unknown-error`` : Cannot apply the parameter change right now. The change will be
              applied after the cluster reboots.

            - **ParameterApplyErrorDescription** *(string) --*

              The error that prevented the parameter from being applied to the database.

    - **ClusterSubnetGroupName** *(string) --*

      The name of the subnet group that is associated with the cluster. This parameter is valid only
      when the cluster is in a VPC.

    - **VpcId** *(string) --*

      The identifier of the VPC the cluster is in, if the cluster is in a VPC.

    - **AvailabilityZone** *(string) --*

      The name of the Availability Zone in which the cluster is located.

    - **PreferredMaintenanceWindow** *(string) --*

      The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance
      can occur.

    - **PendingModifiedValues** *(dict) --*

      A value that, if present, indicates that changes to the cluster are pending. Specific pending
      changes are identified by subelements.

      - **MasterUserPassword** *(string) --*

        The pending or in-progress change of the master user password for the cluster.

      - **NodeType** *(string) --*

        The pending or in-progress change of the cluster's node type.

      - **NumberOfNodes** *(integer) --*

        The pending or in-progress change of the number of nodes in the cluster.

      - **ClusterType** *(string) --*

        The pending or in-progress change of the cluster type.

      - **ClusterVersion** *(string) --*

        The pending or in-progress change of the service version.

      - **AutomatedSnapshotRetentionPeriod** *(integer) --*

        The pending or in-progress change of the automated snapshot retention period.

      - **ClusterIdentifier** *(string) --*

        The pending or in-progress change of the new identifier for the cluster.

      - **PubliclyAccessible** *(boolean) --*

        The pending or in-progress change of the ability to connect to the cluster from the public
        network.

      - **EnhancedVpcRouting** *(boolean) --*

        An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
        create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
        information, see `Enhanced VPC Routing
        <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
        Amazon Redshift Cluster Management Guide.

        If this option is ``true`` , enhanced VPC routing is enabled.

        Default: false

      - **MaintenanceTrackName** *(string) --*

        The name of the maintenance track that the cluster will change to during the next
        maintenance window.

      - **EncryptionType** *(string) --*

        The encryption type for a cluster. Possible values are: KMS and None. For the China region
        the possible values are None, and Legacy.

    - **ClusterVersion** *(string) --*

      The version ID of the Amazon Redshift engine that is running on the cluster.

    - **AllowVersionUpgrade** *(boolean) --*

      A boolean value that, if ``true`` , indicates that major version upgrades will be applied
      automatically to the cluster during the maintenance window.

    - **NumberOfNodes** *(integer) --*

      The number of compute nodes in the cluster.

    - **PubliclyAccessible** *(boolean) --*

      A boolean value that, if ``true`` , indicates that the cluster can be accessed from a public
      network.

    - **Encrypted** *(boolean) --*

      A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at rest.

    - **RestoreStatus** *(dict) --*

      A value that describes the status of a cluster restore action. This parameter returns null if
      the cluster was not created by restoring a snapshot.

      - **Status** *(string) --*

        The status of the restore action. Returns starting, restoring, completed, or failed.

      - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

        The number of megabytes per second being transferred from the backup storage. Returns the
        average rate for a completed backup. This field is only updated when you restore to DC2 and
        DS2 node types.

      - **SnapshotSizeInMegaBytes** *(integer) --*

        The size of the set of snapshot data used to restore the cluster. This field is only updated
        when you restore to DC2 and DS2 node types.

      - **ProgressInMegaBytes** *(integer) --*

        The number of megabytes that have been transferred from snapshot storage. This field is only
        updated when you restore to DC2 and DS2 node types.

      - **ElapsedTimeInSeconds** *(integer) --*

        The amount of time an in-progress restore has been running, or the amount of time it took a
        completed restore to finish. This field is only updated when you restore to DC2 and DS2 node
        types.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        The estimate of the time remaining before the restore will complete. Returns 0 for a
        completed restore. This field is only updated when you restore to DC2 and DS2 node types.

    - **DataTransferProgress** *(dict) --*

      - **Status** *(string) --*

        Describes the status of the cluster. While the transfer is in progress the status is
        ``transferringdata`` .

      - **CurrentRateInMegaBytesPerSecond** *(float) --*

        Describes the data transfer rate in MB's per second.

      - **TotalDataInMegaBytes** *(integer) --*

        Describes the total amount of data to be transfered in megabytes.

      - **DataTransferredInMegaBytes** *(integer) --*

        Describes the total amount of data that has been transfered in MB's.

      - **EstimatedTimeToCompletionInSeconds** *(integer) --*

        Describes the estimated number of seconds remaining to complete the transfer.

      - **ElapsedTimeInSeconds** *(integer) --*

        Describes the number of seconds that have elapsed during the data transfer.

    - **HsmStatus** *(dict) --*

      A value that reports whether the Amazon Redshift cluster has finished applying any hardware
      security module (HSM) settings changes specified in a modify cluster command.

      Values: active, applying

      - **HsmClientCertificateIdentifier** *(string) --*

        Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
        retrieve the data encryption keys stored in an HSM.

      - **HsmConfigurationIdentifier** *(string) --*

        Specifies the name of the HSM configuration that contains the information the Amazon
        Redshift cluster can use to retrieve and store keys in an HSM.

      - **Status** *(string) --*

        Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes
        specified in a modify cluster command.

        Values: active, applying

    - **ClusterSnapshotCopyStatus** *(dict) --*

      A value that returns the destination region and retention period that are configured for
      cross-region snapshot copy.

      - **DestinationRegion** *(string) --*

        The destination region that snapshots are automatically copied to when cross-region snapshot
        copy is enabled.

      - **RetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region.

      - **ManualSnapshotRetentionPeriod** *(integer) --*

        The number of days that automated snapshots are retained in the destination region after
        they are copied from a source region. If the value is -1, the manual snapshot is retained
        indefinitely.

        The value must be either -1 or an integer between 1 and 3,653.

      - **SnapshotCopyGrantName** *(string) --*

        The name of the snapshot copy grant.

    - **ClusterPublicKey** *(string) --*

      The public key for the cluster.

    - **ClusterNodes** *(list) --*

      The nodes in the cluster.

      - *(dict) --*

        The identifier of a node in a cluster.

        - **NodeRole** *(string) --*

          Whether the node is a leader node or a compute node.

        - **PrivateIPAddress** *(string) --*

          The private IP address of a node within a cluster.

        - **PublicIPAddress** *(string) --*

          The public IP address of a node within a cluster.

    - **ElasticIpStatus** *(dict) --*

      The status of the elastic IP (EIP) address.

      - **ElasticIp** *(string) --*

        The elastic IP (EIP) address for the cluster.

      - **Status** *(string) --*

        The status of the elastic IP (EIP) address.

    - **ClusterRevisionNumber** *(string) --*

      The specific revision number of the database in the cluster.

    - **Tags** *(list) --*

      The list of tags for the cluster.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **KmsKeyId** *(string) --*

      The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in
      the cluster.

    - **EnhancedVpcRouting** *(boolean) --*

      An option that specifies whether to create the cluster with enhanced VPC routing enabled. To
      create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
      information, see `Enhanced VPC Routing
      <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the Amazon
      Redshift Cluster Management Guide.

      If this option is ``true`` , enhanced VPC routing is enabled.

      Default: false

    - **IamRoles** *(list) --*

      A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to
      access other AWS services.

      - *(dict) --*

        An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon
        Redshift cluster to access other AWS services.

        - **IamRoleArn** *(string) --*

          The Amazon Resource Name (ARN) of the IAM role, for example,
          ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

        - **ApplyStatus** *(string) --*

          A value that describes the status of the IAM role's association with an Amazon Redshift
          cluster.

          The following are possible statuses and descriptions.

          * ``in-sync`` : The role is available for use by the cluster.

          * ``adding`` : The role is in the process of being associated with the cluster.

          * ``removing`` : The role is in the process of being disassociated with the cluster.

    - **PendingActions** *(list) --*

      Cluster operations that are waiting to be started.

      - *(string) --*

    - **MaintenanceTrackName** *(string) --*

      The name of the maintenance track for the cluster.

    - **ElasticResizeNumberOfNodeOptions** *(string) --*

      The number of nodes that you can resize the cluster to with the elastic resize method.

    - **DeferredMaintenanceWindows** *(list) --*

      Describes a group of ``DeferredMaintenanceWindow`` objects.

      - *(dict) --*

        Describes a deferred maintenance window

        - **DeferMaintenanceIdentifier** *(string) --*

          A unique identifier for the maintenance window.

        - **DeferMaintenanceStartTime** *(datetime) --*

          A timestamp for the beginning of the time period when we defer maintenance.

        - **DeferMaintenanceEndTime** *(datetime) --*

          A timestamp for the end of the time period when we defer maintenance.

    - **SnapshotScheduleIdentifier** *(string) --*

      A unique identifier for the cluster snapshot schedule.

    - **SnapshotScheduleState** *(string) --*

      The current state of the cluster snapshot schedule.

    - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

      The date and time when the next snapshot is expected to be taken for clusters with a valid
      snapshot schedule and backups enabled.

    - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

      The status of next expected snapshot for clusters having a valid snapshot schedule and backups
      enabled. Possible values are the following:

      * OnTrack - The next snapshot is expected to be taken on time.

      * Pending - The next snapshot is pending to be taken.

    - **NextMaintenanceWindowStartTime** *(datetime) --*

      The date and time in UTC when system maintenance can begin.

    - **ResizeInfo** *(dict) --*

      Returns the following:

      * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

      * ResizeType: Returns ClassicResize

      - **ResizeType** *(string) --*

        Returns the value ``ClassicResize`` .

      - **AllowCancelResize** *(boolean) --*

        A boolean value indicating if the resize operation can be cancelled.
    """


_DescribeClustersPaginateResponseTypeDef = TypedDict(
    "_DescribeClustersPaginateResponseTypeDef",
    {"Clusters": List[DescribeClustersPaginateResponseClustersTypeDef], "NextToken": str},
    total=False,
)


class DescribeClustersPaginateResponseTypeDef(_DescribeClustersPaginateResponseTypeDef):
    """
    Type definition for `DescribeClustersPaginate` `Response`

    Contains the output from the  DescribeClusters action.

    - **Clusters** *(list) --*

      A list of ``Cluster`` objects, where each object describes one cluster.

      - *(dict) --*

        Describes a cluster.

        - **ClusterIdentifier** *(string) --*

          The unique identifier of the cluster.

        - **NodeType** *(string) --*

          The node type for the nodes in the cluster.

        - **ClusterStatus** *(string) --*

          The current state of the cluster. Possible values are the following:

          * ``available``

          * ``available, prep-for-resize``

          * ``available, resize-cleanup``

          * ``cancelling-resize``

          * ``creating``

          * ``deleting``

          * ``final-snapshot``

          * ``hardware-failure``

          * ``incompatible-hsm``

          * ``incompatible-network``

          * ``incompatible-parameters``

          * ``incompatible-restore``

          * ``modifying``

          * ``rebooting``

          * ``renaming``

          * ``resizing``

          * ``rotating-keys``

          * ``storage-full``

          * ``updating-hsm``

        - **ClusterAvailabilityStatus** *(string) --*

          The availability status of the cluster for queries. Possible values are the following:

          * Available - The cluster is available for queries.

          * Unavailable - The cluster is not available for queries.

          * Maintenance - The cluster is intermittently available for queries due to maintenance
          activities.

          * Modifying - The cluster is intermittently available for queries due to changes that
          modify the cluster.

          * Failed - The cluster failed and is not available for queries.

        - **ModifyStatus** *(string) --*

          The status of a modify operation, if any, initiated for the cluster.

        - **MasterUsername** *(string) --*

          The master user name for the cluster. This name is used to connect to the database that is
          specified in the **DBName** parameter.

        - **DBName** *(string) --*

          The name of the initial database that was created when the cluster was created. This same
          name is returned for the life of the cluster. If an initial database was not specified, a
          database named ``dev`` dev was created by default.

        - **Endpoint** *(dict) --*

          The connection endpoint.

          - **Address** *(string) --*

            The DNS address of the Cluster.

          - **Port** *(integer) --*

            The port that the database engine is listening on.

        - **ClusterCreateTime** *(datetime) --*

          The date and time that the cluster was created.

        - **AutomatedSnapshotRetentionPeriod** *(integer) --*

          The number of days that automatic cluster snapshots are retained.

        - **ManualSnapshotRetentionPeriod** *(integer) --*

          The default number of days to retain a manual snapshot. If the value is -1, the snapshot
          is retained indefinitely. This setting doesn't change the retention period of existing
          snapshots.

          The value must be either -1 or an integer between 1 and 3,653.

        - **ClusterSecurityGroups** *(list) --*

          A list of cluster security group that are associated with the cluster. Each security group
          is represented by an element that contains ``ClusterSecurityGroup.Name`` and
          ``ClusterSecurityGroup.Status`` subelements.

          Cluster security groups are used when the cluster is not created in an Amazon Virtual
          Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are
          listed by the **VpcSecurityGroups** parameter.

          - *(dict) --*

            Describes a cluster security group.

            - **ClusterSecurityGroupName** *(string) --*

              The name of the cluster security group.

            - **Status** *(string) --*

              The status of the cluster security group.

        - **VpcSecurityGroups** *(list) --*

          A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated
          with the cluster. This parameter is returned only if the cluster is in a VPC.

          - *(dict) --*

            Describes the members of a VPC security group.

            - **VpcSecurityGroupId** *(string) --*

              The identifier of the VPC security group.

            - **Status** *(string) --*

              The status of the VPC security group.

        - **ClusterParameterGroups** *(list) --*

          The list of cluster parameter groups that are associated with this cluster. Each parameter
          group in the list is returned with its status.

          - *(dict) --*

            Describes the status of a parameter group.

            - **ParameterGroupName** *(string) --*

              The name of the cluster parameter group.

            - **ParameterApplyStatus** *(string) --*

              The status of parameter updates.

            - **ClusterParameterStatusList** *(list) --*

              The list of parameter statuses.

              For more information about parameters and parameter groups, go to `Amazon Redshift
              Parameter Groups
              <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
              in the *Amazon Redshift Cluster Management Guide* .

              - *(dict) --*

                Describes the status of a parameter group.

                - **ParameterName** *(string) --*

                  The name of the parameter.

                - **ParameterApplyStatus** *(string) --*

                  The status of the parameter that indicates whether the parameter is in sync with
                  the database, waiting for a cluster reboot, or encountered an error when being
                  applied.

                  The following are possible statuses and descriptions.

                  * ``in-sync`` : The parameter value is in sync with the database.

                  * ``pending-reboot`` : The parameter value will be applied after the cluster
                  reboots.

                  * ``applying`` : The parameter value is being applied to the database.

                  * ``invalid-parameter`` : Cannot apply the parameter value because it has an
                  invalid value or syntax.

                  * ``apply-deferred`` : The parameter contains static property changes. The changes
                  are deferred until the cluster reboots.

                  * ``apply-error`` : Cannot connect to the cluster. The parameter change will be
                  applied after the cluster reboots.

                  * ``unknown-error`` : Cannot apply the parameter change right now. The change will
                  be applied after the cluster reboots.

                - **ParameterApplyErrorDescription** *(string) --*

                  The error that prevented the parameter from being applied to the database.

        - **ClusterSubnetGroupName** *(string) --*

          The name of the subnet group that is associated with the cluster. This parameter is valid
          only when the cluster is in a VPC.

        - **VpcId** *(string) --*

          The identifier of the VPC the cluster is in, if the cluster is in a VPC.

        - **AvailabilityZone** *(string) --*

          The name of the Availability Zone in which the cluster is located.

        - **PreferredMaintenanceWindow** *(string) --*

          The weekly time range, in Universal Coordinated Time (UTC), during which system
          maintenance can occur.

        - **PendingModifiedValues** *(dict) --*

          A value that, if present, indicates that changes to the cluster are pending. Specific
          pending changes are identified by subelements.

          - **MasterUserPassword** *(string) --*

            The pending or in-progress change of the master user password for the cluster.

          - **NodeType** *(string) --*

            The pending or in-progress change of the cluster's node type.

          - **NumberOfNodes** *(integer) --*

            The pending or in-progress change of the number of nodes in the cluster.

          - **ClusterType** *(string) --*

            The pending or in-progress change of the cluster type.

          - **ClusterVersion** *(string) --*

            The pending or in-progress change of the service version.

          - **AutomatedSnapshotRetentionPeriod** *(integer) --*

            The pending or in-progress change of the automated snapshot retention period.

          - **ClusterIdentifier** *(string) --*

            The pending or in-progress change of the new identifier for the cluster.

          - **PubliclyAccessible** *(boolean) --*

            The pending or in-progress change of the ability to connect to the cluster from the
            public network.

          - **EnhancedVpcRouting** *(boolean) --*

            An option that specifies whether to create the cluster with enhanced VPC routing
            enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a
            VPC. For more information, see `Enhanced VPC Routing
            <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
            Amazon Redshift Cluster Management Guide.

            If this option is ``true`` , enhanced VPC routing is enabled.

            Default: false

          - **MaintenanceTrackName** *(string) --*

            The name of the maintenance track that the cluster will change to during the next
            maintenance window.

          - **EncryptionType** *(string) --*

            The encryption type for a cluster. Possible values are: KMS and None. For the China
            region the possible values are None, and Legacy.

        - **ClusterVersion** *(string) --*

          The version ID of the Amazon Redshift engine that is running on the cluster.

        - **AllowVersionUpgrade** *(boolean) --*

          A boolean value that, if ``true`` , indicates that major version upgrades will be applied
          automatically to the cluster during the maintenance window.

        - **NumberOfNodes** *(integer) --*

          The number of compute nodes in the cluster.

        - **PubliclyAccessible** *(boolean) --*

          A boolean value that, if ``true`` , indicates that the cluster can be accessed from a
          public network.

        - **Encrypted** *(boolean) --*

          A boolean value that, if ``true`` , indicates that data in the cluster is encrypted at
          rest.

        - **RestoreStatus** *(dict) --*

          A value that describes the status of a cluster restore action. This parameter returns null
          if the cluster was not created by restoring a snapshot.

          - **Status** *(string) --*

            The status of the restore action. Returns starting, restoring, completed, or failed.

          - **CurrentRestoreRateInMegaBytesPerSecond** *(float) --*

            The number of megabytes per second being transferred from the backup storage. Returns
            the average rate for a completed backup. This field is only updated when you restore to
            DC2 and DS2 node types.

          - **SnapshotSizeInMegaBytes** *(integer) --*

            The size of the set of snapshot data used to restore the cluster. This field is only
            updated when you restore to DC2 and DS2 node types.

          - **ProgressInMegaBytes** *(integer) --*

            The number of megabytes that have been transferred from snapshot storage. This field is
            only updated when you restore to DC2 and DS2 node types.

          - **ElapsedTimeInSeconds** *(integer) --*

            The amount of time an in-progress restore has been running, or the amount of time it
            took a completed restore to finish. This field is only updated when you restore to DC2
            and DS2 node types.

          - **EstimatedTimeToCompletionInSeconds** *(integer) --*

            The estimate of the time remaining before the restore will complete. Returns 0 for a
            completed restore. This field is only updated when you restore to DC2 and DS2 node
            types.

        - **DataTransferProgress** *(dict) --*

          - **Status** *(string) --*

            Describes the status of the cluster. While the transfer is in progress the status is
            ``transferringdata`` .

          - **CurrentRateInMegaBytesPerSecond** *(float) --*

            Describes the data transfer rate in MB's per second.

          - **TotalDataInMegaBytes** *(integer) --*

            Describes the total amount of data to be transfered in megabytes.

          - **DataTransferredInMegaBytes** *(integer) --*

            Describes the total amount of data that has been transfered in MB's.

          - **EstimatedTimeToCompletionInSeconds** *(integer) --*

            Describes the estimated number of seconds remaining to complete the transfer.

          - **ElapsedTimeInSeconds** *(integer) --*

            Describes the number of seconds that have elapsed during the data transfer.

        - **HsmStatus** *(dict) --*

          A value that reports whether the Amazon Redshift cluster has finished applying any
          hardware security module (HSM) settings changes specified in a modify cluster command.

          Values: active, applying

          - **HsmClientCertificateIdentifier** *(string) --*

            Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to
            retrieve the data encryption keys stored in an HSM.

          - **HsmConfigurationIdentifier** *(string) --*

            Specifies the name of the HSM configuration that contains the information the Amazon
            Redshift cluster can use to retrieve and store keys in an HSM.

          - **Status** *(string) --*

            Reports whether the Amazon Redshift cluster has finished applying any HSM settings
            changes specified in a modify cluster command.

            Values: active, applying

        - **ClusterSnapshotCopyStatus** *(dict) --*

          A value that returns the destination region and retention period that are configured for
          cross-region snapshot copy.

          - **DestinationRegion** *(string) --*

            The destination region that snapshots are automatically copied to when cross-region
            snapshot copy is enabled.

          - **RetentionPeriod** *(integer) --*

            The number of days that automated snapshots are retained in the destination region after
            they are copied from a source region.

          - **ManualSnapshotRetentionPeriod** *(integer) --*

            The number of days that automated snapshots are retained in the destination region after
            they are copied from a source region. If the value is -1, the manual snapshot is
            retained indefinitely.

            The value must be either -1 or an integer between 1 and 3,653.

          - **SnapshotCopyGrantName** *(string) --*

            The name of the snapshot copy grant.

        - **ClusterPublicKey** *(string) --*

          The public key for the cluster.

        - **ClusterNodes** *(list) --*

          The nodes in the cluster.

          - *(dict) --*

            The identifier of a node in a cluster.

            - **NodeRole** *(string) --*

              Whether the node is a leader node or a compute node.

            - **PrivateIPAddress** *(string) --*

              The private IP address of a node within a cluster.

            - **PublicIPAddress** *(string) --*

              The public IP address of a node within a cluster.

        - **ElasticIpStatus** *(dict) --*

          The status of the elastic IP (EIP) address.

          - **ElasticIp** *(string) --*

            The elastic IP (EIP) address for the cluster.

          - **Status** *(string) --*

            The status of the elastic IP (EIP) address.

        - **ClusterRevisionNumber** *(string) --*

          The specific revision number of the database in the cluster.

        - **Tags** *(list) --*

          The list of tags for the cluster.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

        - **KmsKeyId** *(string) --*

          The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data
          in the cluster.

        - **EnhancedVpcRouting** *(boolean) --*

          An option that specifies whether to create the cluster with enhanced VPC routing enabled.
          To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more
          information, see `Enhanced VPC Routing
          <https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html>`__ in the
          Amazon Redshift Cluster Management Guide.

          If this option is ``true`` , enhanced VPC routing is enabled.

          Default: false

        - **IamRoles** *(list) --*

          A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster
          to access other AWS services.

          - *(dict) --*

            An AWS Identity and Access Management (IAM) role that can be used by the associated
            Amazon Redshift cluster to access other AWS services.

            - **IamRoleArn** *(string) --*

              The Amazon Resource Name (ARN) of the IAM role, for example,
              ``arn:aws:iam::123456789012:role/RedshiftCopyUnload`` .

            - **ApplyStatus** *(string) --*

              A value that describes the status of the IAM role's association with an Amazon
              Redshift cluster.

              The following are possible statuses and descriptions.

              * ``in-sync`` : The role is available for use by the cluster.

              * ``adding`` : The role is in the process of being associated with the cluster.

              * ``removing`` : The role is in the process of being disassociated with the cluster.

        - **PendingActions** *(list) --*

          Cluster operations that are waiting to be started.

          - *(string) --*

        - **MaintenanceTrackName** *(string) --*

          The name of the maintenance track for the cluster.

        - **ElasticResizeNumberOfNodeOptions** *(string) --*

          The number of nodes that you can resize the cluster to with the elastic resize method.

        - **DeferredMaintenanceWindows** *(list) --*

          Describes a group of ``DeferredMaintenanceWindow`` objects.

          - *(dict) --*

            Describes a deferred maintenance window

            - **DeferMaintenanceIdentifier** *(string) --*

              A unique identifier for the maintenance window.

            - **DeferMaintenanceStartTime** *(datetime) --*

              A timestamp for the beginning of the time period when we defer maintenance.

            - **DeferMaintenanceEndTime** *(datetime) --*

              A timestamp for the end of the time period when we defer maintenance.

        - **SnapshotScheduleIdentifier** *(string) --*

          A unique identifier for the cluster snapshot schedule.

        - **SnapshotScheduleState** *(string) --*

          The current state of the cluster snapshot schedule.

        - **ExpectedNextSnapshotScheduleTime** *(datetime) --*

          The date and time when the next snapshot is expected to be taken for clusters with a valid
          snapshot schedule and backups enabled.

        - **ExpectedNextSnapshotScheduleTimeStatus** *(string) --*

          The status of next expected snapshot for clusters having a valid snapshot schedule and
          backups enabled. Possible values are the following:

          * OnTrack - The next snapshot is expected to be taken on time.

          * Pending - The next snapshot is pending to be taken.

        - **NextMaintenanceWindowStartTime** *(datetime) --*

          The date and time in UTC when system maintenance can begin.

        - **ResizeInfo** *(dict) --*

          Returns the following:

          * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.

          * ResizeType: Returns ClassicResize

          - **ResizeType** *(string) --*

            Returns the value ``ClassicResize`` .

          - **AllowCancelResize** *(boolean) --*

            A boolean value indicating if the resize operation can be cancelled.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeDefaultClusterParametersPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeDefaultClusterParametersPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeDefaultClusterParametersPaginatePaginationConfigTypeDef(
    _DescribeDefaultClusterParametersPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeDefaultClusterParametersPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersParametersTypeDef = TypedDict(
    "_DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersParametersTypeDef",
    {
        "ParameterName": str,
        "ParameterValue": str,
        "Description": str,
        "Source": str,
        "DataType": str,
        "AllowedValues": str,
        "ApplyType": str,
        "IsModifiable": bool,
        "MinimumEngineVersion": str,
    },
    total=False,
)


class DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersParametersTypeDef(
    _DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersParametersTypeDef
):
    """
    Type definition for `DescribeDefaultClusterParametersPaginateResponseDefaultClusterParameters`
    `Parameters`

    Describes a parameter in a cluster parameter group.

    - **ParameterName** *(string) --*

      The name of the parameter.

    - **ParameterValue** *(string) --*

      The value of the parameter.

    - **Description** *(string) --*

      A description of the parameter.

    - **Source** *(string) --*

      The source of the parameter value, such as "engine-default" or "user".

    - **DataType** *(string) --*

      The data type of the parameter.

    - **AllowedValues** *(string) --*

      The valid range of values for the parameter.

    - **ApplyType** *(string) --*

      Specifies how to apply the WLM configuration parameter. Some properties can be applied
      dynamically, while other properties require that any associated clusters be rebooted for the
      configuration changes to be applied. For more information about parameters and parameter
      groups, go to `Amazon Redshift Parameter Groups
      <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__ in
      the *Amazon Redshift Cluster Management Guide* .

    - **IsModifiable** *(boolean) --*

      If ``true`` , the parameter can be modified. Some parameters have security or operational
      implications that prevent them from being changed.

    - **MinimumEngineVersion** *(string) --*

      The earliest engine version to which the parameter can apply.
    """


_DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersTypeDef = TypedDict(
    "_DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersTypeDef",
    {
        "ParameterGroupFamily": str,
        "Marker": str,
        "Parameters": List[
            DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersParametersTypeDef
        ],
    },
    total=False,
)


class DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersTypeDef(
    _DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersTypeDef
):
    """
    Type definition for `DescribeDefaultClusterParametersPaginateResponse`
    `DefaultClusterParameters`

    Describes the default cluster parameters for a parameter group family.

    - **ParameterGroupFamily** *(string) --*

      The name of the cluster parameter group family to which the engine default parameters apply.

    - **Marker** *(string) --*

      A value that indicates the starting point for the next set of response records in a subsequent
      request. If a value is returned in a response, you can retrieve the next set of records by
      providing this returned marker value in the ``Marker`` parameter and retrying the command. If
      the ``Marker`` field is empty, all response records have been retrieved for the request.

    - **Parameters** *(list) --*

      The list of cluster default parameters.

      - *(dict) --*

        Describes a parameter in a cluster parameter group.

        - **ParameterName** *(string) --*

          The name of the parameter.

        - **ParameterValue** *(string) --*

          The value of the parameter.

        - **Description** *(string) --*

          A description of the parameter.

        - **Source** *(string) --*

          The source of the parameter value, such as "engine-default" or "user".

        - **DataType** *(string) --*

          The data type of the parameter.

        - **AllowedValues** *(string) --*

          The valid range of values for the parameter.

        - **ApplyType** *(string) --*

          Specifies how to apply the WLM configuration parameter. Some properties can be applied
          dynamically, while other properties require that any associated clusters be rebooted for
          the configuration changes to be applied. For more information about parameters and
          parameter groups, go to `Amazon Redshift Parameter Groups
          <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

        - **IsModifiable** *(boolean) --*

          If ``true`` , the parameter can be modified. Some parameters have security or operational
          implications that prevent them from being changed.

        - **MinimumEngineVersion** *(string) --*

          The earliest engine version to which the parameter can apply.
    """


_DescribeDefaultClusterParametersPaginateResponseTypeDef = TypedDict(
    "_DescribeDefaultClusterParametersPaginateResponseTypeDef",
    {
        "DefaultClusterParameters": DescribeDefaultClusterParametersPaginateResponseDefaultClusterParametersTypeDef,
        "NextToken": str,
    },
    total=False,
)


class DescribeDefaultClusterParametersPaginateResponseTypeDef(
    _DescribeDefaultClusterParametersPaginateResponseTypeDef
):
    """
    Type definition for `DescribeDefaultClusterParametersPaginate` `Response`

    - **DefaultClusterParameters** *(dict) --*

      Describes the default cluster parameters for a parameter group family.

      - **ParameterGroupFamily** *(string) --*

        The name of the cluster parameter group family to which the engine default parameters apply.

      - **Marker** *(string) --*

        A value that indicates the starting point for the next set of response records in a
        subsequent request. If a value is returned in a response, you can retrieve the next set of
        records by providing this returned marker value in the ``Marker`` parameter and retrying the
        command. If the ``Marker`` field is empty, all response records have been retrieved for the
        request.

      - **Parameters** *(list) --*

        The list of cluster default parameters.

        - *(dict) --*

          Describes a parameter in a cluster parameter group.

          - **ParameterName** *(string) --*

            The name of the parameter.

          - **ParameterValue** *(string) --*

            The value of the parameter.

          - **Description** *(string) --*

            A description of the parameter.

          - **Source** *(string) --*

            The source of the parameter value, such as "engine-default" or "user".

          - **DataType** *(string) --*

            The data type of the parameter.

          - **AllowedValues** *(string) --*

            The valid range of values for the parameter.

          - **ApplyType** *(string) --*

            Specifies how to apply the WLM configuration parameter. Some properties can be applied
            dynamically, while other properties require that any associated clusters be rebooted for
            the configuration changes to be applied. For more information about parameters and
            parameter groups, go to `Amazon Redshift Parameter Groups
            <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html>`__
            in the *Amazon Redshift Cluster Management Guide* .

          - **IsModifiable** *(boolean) --*

            If ``true`` , the parameter can be modified. Some parameters have security or
            operational implications that prevent them from being changed.

          - **MinimumEngineVersion** *(string) --*

            The earliest engine version to which the parameter can apply.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeEventSubscriptionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeEventSubscriptionsPaginatePaginationConfigTypeDef(
    _DescribeEventSubscriptionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTagsTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTagsTypeDef(
    _DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTagsTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginateResponseEventSubscriptionsList` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef",
    {
        "CustomerAwsId": str,
        "CustSubscriptionId": str,
        "SnsTopicArn": str,
        "Status": str,
        "SubscriptionCreationTime": datetime,
        "SourceType": str,
        "SourceIdsList": List[str],
        "EventCategoriesList": List[str],
        "Severity": str,
        "Enabled": bool,
        "Tags": List[DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTagsTypeDef],
    },
    total=False,
)


class DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef(
    _DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginateResponse` `EventSubscriptionsList`

    Describes event subscriptions.

    - **CustomerAwsId** *(string) --*

      The AWS customer account associated with the Amazon Redshift event notification subscription.

    - **CustSubscriptionId** *(string) --*

      The name of the Amazon Redshift event notification subscription.

    - **SnsTopicArn** *(string) --*

      The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
      subscription.

    - **Status** *(string) --*

      The status of the Amazon Redshift event notification subscription.

      Constraints:

      * Can be one of the following: active | no-permission | topic-not-exist

      * The status "no-permission" indicates that Amazon Redshift no longer has permission to post
      to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted
      after the subscription was created.

    - **SubscriptionCreationTime** *(datetime) --*

      The date and time the Amazon Redshift event notification subscription was created.

    - **SourceType** *(string) --*

      The source type of the events returned the Amazon Redshift event notification, such as
      cluster, or cluster-snapshot.

    - **SourceIdsList** *(list) --*

      A list of the sources that publish events to the Amazon Redshift event notification
      subscription.

      - *(string) --*

    - **EventCategoriesList** *(list) --*

      The list of Amazon Redshift event categories specified in the event notification subscription.

      Values: Configuration, Management, Monitoring, Security

      - *(string) --*

    - **Severity** *(string) --*

      The event severity specified in the Amazon Redshift event notification subscription.

      Values: ERROR, INFO

    - **Enabled** *(boolean) --*

      A boolean value indicating whether the subscription is enabled; ``true`` indicates that the
      subscription is enabled.

    - **Tags** *(list) --*

      The list of tags for the event subscription.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeEventSubscriptionsPaginateResponseTypeDef = TypedDict(
    "_DescribeEventSubscriptionsPaginateResponseTypeDef",
    {
        "EventSubscriptionsList": List[
            DescribeEventSubscriptionsPaginateResponseEventSubscriptionsListTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeEventSubscriptionsPaginateResponseTypeDef(
    _DescribeEventSubscriptionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeEventSubscriptionsPaginate` `Response`

    - **EventSubscriptionsList** *(list) --*

      A list of event subscriptions.

      - *(dict) --*

        Describes event subscriptions.

        - **CustomerAwsId** *(string) --*

          The AWS customer account associated with the Amazon Redshift event notification
          subscription.

        - **CustSubscriptionId** *(string) --*

          The name of the Amazon Redshift event notification subscription.

        - **SnsTopicArn** *(string) --*

          The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification
          subscription.

        - **Status** *(string) --*

          The status of the Amazon Redshift event notification subscription.

          Constraints:

          * Can be one of the following: active | no-permission | topic-not-exist

          * The status "no-permission" indicates that Amazon Redshift no longer has permission to
          post to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was
          deleted after the subscription was created.

        - **SubscriptionCreationTime** *(datetime) --*

          The date and time the Amazon Redshift event notification subscription was created.

        - **SourceType** *(string) --*

          The source type of the events returned the Amazon Redshift event notification, such as
          cluster, or cluster-snapshot.

        - **SourceIdsList** *(list) --*

          A list of the sources that publish events to the Amazon Redshift event notification
          subscription.

          - *(string) --*

        - **EventCategoriesList** *(list) --*

          The list of Amazon Redshift event categories specified in the event notification
          subscription.

          Values: Configuration, Management, Monitoring, Security

          - *(string) --*

        - **Severity** *(string) --*

          The event severity specified in the Amazon Redshift event notification subscription.

          Values: ERROR, INFO

        - **Enabled** *(boolean) --*

          A boolean value indicating whether the subscription is enabled; ``true`` indicates that
          the subscription is enabled.

        - **Tags** *(list) --*

          The list of tags for the event subscription.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeEventsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeEventsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeEventsPaginatePaginationConfigTypeDef(_DescribeEventsPaginatePaginationConfigTypeDef):
    """
    Type definition for `DescribeEventsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeEventsPaginateResponseEventsTypeDef = TypedDict(
    "_DescribeEventsPaginateResponseEventsTypeDef",
    {
        "SourceIdentifier": str,
        "SourceType": str,
        "Message": str,
        "EventCategories": List[str],
        "Severity": str,
        "Date": datetime,
        "EventId": str,
    },
    total=False,
)


class DescribeEventsPaginateResponseEventsTypeDef(_DescribeEventsPaginateResponseEventsTypeDef):
    """
    Type definition for `DescribeEventsPaginateResponse` `Events`

    Describes an event.

    - **SourceIdentifier** *(string) --*

      The identifier for the source of the event.

    - **SourceType** *(string) --*

      The source type for this event.

    - **Message** *(string) --*

      The text of this event.

    - **EventCategories** *(list) --*

      A list of the event categories.

      Values: Configuration, Management, Monitoring, Security

      - *(string) --*

    - **Severity** *(string) --*

      The severity of the event.

      Values: ERROR, INFO

    - **Date** *(datetime) --*

      The date and time of the event.

    - **EventId** *(string) --*

      The identifier of the event.
    """


_DescribeEventsPaginateResponseTypeDef = TypedDict(
    "_DescribeEventsPaginateResponseTypeDef",
    {"Events": List[DescribeEventsPaginateResponseEventsTypeDef], "NextToken": str},
    total=False,
)


class DescribeEventsPaginateResponseTypeDef(_DescribeEventsPaginateResponseTypeDef):
    """
    Type definition for `DescribeEventsPaginate` `Response`

    - **Events** *(list) --*

      A list of ``Event`` instances.

      - *(dict) --*

        Describes an event.

        - **SourceIdentifier** *(string) --*

          The identifier for the source of the event.

        - **SourceType** *(string) --*

          The source type for this event.

        - **Message** *(string) --*

          The text of this event.

        - **EventCategories** *(list) --*

          A list of the event categories.

          Values: Configuration, Management, Monitoring, Security

          - *(string) --*

        - **Severity** *(string) --*

          The severity of the event.

          Values: ERROR, INFO

        - **Date** *(datetime) --*

          The date and time of the event.

        - **EventId** *(string) --*

          The identifier of the event.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeHsmClientCertificatesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeHsmClientCertificatesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeHsmClientCertificatesPaginatePaginationConfigTypeDef(
    _DescribeHsmClientCertificatesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeHsmClientCertificatesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTagsTypeDef = TypedDict(
    "_DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTagsTypeDef(
    _DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTagsTypeDef
):
    """
    Type definition for `DescribeHsmClientCertificatesPaginateResponseHsmClientCertificates` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTypeDef = TypedDict(
    "_DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTypeDef",
    {
        "HsmClientCertificateIdentifier": str,
        "HsmClientCertificatePublicKey": str,
        "Tags": List[DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTagsTypeDef],
    },
    total=False,
)


class DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTypeDef(
    _DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTypeDef
):
    """
    Type definition for `DescribeHsmClientCertificatesPaginateResponse` `HsmClientCertificates`

    Returns information about an HSM client certificate. The certificate is stored in a secure
    Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data files.

    - **HsmClientCertificateIdentifier** *(string) --*

      The identifier of the HSM client certificate.

    - **HsmClientCertificatePublicKey** *(string) --*

      The public key that the Amazon Redshift cluster will use to connect to the HSM. You must
      register the public key in the HSM.

    - **Tags** *(list) --*

      The list of tags for the HSM client certificate.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeHsmClientCertificatesPaginateResponseTypeDef = TypedDict(
    "_DescribeHsmClientCertificatesPaginateResponseTypeDef",
    {
        "HsmClientCertificates": List[
            DescribeHsmClientCertificatesPaginateResponseHsmClientCertificatesTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeHsmClientCertificatesPaginateResponseTypeDef(
    _DescribeHsmClientCertificatesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeHsmClientCertificatesPaginate` `Response`

    - **HsmClientCertificates** *(list) --*

      A list of the identifiers for one or more HSM client certificates used by Amazon Redshift
      clusters to store and retrieve database encryption keys in an HSM.

      - *(dict) --*

        Returns information about an HSM client certificate. The certificate is stored in a secure
        Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data
        files.

        - **HsmClientCertificateIdentifier** *(string) --*

          The identifier of the HSM client certificate.

        - **HsmClientCertificatePublicKey** *(string) --*

          The public key that the Amazon Redshift cluster will use to connect to the HSM. You must
          register the public key in the HSM.

        - **Tags** *(list) --*

          The list of tags for the HSM client certificate.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeHsmConfigurationsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeHsmConfigurationsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeHsmConfigurationsPaginatePaginationConfigTypeDef(
    _DescribeHsmConfigurationsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeHsmConfigurationsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTagsTypeDef = TypedDict(
    "_DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTagsTypeDef(
    _DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTagsTypeDef
):
    """
    Type definition for `DescribeHsmConfigurationsPaginateResponseHsmConfigurations` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTypeDef = TypedDict(
    "_DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTypeDef",
    {
        "HsmConfigurationIdentifier": str,
        "Description": str,
        "HsmIpAddress": str,
        "HsmPartitionName": str,
        "Tags": List[DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTagsTypeDef],
    },
    total=False,
)


class DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTypeDef(
    _DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTypeDef
):
    """
    Type definition for `DescribeHsmConfigurationsPaginateResponse` `HsmConfigurations`

    Returns information about an HSM configuration, which is an object that describes to Amazon
    Redshift clusters the information they require to connect to an HSM where they can store
    database encryption keys.

    - **HsmConfigurationIdentifier** *(string) --*

      The name of the Amazon Redshift HSM configuration.

    - **Description** *(string) --*

      A text description of the HSM configuration.

    - **HsmIpAddress** *(string) --*

      The IP address that the Amazon Redshift cluster must use to access the HSM.

    - **HsmPartitionName** *(string) --*

      The name of the partition in the HSM where the Amazon Redshift clusters will store their
      database encryption keys.

    - **Tags** *(list) --*

      The list of tags for the HSM configuration.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeHsmConfigurationsPaginateResponseTypeDef = TypedDict(
    "_DescribeHsmConfigurationsPaginateResponseTypeDef",
    {
        "HsmConfigurations": List[
            DescribeHsmConfigurationsPaginateResponseHsmConfigurationsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeHsmConfigurationsPaginateResponseTypeDef(
    _DescribeHsmConfigurationsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeHsmConfigurationsPaginate` `Response`

    - **HsmConfigurations** *(list) --*

      A list of ``HsmConfiguration`` objects.

      - *(dict) --*

        Returns information about an HSM configuration, which is an object that describes to Amazon
        Redshift clusters the information they require to connect to an HSM where they can store
        database encryption keys.

        - **HsmConfigurationIdentifier** *(string) --*

          The name of the Amazon Redshift HSM configuration.

        - **Description** *(string) --*

          A text description of the HSM configuration.

        - **HsmIpAddress** *(string) --*

          The IP address that the Amazon Redshift cluster must use to access the HSM.

        - **HsmPartitionName** *(string) --*

          The name of the partition in the HSM where the Amazon Redshift clusters will store their
          database encryption keys.

        - **Tags** *(list) --*

          The list of tags for the HSM configuration.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeNodeConfigurationOptionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeNodeConfigurationOptionsPaginateFiltersTypeDef",
    {"Name": str, "Operator": str, "Values": List[str]},
    total=False,
)


class DescribeNodeConfigurationOptionsPaginateFiltersTypeDef(
    _DescribeNodeConfigurationOptionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeNodeConfigurationOptionsPaginate` `Filters`

    A set of elements to filter the returned node configurations.

    - **Name** *(string) --*

      The name of the element to filter.

    - **Operator** *(string) --*

      The filter operator. If filter Name is NodeType only the 'in' operator is supported. Provide
      one value to evaluate for 'eq', 'lt', 'le', 'gt', and 'ge'. Provide two values to evaluate for
      'between'. Provide a list of values for 'in'.

    - **Values** *(list) --*

      List of values. Compare Name using Operator to Values. If filter Name is NumberOfNodes, then
      values can range from 0 to 200. If filter Name is EstimatedDiskUtilizationPercent, then values
      can range from 0 to 100. For example, filter NumberOfNodes (name) GT (operator) 3 (values).

      - *(string) --*
    """


_DescribeNodeConfigurationOptionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeNodeConfigurationOptionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeNodeConfigurationOptionsPaginatePaginationConfigTypeDef(
    _DescribeNodeConfigurationOptionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeNodeConfigurationOptionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeNodeConfigurationOptionsPaginateResponseNodeConfigurationOptionListTypeDef = TypedDict(
    "_DescribeNodeConfigurationOptionsPaginateResponseNodeConfigurationOptionListTypeDef",
    {"NodeType": str, "NumberOfNodes": int, "EstimatedDiskUtilizationPercent": float, "Mode": str},
    total=False,
)


class DescribeNodeConfigurationOptionsPaginateResponseNodeConfigurationOptionListTypeDef(
    _DescribeNodeConfigurationOptionsPaginateResponseNodeConfigurationOptionListTypeDef
):
    """
    Type definition for `DescribeNodeConfigurationOptionsPaginateResponse`
    `NodeConfigurationOptionList`

    A list of node configurations.

    - **NodeType** *(string) --*

      The node type, such as, "ds2.8xlarge".

    - **NumberOfNodes** *(integer) --*

      The number of nodes.

    - **EstimatedDiskUtilizationPercent** *(float) --*

      The estimated disk utilizaton percentage.

    - **Mode** *(string) --*

      The category of the node configuration recommendation.
    """


_DescribeNodeConfigurationOptionsPaginateResponseTypeDef = TypedDict(
    "_DescribeNodeConfigurationOptionsPaginateResponseTypeDef",
    {
        "NodeConfigurationOptionList": List[
            DescribeNodeConfigurationOptionsPaginateResponseNodeConfigurationOptionListTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeNodeConfigurationOptionsPaginateResponseTypeDef(
    _DescribeNodeConfigurationOptionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeNodeConfigurationOptionsPaginate` `Response`

    - **NodeConfigurationOptionList** *(list) --*

      A list of valid node configurations.

      - *(dict) --*

        A list of node configurations.

        - **NodeType** *(string) --*

          The node type, such as, "ds2.8xlarge".

        - **NumberOfNodes** *(integer) --*

          The number of nodes.

        - **EstimatedDiskUtilizationPercent** *(float) --*

          The estimated disk utilizaton percentage.

        - **Mode** *(string) --*

          The category of the node configuration recommendation.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeOrderableClusterOptionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeOrderableClusterOptionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeOrderableClusterOptionsPaginatePaginationConfigTypeDef(
    _DescribeOrderableClusterOptionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeOrderableClusterOptionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef = TypedDict(
    "_DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef",
    {"Name": str},
    total=False,
)


class DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef(
    _DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef
):
    """
    Type definition for
    `DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZones`
    `SupportedPlatforms`

    A list of supported platforms for orderable clusters.

    - **Name** *(string) --*
    """


_DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesTypeDef = TypedDict(
    "_DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesTypeDef",
    {
        "Name": str,
        "SupportedPlatforms": List[
            DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesSupportedPlatformsTypeDef
        ],
    },
    total=False,
)


class DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesTypeDef(
    _DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesTypeDef
):
    """
    Type definition for `DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptions`
    `AvailabilityZones`

    Describes an availability zone.

    - **Name** *(string) --*

      The name of the availability zone.

    - **SupportedPlatforms** *(list) --*

      - *(dict) --*

        A list of supported platforms for orderable clusters.

        - **Name** *(string) --*
    """


_DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsTypeDef = TypedDict(
    "_DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsTypeDef",
    {
        "ClusterVersion": str,
        "ClusterType": str,
        "NodeType": str,
        "AvailabilityZones": List[
            DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsAvailabilityZonesTypeDef
        ],
    },
    total=False,
)


class DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsTypeDef(
    _DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsTypeDef
):
    """
    Type definition for `DescribeOrderableClusterOptionsPaginateResponse` `OrderableClusterOptions`

    Describes an orderable cluster option.

    - **ClusterVersion** *(string) --*

      The version of the orderable cluster.

    - **ClusterType** *(string) --*

      The cluster type, for example ``multi-node`` .

    - **NodeType** *(string) --*

      The node type for the orderable cluster.

    - **AvailabilityZones** *(list) --*

      A list of availability zones for the orderable cluster.

      - *(dict) --*

        Describes an availability zone.

        - **Name** *(string) --*

          The name of the availability zone.

        - **SupportedPlatforms** *(list) --*

          - *(dict) --*

            A list of supported platforms for orderable clusters.

            - **Name** *(string) --*
    """


_DescribeOrderableClusterOptionsPaginateResponseTypeDef = TypedDict(
    "_DescribeOrderableClusterOptionsPaginateResponseTypeDef",
    {
        "OrderableClusterOptions": List[
            DescribeOrderableClusterOptionsPaginateResponseOrderableClusterOptionsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeOrderableClusterOptionsPaginateResponseTypeDef(
    _DescribeOrderableClusterOptionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeOrderableClusterOptionsPaginate` `Response`

    Contains the output from the  DescribeOrderableClusterOptions action.

    - **OrderableClusterOptions** *(list) --*

      An ``OrderableClusterOption`` structure containing information about orderable options for the
      cluster.

      - *(dict) --*

        Describes an orderable cluster option.

        - **ClusterVersion** *(string) --*

          The version of the orderable cluster.

        - **ClusterType** *(string) --*

          The cluster type, for example ``multi-node`` .

        - **NodeType** *(string) --*

          The node type for the orderable cluster.

        - **AvailabilityZones** *(list) --*

          A list of availability zones for the orderable cluster.

          - *(dict) --*

            Describes an availability zone.

            - **Name** *(string) --*

              The name of the availability zone.

            - **SupportedPlatforms** *(list) --*

              - *(dict) --*

                A list of supported platforms for orderable clusters.

                - **Name** *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeReservedNodeOfferingsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeReservedNodeOfferingsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeReservedNodeOfferingsPaginatePaginationConfigTypeDef(
    _DescribeReservedNodeOfferingsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeReservedNodeOfferingsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef = TypedDict(
    "_DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef(
    _DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef
):
    """
    Type definition for `DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferings`
    `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsTypeDef = TypedDict(
    "_DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsTypeDef",
    {
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "OfferingType": str,
        "RecurringCharges": List[
            DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsTypeDef(
    _DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsTypeDef
):
    """
    Type definition for `DescribeReservedNodeOfferingsPaginateResponse` `ReservedNodeOfferings`

    Describes a reserved node offering.

    - **ReservedNodeOfferingId** *(string) --*

      The offering identifier.

    - **NodeType** *(string) --*

      The node type offered by the reserved node offering.

    - **Duration** *(integer) --*

      The duration, in seconds, for which the offering will reserve the node.

    - **FixedPrice** *(float) --*

      The upfront fixed charge you will pay to purchase the specific reserved node offering.

    - **UsagePrice** *(float) --*

      The rate you are charged for each hour the cluster that is using the offering is running.

    - **CurrencyCode** *(string) --*

      The currency code for the compute nodes offering.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The charge to your account regardless of whether you are creating any clusters using the node
      offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_DescribeReservedNodeOfferingsPaginateResponseTypeDef = TypedDict(
    "_DescribeReservedNodeOfferingsPaginateResponseTypeDef",
    {
        "ReservedNodeOfferings": List[
            DescribeReservedNodeOfferingsPaginateResponseReservedNodeOfferingsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeReservedNodeOfferingsPaginateResponseTypeDef(
    _DescribeReservedNodeOfferingsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeReservedNodeOfferingsPaginate` `Response`

    - **ReservedNodeOfferings** *(list) --*

      A list of ``ReservedNodeOffering`` objects.

      - *(dict) --*

        Describes a reserved node offering.

        - **ReservedNodeOfferingId** *(string) --*

          The offering identifier.

        - **NodeType** *(string) --*

          The node type offered by the reserved node offering.

        - **Duration** *(integer) --*

          The duration, in seconds, for which the offering will reserve the node.

        - **FixedPrice** *(float) --*

          The upfront fixed charge you will pay to purchase the specific reserved node offering.

        - **UsagePrice** *(float) --*

          The rate you are charged for each hour the cluster that is using the offering is running.

        - **CurrencyCode** *(string) --*

          The currency code for the compute nodes offering.

        - **OfferingType** *(string) --*

          The anticipated utilization of the reserved node, as defined in the reserved node
          offering.

        - **RecurringCharges** *(list) --*

          The charge to your account regardless of whether you are creating any clusters using the
          node offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

          - *(dict) --*

            Describes a recurring charge.

            - **RecurringChargeAmount** *(float) --*

              The amount charged per the period of time specified by the recurring charge frequency.

            - **RecurringChargeFrequency** *(string) --*

              The frequency at which the recurring charge amount is applied.

        - **ReservedNodeOfferingType** *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeReservedNodesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeReservedNodesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeReservedNodesPaginatePaginationConfigTypeDef(
    _DescribeReservedNodesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeReservedNodesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeReservedNodesPaginateResponseReservedNodesRecurringChargesTypeDef = TypedDict(
    "_DescribeReservedNodesPaginateResponseReservedNodesRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class DescribeReservedNodesPaginateResponseReservedNodesRecurringChargesTypeDef(
    _DescribeReservedNodesPaginateResponseReservedNodesRecurringChargesTypeDef
):
    """
    Type definition for `DescribeReservedNodesPaginateResponseReservedNodes` `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_DescribeReservedNodesPaginateResponseReservedNodesTypeDef = TypedDict(
    "_DescribeReservedNodesPaginateResponseReservedNodesTypeDef",
    {
        "ReservedNodeId": str,
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "StartTime": datetime,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "NodeCount": int,
        "State": str,
        "OfferingType": str,
        "RecurringCharges": List[
            DescribeReservedNodesPaginateResponseReservedNodesRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class DescribeReservedNodesPaginateResponseReservedNodesTypeDef(
    _DescribeReservedNodesPaginateResponseReservedNodesTypeDef
):
    """
    Type definition for `DescribeReservedNodesPaginateResponse` `ReservedNodes`

    Describes a reserved node. You can call the  DescribeReservedNodeOfferings API to obtain the
    available reserved node offerings.

    - **ReservedNodeId** *(string) --*

      The unique identifier for the reservation.

    - **ReservedNodeOfferingId** *(string) --*

      The identifier for the reserved node offering.

    - **NodeType** *(string) --*

      The node type of the reserved node.

    - **StartTime** *(datetime) --*

      The time the reservation started. You purchase a reserved node offering for a duration. This
      is the start time of that duration.

    - **Duration** *(integer) --*

      The duration of the node reservation in seconds.

    - **FixedPrice** *(float) --*

      The fixed cost Amazon Redshift charges you for this reserved node.

    - **UsagePrice** *(float) --*

      The hourly rate Amazon Redshift charges you for this reserved node.

    - **CurrencyCode** *(string) --*

      The currency code for the reserved cluster.

    - **NodeCount** *(integer) --*

      The number of reserved compute nodes.

    - **State** *(string) --*

      The state of the reserved compute node.

      Possible Values:

      * pending-payment-This reserved node has recently been purchased, and the sale has been
      approved, but payment has not yet been confirmed.

      * active-This reserved node is owned by the caller and is available for use.

      * payment-failed-Payment failed for the purchase attempt.

      * retired-The reserved node is no longer available.

      * exchanging-The owner is exchanging the reserved node for another reserved node.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The recurring charges for the reserved node.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_DescribeReservedNodesPaginateResponseTypeDef = TypedDict(
    "_DescribeReservedNodesPaginateResponseTypeDef",
    {
        "ReservedNodes": List[DescribeReservedNodesPaginateResponseReservedNodesTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeReservedNodesPaginateResponseTypeDef(_DescribeReservedNodesPaginateResponseTypeDef):
    """
    Type definition for `DescribeReservedNodesPaginate` `Response`

    - **ReservedNodes** *(list) --*

      The list of ``ReservedNode`` objects.

      - *(dict) --*

        Describes a reserved node. You can call the  DescribeReservedNodeOfferings API to obtain the
        available reserved node offerings.

        - **ReservedNodeId** *(string) --*

          The unique identifier for the reservation.

        - **ReservedNodeOfferingId** *(string) --*

          The identifier for the reserved node offering.

        - **NodeType** *(string) --*

          The node type of the reserved node.

        - **StartTime** *(datetime) --*

          The time the reservation started. You purchase a reserved node offering for a duration.
          This is the start time of that duration.

        - **Duration** *(integer) --*

          The duration of the node reservation in seconds.

        - **FixedPrice** *(float) --*

          The fixed cost Amazon Redshift charges you for this reserved node.

        - **UsagePrice** *(float) --*

          The hourly rate Amazon Redshift charges you for this reserved node.

        - **CurrencyCode** *(string) --*

          The currency code for the reserved cluster.

        - **NodeCount** *(integer) --*

          The number of reserved compute nodes.

        - **State** *(string) --*

          The state of the reserved compute node.

          Possible Values:

          * pending-payment-This reserved node has recently been purchased, and the sale has been
          approved, but payment has not yet been confirmed.

          * active-This reserved node is owned by the caller and is available for use.

          * payment-failed-Payment failed for the purchase attempt.

          * retired-The reserved node is no longer available.

          * exchanging-The owner is exchanging the reserved node for another reserved node.

        - **OfferingType** *(string) --*

          The anticipated utilization of the reserved node, as defined in the reserved node
          offering.

        - **RecurringCharges** *(list) --*

          The recurring charges for the reserved node.

          - *(dict) --*

            Describes a recurring charge.

            - **RecurringChargeAmount** *(float) --*

              The amount charged per the period of time specified by the recurring charge frequency.

            - **RecurringChargeFrequency** *(string) --*

              The frequency at which the recurring charge amount is applied.

        - **ReservedNodeOfferingType** *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeScheduledActionsPaginateFiltersTypeDef = TypedDict(
    "_DescribeScheduledActionsPaginateFiltersTypeDef", {"Name": str, "Values": List[str]}
)


class DescribeScheduledActionsPaginateFiltersTypeDef(
    _DescribeScheduledActionsPaginateFiltersTypeDef
):
    """
    Type definition for `DescribeScheduledActionsPaginate` `Filters`

    A set of elements to filter the returned scheduled actions.

    - **Name** *(string) --* **[REQUIRED]**

      The type of element to filter.

    - **Values** *(list) --* **[REQUIRED]**

      List of values. Compare if the value (of type defined by ``Name`` ) equals an item in the list
      of scheduled actions.

      - *(string) --*
    """


_DescribeScheduledActionsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeScheduledActionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeScheduledActionsPaginatePaginationConfigTypeDef(
    _DescribeScheduledActionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeScheduledActionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionResizeClusterTypeDef = TypedDict(
    "_DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionResizeClusterTypeDef",
    {
        "ClusterIdentifier": str,
        "ClusterType": str,
        "NodeType": str,
        "NumberOfNodes": int,
        "Classic": bool,
    },
    total=False,
)


class DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionResizeClusterTypeDef(
    _DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionResizeClusterTypeDef
):
    """
    Type definition for `DescribeScheduledActionsPaginateResponseScheduledActionsTargetAction`
    `ResizeCluster`

    An action that runs a ``ResizeCluster`` API operation.

    - **ClusterIdentifier** *(string) --*

      The unique identifier for the cluster to resize.

    - **ClusterType** *(string) --*

      The new cluster type for the specified cluster.

    - **NodeType** *(string) --*

      The new node type for the nodes you are adding. If not specified, the cluster's current node
      type is used.

    - **NumberOfNodes** *(integer) --*

      The new number of nodes for the cluster.

    - **Classic** *(boolean) --*

      A boolean value indicating whether the resize operation is using the classic resize process.
      If you don't provide this parameter or set the value to ``false`` , the resize type is
      elastic.
    """


_DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionTypeDef = TypedDict(
    "_DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionTypeDef",
    {
        "ResizeCluster": DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionResizeClusterTypeDef
    },
    total=False,
)


class DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionTypeDef(
    _DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionTypeDef
):
    """
    Type definition for `DescribeScheduledActionsPaginateResponseScheduledActions` `TargetAction`

    A JSON format string of the Amazon Redshift API operation with input parameters.

    "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
    ".

    - **ResizeCluster** *(dict) --*

      An action that runs a ``ResizeCluster`` API operation.

      - **ClusterIdentifier** *(string) --*

        The unique identifier for the cluster to resize.

      - **ClusterType** *(string) --*

        The new cluster type for the specified cluster.

      - **NodeType** *(string) --*

        The new node type for the nodes you are adding. If not specified, the cluster's current node
        type is used.

      - **NumberOfNodes** *(integer) --*

        The new number of nodes for the cluster.

      - **Classic** *(boolean) --*

        A boolean value indicating whether the resize operation is using the classic resize process.
        If you don't provide this parameter or set the value to ``false`` , the resize type is
        elastic.
    """


_DescribeScheduledActionsPaginateResponseScheduledActionsTypeDef = TypedDict(
    "_DescribeScheduledActionsPaginateResponseScheduledActionsTypeDef",
    {
        "ScheduledActionName": str,
        "TargetAction": DescribeScheduledActionsPaginateResponseScheduledActionsTargetActionTypeDef,
        "Schedule": str,
        "IamRole": str,
        "ScheduledActionDescription": str,
        "State": str,
        "NextInvocations": List[datetime],
        "StartTime": datetime,
        "EndTime": datetime,
    },
    total=False,
)


class DescribeScheduledActionsPaginateResponseScheduledActionsTypeDef(
    _DescribeScheduledActionsPaginateResponseScheduledActionsTypeDef
):
    """
    Type definition for `DescribeScheduledActionsPaginateResponse` `ScheduledActions`

    Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift API
    operations on a schedule. For information about which API operations can be scheduled, see
    ScheduledActionType .

    - **ScheduledActionName** *(string) --*

      The name of the scheduled action.

    - **TargetAction** *(dict) --*

      A JSON format string of the Amazon Redshift API operation with input parameters.

      "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
      ".

      - **ResizeCluster** *(dict) --*

        An action that runs a ``ResizeCluster`` API operation.

        - **ClusterIdentifier** *(string) --*

          The unique identifier for the cluster to resize.

        - **ClusterType** *(string) --*

          The new cluster type for the specified cluster.

        - **NodeType** *(string) --*

          The new node type for the nodes you are adding. If not specified, the cluster's current
          node type is used.

        - **NumberOfNodes** *(integer) --*

          The new number of nodes for the cluster.

        - **Classic** *(boolean) --*

          A boolean value indicating whether the resize operation is using the classic resize
          process. If you don't provide this parameter or set the value to ``false`` , the resize
          type is elastic.

    - **Schedule** *(string) --*

      The schedule for a one-time (at format) or recurring (cron format) scheduled action. Schedule
      invocations must be separated by at least one hour.

      Format of at expressions is "``at(yyyy-mm-ddThh:mm:ss)`` ". For example,
      "``at(2016-03-04T17:27:00)`` ".

      Format of cron expressions is "``cron(Minutes Hours Day-of-month Month Day-of-week Year)`` ".
      For example, "``cron(0, 10, *, *, MON, *)`` ". For more information, see `Cron Expressions
      <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions>`__
      in the *Amazon CloudWatch Events User Guide* .

    - **IamRole** *(string) --*

      The IAM role to assume to run the scheduled action. This IAM role must have permission to run
      the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon
      Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your
      behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see
      `Using Identity-Based Policies for Amazon Redshift
      <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html>`__
      in the *Amazon Redshift Cluster Management Guide* .

    - **ScheduledActionDescription** *(string) --*

      The description of the scheduled action.

    - **State** *(string) --*

      The state of the scheduled action. For example, ``DISABLED`` .

    - **NextInvocations** *(list) --*

      List of times when the scheduled action will run.

      - *(datetime) --*

    - **StartTime** *(datetime) --*

      The start time in UTC when the schedule is active. Before this time, the scheduled action does
      not trigger.

    - **EndTime** *(datetime) --*

      The end time in UTC when the schedule is no longer active. After this time, the scheduled
      action does not trigger.
    """


_DescribeScheduledActionsPaginateResponseTypeDef = TypedDict(
    "_DescribeScheduledActionsPaginateResponseTypeDef",
    {
        "ScheduledActions": List[DescribeScheduledActionsPaginateResponseScheduledActionsTypeDef],
        "NextToken": str,
    },
    total=False,
)


class DescribeScheduledActionsPaginateResponseTypeDef(
    _DescribeScheduledActionsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeScheduledActionsPaginate` `Response`

    - **ScheduledActions** *(list) --*

      List of retrieved scheduled actions.

      - *(dict) --*

        Describes a scheduled action. You can use a scheduled action to trigger some Amazon Redshift
        API operations on a schedule. For information about which API operations can be scheduled,
        see  ScheduledActionType .

        - **ScheduledActionName** *(string) --*

          The name of the scheduled action.

        - **TargetAction** *(dict) --*

          A JSON format string of the Amazon Redshift API operation with input parameters.

          "``{\\"ResizeCluster\\":{\\"NodeType\\":\\"ds2.8xlarge\\",\\"ClusterIdentifier\\":\\"my-test-cluster\\",\\"NumberOfNodes\\":3}}``
          ".

          - **ResizeCluster** *(dict) --*

            An action that runs a ``ResizeCluster`` API operation.

            - **ClusterIdentifier** *(string) --*

              The unique identifier for the cluster to resize.

            - **ClusterType** *(string) --*

              The new cluster type for the specified cluster.

            - **NodeType** *(string) --*

              The new node type for the nodes you are adding. If not specified, the cluster's
              current node type is used.

            - **NumberOfNodes** *(integer) --*

              The new number of nodes for the cluster.

            - **Classic** *(boolean) --*

              A boolean value indicating whether the resize operation is using the classic resize
              process. If you don't provide this parameter or set the value to ``false`` , the
              resize type is elastic.

        - **Schedule** *(string) --*

          The schedule for a one-time (at format) or recurring (cron format) scheduled action.
          Schedule invocations must be separated by at least one hour.

          Format of at expressions is "``at(yyyy-mm-ddThh:mm:ss)`` ". For example,
          "``at(2016-03-04T17:27:00)`` ".

          Format of cron expressions is "``cron(Minutes Hours Day-of-month Month Day-of-week Year)``
          ". For example, "``cron(0, 10, *, *, MON, *)`` ". For more information, see `Cron
          Expressions
          <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions>`__
          in the *Amazon CloudWatch Events User Guide* .

        - **IamRole** *(string) --*

          The IAM role to assume to run the scheduled action. This IAM role must have permission to
          run the Amazon Redshift API operation in the scheduled action. This IAM role must allow
          the Amazon Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume
          permissions on your behalf. For more information about the IAM role to use with the Amazon
          Redshift scheduler, see `Using Identity-Based Policies for Amazon Redshift
          <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html>`__
          in the *Amazon Redshift Cluster Management Guide* .

        - **ScheduledActionDescription** *(string) --*

          The description of the scheduled action.

        - **State** *(string) --*

          The state of the scheduled action. For example, ``DISABLED`` .

        - **NextInvocations** *(list) --*

          List of times when the scheduled action will run.

          - *(datetime) --*

        - **StartTime** *(datetime) --*

          The start time in UTC when the schedule is active. Before this time, the scheduled action
          does not trigger.

        - **EndTime** *(datetime) --*

          The end time in UTC when the schedule is no longer active. After this time, the scheduled
          action does not trigger.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeSnapshotCopyGrantsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeSnapshotCopyGrantsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeSnapshotCopyGrantsPaginatePaginationConfigTypeDef(
    _DescribeSnapshotCopyGrantsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeSnapshotCopyGrantsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTagsTypeDef = TypedDict(
    "_DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTagsTypeDef(
    _DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTagsTypeDef
):
    """
    Type definition for `DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrants` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTypeDef = TypedDict(
    "_DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTypeDef",
    {
        "SnapshotCopyGrantName": str,
        "KmsKeyId": str,
        "Tags": List[DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTagsTypeDef],
    },
    total=False,
)


class DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTypeDef(
    _DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTypeDef
):
    """
    Type definition for `DescribeSnapshotCopyGrantsPaginateResponse` `SnapshotCopyGrants`

    The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with
    the specified customer master key (CMK) from AWS KMS in the destination region.

    For more information about managing snapshot copy grants, go to `Amazon Redshift Database
    Encryption <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html>`__
    in the *Amazon Redshift Cluster Management Guide* .

    - **SnapshotCopyGrantName** *(string) --*

      The name of the snapshot copy grant.

    - **KmsKeyId** *(string) --*

      The unique identifier of the customer master key (CMK) in AWS KMS to which Amazon Redshift is
      granted permission.

    - **Tags** *(list) --*

      A list of tag instances.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.
    """


_DescribeSnapshotCopyGrantsPaginateResponseTypeDef = TypedDict(
    "_DescribeSnapshotCopyGrantsPaginateResponseTypeDef",
    {
        "SnapshotCopyGrants": List[
            DescribeSnapshotCopyGrantsPaginateResponseSnapshotCopyGrantsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeSnapshotCopyGrantsPaginateResponseTypeDef(
    _DescribeSnapshotCopyGrantsPaginateResponseTypeDef
):
    """
    Type definition for `DescribeSnapshotCopyGrantsPaginate` `Response`

    - **SnapshotCopyGrants** *(list) --*

      The list of ``SnapshotCopyGrant`` objects.

      - *(dict) --*

        The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots
        with the specified customer master key (CMK) from AWS KMS in the destination region.

        For more information about managing snapshot copy grants, go to `Amazon Redshift Database
        Encryption
        <https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html>`__ in the
        *Amazon Redshift Cluster Management Guide* .

        - **SnapshotCopyGrantName** *(string) --*

          The name of the snapshot copy grant.

        - **KmsKeyId** *(string) --*

          The unique identifier of the customer master key (CMK) in AWS KMS to which Amazon Redshift
          is granted permission.

        - **Tags** *(list) --*

          A list of tag instances.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeSnapshotSchedulesPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeSnapshotSchedulesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeSnapshotSchedulesPaginatePaginationConfigTypeDef(
    _DescribeSnapshotSchedulesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeSnapshotSchedulesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesAssociatedClustersTypeDef = TypedDict(
    "_DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesAssociatedClustersTypeDef",
    {"ClusterIdentifier": str, "ScheduleAssociationState": str},
    total=False,
)


class DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesAssociatedClustersTypeDef(
    _DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesAssociatedClustersTypeDef
):
    """
    Type definition for `DescribeSnapshotSchedulesPaginateResponseSnapshotSchedules`
    `AssociatedClusters`

    - **ClusterIdentifier** *(string) --*

    - **ScheduleAssociationState** *(string) --*
    """


_DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTagsTypeDef = TypedDict(
    "_DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTagsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTagsTypeDef(
    _DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTagsTypeDef
):
    """
    Type definition for `DescribeSnapshotSchedulesPaginateResponseSnapshotSchedules` `Tags`

    A tag consisting of a name/value pair for a resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTypeDef = TypedDict(
    "_DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTypeDef",
    {
        "ScheduleDefinitions": List[str],
        "ScheduleIdentifier": str,
        "ScheduleDescription": str,
        "Tags": List[DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTagsTypeDef],
        "NextInvocations": List[datetime],
        "AssociatedClusterCount": int,
        "AssociatedClusters": List[
            DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesAssociatedClustersTypeDef
        ],
    },
    total=False,
)


class DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTypeDef(
    _DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTypeDef
):
    """
    Type definition for `DescribeSnapshotSchedulesPaginateResponse` `SnapshotSchedules`

    Describes a snapshot schedule. You can set a regular interval for creating snapshots of a
    cluster. You can also schedule snapshots for specific dates.

    - **ScheduleDefinitions** *(list) --*

      A list of ScheduleDefinitions.

      - *(string) --*

    - **ScheduleIdentifier** *(string) --*

      A unique identifier for the schedule.

    - **ScheduleDescription** *(string) --*

      The description of the schedule.

    - **Tags** *(list) --*

      An optional set of tags describing the schedule.

      - *(dict) --*

        A tag consisting of a name/value pair for a resource.

        - **Key** *(string) --*

          The key, or name, for the resource tag.

        - **Value** *(string) --*

          The value for the resource tag.

    - **NextInvocations** *(list) --*

      - *(datetime) --*

    - **AssociatedClusterCount** *(integer) --*

      The number of clusters associated with the schedule.

    - **AssociatedClusters** *(list) --*

      A list of clusters associated with the schedule. A maximum of 100 clusters is returned.

      - *(dict) --*

        - **ClusterIdentifier** *(string) --*

        - **ScheduleAssociationState** *(string) --*
    """


_DescribeSnapshotSchedulesPaginateResponseTypeDef = TypedDict(
    "_DescribeSnapshotSchedulesPaginateResponseTypeDef",
    {
        "SnapshotSchedules": List[
            DescribeSnapshotSchedulesPaginateResponseSnapshotSchedulesTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeSnapshotSchedulesPaginateResponseTypeDef(
    _DescribeSnapshotSchedulesPaginateResponseTypeDef
):
    """
    Type definition for `DescribeSnapshotSchedulesPaginate` `Response`

    - **SnapshotSchedules** *(list) --*

      A list of SnapshotSchedules.

      - *(dict) --*

        Describes a snapshot schedule. You can set a regular interval for creating snapshots of a
        cluster. You can also schedule snapshots for specific dates.

        - **ScheduleDefinitions** *(list) --*

          A list of ScheduleDefinitions.

          - *(string) --*

        - **ScheduleIdentifier** *(string) --*

          A unique identifier for the schedule.

        - **ScheduleDescription** *(string) --*

          The description of the schedule.

        - **Tags** *(list) --*

          An optional set of tags describing the schedule.

          - *(dict) --*

            A tag consisting of a name/value pair for a resource.

            - **Key** *(string) --*

              The key, or name, for the resource tag.

            - **Value** *(string) --*

              The value for the resource tag.

        - **NextInvocations** *(list) --*

          - *(datetime) --*

        - **AssociatedClusterCount** *(integer) --*

          The number of clusters associated with the schedule.

        - **AssociatedClusters** *(list) --*

          A list of clusters associated with the schedule. A maximum of 100 clusters is returned.

          - *(dict) --*

            - **ClusterIdentifier** *(string) --*

            - **ScheduleAssociationState** *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeTableRestoreStatusPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeTableRestoreStatusPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeTableRestoreStatusPaginatePaginationConfigTypeDef(
    _DescribeTableRestoreStatusPaginatePaginationConfigTypeDef
):
    """
    Type definition for `DescribeTableRestoreStatusPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeTableRestoreStatusPaginateResponseTableRestoreStatusDetailsTypeDef = TypedDict(
    "_DescribeTableRestoreStatusPaginateResponseTableRestoreStatusDetailsTypeDef",
    {
        "TableRestoreRequestId": str,
        "Status": str,
        "Message": str,
        "RequestTime": datetime,
        "ProgressInMegaBytes": int,
        "TotalDataInMegaBytes": int,
        "ClusterIdentifier": str,
        "SnapshotIdentifier": str,
        "SourceDatabaseName": str,
        "SourceSchemaName": str,
        "SourceTableName": str,
        "TargetDatabaseName": str,
        "TargetSchemaName": str,
        "NewTableName": str,
    },
    total=False,
)


class DescribeTableRestoreStatusPaginateResponseTableRestoreStatusDetailsTypeDef(
    _DescribeTableRestoreStatusPaginateResponseTableRestoreStatusDetailsTypeDef
):
    """
    Type definition for `DescribeTableRestoreStatusPaginateResponse` `TableRestoreStatusDetails`

    Describes the status of a  RestoreTableFromClusterSnapshot operation.

    - **TableRestoreRequestId** *(string) --*

      The unique identifier for the table restore request.

    - **Status** *(string) --*

      A value that describes the current state of the table restore request.

      Valid Values: ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS``

    - **Message** *(string) --*

      A description of the status of the table restore request. Status values include ``SUCCEEDED``
      , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS`` .

    - **RequestTime** *(datetime) --*

      The time that the table restore request was made, in Universal Coordinated Time (UTC).

    - **ProgressInMegaBytes** *(integer) --*

      The amount of data restored to the new table so far, in megabytes (MB).

    - **TotalDataInMegaBytes** *(integer) --*

      The total amount of data to restore to the new table, in megabytes (MB).

    - **ClusterIdentifier** *(string) --*

      The identifier of the Amazon Redshift cluster that the table is being restored to.

    - **SnapshotIdentifier** *(string) --*

      The identifier of the snapshot that the table is being restored from.

    - **SourceDatabaseName** *(string) --*

      The name of the source database that contains the table being restored.

    - **SourceSchemaName** *(string) --*

      The name of the source schema that contains the table being restored.

    - **SourceTableName** *(string) --*

      The name of the source table being restored.

    - **TargetDatabaseName** *(string) --*

      The name of the database to restore the table to.

    - **TargetSchemaName** *(string) --*

      The name of the schema to restore the table to.

    - **NewTableName** *(string) --*

      The name of the table to create as a result of the table restore request.
    """


_DescribeTableRestoreStatusPaginateResponseTypeDef = TypedDict(
    "_DescribeTableRestoreStatusPaginateResponseTypeDef",
    {
        "TableRestoreStatusDetails": List[
            DescribeTableRestoreStatusPaginateResponseTableRestoreStatusDetailsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class DescribeTableRestoreStatusPaginateResponseTypeDef(
    _DescribeTableRestoreStatusPaginateResponseTypeDef
):
    """
    Type definition for `DescribeTableRestoreStatusPaginate` `Response`

    - **TableRestoreStatusDetails** *(list) --*

      A list of status details for one or more table restore requests.

      - *(dict) --*

        Describes the status of a  RestoreTableFromClusterSnapshot operation.

        - **TableRestoreRequestId** *(string) --*

          The unique identifier for the table restore request.

        - **Status** *(string) --*

          A value that describes the current state of the table restore request.

          Valid Values: ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS``

        - **Message** *(string) --*

          A description of the status of the table restore request. Status values include
          ``SUCCEEDED`` , ``FAILED`` , ``CANCELED`` , ``PENDING`` , ``IN_PROGRESS`` .

        - **RequestTime** *(datetime) --*

          The time that the table restore request was made, in Universal Coordinated Time (UTC).

        - **ProgressInMegaBytes** *(integer) --*

          The amount of data restored to the new table so far, in megabytes (MB).

        - **TotalDataInMegaBytes** *(integer) --*

          The total amount of data to restore to the new table, in megabytes (MB).

        - **ClusterIdentifier** *(string) --*

          The identifier of the Amazon Redshift cluster that the table is being restored to.

        - **SnapshotIdentifier** *(string) --*

          The identifier of the snapshot that the table is being restored from.

        - **SourceDatabaseName** *(string) --*

          The name of the source database that contains the table being restored.

        - **SourceSchemaName** *(string) --*

          The name of the source schema that contains the table being restored.

        - **SourceTableName** *(string) --*

          The name of the source table being restored.

        - **TargetDatabaseName** *(string) --*

          The name of the database to restore the table to.

        - **TargetSchemaName** *(string) --*

          The name of the schema to restore the table to.

        - **NewTableName** *(string) --*

          The name of the table to create as a result of the table restore request.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_DescribeTagsPaginatePaginationConfigTypeDef = TypedDict(
    "_DescribeTagsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class DescribeTagsPaginatePaginationConfigTypeDef(_DescribeTagsPaginatePaginationConfigTypeDef):
    """
    Type definition for `DescribeTagsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_DescribeTagsPaginateResponseTaggedResourcesTagTypeDef = TypedDict(
    "_DescribeTagsPaginateResponseTaggedResourcesTagTypeDef",
    {"Key": str, "Value": str},
    total=False,
)


class DescribeTagsPaginateResponseTaggedResourcesTagTypeDef(
    _DescribeTagsPaginateResponseTaggedResourcesTagTypeDef
):
    """
    Type definition for `DescribeTagsPaginateResponseTaggedResources` `Tag`

    The tag for the resource.

    - **Key** *(string) --*

      The key, or name, for the resource tag.

    - **Value** *(string) --*

      The value for the resource tag.
    """


_DescribeTagsPaginateResponseTaggedResourcesTypeDef = TypedDict(
    "_DescribeTagsPaginateResponseTaggedResourcesTypeDef",
    {
        "Tag": DescribeTagsPaginateResponseTaggedResourcesTagTypeDef,
        "ResourceName": str,
        "ResourceType": str,
    },
    total=False,
)


class DescribeTagsPaginateResponseTaggedResourcesTypeDef(
    _DescribeTagsPaginateResponseTaggedResourcesTypeDef
):
    """
    Type definition for `DescribeTagsPaginateResponse` `TaggedResources`

    A tag and its associated resource.

    - **Tag** *(dict) --*

      The tag for the resource.

      - **Key** *(string) --*

        The key, or name, for the resource tag.

      - **Value** *(string) --*

        The value for the resource tag.

    - **ResourceName** *(string) --*

      The Amazon Resource Name (ARN) with which the tag is associated, for example:
      ``arn:aws:redshift:us-east-1:123456789:cluster:t1`` .

    - **ResourceType** *(string) --*

      The type of resource with which the tag is associated. Valid resource types are:

      * Cluster

      * CIDR/IP

      * EC2 security group

      * Snapshot

      * Cluster security group

      * Subnet group

      * HSM connection

      * HSM certificate

      * Parameter group

      For more information about Amazon Redshift resource types and constructing ARNs, go to
      `Constructing an Amazon Redshift Amazon Resource Name (ARN)
      <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions>`__
      in the Amazon Redshift Cluster Management Guide.
    """


_DescribeTagsPaginateResponseTypeDef = TypedDict(
    "_DescribeTagsPaginateResponseTypeDef",
    {"TaggedResources": List[DescribeTagsPaginateResponseTaggedResourcesTypeDef], "NextToken": str},
    total=False,
)


class DescribeTagsPaginateResponseTypeDef(_DescribeTagsPaginateResponseTypeDef):
    """
    Type definition for `DescribeTagsPaginate` `Response`

    - **TaggedResources** *(list) --*

      A list of tags with their associated resources.

      - *(dict) --*

        A tag and its associated resource.

        - **Tag** *(dict) --*

          The tag for the resource.

          - **Key** *(string) --*

            The key, or name, for the resource tag.

          - **Value** *(string) --*

            The value for the resource tag.

        - **ResourceName** *(string) --*

          The Amazon Resource Name (ARN) with which the tag is associated, for example:
          ``arn:aws:redshift:us-east-1:123456789:cluster:t1`` .

        - **ResourceType** *(string) --*

          The type of resource with which the tag is associated. Valid resource types are:

          * Cluster

          * CIDR/IP

          * EC2 security group

          * Snapshot

          * Cluster security group

          * Subnet group

          * HSM connection

          * HSM certificate

          * Parameter group

          For more information about Amazon Redshift resource types and constructing ARNs, go to
          `Constructing an Amazon Redshift Amazon Resource Name (ARN)
          <https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions>`__
          in the Amazon Redshift Cluster Management Guide.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_GetReservedNodeExchangeOfferingsPaginatePaginationConfigTypeDef = TypedDict(
    "_GetReservedNodeExchangeOfferingsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class GetReservedNodeExchangeOfferingsPaginatePaginationConfigTypeDef(
    _GetReservedNodeExchangeOfferingsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `GetReservedNodeExchangeOfferingsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef = TypedDict(
    "_GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef",
    {"RecurringChargeAmount": float, "RecurringChargeFrequency": str},
    total=False,
)


class GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef(
    _GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef
):
    """
    Type definition for `GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferings`
    `RecurringCharges`

    Describes a recurring charge.

    - **RecurringChargeAmount** *(float) --*

      The amount charged per the period of time specified by the recurring charge frequency.

    - **RecurringChargeFrequency** *(string) --*

      The frequency at which the recurring charge amount is applied.
    """


_GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsTypeDef = TypedDict(
    "_GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsTypeDef",
    {
        "ReservedNodeOfferingId": str,
        "NodeType": str,
        "Duration": int,
        "FixedPrice": float,
        "UsagePrice": float,
        "CurrencyCode": str,
        "OfferingType": str,
        "RecurringCharges": List[
            GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsRecurringChargesTypeDef
        ],
        "ReservedNodeOfferingType": str,
    },
    total=False,
)


class GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsTypeDef(
    _GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsTypeDef
):
    """
    Type definition for `GetReservedNodeExchangeOfferingsPaginateResponse` `ReservedNodeOfferings`

    Describes a reserved node offering.

    - **ReservedNodeOfferingId** *(string) --*

      The offering identifier.

    - **NodeType** *(string) --*

      The node type offered by the reserved node offering.

    - **Duration** *(integer) --*

      The duration, in seconds, for which the offering will reserve the node.

    - **FixedPrice** *(float) --*

      The upfront fixed charge you will pay to purchase the specific reserved node offering.

    - **UsagePrice** *(float) --*

      The rate you are charged for each hour the cluster that is using the offering is running.

    - **CurrencyCode** *(string) --*

      The currency code for the compute nodes offering.

    - **OfferingType** *(string) --*

      The anticipated utilization of the reserved node, as defined in the reserved node offering.

    - **RecurringCharges** *(list) --*

      The charge to your account regardless of whether you are creating any clusters using the node
      offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

      - *(dict) --*

        Describes a recurring charge.

        - **RecurringChargeAmount** *(float) --*

          The amount charged per the period of time specified by the recurring charge frequency.

        - **RecurringChargeFrequency** *(string) --*

          The frequency at which the recurring charge amount is applied.

    - **ReservedNodeOfferingType** *(string) --*
    """


_GetReservedNodeExchangeOfferingsPaginateResponseTypeDef = TypedDict(
    "_GetReservedNodeExchangeOfferingsPaginateResponseTypeDef",
    {
        "ReservedNodeOfferings": List[
            GetReservedNodeExchangeOfferingsPaginateResponseReservedNodeOfferingsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)


class GetReservedNodeExchangeOfferingsPaginateResponseTypeDef(
    _GetReservedNodeExchangeOfferingsPaginateResponseTypeDef
):
    """
    Type definition for `GetReservedNodeExchangeOfferingsPaginate` `Response`

    - **ReservedNodeOfferings** *(list) --*

      Returns an array of  ReservedNodeOffering objects.

      - *(dict) --*

        Describes a reserved node offering.

        - **ReservedNodeOfferingId** *(string) --*

          The offering identifier.

        - **NodeType** *(string) --*

          The node type offered by the reserved node offering.

        - **Duration** *(integer) --*

          The duration, in seconds, for which the offering will reserve the node.

        - **FixedPrice** *(float) --*

          The upfront fixed charge you will pay to purchase the specific reserved node offering.

        - **UsagePrice** *(float) --*

          The rate you are charged for each hour the cluster that is using the offering is running.

        - **CurrencyCode** *(string) --*

          The currency code for the compute nodes offering.

        - **OfferingType** *(string) --*

          The anticipated utilization of the reserved node, as defined in the reserved node
          offering.

        - **RecurringCharges** *(list) --*

          The charge to your account regardless of whether you are creating any clusters using the
          node offering. Recurring charges are only in effect for heavy-utilization reserved nodes.

          - *(dict) --*

            Describes a recurring charge.

            - **RecurringChargeAmount** *(float) --*

              The amount charged per the period of time specified by the recurring charge frequency.

            - **RecurringChargeFrequency** *(string) --*

              The frequency at which the recurring charge amount is applied.

        - **ReservedNodeOfferingType** *(string) --*

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_RequiredSnapshotAvailableWaitSortingEntitiesTypeDef = TypedDict(
    "_RequiredSnapshotAvailableWaitSortingEntitiesTypeDef", {"Attribute": str}
)
_OptionalSnapshotAvailableWaitSortingEntitiesTypeDef = TypedDict(
    "_OptionalSnapshotAvailableWaitSortingEntitiesTypeDef", {"SortOrder": str}, total=False
)


class SnapshotAvailableWaitSortingEntitiesTypeDef(
    _RequiredSnapshotAvailableWaitSortingEntitiesTypeDef,
    _OptionalSnapshotAvailableWaitSortingEntitiesTypeDef,
):
    """
    Type definition for `SnapshotAvailableWait` `SortingEntities`

    Describes a sorting entity

    - **Attribute** *(string) --* **[REQUIRED]**

      The category for sorting the snapshots.

    - **SortOrder** *(string) --*

      The order for listing the attributes.
    """


_SnapshotAvailableWaitWaiterConfigTypeDef = TypedDict(
    "_SnapshotAvailableWaitWaiterConfigTypeDef", {"Delay": int, "MaxAttempts": int}, total=False
)


class SnapshotAvailableWaitWaiterConfigTypeDef(_SnapshotAvailableWaitWaiterConfigTypeDef):
    """
    Type definition for `SnapshotAvailableWait` `WaiterConfig`

    A dictionary that provides parameters to control waiting behavior.

    - **Delay** *(integer) --*

      The amount of time in seconds to wait between attempts. Default: 15

    - **MaxAttempts** *(integer) --*

      The maximum number of attempts to be made. Default: 20
    """
