"Main interface for swf type defs"
from __future__ import annotations

from datetime import datetime
from typing import List
from typing_extensions import TypedDict


__all__ = (
    "ClientCountClosedWorkflowExecutionsResponseTypeDef",
    "ClientCountClosedWorkflowExecutionscloseStatusFilterTypeDef",
    "ClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef",
    "ClientCountClosedWorkflowExecutionsexecutionFilterTypeDef",
    "ClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef",
    "ClientCountClosedWorkflowExecutionstagFilterTypeDef",
    "ClientCountClosedWorkflowExecutionstypeFilterTypeDef",
    "ClientCountOpenWorkflowExecutionsResponseTypeDef",
    "ClientCountOpenWorkflowExecutionsexecutionFilterTypeDef",
    "ClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef",
    "ClientCountOpenWorkflowExecutionstagFilterTypeDef",
    "ClientCountOpenWorkflowExecutionstypeFilterTypeDef",
    "ClientCountPendingActivityTasksResponseTypeDef",
    "ClientCountPendingActivityTaskstaskListTypeDef",
    "ClientCountPendingDecisionTasksResponseTypeDef",
    "ClientCountPendingDecisionTaskstaskListTypeDef",
    "ClientDeprecateActivityTypeactivityTypeTypeDef",
    "ClientDeprecateWorkflowTypeworkflowTypeTypeDef",
    "ClientDescribeActivityTypeResponseconfigurationdefaultTaskListTypeDef",
    "ClientDescribeActivityTypeResponseconfigurationTypeDef",
    "ClientDescribeActivityTypeResponsetypeInfoactivityTypeTypeDef",
    "ClientDescribeActivityTypeResponsetypeInfoTypeDef",
    "ClientDescribeActivityTypeResponseTypeDef",
    "ClientDescribeActivityTypeactivityTypeTypeDef",
    "ClientDescribeDomainResponseconfigurationTypeDef",
    "ClientDescribeDomainResponsedomainInfoTypeDef",
    "ClientDescribeDomainResponseTypeDef",
    "ClientDescribeWorkflowExecutionResponseexecutionConfigurationtaskListTypeDef",
    "ClientDescribeWorkflowExecutionResponseexecutionConfigurationTypeDef",
    "ClientDescribeWorkflowExecutionResponseexecutionInfoexecutionTypeDef",
    "ClientDescribeWorkflowExecutionResponseexecutionInfoparentTypeDef",
    "ClientDescribeWorkflowExecutionResponseexecutionInfoworkflowTypeTypeDef",
    "ClientDescribeWorkflowExecutionResponseexecutionInfoTypeDef",
    "ClientDescribeWorkflowExecutionResponseopenCountsTypeDef",
    "ClientDescribeWorkflowExecutionResponseTypeDef",
    "ClientDescribeWorkflowExecutionexecutionTypeDef",
    "ClientDescribeWorkflowTypeResponseconfigurationdefaultTaskListTypeDef",
    "ClientDescribeWorkflowTypeResponseconfigurationTypeDef",
    "ClientDescribeWorkflowTypeResponsetypeInfoworkflowTypeTypeDef",
    "ClientDescribeWorkflowTypeResponsetypeInfoTypeDef",
    "ClientDescribeWorkflowTypeResponseTypeDef",
    "ClientDescribeWorkflowTypeworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskStartedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventscancelTimerFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsmarkerRecordedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsstartTimerFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventstimerCanceledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventstimerFiredEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventstimerStartedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseeventsTypeDef",
    "ClientGetWorkflowExecutionHistoryResponseTypeDef",
    "ClientGetWorkflowExecutionHistoryexecutionTypeDef",
    "ClientListActivityTypesResponsetypeInfosactivityTypeTypeDef",
    "ClientListActivityTypesResponsetypeInfosTypeDef",
    "ClientListActivityTypesResponseTypeDef",
    "ClientListClosedWorkflowExecutionsResponseexecutionInfosexecutionTypeDef",
    "ClientListClosedWorkflowExecutionsResponseexecutionInfosparentTypeDef",
    "ClientListClosedWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef",
    "ClientListClosedWorkflowExecutionsResponseexecutionInfosTypeDef",
    "ClientListClosedWorkflowExecutionsResponseTypeDef",
    "ClientListClosedWorkflowExecutionscloseStatusFilterTypeDef",
    "ClientListClosedWorkflowExecutionscloseTimeFilterTypeDef",
    "ClientListClosedWorkflowExecutionsexecutionFilterTypeDef",
    "ClientListClosedWorkflowExecutionsstartTimeFilterTypeDef",
    "ClientListClosedWorkflowExecutionstagFilterTypeDef",
    "ClientListClosedWorkflowExecutionstypeFilterTypeDef",
    "ClientListDomainsResponsedomainInfosTypeDef",
    "ClientListDomainsResponseTypeDef",
    "ClientListOpenWorkflowExecutionsResponseexecutionInfosexecutionTypeDef",
    "ClientListOpenWorkflowExecutionsResponseexecutionInfosparentTypeDef",
    "ClientListOpenWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef",
    "ClientListOpenWorkflowExecutionsResponseexecutionInfosTypeDef",
    "ClientListOpenWorkflowExecutionsResponseTypeDef",
    "ClientListOpenWorkflowExecutionsexecutionFilterTypeDef",
    "ClientListOpenWorkflowExecutionsstartTimeFilterTypeDef",
    "ClientListOpenWorkflowExecutionstagFilterTypeDef",
    "ClientListOpenWorkflowExecutionstypeFilterTypeDef",
    "ClientListTagsForResourceResponsetagsTypeDef",
    "ClientListTagsForResourceResponseTypeDef",
    "ClientListWorkflowTypesResponsetypeInfosworkflowTypeTypeDef",
    "ClientListWorkflowTypesResponsetypeInfosTypeDef",
    "ClientListWorkflowTypesResponseTypeDef",
    "ClientPollForActivityTaskResponseactivityTypeTypeDef",
    "ClientPollForActivityTaskResponseworkflowExecutionTypeDef",
    "ClientPollForActivityTaskResponseTypeDef",
    "ClientPollForActivityTasktaskListTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskStartedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventscancelTimerFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    "ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsmarkerRecordedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsstartTimerFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventstimerCanceledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventstimerFiredEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventstimerStartedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    "ClientPollForDecisionTaskResponseeventsTypeDef",
    "ClientPollForDecisionTaskResponseworkflowExecutionTypeDef",
    "ClientPollForDecisionTaskResponseworkflowTypeTypeDef",
    "ClientPollForDecisionTaskResponseTypeDef",
    "ClientPollForDecisionTasktaskListTypeDef",
    "ClientRecordActivityTaskHeartbeatResponseTypeDef",
    "ClientRegisterActivityTypedefaultTaskListTypeDef",
    "ClientRegisterDomaintagsTypeDef",
    "ClientRegisterWorkflowTypedefaultTaskListTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionscancelTimerDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionscancelWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionscompleteWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributestaskListTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsfailWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsrequestCancelActivityTaskDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesactivityTypeTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributestaskListTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributestaskListTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesworkflowTypeTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef",
    "ClientRespondDecisionTaskCompleteddecisionsTypeDef",
    "ClientStartWorkflowExecutionResponseTypeDef",
    "ClientStartWorkflowExecutiontaskListTypeDef",
    "ClientStartWorkflowExecutionworkflowTypeTypeDef",
    "ClientTagResourcetagsTypeDef",
    "ClientUndeprecateActivityTypeactivityTypeTypeDef",
    "ClientUndeprecateWorkflowTypeworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginatePaginationConfigTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventscancelTimerFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsmarkerRecordedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsstartTimerFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventstimerCanceledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventstimerFiredEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventstimerStartedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseeventsTypeDef",
    "GetWorkflowExecutionHistoryPaginateResponseTypeDef",
    "GetWorkflowExecutionHistoryPaginateexecutionTypeDef",
    "ListActivityTypesPaginatePaginationConfigTypeDef",
    "ListActivityTypesPaginateResponsetypeInfosactivityTypeTypeDef",
    "ListActivityTypesPaginateResponsetypeInfosTypeDef",
    "ListActivityTypesPaginateResponseTypeDef",
    "ListClosedWorkflowExecutionsPaginatePaginationConfigTypeDef",
    "ListClosedWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef",
    "ListClosedWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef",
    "ListClosedWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef",
    "ListClosedWorkflowExecutionsPaginateResponseexecutionInfosTypeDef",
    "ListClosedWorkflowExecutionsPaginateResponseTypeDef",
    "ListClosedWorkflowExecutionsPaginatecloseStatusFilterTypeDef",
    "ListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef",
    "ListClosedWorkflowExecutionsPaginateexecutionFilterTypeDef",
    "ListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef",
    "ListClosedWorkflowExecutionsPaginatetagFilterTypeDef",
    "ListClosedWorkflowExecutionsPaginatetypeFilterTypeDef",
    "ListDomainsPaginatePaginationConfigTypeDef",
    "ListDomainsPaginateResponsedomainInfosTypeDef",
    "ListDomainsPaginateResponseTypeDef",
    "ListOpenWorkflowExecutionsPaginatePaginationConfigTypeDef",
    "ListOpenWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef",
    "ListOpenWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef",
    "ListOpenWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef",
    "ListOpenWorkflowExecutionsPaginateResponseexecutionInfosTypeDef",
    "ListOpenWorkflowExecutionsPaginateResponseTypeDef",
    "ListOpenWorkflowExecutionsPaginateexecutionFilterTypeDef",
    "ListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef",
    "ListOpenWorkflowExecutionsPaginatetagFilterTypeDef",
    "ListOpenWorkflowExecutionsPaginatetypeFilterTypeDef",
    "ListWorkflowTypesPaginatePaginationConfigTypeDef",
    "ListWorkflowTypesPaginateResponsetypeInfosworkflowTypeTypeDef",
    "ListWorkflowTypesPaginateResponsetypeInfosTypeDef",
    "ListWorkflowTypesPaginateResponseTypeDef",
    "PollForDecisionTaskPaginatePaginationConfigTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventscancelTimerFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    "PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsmarkerRecordedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsstartTimerFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventstimerCanceledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventstimerFiredEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventstimerStartedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    "PollForDecisionTaskPaginateResponseeventsTypeDef",
    "PollForDecisionTaskPaginateResponseworkflowExecutionTypeDef",
    "PollForDecisionTaskPaginateResponseworkflowTypeTypeDef",
    "PollForDecisionTaskPaginateResponseTypeDef",
    "PollForDecisionTaskPaginatetaskListTypeDef",
)


_ClientCountClosedWorkflowExecutionsResponseTypeDef = TypedDict(
    "_ClientCountClosedWorkflowExecutionsResponseTypeDef",
    {"count": int, "truncated": bool},
    total=False,
)


class ClientCountClosedWorkflowExecutionsResponseTypeDef(
    _ClientCountClosedWorkflowExecutionsResponseTypeDef
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `Response`

    Contains the count of workflow executions returned from  CountOpenWorkflowExecutions or
    CountClosedWorkflowExecutions

    - **count** *(integer) --*

      The number of workflow executions.

    - **truncated** *(boolean) --*

      If set to true, indicates that the actual count was more than the maximum supported by this
      API and the count returned is the truncated value.
    """


_ClientCountClosedWorkflowExecutionscloseStatusFilterTypeDef = TypedDict(
    "_ClientCountClosedWorkflowExecutionscloseStatusFilterTypeDef", {"status": str}
)


class ClientCountClosedWorkflowExecutionscloseStatusFilterTypeDef(
    _ClientCountClosedWorkflowExecutionscloseStatusFilterTypeDef
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `closeStatusFilter`

    If specified, only workflow executions that match this close status are counted. This filter has
    an affect only if ``executionStatus`` is specified as ``CLOSED`` .

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **status** *(string) --* **[REQUIRED]**

      The close status that must match the close status of an execution for it to meet the criteria
      of this filter.
    """


_RequiredClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef = TypedDict(
    "_RequiredClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef = TypedDict(
    "_OptionalClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef(
    _RequiredClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef,
    _OptionalClientCountClosedWorkflowExecutionscloseTimeFilterTypeDef,
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `closeTimeFilter`

    If specified, only workflow executions that meet the close time criteria of the filter are
    counted.

    .. note::

       ``startTimeFilter`` and ``closeTimeFilter`` are mutually exclusive. You must specify one of
       these in a request but not both.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ClientCountClosedWorkflowExecutionsexecutionFilterTypeDef = TypedDict(
    "_ClientCountClosedWorkflowExecutionsexecutionFilterTypeDef", {"workflowId": str}
)


class ClientCountClosedWorkflowExecutionsexecutionFilterTypeDef(
    _ClientCountClosedWorkflowExecutionsexecutionFilterTypeDef
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `executionFilter`

    If specified, only workflow executions matching the ``WorkflowId`` in the filter are counted.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **workflowId** *(string) --* **[REQUIRED]**

      The workflowId to pass of match the criteria of this filter.
    """


_RequiredClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_RequiredClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_OptionalClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef(
    _RequiredClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef,
    _OptionalClientCountClosedWorkflowExecutionsstartTimeFilterTypeDef,
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `startTimeFilter`

    If specified, only workflow executions that meet the start time criteria of the filter are
    counted.

    .. note::

       ``startTimeFilter`` and ``closeTimeFilter`` are mutually exclusive. You must specify one of
       these in a request but not both.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ClientCountClosedWorkflowExecutionstagFilterTypeDef = TypedDict(
    "_ClientCountClosedWorkflowExecutionstagFilterTypeDef", {"tag": str}
)


class ClientCountClosedWorkflowExecutionstagFilterTypeDef(
    _ClientCountClosedWorkflowExecutionstagFilterTypeDef
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `tagFilter`

    If specified, only executions that have a tag that matches the filter are counted.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **tag** *(string) --* **[REQUIRED]**

      Specifies the tag that must be associated with the execution for it to meet the filter
      criteria.

      Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + -
      @`` .
    """


_RequiredClientCountClosedWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_RequiredClientCountClosedWorkflowExecutionstypeFilterTypeDef", {"name": str}
)
_OptionalClientCountClosedWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_OptionalClientCountClosedWorkflowExecutionstypeFilterTypeDef", {"version": str}, total=False
)


class ClientCountClosedWorkflowExecutionstypeFilterTypeDef(
    _RequiredClientCountClosedWorkflowExecutionstypeFilterTypeDef,
    _OptionalClientCountClosedWorkflowExecutionstypeFilterTypeDef,
):
    """
    Type definition for `ClientCountClosedWorkflowExecutions` `typeFilter`

    If specified, indicates the type of the workflow executions to be counted.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **name** *(string) --* **[REQUIRED]**

      Name of the workflow type.

    - **version** *(string) --*

      Version of the workflow type.
    """


_ClientCountOpenWorkflowExecutionsResponseTypeDef = TypedDict(
    "_ClientCountOpenWorkflowExecutionsResponseTypeDef",
    {"count": int, "truncated": bool},
    total=False,
)


class ClientCountOpenWorkflowExecutionsResponseTypeDef(
    _ClientCountOpenWorkflowExecutionsResponseTypeDef
):
    """
    Type definition for `ClientCountOpenWorkflowExecutions` `Response`

    Contains the count of workflow executions returned from  CountOpenWorkflowExecutions or
    CountClosedWorkflowExecutions

    - **count** *(integer) --*

      The number of workflow executions.

    - **truncated** *(boolean) --*

      If set to true, indicates that the actual count was more than the maximum supported by this
      API and the count returned is the truncated value.
    """


_ClientCountOpenWorkflowExecutionsexecutionFilterTypeDef = TypedDict(
    "_ClientCountOpenWorkflowExecutionsexecutionFilterTypeDef", {"workflowId": str}
)


class ClientCountOpenWorkflowExecutionsexecutionFilterTypeDef(
    _ClientCountOpenWorkflowExecutionsexecutionFilterTypeDef
):
    """
    Type definition for `ClientCountOpenWorkflowExecutions` `executionFilter`

    If specified, only workflow executions matching the ``WorkflowId`` in the filter are counted.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **workflowId** *(string) --* **[REQUIRED]**

      The workflowId to pass of match the criteria of this filter.
    """


_RequiredClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_RequiredClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_OptionalClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef(
    _RequiredClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef,
    _OptionalClientCountOpenWorkflowExecutionsstartTimeFilterTypeDef,
):
    """
    Type definition for `ClientCountOpenWorkflowExecutions` `startTimeFilter`

    Specifies the start time criteria that workflow executions must meet in order to be counted.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ClientCountOpenWorkflowExecutionstagFilterTypeDef = TypedDict(
    "_ClientCountOpenWorkflowExecutionstagFilterTypeDef", {"tag": str}
)


class ClientCountOpenWorkflowExecutionstagFilterTypeDef(
    _ClientCountOpenWorkflowExecutionstagFilterTypeDef
):
    """
    Type definition for `ClientCountOpenWorkflowExecutions` `tagFilter`

    If specified, only executions that have a tag that matches the filter are counted.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **tag** *(string) --* **[REQUIRED]**

      Specifies the tag that must be associated with the execution for it to meet the filter
      criteria.

      Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + -
      @`` .
    """


_RequiredClientCountOpenWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_RequiredClientCountOpenWorkflowExecutionstypeFilterTypeDef", {"name": str}
)
_OptionalClientCountOpenWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_OptionalClientCountOpenWorkflowExecutionstypeFilterTypeDef", {"version": str}, total=False
)


class ClientCountOpenWorkflowExecutionstypeFilterTypeDef(
    _RequiredClientCountOpenWorkflowExecutionstypeFilterTypeDef,
    _OptionalClientCountOpenWorkflowExecutionstypeFilterTypeDef,
):
    """
    Type definition for `ClientCountOpenWorkflowExecutions` `typeFilter`

    Specifies the type of the workflow executions to be counted.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **name** *(string) --* **[REQUIRED]**

      Name of the workflow type.

    - **version** *(string) --*

      Version of the workflow type.
    """


_ClientCountPendingActivityTasksResponseTypeDef = TypedDict(
    "_ClientCountPendingActivityTasksResponseTypeDef",
    {"count": int, "truncated": bool},
    total=False,
)


class ClientCountPendingActivityTasksResponseTypeDef(
    _ClientCountPendingActivityTasksResponseTypeDef
):
    """
    Type definition for `ClientCountPendingActivityTasks` `Response`

    Contains the count of tasks in a task list.

    - **count** *(integer) --*

      The number of tasks in the task list.

    - **truncated** *(boolean) --*

      If set to true, indicates that the actual count was more than the maximum supported by this
      API and the count returned is the truncated value.
    """


_ClientCountPendingActivityTaskstaskListTypeDef = TypedDict(
    "_ClientCountPendingActivityTaskstaskListTypeDef", {"name": str}
)


class ClientCountPendingActivityTaskstaskListTypeDef(
    _ClientCountPendingActivityTaskstaskListTypeDef
):
    """
    Type definition for `ClientCountPendingActivityTasks` `taskList`

    The name of the task list.

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientCountPendingDecisionTasksResponseTypeDef = TypedDict(
    "_ClientCountPendingDecisionTasksResponseTypeDef",
    {"count": int, "truncated": bool},
    total=False,
)


class ClientCountPendingDecisionTasksResponseTypeDef(
    _ClientCountPendingDecisionTasksResponseTypeDef
):
    """
    Type definition for `ClientCountPendingDecisionTasks` `Response`

    Contains the count of tasks in a task list.

    - **count** *(integer) --*

      The number of tasks in the task list.

    - **truncated** *(boolean) --*

      If set to true, indicates that the actual count was more than the maximum supported by this
      API and the count returned is the truncated value.
    """


_ClientCountPendingDecisionTaskstaskListTypeDef = TypedDict(
    "_ClientCountPendingDecisionTaskstaskListTypeDef", {"name": str}
)


class ClientCountPendingDecisionTaskstaskListTypeDef(
    _ClientCountPendingDecisionTaskstaskListTypeDef
):
    """
    Type definition for `ClientCountPendingDecisionTasks` `taskList`

    The name of the task list.

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientDeprecateActivityTypeactivityTypeTypeDef = TypedDict(
    "_ClientDeprecateActivityTypeactivityTypeTypeDef", {"name": str, "version": str}
)


class ClientDeprecateActivityTypeactivityTypeTypeDef(
    _ClientDeprecateActivityTypeactivityTypeTypeDef
):
    """
    Type definition for `ClientDeprecateActivityType` `activityType`

    The activity type to deprecate.

    - **name** *(string) --* **[REQUIRED]**

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientDeprecateWorkflowTypeworkflowTypeTypeDef = TypedDict(
    "_ClientDeprecateWorkflowTypeworkflowTypeTypeDef", {"name": str, "version": str}
)


class ClientDeprecateWorkflowTypeworkflowTypeTypeDef(
    _ClientDeprecateWorkflowTypeworkflowTypeTypeDef
):
    """
    Type definition for `ClientDeprecateWorkflowType` `workflowType`

    The workflow type to deprecate.

    - **name** *(string) --* **[REQUIRED]**

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientDescribeActivityTypeResponseconfigurationdefaultTaskListTypeDef = TypedDict(
    "_ClientDescribeActivityTypeResponseconfigurationdefaultTaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientDescribeActivityTypeResponseconfigurationdefaultTaskListTypeDef(
    _ClientDescribeActivityTypeResponseconfigurationdefaultTaskListTypeDef
):
    """
    Type definition for `ClientDescribeActivityTypeResponseconfiguration` `defaultTaskList`

    The default task list specified for this activity type at registration. This default is used if
    a task list isn't provided when a task is scheduled through the ``ScheduleActivityTask``
    Decision . You can override the default registered task list when scheduling a task through the
    ``ScheduleActivityTask``   Decision .

    - **name** *(string) --*

      The name of the task list.
    """


_ClientDescribeActivityTypeResponseconfigurationTypeDef = TypedDict(
    "_ClientDescribeActivityTypeResponseconfigurationTypeDef",
    {
        "defaultTaskStartToCloseTimeout": str,
        "defaultTaskHeartbeatTimeout": str,
        "defaultTaskList": ClientDescribeActivityTypeResponseconfigurationdefaultTaskListTypeDef,
        "defaultTaskPriority": str,
        "defaultTaskScheduleToStartTimeout": str,
        "defaultTaskScheduleToCloseTimeout": str,
    },
    total=False,
)


class ClientDescribeActivityTypeResponseconfigurationTypeDef(
    _ClientDescribeActivityTypeResponseconfigurationTypeDef
):
    """
    Type definition for `ClientDescribeActivityTypeResponse` `configuration`

    The configuration settings registered with the activity type.

    - **defaultTaskStartToCloseTimeout** *(string) --*

      The default maximum duration for tasks of an activity type specified when registering the
      activity type. You can override this default when scheduling a task through the
      ``ScheduleActivityTask``   Decision .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **defaultTaskHeartbeatTimeout** *(string) --*

      The default maximum time, in seconds, before which a worker processing a task must report
      progress by calling  RecordActivityTaskHeartbeat .

      You can specify this value only when *registering* an activity type. The registered default
      value can be overridden when you schedule a task through the ``ScheduleActivityTask``
      Decision . If the activity worker subsequently attempts to record a heartbeat or returns a
      result, the activity worker receives an ``UnknownResource`` fault. In this case, Amazon SWF no
      longer considers the activity task to be valid; the activity worker should clean up the
      activity task.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **defaultTaskList** *(dict) --*

      The default task list specified for this activity type at registration. This default is used
      if a task list isn't provided when a task is scheduled through the ``ScheduleActivityTask``
      Decision . You can override the default registered task list when scheduling a task through
      the ``ScheduleActivityTask``   Decision .

      - **name** *(string) --*

        The name of the task list.

    - **defaultTaskPriority** *(string) --*

      The default task priority for tasks of this activity type, specified at registration. If not
      set, then ``0`` is used as the default priority. This default can be overridden when
      scheduling an activity task.

      Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **defaultTaskScheduleToStartTimeout** *(string) --*

      The default maximum duration, specified when registering the activity type, that a task of an
      activity type can wait before being assigned to a worker. You can override this default when
      scheduling a task through the ``ScheduleActivityTask``   Decision .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **defaultTaskScheduleToCloseTimeout** *(string) --*

      The default maximum duration, specified when registering the activity type, for tasks of this
      activity type. You can override this default when scheduling a task through the
      ``ScheduleActivityTask``   Decision .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.
    """


_ClientDescribeActivityTypeResponsetypeInfoactivityTypeTypeDef = TypedDict(
    "_ClientDescribeActivityTypeResponsetypeInfoactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientDescribeActivityTypeResponsetypeInfoactivityTypeTypeDef(
    _ClientDescribeActivityTypeResponsetypeInfoactivityTypeTypeDef
):
    """
    Type definition for `ClientDescribeActivityTypeResponsetypeInfo` `activityType`

    The  ActivityType type structure representing the activity type.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientDescribeActivityTypeResponsetypeInfoTypeDef = TypedDict(
    "_ClientDescribeActivityTypeResponsetypeInfoTypeDef",
    {
        "activityType": ClientDescribeActivityTypeResponsetypeInfoactivityTypeTypeDef,
        "status": str,
        "description": str,
        "creationDate": datetime,
        "deprecationDate": datetime,
    },
    total=False,
)


class ClientDescribeActivityTypeResponsetypeInfoTypeDef(
    _ClientDescribeActivityTypeResponsetypeInfoTypeDef
):
    """
    Type definition for `ClientDescribeActivityTypeResponse` `typeInfo`

    General information about the activity type.

    The status of activity type (returned in the ActivityTypeInfo structure) can be one of the
    following.

    * ``REGISTERED`` – The type is registered and available. Workers supporting this type should be
    running.

    * ``DEPRECATED`` – The type was deprecated using  DeprecateActivityType , but is still in use.
    You should keep workers supporting this type running. You cannot create new tasks of this type.

    - **activityType** *(dict) --*

      The  ActivityType type structure representing the activity type.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **status** *(string) --*

      The current status of the activity type.

    - **description** *(string) --*

      The description of the activity type provided in  RegisterActivityType .

    - **creationDate** *(datetime) --*

      The date and time this activity type was created through  RegisterActivityType .

    - **deprecationDate** *(datetime) --*

      If DEPRECATED, the date and time  DeprecateActivityType was called.
    """


_ClientDescribeActivityTypeResponseTypeDef = TypedDict(
    "_ClientDescribeActivityTypeResponseTypeDef",
    {
        "typeInfo": ClientDescribeActivityTypeResponsetypeInfoTypeDef,
        "configuration": ClientDescribeActivityTypeResponseconfigurationTypeDef,
    },
    total=False,
)


class ClientDescribeActivityTypeResponseTypeDef(_ClientDescribeActivityTypeResponseTypeDef):
    """
    Type definition for `ClientDescribeActivityType` `Response`

    Detailed information about an activity type.

    - **typeInfo** *(dict) --*

      General information about the activity type.

      The status of activity type (returned in the ActivityTypeInfo structure) can be one of the
      following.

      * ``REGISTERED`` – The type is registered and available. Workers supporting this type should
      be running.

      * ``DEPRECATED`` – The type was deprecated using  DeprecateActivityType , but is still in use.
      You should keep workers supporting this type running. You cannot create new tasks of this
      type.

      - **activityType** *(dict) --*

        The  ActivityType type structure representing the activity type.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **status** *(string) --*

        The current status of the activity type.

      - **description** *(string) --*

        The description of the activity type provided in  RegisterActivityType .

      - **creationDate** *(datetime) --*

        The date and time this activity type was created through  RegisterActivityType .

      - **deprecationDate** *(datetime) --*

        If DEPRECATED, the date and time  DeprecateActivityType was called.

    - **configuration** *(dict) --*

      The configuration settings registered with the activity type.

      - **defaultTaskStartToCloseTimeout** *(string) --*

        The default maximum duration for tasks of an activity type specified when registering the
        activity type. You can override this default when scheduling a task through the
        ``ScheduleActivityTask``   Decision .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **defaultTaskHeartbeatTimeout** *(string) --*

        The default maximum time, in seconds, before which a worker processing a task must report
        progress by calling  RecordActivityTaskHeartbeat .

        You can specify this value only when *registering* an activity type. The registered default
        value can be overridden when you schedule a task through the ``ScheduleActivityTask``
        Decision . If the activity worker subsequently attempts to record a heartbeat or returns a
        result, the activity worker receives an ``UnknownResource`` fault. In this case, Amazon SWF
        no longer considers the activity task to be valid; the activity worker should clean up the
        activity task.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **defaultTaskList** *(dict) --*

        The default task list specified for this activity type at registration. This default is used
        if a task list isn't provided when a task is scheduled through the ``ScheduleActivityTask``
        Decision . You can override the default registered task list when scheduling a task through
        the ``ScheduleActivityTask``   Decision .

        - **name** *(string) --*

          The name of the task list.

      - **defaultTaskPriority** *(string) --*

        The default task priority for tasks of this activity type, specified at registration. If not
        set, then ``0`` is used as the default priority. This default can be overridden when
        scheduling an activity task.

        Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **defaultTaskScheduleToStartTimeout** *(string) --*

        The default maximum duration, specified when registering the activity type, that a task of
        an activity type can wait before being assigned to a worker. You can override this default
        when scheduling a task through the ``ScheduleActivityTask``   Decision .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **defaultTaskScheduleToCloseTimeout** *(string) --*

        The default maximum duration, specified when registering the activity type, for tasks of
        this activity type. You can override this default when scheduling a task through the
        ``ScheduleActivityTask``   Decision .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.
    """


_ClientDescribeActivityTypeactivityTypeTypeDef = TypedDict(
    "_ClientDescribeActivityTypeactivityTypeTypeDef", {"name": str, "version": str}
)


class ClientDescribeActivityTypeactivityTypeTypeDef(_ClientDescribeActivityTypeactivityTypeTypeDef):
    """
    Type definition for `ClientDescribeActivityType` `activityType`

    The activity type to get information about. Activity types are identified by the ``name`` and
    ``version`` that were supplied when the activity was registered.

    - **name** *(string) --* **[REQUIRED]**

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientDescribeDomainResponseconfigurationTypeDef = TypedDict(
    "_ClientDescribeDomainResponseconfigurationTypeDef",
    {"workflowExecutionRetentionPeriodInDays": str},
    total=False,
)


class ClientDescribeDomainResponseconfigurationTypeDef(
    _ClientDescribeDomainResponseconfigurationTypeDef
):
    """
    Type definition for `ClientDescribeDomainResponse` `configuration`

    The domain configuration. Currently, this includes only the domain's retention period.

    - **workflowExecutionRetentionPeriodInDays** *(string) --*

      The retention period for workflow executions in this domain.
    """


_ClientDescribeDomainResponsedomainInfoTypeDef = TypedDict(
    "_ClientDescribeDomainResponsedomainInfoTypeDef",
    {"name": str, "status": str, "description": str, "arn": str},
    total=False,
)


class ClientDescribeDomainResponsedomainInfoTypeDef(_ClientDescribeDomainResponsedomainInfoTypeDef):
    """
    Type definition for `ClientDescribeDomainResponse` `domainInfo`

    The basic information about a domain, such as its name, status, and description.

    - **name** *(string) --*

      The name of the domain. This name is unique within the account.

    - **status** *(string) --*

      The status of the domain:

      * ``REGISTERED`` – The domain is properly registered and available. You can use this domain
      for registering types and creating new workflow executions.

      * ``DEPRECATED`` – The domain was deprecated using  DeprecateDomain , but is still in use. You
      should not create new workflow executions in this domain.

    - **description** *(string) --*

      The description of the domain provided through  RegisterDomain .

    - **arn** *(string) --*

      The ARN of the domain.
    """


_ClientDescribeDomainResponseTypeDef = TypedDict(
    "_ClientDescribeDomainResponseTypeDef",
    {
        "domainInfo": ClientDescribeDomainResponsedomainInfoTypeDef,
        "configuration": ClientDescribeDomainResponseconfigurationTypeDef,
    },
    total=False,
)


class ClientDescribeDomainResponseTypeDef(_ClientDescribeDomainResponseTypeDef):
    """
    Type definition for `ClientDescribeDomain` `Response`

    Contains details of a domain.

    - **domainInfo** *(dict) --*

      The basic information about a domain, such as its name, status, and description.

      - **name** *(string) --*

        The name of the domain. This name is unique within the account.

      - **status** *(string) --*

        The status of the domain:

        * ``REGISTERED`` – The domain is properly registered and available. You can use this domain
        for registering types and creating new workflow executions.

        * ``DEPRECATED`` – The domain was deprecated using  DeprecateDomain , but is still in use.
        You should not create new workflow executions in this domain.

      - **description** *(string) --*

        The description of the domain provided through  RegisterDomain .

      - **arn** *(string) --*

        The ARN of the domain.

    - **configuration** *(dict) --*

      The domain configuration. Currently, this includes only the domain's retention period.

      - **workflowExecutionRetentionPeriodInDays** *(string) --*

        The retention period for workflow executions in this domain.
    """


_ClientDescribeWorkflowExecutionResponseexecutionConfigurationtaskListTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseexecutionConfigurationtaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientDescribeWorkflowExecutionResponseexecutionConfigurationtaskListTypeDef(
    _ClientDescribeWorkflowExecutionResponseexecutionConfigurationtaskListTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponseexecutionConfiguration` `taskList`

    The task list used for the decision tasks generated for this workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientDescribeWorkflowExecutionResponseexecutionConfigurationTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseexecutionConfigurationTypeDef",
    {
        "taskStartToCloseTimeout": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientDescribeWorkflowExecutionResponseexecutionConfigurationtaskListTypeDef,
        "taskPriority": str,
        "childPolicy": str,
        "lambdaRole": str,
    },
    total=False,
)


class ClientDescribeWorkflowExecutionResponseexecutionConfigurationTypeDef(
    _ClientDescribeWorkflowExecutionResponseexecutionConfigurationTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponse` `executionConfiguration`

    The configuration settings for this workflow execution including timeout values, tasklist etc.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration allowed for decision tasks for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **executionStartToCloseTimeout** *(string) --*

      The total duration for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The task list used for the decision tasks generated for this workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority assigned to decision tasks for this workflow execution. Valid values are integers
      that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this workflow execution is terminated,
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **lambdaRole** *(string) --*

      The IAM role attached to the child workflow execution.
    """


_ClientDescribeWorkflowExecutionResponseexecutionInfoexecutionTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseexecutionInfoexecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientDescribeWorkflowExecutionResponseexecutionInfoexecutionTypeDef(
    _ClientDescribeWorkflowExecutionResponseexecutionInfoexecutionTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponseexecutionInfo` `execution`

    The workflow execution this information is about.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientDescribeWorkflowExecutionResponseexecutionInfoparentTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseexecutionInfoparentTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientDescribeWorkflowExecutionResponseexecutionInfoparentTypeDef(
    _ClientDescribeWorkflowExecutionResponseexecutionInfoparentTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponseexecutionInfo` `parent`

    If this workflow execution is a child of another execution then contains the workflow execution
    that started this execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientDescribeWorkflowExecutionResponseexecutionInfoworkflowTypeTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseexecutionInfoworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientDescribeWorkflowExecutionResponseexecutionInfoworkflowTypeTypeDef(
    _ClientDescribeWorkflowExecutionResponseexecutionInfoworkflowTypeTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponseexecutionInfo` `workflowType`

    The type of the workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientDescribeWorkflowExecutionResponseexecutionInfoTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseexecutionInfoTypeDef",
    {
        "execution": ClientDescribeWorkflowExecutionResponseexecutionInfoexecutionTypeDef,
        "workflowType": ClientDescribeWorkflowExecutionResponseexecutionInfoworkflowTypeTypeDef,
        "startTimestamp": datetime,
        "closeTimestamp": datetime,
        "executionStatus": str,
        "closeStatus": str,
        "parent": ClientDescribeWorkflowExecutionResponseexecutionInfoparentTypeDef,
        "tagList": List[str],
        "cancelRequested": bool,
    },
    total=False,
)


class ClientDescribeWorkflowExecutionResponseexecutionInfoTypeDef(
    _ClientDescribeWorkflowExecutionResponseexecutionInfoTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponse` `executionInfo`

    Information about the workflow execution.

    - **execution** *(dict) --*

      The workflow execution this information is about.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **startTimestamp** *(datetime) --*

      The time when the execution was started.

    - **closeTimestamp** *(datetime) --*

      The time when the workflow execution was closed. Set only if the execution status is CLOSED.

    - **executionStatus** *(string) --*

      The current status of the execution.

    - **closeStatus** *(string) --*

      If the execution status is closed then this specifies how the execution was closed:

      * ``COMPLETED`` – the execution was successfully completed.

      * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
      gracefully clean up before the execution is closed.

      * ``TERMINATED`` – the execution was force terminated.

      * ``FAILED`` – the execution failed to complete.

      * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
      timed out.

      * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
      execution was completed and a new execution was started to carry on the workflow.

    - **parent** *(dict) --*

      If this workflow execution is a child of another execution then contains the workflow
      execution that started this execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **tagList** *(list) --*

      The list of tags associated with the workflow execution. Tags can be used to identify and list
      workflow executions of interest through the visibility APIs. A workflow execution can have a
      maximum of 5 tags.

      - *(string) --*

    - **cancelRequested** *(boolean) --*

      Set to true if a cancellation is requested for this workflow execution.
    """


_ClientDescribeWorkflowExecutionResponseopenCountsTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseopenCountsTypeDef",
    {
        "openActivityTasks": int,
        "openDecisionTasks": int,
        "openTimers": int,
        "openChildWorkflowExecutions": int,
        "openLambdaFunctions": int,
    },
    total=False,
)


class ClientDescribeWorkflowExecutionResponseopenCountsTypeDef(
    _ClientDescribeWorkflowExecutionResponseopenCountsTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecutionResponse` `openCounts`

    The number of tasks for this workflow execution. This includes open and closed tasks of all
    types.

    - **openActivityTasks** *(integer) --*

      The count of activity tasks whose status is ``OPEN`` .

    - **openDecisionTasks** *(integer) --*

      The count of decision tasks whose status is OPEN. A workflow execution can have at most one
      open decision task.

    - **openTimers** *(integer) --*

      The count of timers started by this workflow execution that have not fired yet.

    - **openChildWorkflowExecutions** *(integer) --*

      The count of child workflow executions whose status is ``OPEN`` .

    - **openLambdaFunctions** *(integer) --*

      The count of Lambda tasks whose status is ``OPEN`` .
    """


_ClientDescribeWorkflowExecutionResponseTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionResponseTypeDef",
    {
        "executionInfo": ClientDescribeWorkflowExecutionResponseexecutionInfoTypeDef,
        "executionConfiguration": ClientDescribeWorkflowExecutionResponseexecutionConfigurationTypeDef,
        "openCounts": ClientDescribeWorkflowExecutionResponseopenCountsTypeDef,
        "latestActivityTaskTimestamp": datetime,
        "latestExecutionContext": str,
    },
    total=False,
)


class ClientDescribeWorkflowExecutionResponseTypeDef(
    _ClientDescribeWorkflowExecutionResponseTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecution` `Response`

    Contains details about a workflow execution.

    - **executionInfo** *(dict) --*

      Information about the workflow execution.

      - **execution** *(dict) --*

        The workflow execution this information is about.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **startTimestamp** *(datetime) --*

        The time when the execution was started.

      - **closeTimestamp** *(datetime) --*

        The time when the workflow execution was closed. Set only if the execution status is CLOSED.

      - **executionStatus** *(string) --*

        The current status of the execution.

      - **closeStatus** *(string) --*

        If the execution status is closed then this specifies how the execution was closed:

        * ``COMPLETED`` – the execution was successfully completed.

        * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
        gracefully clean up before the execution is closed.

        * ``TERMINATED`` – the execution was force terminated.

        * ``FAILED`` – the execution failed to complete.

        * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
        timed out.

        * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
        execution was completed and a new execution was started to carry on the workflow.

      - **parent** *(dict) --*

        If this workflow execution is a child of another execution then contains the workflow
        execution that started this execution.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **tagList** *(list) --*

        The list of tags associated with the workflow execution. Tags can be used to identify and
        list workflow executions of interest through the visibility APIs. A workflow execution can
        have a maximum of 5 tags.

        - *(string) --*

      - **cancelRequested** *(boolean) --*

        Set to true if a cancellation is requested for this workflow execution.

    - **executionConfiguration** *(dict) --*

      The configuration settings for this workflow execution including timeout values, tasklist etc.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration allowed for decision tasks for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **executionStartToCloseTimeout** *(string) --*

        The total duration for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The task list used for the decision tasks generated for this workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority assigned to decision tasks for this workflow execution. Valid values are
        integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
        (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this workflow execution is
        terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
        expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **lambdaRole** *(string) --*

        The IAM role attached to the child workflow execution.

    - **openCounts** *(dict) --*

      The number of tasks for this workflow execution. This includes open and closed tasks of all
      types.

      - **openActivityTasks** *(integer) --*

        The count of activity tasks whose status is ``OPEN`` .

      - **openDecisionTasks** *(integer) --*

        The count of decision tasks whose status is OPEN. A workflow execution can have at most one
        open decision task.

      - **openTimers** *(integer) --*

        The count of timers started by this workflow execution that have not fired yet.

      - **openChildWorkflowExecutions** *(integer) --*

        The count of child workflow executions whose status is ``OPEN`` .

      - **openLambdaFunctions** *(integer) --*

        The count of Lambda tasks whose status is ``OPEN`` .

    - **latestActivityTaskTimestamp** *(datetime) --*

      The time when the last activity task was scheduled for this workflow execution. You can use
      this information to determine if the workflow has not made progress for an unusually long
      period of time and might require a corrective action.

    - **latestExecutionContext** *(string) --*

      The latest executionContext provided by the decider for this workflow execution. A decider can
      provide an executionContext (a free-form string) when closing a decision task using
      RespondDecisionTaskCompleted .
    """


_ClientDescribeWorkflowExecutionexecutionTypeDef = TypedDict(
    "_ClientDescribeWorkflowExecutionexecutionTypeDef", {"workflowId": str, "runId": str}
)


class ClientDescribeWorkflowExecutionexecutionTypeDef(
    _ClientDescribeWorkflowExecutionexecutionTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowExecution` `execution`

    The workflow execution to describe.

    - **workflowId** *(string) --* **[REQUIRED]**

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --* **[REQUIRED]**

      A system-generated unique identifier for the workflow execution.
    """


_ClientDescribeWorkflowTypeResponseconfigurationdefaultTaskListTypeDef = TypedDict(
    "_ClientDescribeWorkflowTypeResponseconfigurationdefaultTaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientDescribeWorkflowTypeResponseconfigurationdefaultTaskListTypeDef(
    _ClientDescribeWorkflowTypeResponseconfigurationdefaultTaskListTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowTypeResponseconfiguration` `defaultTaskList`

    The default task list, specified when registering the workflow type, for decisions tasks
    scheduled for workflow executions of this type. This default can be overridden when starting a
    workflow execution using the  StartWorkflowExecution action or the
    ``StartChildWorkflowExecution``   Decision .

    - **name** *(string) --*

      The name of the task list.
    """


_ClientDescribeWorkflowTypeResponseconfigurationTypeDef = TypedDict(
    "_ClientDescribeWorkflowTypeResponseconfigurationTypeDef",
    {
        "defaultTaskStartToCloseTimeout": str,
        "defaultExecutionStartToCloseTimeout": str,
        "defaultTaskList": ClientDescribeWorkflowTypeResponseconfigurationdefaultTaskListTypeDef,
        "defaultTaskPriority": str,
        "defaultChildPolicy": str,
        "defaultLambdaRole": str,
    },
    total=False,
)


class ClientDescribeWorkflowTypeResponseconfigurationTypeDef(
    _ClientDescribeWorkflowTypeResponseconfigurationTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowTypeResponse` `configuration`

    Configuration settings of the workflow type registered through  RegisterWorkflowType

    - **defaultTaskStartToCloseTimeout** *(string) --*

      The default maximum duration, specified when registering the workflow type, that a decision
      task for executions of this workflow type might take before returning completion or failure.
      If the task doesn'tdo close in the specified time then the task is automatically timed out and
      rescheduled. If the decider eventually reports a completion or failure, it is ignored. This
      default can be overridden when starting a workflow execution using the  StartWorkflowExecution
      action or the ``StartChildWorkflowExecution``   Decision .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **defaultExecutionStartToCloseTimeout** *(string) --*

      The default maximum duration, specified when registering the workflow type, for executions of
      this workflow type. This default can be overridden when starting a workflow execution using
      the  StartWorkflowExecution action or the ``StartChildWorkflowExecution``   Decision .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **defaultTaskList** *(dict) --*

      The default task list, specified when registering the workflow type, for decisions tasks
      scheduled for workflow executions of this type. This default can be overridden when starting a
      workflow execution using the  StartWorkflowExecution action or the
      ``StartChildWorkflowExecution``   Decision .

      - **name** *(string) --*

        The name of the task list.

    - **defaultTaskPriority** *(string) --*

      The default task priority, specified when registering the workflow type, for all decision
      tasks of this workflow type. This default can be overridden when starting a workflow execution
      using the  StartWorkflowExecution action or the ``StartChildWorkflowExecution`` decision.

      Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **defaultChildPolicy** *(string) --*

      The default policy to use for the child workflow executions when a workflow execution of this
      type is terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
      expired timeout. This default can be overridden when starting a workflow execution using the
      StartWorkflowExecution action or the ``StartChildWorkflowExecution``   Decision .

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **defaultLambdaRole** *(string) --*

      The default IAM role attached to this workflow type.

      .. note::

        Executions of this workflow type need IAM roles to invoke Lambda functions. If you don't
        specify an IAM role when starting this workflow type, the default Lambda role is attached to
        the execution. For more information, see
        `https\\://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
        *Amazon SWF Developer Guide* .
    """


_ClientDescribeWorkflowTypeResponsetypeInfoworkflowTypeTypeDef = TypedDict(
    "_ClientDescribeWorkflowTypeResponsetypeInfoworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientDescribeWorkflowTypeResponsetypeInfoworkflowTypeTypeDef(
    _ClientDescribeWorkflowTypeResponsetypeInfoworkflowTypeTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowTypeResponsetypeInfo` `workflowType`

    The workflow type this information is about.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientDescribeWorkflowTypeResponsetypeInfoTypeDef = TypedDict(
    "_ClientDescribeWorkflowTypeResponsetypeInfoTypeDef",
    {
        "workflowType": ClientDescribeWorkflowTypeResponsetypeInfoworkflowTypeTypeDef,
        "status": str,
        "description": str,
        "creationDate": datetime,
        "deprecationDate": datetime,
    },
    total=False,
)


class ClientDescribeWorkflowTypeResponsetypeInfoTypeDef(
    _ClientDescribeWorkflowTypeResponsetypeInfoTypeDef
):
    """
    Type definition for `ClientDescribeWorkflowTypeResponse` `typeInfo`

    General information about the workflow type.

    The status of the workflow type (returned in the WorkflowTypeInfo structure) can be one of the
    following.

    * ``REGISTERED`` – The type is registered and available. Workers supporting this type should be
    running.

    * ``DEPRECATED`` – The type was deprecated using  DeprecateWorkflowType , but is still in use.
    You should keep workers supporting this type running. You cannot create new workflow executions
    of this type.

    - **workflowType** *(dict) --*

      The workflow type this information is about.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **status** *(string) --*

      The current status of the workflow type.

    - **description** *(string) --*

      The description of the type registered through  RegisterWorkflowType .

    - **creationDate** *(datetime) --*

      The date when this type was registered.

    - **deprecationDate** *(datetime) --*

      If the type is in deprecated state, then it is set to the date when the type was deprecated.
    """


_ClientDescribeWorkflowTypeResponseTypeDef = TypedDict(
    "_ClientDescribeWorkflowTypeResponseTypeDef",
    {
        "typeInfo": ClientDescribeWorkflowTypeResponsetypeInfoTypeDef,
        "configuration": ClientDescribeWorkflowTypeResponseconfigurationTypeDef,
    },
    total=False,
)


class ClientDescribeWorkflowTypeResponseTypeDef(_ClientDescribeWorkflowTypeResponseTypeDef):
    """
    Type definition for `ClientDescribeWorkflowType` `Response`

    Contains details about a workflow type.

    - **typeInfo** *(dict) --*

      General information about the workflow type.

      The status of the workflow type (returned in the WorkflowTypeInfo structure) can be one of the
      following.

      * ``REGISTERED`` – The type is registered and available. Workers supporting this type should
      be running.

      * ``DEPRECATED`` – The type was deprecated using  DeprecateWorkflowType , but is still in use.
      You should keep workers supporting this type running. You cannot create new workflow
      executions of this type.

      - **workflowType** *(dict) --*

        The workflow type this information is about.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **status** *(string) --*

        The current status of the workflow type.

      - **description** *(string) --*

        The description of the type registered through  RegisterWorkflowType .

      - **creationDate** *(datetime) --*

        The date when this type was registered.

      - **deprecationDate** *(datetime) --*

        If the type is in deprecated state, then it is set to the date when the type was deprecated.

    - **configuration** *(dict) --*

      Configuration settings of the workflow type registered through  RegisterWorkflowType

      - **defaultTaskStartToCloseTimeout** *(string) --*

        The default maximum duration, specified when registering the workflow type, that a decision
        task for executions of this workflow type might take before returning completion or failure.
        If the task doesn'tdo close in the specified time then the task is automatically timed out
        and rescheduled. If the decider eventually reports a completion or failure, it is ignored.
        This default can be overridden when starting a workflow execution using the
        StartWorkflowExecution action or the ``StartChildWorkflowExecution``   Decision .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **defaultExecutionStartToCloseTimeout** *(string) --*

        The default maximum duration, specified when registering the workflow type, for executions
        of this workflow type. This default can be overridden when starting a workflow execution
        using the  StartWorkflowExecution action or the ``StartChildWorkflowExecution``   Decision .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **defaultTaskList** *(dict) --*

        The default task list, specified when registering the workflow type, for decisions tasks
        scheduled for workflow executions of this type. This default can be overridden when starting
        a workflow execution using the  StartWorkflowExecution action or the
        ``StartChildWorkflowExecution``   Decision .

        - **name** *(string) --*

          The name of the task list.

      - **defaultTaskPriority** *(string) --*

        The default task priority, specified when registering the workflow type, for all decision
        tasks of this workflow type. This default can be overridden when starting a workflow
        execution using the  StartWorkflowExecution action or the ``StartChildWorkflowExecution``
        decision.

        Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **defaultChildPolicy** *(string) --*

        The default policy to use for the child workflow executions when a workflow execution of
        this type is terminated, by calling the  TerminateWorkflowExecution action explicitly or due
        to an expired timeout. This default can be overridden when starting a workflow execution
        using the  StartWorkflowExecution action or the ``StartChildWorkflowExecution``   Decision .

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **defaultLambdaRole** *(string) --*

        The default IAM role attached to this workflow type.

        .. note::

          Executions of this workflow type need IAM roles to invoke Lambda functions. If you don't
          specify an IAM role when starting this workflow type, the default Lambda role is attached
          to the execution. For more information, see
          `https\\://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
          *Amazon SWF Developer Guide* .
    """


_ClientDescribeWorkflowTypeworkflowTypeTypeDef = TypedDict(
    "_ClientDescribeWorkflowTypeworkflowTypeTypeDef", {"name": str, "version": str}
)


class ClientDescribeWorkflowTypeworkflowTypeTypeDef(_ClientDescribeWorkflowTypeworkflowTypeTypeDef):
    """
    Type definition for `ClientDescribeWorkflowType` `workflowType`

    The workflow type to describe.

    - **name** *(string) --* **[REQUIRED]**

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    {"decisionTaskCompletedEventId": int, "activityId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskCancelRequestedEventAttributes`

    If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **activityId** *(string) --*

      The unique ID of the task.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCanceledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    {
        "details": str,
        "scheduledEventId": int,
        "startedEventId": int,
        "latestCancelRequestedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCanceledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskCanceledEventAttributes`

    If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **details** *(string) --*

      Details of the cancellation.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **latestCancelRequestedEventId** *(integer) --*

      If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
      activity task. This information can be useful for diagnosing problems by tracing back the
      chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCompletedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    {"result": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCompletedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskCompletedEventAttributes`

    If the event is of type ``ActivityTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The results of the activity task.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskFailedEventAttributes`

    If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributes`
    `activityType`

    The type of the activity task.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributes` `taskList`

    The task list in which the activity task has been scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    {
        "activityType": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "input": str,
        "control": str,
        "scheduleToStartTimeout": str,
        "scheduleToCloseTimeout": str,
        "startToCloseTimeout": str,
        "taskList": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "heartbeatTimeout": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskScheduledEventAttributes`

    If the event is of type ``ActivityTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The type of the activity task.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The unique ID of the activity task.

    - **input** *(string) --*

      The input provided to the activity task.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks. This
      data isn't sent to the activity.

    - **scheduleToStartTimeout** *(string) --*

      The maximum amount of time the activity task can wait to be assigned to a worker.

    - **scheduleToCloseTimeout** *(string) --*

      The maximum amount of time for this activity task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker may take to process the activity task.

    - **taskList** *(dict) --*

      The task list in which the activity task has been scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority to assign to the scheduled activity task. If set, this overrides any default
      priority value that was assigned when the activity type was registered.

      Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.

    - **heartbeatTimeout** *(string) --*

      The maximum time before which the worker processing this task must report progress by calling
      RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is automatically
      timed out. If the worker subsequently attempts to record a heartbeat or return a result, it is
      ignored.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskStartedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskStartedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskStartedEventAttributes`

    If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the worker that was assigned this task. This aids diagnostics when problems arise.
      The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int, "details": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskTimedOutEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `activityTaskTimedOutEventAttributes`

    If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **details** *(string) --*

      Contains the content of the ``details`` parameter for the last call made by the activity to
      ``RecordActivityTaskHeartbeat`` .
    """


_ClientGetWorkflowExecutionHistoryResponseeventscancelTimerFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventscancelTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventscancelTimerFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventscancelTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `cancelTimerFailedEventAttributes`

    If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``CancelTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `cancelWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowExecution`

    The child workflow execution that was canceled.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `childWorkflowExecutionCanceledEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was canceled.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **details** *(string) --*

      Details of the cancellation (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowExecution`

    The child workflow execution that was completed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef,
        "result": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `childWorkflowExecutionCompletedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was completed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **result** *(string) --*

      The result of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowExecution`

    The child workflow execution that failed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "reason": str,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `childWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that failed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **reason** *(string) --*

      The reason for the failure (if provided).

    - **details** *(string) --*

      The details of the failure (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowExecution`

    The child workflow execution that was started.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `childWorkflowExecutionStartedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was started.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowExecution`

    The child workflow execution that was terminated.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `childWorkflowExecutionTerminatedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was terminated.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowExecution`

    The child workflow execution that timed out.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef,
        "timeoutType": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `childWorkflowExecutionTimedOutEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that timed out.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **timeoutType** *(string) --*

      The type of the timeout that caused the child workflow execution to time out.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `completeWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `continueAsNewWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskCompletedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    {"executionContext": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskCompletedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `decisionTaskCompletedEventAttributes`

    If the event is of type ``DecisionTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **executionContext** *(string) --*

      User defined context for the workflow execution.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributes` `taskList`

    The name of the task list in which the decision task was scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    {
        "taskList": ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "startToCloseTimeout": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `decisionTaskScheduledEventAttributes`

    If the event is of type ``DecisionTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **taskList** *(dict) --*

      The name of the task list in which the decision task was scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      A task priority that, if set, specifies the priority for this decision task. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **startToCloseTimeout** *(string) --*

      The maximum duration for this decision task. The task is considered timed out if it doesn't
      completed within this duration.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskStartedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskStartedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `decisionTaskStartedEventAttributes`

    If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the decider making the request. This enables diagnostic tracing when problems
      arise. The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskTimedOutEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `decisionTaskTimedOutEventAttributes`

    If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that expired before the decision task could be completed.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributes`
    `workflowExecution`

    The external workflow execution to which the cancellation request was delivered.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `externalWorkflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution to which the cancellation request was delivered.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributes`
    `workflowExecution`

    The external workflow execution that the signal was delivered to.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    {
        "workflowExecution": ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `externalWorkflowExecutionSignaledEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution that the signal was delivered to.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `failWorkflowExecutionFailedEventAttributes`

    If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionCompletedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "result": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionCompletedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `lambdaFunctionCompletedEventAttributes`

    Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **result** *(string) --*

      The results of the Lambda task.
    """


_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "reason": str, "details": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `lambdaFunctionFailedEventAttributes`

    Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.
    """


_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionScheduledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    {
        "id": str,
        "name": str,
        "control": str,
        "input": str,
        "startToCloseTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionScheduledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionScheduledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `lambdaFunctionScheduledEventAttributes`

    Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The unique ID of the Lambda task.

    - **name** *(string) --*

      The name of the Lambda function.

    - **control** *(string) --*

      Data attached to the event that the decider can use in subsequent workflow tasks. This data
      isn't sent to the Lambda task.

    - **input** *(string) --*

      The input provided to the Lambda task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker can take to process the Lambda task.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this activity task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionStartedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    {"scheduledEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionStartedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `lambdaFunctionStartedEventAttributes`

    Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "timeoutType": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionTimedOutEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `lambdaFunctionTimedOutEventAttributes`

    Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task started.
      To help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsmarkerRecordedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsmarkerRecordedEventAttributesTypeDef",
    {"markerName": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsmarkerRecordedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsmarkerRecordedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `markerRecordedEventAttributes`

    If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The name of the marker.

    - **details** *(string) --*

      The details of the marker.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarker`` decision that requested this marker. This information can be useful
      for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsrecordMarkerFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    {"markerName": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsrecordMarkerFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsrecordMarkerFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `recordMarkerFailedEventAttributes`

    If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The marker's name.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarkerFailed`` decision for this cancellation request. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    {"activityId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `requestCancelActivityTaskFailedEventAttributes`

    If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityId** *(string) --*

      The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `requestCancelExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is set
    and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {"workflowId": str, "runId": str, "decisionTaskCompletedEventId": int, "control": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `requestCancelExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member is
    set and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution to be canceled.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to be canceled.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributes`
    `activityType`

    The activity type provided in the ``ScheduleActivityTask`` decision that failed.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    {
        "activityType": ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "cause": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `scheduleActivityTaskFailedEventAttributes`

    If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The activity type provided in the ``ScheduleActivityTask`` decision that failed.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The activityId provided in the ``ScheduleActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    {"id": str, "name": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `scheduleLambdaFunctionFailedEventAttributes`

    Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

    - **name** *(string) --*

      The name of the Lambda function.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this Lambda task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `signalExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution that the signal was being delivered to.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution that the signal was being delivered to.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "signalName": str,
        "input": str,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `signalExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to send the signal to.

    - **signalName** *(string) --*

      The name of the signal.

    - **input** *(string) --*

      The input provided to the signal.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "cause": str,
        "workflowId": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `startChildWorkflowExecutionFailedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowType** *(dict) --*

      The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
      ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
      ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
      information to diagnose problems by tracing back the chain of events leading up to this event.

      When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
      because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the chain of events.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the child workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `taskList`

    The name of the task list used for the decision tasks of the child workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef,
        "control": str,
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "childPolicy": str,
        "taskStartToCloseTimeout": str,
        "tagList": List[str],
        "lambdaRole": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `startChildWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks. This
      data isn't sent to the activity.

    - **input** *(string) --*

      The inputs provided to the child workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for the child workflow execution. If the workflow execution isn't closed
      within this duration, it is timed out and force-terminated.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The name of the task list used for the decision tasks of the child workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority assigned for the decision tasks for this workflow execution. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the cause of events.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this execution gets terminated by
      explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration allowed for the decision tasks for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **tagList** *(list) --*

      The list of tags to associated with the child workflow execution.

      - *(string) --*

    - **lambdaRole** *(string) --*

      The IAM role to attach to the child workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "cause": str, "message": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `startLambdaFunctionFailedEventAttributes`

    Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
        role attached to the execution lacked sufficient permissions. For details and example IAM
        policies, see `Lambda Tasks
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **message** *(string) --*

      A description that can help diagnose the cause of the fault.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsstartTimerFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsstartTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsstartTimerFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsstartTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `startTimerFailedEventAttributes`

    If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``StartTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventstimerCanceledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventstimerCanceledEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventstimerCanceledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventstimerCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `timerCanceledEventAttributes`

    If the event is of type ``TimerCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was canceled.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventstimerFiredEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventstimerFiredEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventstimerFiredEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventstimerFiredEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `timerFiredEventAttributes`

    If the event is of type ``TimerFired`` then this member is set and provides detailed information
    about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that fired.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventstimerStartedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventstimerStartedEventAttributesTypeDef",
    {
        "timerId": str,
        "control": str,
        "startToFireTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventstimerStartedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventstimerStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `timerStartedEventAttributes`

    If the event is of type ``TimerStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was started.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **startToFireTimeout** *(string) --*

      The duration of time after which the timer fires.

      The duration is specified in seconds, an integer greater than or equal to ``0`` .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributes`
    `externalWorkflowExecution`

    The external workflow execution for which the cancellation was requested.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "externalWorkflowExecution": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
        "cause": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **externalWorkflowExecution** *(dict) --*

      The external workflow execution for which the cancellation was requested.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
      source event with this ID can be found in the history of the source workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **cause** *(string) --*

      If set, indicates that the request to cancel the workflow execution was automatically
      generated, and specifies the cause. This happens if the parent workflow execution times out or
      is terminated, and the child policy is set to cancel child executions.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    {"details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCanceledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionCanceledEventAttributes`

    If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **details** *(string) --*

      The details of the cancellation.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    {"result": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCompletedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionCompletedEventAttributes`

    If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The result produced by the workflow execution upon successful completion.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `taskList`

    The task list to use for the decisions of the new (continued) workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    {
        "input": str,
        "decisionTaskCompletedEventId": int,
        "newExecutionRunId": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef,
        "taskPriority": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "tagList": List[str],
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef,
        "lambdaRole": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionContinuedAsNewEventAttributes`

    If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the new workflow execution.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **newExecutionRunId** *(string) --*

      The ``runId`` of the new workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The total duration allowed for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The task list to use for the decisions of the new (continued) workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the task to use for the decisions of the new (continued) workflow execution.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions of the new execution if it is terminated
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **tagList** *(list) --*

      The list of tags associated with the new workflow execution.

      - *(string) --*

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **lambdaRole** *(string) --*

      The IAM role to attach to the new (continued) workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionFailedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionFailedEventAttributes`

    If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The descriptive reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributes`
    `externalWorkflowExecution`

    The workflow execution that sent the signal. This is set only of the signal was sent by another
    workflow execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    {
        "signalName": str,
        "input": str,
        "externalWorkflowExecution": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionSignaledEventAttributes`

    If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **signalName** *(string) --*

      The name of the signal received. The decider can use the signal name and inputs to determine
      how to the process the signal.

    - **input** *(string) --*

      The inputs provided with the signal. The decider can use the signal name and inputs to
      determine how to process the signal.

    - **externalWorkflowExecution** *(dict) --*

      The workflow execution that sent the signal. This is set only of the signal was sent by
      another workflow execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
      this ID can be found in the history of the source workflow execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
      This field is set only if the signal was initiated by another workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributes`
    `parentWorkflowExecution`

    The source workflow execution that started this workflow execution. The member isn't set if the
    workflow execution was not started by a workflow.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributes`
    `taskList`

    The name of the task list for scheduling the decision tasks for this workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    {
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "taskList": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "workflowType": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "tagList": List[str],
        "continuedExecutionRunId": str,
        "parentWorkflowExecution": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef,
        "parentInitiatedEventId": int,
        "lambdaRole": str,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionStartedEventAttributes`

    If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for this workflow type.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this workflow execution is terminated,
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskList** *(dict) --*

      The name of the task list for scheduling the decision tasks for this workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the decision tasks in the workflow execution.

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **tagList** *(list) --*

      The list of tags associated with this workflow execution. An execution can have up to 5 tags.

      - *(string) --*

    - **continuedExecutionRunId** *(string) --*

      If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
      then it contains the ``runId`` of the previous workflow execution that was closed and
      continued as this execution.

    - **parentWorkflowExecution** *(dict) --*

      The source workflow execution that started this workflow execution. The member isn't set if
      the workflow execution was not started by a workflow.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **parentInitiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source event
      with this ID can be found in the history of the source workflow execution. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **lambdaRole** *(string) --*

      The IAM role attached to the workflow execution.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    {"reason": str, "details": str, "childPolicy": str, "cause": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionTerminatedEventAttributes`

    If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the termination.

    - **details** *(string) --*

      The details provided for the termination.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **cause** *(string) --*

      If set, indicates that the workflow execution was automatically terminated, and specifies the
      cause. This happens if the parent workflow execution times out or is terminated and the child
      policy is set to terminate child executions.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "childPolicy": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponseevents`
    `workflowExecutionTimedOutEventAttributes`

    If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that caused this event.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.
    """


_ClientGetWorkflowExecutionHistoryResponseeventsTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseeventsTypeDef",
    {
        "eventTimestamp": datetime,
        "eventType": str,
        "eventId": int,
        "workflowExecutionStartedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionStartedEventAttributesTypeDef,
        "workflowExecutionCompletedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCompletedEventAttributesTypeDef,
        "completeWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionFailedEventAttributesTypeDef,
        "failWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTimedOutEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef,
        "workflowExecutionCanceledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCanceledEventAttributesTypeDef,
        "cancelWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionContinuedAsNewEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef,
        "continueAsNewWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTerminatedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef,
        "workflowExecutionCancelRequestedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef,
        "decisionTaskScheduledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskScheduledEventAttributesTypeDef,
        "decisionTaskStartedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskStartedEventAttributesTypeDef,
        "decisionTaskCompletedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskCompletedEventAttributesTypeDef,
        "decisionTaskTimedOutEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsdecisionTaskTimedOutEventAttributesTypeDef,
        "activityTaskScheduledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskScheduledEventAttributesTypeDef,
        "activityTaskStartedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskStartedEventAttributesTypeDef,
        "activityTaskCompletedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCompletedEventAttributesTypeDef,
        "activityTaskFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskFailedEventAttributesTypeDef,
        "activityTaskTimedOutEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskTimedOutEventAttributesTypeDef,
        "activityTaskCanceledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCanceledEventAttributesTypeDef,
        "activityTaskCancelRequestedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef,
        "workflowExecutionSignaledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsworkflowExecutionSignaledEventAttributesTypeDef,
        "markerRecordedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsmarkerRecordedEventAttributesTypeDef,
        "recordMarkerFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsrecordMarkerFailedEventAttributesTypeDef,
        "timerStartedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventstimerStartedEventAttributesTypeDef,
        "timerFiredEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventstimerFiredEventAttributesTypeDef,
        "timerCanceledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventstimerCanceledEventAttributesTypeDef,
        "startChildWorkflowExecutionInitiatedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef,
        "childWorkflowExecutionStartedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef,
        "childWorkflowExecutionCompletedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef,
        "childWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef,
        "childWorkflowExecutionTimedOutEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef,
        "childWorkflowExecutionCanceledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef,
        "childWorkflowExecutionTerminatedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef,
        "signalExternalWorkflowExecutionInitiatedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "externalWorkflowExecutionSignaledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef,
        "signalExternalWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "externalWorkflowExecutionCancelRequestedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "scheduleActivityTaskFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef,
        "requestCancelActivityTaskFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef,
        "startTimerFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsstartTimerFailedEventAttributesTypeDef,
        "cancelTimerFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventscancelTimerFailedEventAttributesTypeDef,
        "startChildWorkflowExecutionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef,
        "lambdaFunctionScheduledEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionScheduledEventAttributesTypeDef,
        "lambdaFunctionStartedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionStartedEventAttributesTypeDef,
        "lambdaFunctionCompletedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionCompletedEventAttributesTypeDef,
        "lambdaFunctionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionFailedEventAttributesTypeDef,
        "lambdaFunctionTimedOutEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventslambdaFunctionTimedOutEventAttributesTypeDef,
        "scheduleLambdaFunctionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef,
        "startLambdaFunctionFailedEventAttributes": ClientGetWorkflowExecutionHistoryResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef,
    },
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseeventsTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseeventsTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistoryResponse` `events`

    Event within a workflow execution. A history event can be one of these types:

    * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by the
    system.

    * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

    * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
    calling  RespondActivityTaskCompleted .

    * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
    RespondActivityTaskFailed .

    * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

    * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

    * ``ActivityTaskTimedOut`` – The activity task timed out.

    * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the decision
    isn't configured properly, for example no timer exists with the specified timer Id.

    * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

    * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
    execution, was canceled and closed.

    * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
    execution, completed successfully and was closed.

    * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
    execution, failed to complete successfully and was closed.

    * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

    * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this workflow
    execution, was terminated.

    * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
    execution, timed out and was closed.

    * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

    * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
    being continued as a new workflow execution.

    * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
    RespondDecisionTaskCompleted .

    * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

    * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

    * ``DecisionTaskTimedOut`` – The decision task timed out.

    * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
    execution was successfully delivered to the target execution.

    * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution, was
    successfully delivered to the target external workflow execution.

    * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
    failed.

    * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
    ``RecordMarker`` decision.

    * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

    * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask decision.
    This happens when the decision isn't configured properly.

    * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
    execution failed.

    * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
    cancellation of an external workflow execution.

    * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This happens
    when the decision isn't configured properly, for example the activity type specified isn't
    registered.

    * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
    execution failed.

    * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow was
    made.

    * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

    * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
    decision. This happens when the decision isn't configured properly, for example the workflow
    type specified isn't registered.

    * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
    execution.

    * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the decision
    isn't configured properly, for example a timer already exists with the specified timer Id.

    * ``TimerCanceled`` – A timer, previously started for this workflow execution, was successfully
    canceled.

    * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

    * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
    decision.

    * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was made.

    * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and closed.

    * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
    completion.

    * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new execution of
    the same type was created with the same workflowId.

    * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

    * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow execution.

    * ``WorkflowExecutionStarted`` – The workflow execution was started.

    * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

    * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
    exceeded.

    - **eventTimestamp** *(datetime) --*

      The date and time when the event occurred.

    - **eventType** *(string) --*

      The type of the history event.

    - **eventId** *(integer) --*

      The system generated ID of the event. This ID uniquely identifies the event with in the
      workflow execution history.

    - **workflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for this workflow type.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this workflow execution is
        terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
        expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskList** *(dict) --*

        The name of the task list for scheduling the decision tasks for this workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the decision tasks in the workflow execution.

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **tagList** *(list) --*

        The list of tags associated with this workflow execution. An execution can have up to 5
        tags.

        - *(string) --*

      - **continuedExecutionRunId** *(string) --*

        If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
        then it contains the ``runId`` of the previous workflow execution that was closed and
        continued as this execution.

      - **parentWorkflowExecution** *(dict) --*

        The source workflow execution that started this workflow execution. The member isn't set if
        the workflow execution was not started by a workflow.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **parentInitiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
        event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **lambdaRole** *(string) --*

        The IAM role attached to the workflow execution.

    - **workflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The result produced by the workflow execution upon successful completion.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The descriptive reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **workflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that caused this event.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **workflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **details** *(string) --*

        The details of the cancellation.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the new workflow execution.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **newExecutionRunId** *(string) --*

        The ``runId`` of the new workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The total duration allowed for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The task list to use for the decisions of the new (continued) workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the task to use for the decisions of the new (continued) workflow execution.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions of the new execution if it is terminated
        by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **tagList** *(list) --*

        The list of tags associated with the new workflow execution.

        - *(string) --*

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **lambdaRole** *(string) --*

        The IAM role to attach to the new (continued) workflow execution.

    - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the termination.

      - **details** *(string) --*

        The details provided for the termination.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **cause** *(string) --*

        If set, indicates that the workflow execution was automatically terminated, and specifies
        the cause. This happens if the parent workflow execution times out or is terminated and the
        child policy is set to terminate child executions.

    - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **externalWorkflowExecution** *(dict) --*

        The external workflow execution for which the cancellation was requested.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
        source event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        If set, indicates that the request to cancel the workflow execution was automatically
        generated, and specifies the cause. This happens if the parent workflow execution times out
        or is terminated, and the child policy is set to cancel child executions.

    - **decisionTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **taskList** *(dict) --*

        The name of the task list in which the decision task was scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        A task priority that, if set, specifies the priority for this decision task. Valid values
        are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **startToCloseTimeout** *(string) --*

        The maximum duration for this decision task. The task is considered timed out if it doesn't
        completed within this duration.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

    - **decisionTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the decider making the request. This enables diagnostic tracing when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **decisionTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **executionContext** *(string) --*

        User defined context for the workflow execution.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **decisionTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that expired before the decision task could be completed.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The type of the activity task.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The unique ID of the activity task.

      - **input** *(string) --*

        The input provided to the activity task.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.
        This data isn't sent to the activity.

      - **scheduleToStartTimeout** *(string) --*

        The maximum amount of time the activity task can wait to be assigned to a worker.

      - **scheduleToCloseTimeout** *(string) --*

        The maximum amount of time for this activity task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker may take to process the activity task.

      - **taskList** *(dict) --*

        The task list in which the activity task has been scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority to assign to the scheduled activity task. If set, this overrides any default
        priority value that was assigned when the activity type was registered.

        Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

      - **heartbeatTimeout** *(string) --*

        The maximum time before which the worker processing this task must report progress by
        calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
        automatically timed out. If the worker subsequently attempts to record a heartbeat or return
        a result, it is ignored.

    - **activityTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the worker that was assigned this task. This aids diagnostics when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **activityTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The results of the activity task.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **details** *(string) --*

        Contains the content of the ``details`` parameter for the last call made by the activity to
        ``RecordActivityTaskHeartbeat`` .

    - **activityTaskCanceledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **details** *(string) --*

        Details of the cancellation.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **latestCancelRequestedEventId** *(integer) --*

        If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
        activity task. This information can be useful for diagnosing problems by tracing back the
        chain of events leading up to this event.

    - **activityTaskCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **activityId** *(string) --*

        The unique ID of the task.

    - **workflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **signalName** *(string) --*

        The name of the signal received. The decider can use the signal name and inputs to determine
        how to the process the signal.

      - **input** *(string) --*

        The inputs provided with the signal. The decider can use the signal name and inputs to
        determine how to process the signal.

      - **externalWorkflowExecution** *(dict) --*

        The workflow execution that sent the signal. This is set only of the signal was sent by
        another workflow execution.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
        this ID can be found in the history of the source workflow execution. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event. This field is set only if the signal was initiated by another workflow execution.

    - **markerRecordedEventAttributes** *(dict) --*

      If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The name of the marker.

      - **details** *(string) --*

        The details of the marker.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarker`` decision that requested this marker. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **recordMarkerFailedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The marker's name.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerStartedEventAttributes** *(dict) --*

      If the event is of type ``TimerStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was started.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

      - **startToFireTimeout** *(string) --*

        The duration of time after which the timer fires.

        The duration is specified in seconds, an integer greater than or equal to ``0`` .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **timerFiredEventAttributes** *(dict) --*

      If the event is of type ``TimerFired`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that fired.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerCanceledEventAttributes** *(dict) --*

      If the event is of type ``TimerCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was canceled.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.
        This data isn't sent to the activity.

      - **input** *(string) --*

        The inputs provided to the child workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for the child workflow execution. If the workflow execution isn't
        closed within this duration, it is timed out and force-terminated.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The name of the task list used for the decision tasks of the child workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority assigned for the decision tasks for this workflow execution. Valid values are
        integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
        (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the cause
        of events.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this execution gets terminated by
        explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration allowed for the decision tasks for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **tagList** *(list) --*

        The list of tags to associated with the child workflow execution.

        - *(string) --*

      - **lambdaRole** *(string) --*

        The IAM role to attach to the child workflow execution.

    - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was started.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was completed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **result** *(string) --*

        The result of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that failed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **reason** *(string) --*

        The reason for the failure (if provided).

      - **details** *(string) --*

        The details of the failure (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that timed out.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **timeoutType** *(string) --*

        The type of the timeout that caused the child workflow execution to time out.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was canceled.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **details** *(string) --*

        Details of the cancellation (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was terminated.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to send the signal to.

      - **signalName** *(string) --*

        The name of the signal.

      - **input** *(string) --*

        The input provided to the signal.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.

    - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution that the signal was delivered to.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution that the signal was being delivered
        to.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution that the signal was being delivered to.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution to which the cancellation request was delivered.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member
      is set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution to be canceled.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to be canceled.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is
      set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The activity type provided in the ``ScheduleActivityTask`` decision that failed.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The activityId provided in the ``ScheduleActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

    - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **activityId** *(string) --*

        The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **startTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``StartTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **cancelTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``CancelTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowType** *(dict) --*

        The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
        ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
        ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
        information to diagnose problems by tracing back the chain of events leading up to this
        event.

        When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
        because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the child workflow execution.

    - **lambdaFunctionScheduledEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
      types.

      - **id** *(string) --*

        The unique ID of the Lambda task.

      - **name** *(string) --*

        The name of the Lambda function.

      - **control** *(string) --*

        Data attached to the event that the decider can use in subsequent workflow tasks. This data
        isn't sent to the Lambda task.

      - **input** *(string) --*

        The input provided to the Lambda task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker can take to process the Lambda task.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this activity task. To help diagnose issues, use this information to trace
        back the chain of events leading up to this event.

    - **lambdaFunctionStartedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

    - **lambdaFunctionCompletedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **result** *(string) --*

        The results of the Lambda task.

    - **lambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

    - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
        started. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

    - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
      event types.

      - **id** *(string) --*

        The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

      - **name** *(string) --*

        The name of the Lambda function.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this Lambda task. To help diagnose issues, use this information to trace back
        the chain of events leading up to this event.

    - **startLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
          role attached to the execution lacked sufficient permissions. For details and example IAM
          policies, see `Lambda Tasks
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **message** *(string) --*

        A description that can help diagnose the cause of the fault.
    """


_ClientGetWorkflowExecutionHistoryResponseTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryResponseTypeDef",
    {"events": List[ClientGetWorkflowExecutionHistoryResponseeventsTypeDef], "nextPageToken": str},
    total=False,
)


class ClientGetWorkflowExecutionHistoryResponseTypeDef(
    _ClientGetWorkflowExecutionHistoryResponseTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistory` `Response`

    Paginated representation of a workflow history for a workflow execution. This is the up to date,
    complete and authoritative record of the events related to all tasks and events in the life of
    the workflow execution.

    - **events** *(list) --*

      The list of history events.

      - *(dict) --*

        Event within a workflow execution. A history event can be one of these types:

        * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by
        the system.

        * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

        * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
        calling  RespondActivityTaskCompleted .

        * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
        RespondActivityTaskFailed .

        * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

        * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

        * ``ActivityTaskTimedOut`` – The activity task timed out.

        * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the
        decision isn't configured properly, for example no timer exists with the specified timer Id.

        * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

        * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
        execution, was canceled and closed.

        * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
        execution, completed successfully and was closed.

        * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
        execution, failed to complete successfully and was closed.

        * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

        * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this
        workflow execution, was terminated.

        * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
        execution, timed out and was closed.

        * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

        * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
        being continued as a new workflow execution.

        * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
        RespondDecisionTaskCompleted .

        * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

        * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

        * ``DecisionTaskTimedOut`` – The decision task timed out.

        * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
        execution was successfully delivered to the target execution.

        * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution,
        was successfully delivered to the target external workflow execution.

        * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
        failed.

        * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
        ``RecordMarker`` decision.

        * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

        * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask
        decision. This happens when the decision isn't configured properly.

        * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
        execution failed.

        * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
        cancellation of an external workflow execution.

        * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This
        happens when the decision isn't configured properly, for example the activity type specified
        isn't registered.

        * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
        execution failed.

        * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow
        was made.

        * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

        * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
        decision. This happens when the decision isn't configured properly, for example the workflow
        type specified isn't registered.

        * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
        execution.

        * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the
        decision isn't configured properly, for example a timer already exists with the specified
        timer Id.

        * ``TimerCanceled`` – A timer, previously started for this workflow execution, was
        successfully canceled.

        * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

        * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
        decision.

        * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was
        made.

        * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and
        closed.

        * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
        completion.

        * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new
        execution of the same type was created with the same workflowId.

        * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

        * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow
        execution.

        * ``WorkflowExecutionStarted`` – The workflow execution was started.

        * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

        * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
        exceeded.

        - **eventTimestamp** *(datetime) --*

          The date and time when the event occurred.

        - **eventType** *(string) --*

          The type of the history event.

        - **eventId** *(integer) --*

          The system generated ID of the event. This ID uniquely identifies the event with in the
          workflow execution history.

        - **workflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for this workflow type.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this workflow execution is
            terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskList** *(dict) --*

            The name of the task list for scheduling the decision tasks for this workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the decision tasks in the workflow execution.

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **tagList** *(list) --*

            The list of tags associated with this workflow execution. An execution can have up to 5
            tags.

            - *(string) --*

          - **continuedExecutionRunId** *(string) --*

            If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution``
            decision, then it contains the ``runId`` of the previous workflow execution that was
            closed and continued as this execution.

          - **parentWorkflowExecution** *(dict) --*

            The source workflow execution that started this workflow execution. The member isn't set
            if the workflow execution was not started by a workflow.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **parentInitiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
            event with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **lambdaRole** *(string) --*

            The IAM role attached to the workflow execution.

        - **workflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The result produced by the workflow execution upon successful completion.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The descriptive reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that caused this event.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

        - **workflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            The details of the cancellation.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the new workflow execution.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **newExecutionRunId** *(string) --*

            The ``runId`` of the new workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The total duration allowed for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The task list to use for the decisions of the new (continued) workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the task to use for the decisions of the new (continued) workflow
            execution.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions of the new execution if it is
            terminated by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **tagList** *(list) --*

            The list of tags associated with the new workflow execution.

            - *(string) --*

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **lambdaRole** *(string) --*

            The IAM role to attach to the new (continued) workflow execution.

        - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **workflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the termination.

          - **details** *(string) --*

            The details provided for the termination.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **cause** *(string) --*

            If set, indicates that the workflow execution was automatically terminated, and
            specifies the cause. This happens if the parent workflow execution times out or is
            terminated and the child policy is set to terminate child executions.

        - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **externalWorkflowExecution** *(dict) --*

            The external workflow execution for which the cancellation was requested.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow
            execution.The source event with this ID can be found in the history of the source
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **cause** *(string) --*

            If set, indicates that the request to cancel the workflow execution was automatically
            generated, and specifies the cause. This happens if the parent workflow execution times
            out or is terminated, and the child policy is set to cancel child executions.

        - **decisionTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **taskList** *(dict) --*

            The name of the task list in which the decision task was scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            A task priority that, if set, specifies the priority for this decision task. Valid
            values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **startToCloseTimeout** *(string) --*

            The maximum duration for this decision task. The task is considered timed out if it
            doesn't completed within this duration.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

        - **decisionTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the decider making the request. This enables diagnostic tracing when
            problems arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **decisionTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **executionContext** *(string) --*

            User defined context for the workflow execution.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **decisionTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that expired before the decision task could be completed.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The type of the activity task.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The unique ID of the activity task.

          - **input** *(string) --*

            The input provided to the activity task.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.
            This data isn't sent to the activity.

          - **scheduleToStartTimeout** *(string) --*

            The maximum amount of time the activity task can wait to be assigned to a worker.

          - **scheduleToCloseTimeout** *(string) --*

            The maximum amount of time for this activity task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker may take to process the activity task.

          - **taskList** *(dict) --*

            The task list in which the activity task has been scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority to assign to the scheduled activity task. If set, this overrides any
            default priority value that was assigned when the activity type was registered.

            Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

          - **heartbeatTimeout** *(string) --*

            The maximum time before which the worker processing this task must report progress by
            calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
            automatically timed out. If the worker subsequently attempts to record a heartbeat or
            return a result, it is ignored.

        - **activityTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the worker that was assigned this task. This aids diagnostics when problems
            arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **activityTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The results of the activity task.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **details** *(string) --*

            Contains the content of the ``details`` parameter for the last call made by the activity
            to ``RecordActivityTaskHeartbeat`` .

        - **activityTaskCanceledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            Details of the cancellation.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **latestCancelRequestedEventId** *(integer) --*

            If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for
            this activity task. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **activityTaskCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskcancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **activityId** *(string) --*

            The unique ID of the task.

        - **workflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **signalName** *(string) --*

            The name of the signal received. The decider can use the signal name and inputs to
            determine how to the process the signal.

          - **input** *(string) --*

            The inputs provided with the signal. The decider can use the signal name and inputs to
            determine how to process the signal.

          - **externalWorkflowExecution** *(dict) --*

            The workflow execution that sent the signal. This is set only of the signal was sent by
            another workflow execution.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event
            with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event. This field is set only if the signal was initiated by another
            workflow execution.

        - **markerRecordedEventAttributes** *(dict) --*

          If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The name of the marker.

          - **details** *(string) --*

            The details of the marker.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarker`` decision that requested this marker. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **recordMarkerFailedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The marker's name.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerStartedEventAttributes** *(dict) --*

          If the event is of type ``TimerStarted`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was started.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

          - **startToFireTimeout** *(string) --*

            The duration of time after which the timer fires.

            The duration is specified in seconds, an integer greater than or equal to ``0`` .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **timerFiredEventAttributes** *(dict) --*

          If the event is of type ``TimerFired`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that fired.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerCanceledEventAttributes** *(dict) --*

          If the event is of type ``TimerCanceled`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was canceled.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.
            This data isn't sent to the activity.

          - **input** *(string) --*

            The inputs provided to the child workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for the child workflow execution. If the workflow execution isn't
            closed within this duration, it is timed out and force-terminated.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The name of the task list used for the decision tasks of the child workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority assigned for the decision tasks for this workflow execution. Valid values
            are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the cause of events.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this execution gets terminated by
            explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration allowed for the decision tasks for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **tagList** *(list) --*

            The list of tags to associated with the child workflow execution.

            - *(string) --*

          - **lambdaRole** *(string) --*

            The IAM role to attach to the child workflow execution.

        - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was started.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was completed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **result** *(string) --*

            The result of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that failed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **reason** *(string) --*

            The reason for the failure (if provided).

          - **details** *(string) --*

            The details of the failure (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that timed out.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **timeoutType** *(string) --*

            The type of the timeout that caused the child workflow execution to time out.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was canceled.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **details** *(string) --*

            Details of the cancellation (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was terminated.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to send the signal to.

          - **signalName** *(string) --*

            The name of the signal.

          - **input** *(string) --*

            The input provided to the signal.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.

        - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution that the signal was delivered to.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution that the signal was being
            delivered to.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution that the signal was being delivered to.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution to which the cancellation request was delivered.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this
          member is set and provides detailed information about the event. It isn't set for other
          event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution to be canceled.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to be canceled.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

        - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member
          is set and provides detailed information about the event. It isn't set for other event
          types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow to which the cancel request was to be
            delivered.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The activity type provided in the ``ScheduleActivityTask`` decision that failed.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The activityId provided in the ``ScheduleActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

        - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityId** *(string) --*

            The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **startTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``StartTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **cancelTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelTimerFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``CancelTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowType** *(dict) --*

            The workflow type provided in the ``StartChildWorkflowExecution``   Decision that
            failed.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it
              lacks sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of
            the ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
            ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use
            this information to diagnose problems by tracing back the chain of events leading up to
            this event.

            When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to
            ``0`` because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the child workflow execution.

        - **lambdaFunctionScheduledEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The unique ID of the Lambda task.

          - **name** *(string) --*

            The name of the Lambda function.

          - **control** *(string) --*

            Data attached to the event that the decider can use in subsequent workflow tasks. This
            data isn't sent to the Lambda task.

          - **input** *(string) --*

            The input provided to the Lambda task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker can take to process the Lambda task.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this activity task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **lambdaFunctionStartedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

        - **lambdaFunctionCompletedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **result** *(string) --*

            The results of the Lambda task.

        - **lambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

        - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
            started. To help diagnose issues, use this information to trace back the chain of events
            leading up to this event.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

        - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

          - **name** *(string) --*

            The name of the Lambda function.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this Lambda task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **startLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the
              IAM role attached to the execution lacked sufficient permissions. For details and
              example IAM policies, see `Lambda Tasks
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **message** *(string) --*

            A description that can help diagnose the cause of the fault.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.
    """


_ClientGetWorkflowExecutionHistoryexecutionTypeDef = TypedDict(
    "_ClientGetWorkflowExecutionHistoryexecutionTypeDef", {"workflowId": str, "runId": str}
)


class ClientGetWorkflowExecutionHistoryexecutionTypeDef(
    _ClientGetWorkflowExecutionHistoryexecutionTypeDef
):
    """
    Type definition for `ClientGetWorkflowExecutionHistory` `execution`

    Specifies the workflow execution for which to return the history.

    - **workflowId** *(string) --* **[REQUIRED]**

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --* **[REQUIRED]**

      A system-generated unique identifier for the workflow execution.
    """


_ClientListActivityTypesResponsetypeInfosactivityTypeTypeDef = TypedDict(
    "_ClientListActivityTypesResponsetypeInfosactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientListActivityTypesResponsetypeInfosactivityTypeTypeDef(
    _ClientListActivityTypesResponsetypeInfosactivityTypeTypeDef
):
    """
    Type definition for `ClientListActivityTypesResponsetypeInfos` `activityType`

    The  ActivityType type structure representing the activity type.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientListActivityTypesResponsetypeInfosTypeDef = TypedDict(
    "_ClientListActivityTypesResponsetypeInfosTypeDef",
    {
        "activityType": ClientListActivityTypesResponsetypeInfosactivityTypeTypeDef,
        "status": str,
        "description": str,
        "creationDate": datetime,
        "deprecationDate": datetime,
    },
    total=False,
)


class ClientListActivityTypesResponsetypeInfosTypeDef(
    _ClientListActivityTypesResponsetypeInfosTypeDef
):
    """
    Type definition for `ClientListActivityTypesResponse` `typeInfos`

    Detailed information about an activity type.

    - **activityType** *(dict) --*

      The  ActivityType type structure representing the activity type.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **status** *(string) --*

      The current status of the activity type.

    - **description** *(string) --*

      The description of the activity type provided in  RegisterActivityType .

    - **creationDate** *(datetime) --*

      The date and time this activity type was created through  RegisterActivityType .

    - **deprecationDate** *(datetime) --*

      If DEPRECATED, the date and time  DeprecateActivityType was called.
    """


_ClientListActivityTypesResponseTypeDef = TypedDict(
    "_ClientListActivityTypesResponseTypeDef",
    {"typeInfos": List[ClientListActivityTypesResponsetypeInfosTypeDef], "nextPageToken": str},
    total=False,
)


class ClientListActivityTypesResponseTypeDef(_ClientListActivityTypesResponseTypeDef):
    """
    Type definition for `ClientListActivityTypes` `Response`

    Contains a paginated list of activity type information structures.

    - **typeInfos** *(list) --*

      List of activity type information.

      - *(dict) --*

        Detailed information about an activity type.

        - **activityType** *(dict) --*

          The  ActivityType type structure representing the activity type.

          - **name** *(string) --*

            The name of this activity.

            .. note::

              The combination of activity type name and version must be unique within a domain.

          - **version** *(string) --*

            The version of this activity.

            .. note::

              The combination of activity type name and version must be unique with in a domain.

        - **status** *(string) --*

          The current status of the activity type.

        - **description** *(string) --*

          The description of the activity type provided in  RegisterActivityType .

        - **creationDate** *(datetime) --*

          The date and time this activity type was created through  RegisterActivityType .

        - **deprecationDate** *(datetime) --*

          If DEPRECATED, the date and time  DeprecateActivityType was called.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.
    """


_ClientListClosedWorkflowExecutionsResponseexecutionInfosexecutionTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionsResponseexecutionInfosexecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientListClosedWorkflowExecutionsResponseexecutionInfosexecutionTypeDef(
    _ClientListClosedWorkflowExecutionsResponseexecutionInfosexecutionTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutionsResponseexecutionInfos` `execution`

    The workflow execution this information is about.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientListClosedWorkflowExecutionsResponseexecutionInfosparentTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionsResponseexecutionInfosparentTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientListClosedWorkflowExecutionsResponseexecutionInfosparentTypeDef(
    _ClientListClosedWorkflowExecutionsResponseexecutionInfosparentTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutionsResponseexecutionInfos` `parent`

    If this workflow execution is a child of another execution then contains the workflow execution
    that started this execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientListClosedWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientListClosedWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef(
    _ClientListClosedWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutionsResponseexecutionInfos` `workflowType`

    The type of the workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientListClosedWorkflowExecutionsResponseexecutionInfosTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionsResponseexecutionInfosTypeDef",
    {
        "execution": ClientListClosedWorkflowExecutionsResponseexecutionInfosexecutionTypeDef,
        "workflowType": ClientListClosedWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef,
        "startTimestamp": datetime,
        "closeTimestamp": datetime,
        "executionStatus": str,
        "closeStatus": str,
        "parent": ClientListClosedWorkflowExecutionsResponseexecutionInfosparentTypeDef,
        "tagList": List[str],
        "cancelRequested": bool,
    },
    total=False,
)


class ClientListClosedWorkflowExecutionsResponseexecutionInfosTypeDef(
    _ClientListClosedWorkflowExecutionsResponseexecutionInfosTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutionsResponse` `executionInfos`

    Contains information about a workflow execution.

    - **execution** *(dict) --*

      The workflow execution this information is about.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **startTimestamp** *(datetime) --*

      The time when the execution was started.

    - **closeTimestamp** *(datetime) --*

      The time when the workflow execution was closed. Set only if the execution status is CLOSED.

    - **executionStatus** *(string) --*

      The current status of the execution.

    - **closeStatus** *(string) --*

      If the execution status is closed then this specifies how the execution was closed:

      * ``COMPLETED`` – the execution was successfully completed.

      * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
      gracefully clean up before the execution is closed.

      * ``TERMINATED`` – the execution was force terminated.

      * ``FAILED`` – the execution failed to complete.

      * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
      timed out.

      * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
      execution was completed and a new execution was started to carry on the workflow.

    - **parent** *(dict) --*

      If this workflow execution is a child of another execution then contains the workflow
      execution that started this execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **tagList** *(list) --*

      The list of tags associated with the workflow execution. Tags can be used to identify and list
      workflow executions of interest through the visibility APIs. A workflow execution can have a
      maximum of 5 tags.

      - *(string) --*

    - **cancelRequested** *(boolean) --*

      Set to true if a cancellation is requested for this workflow execution.
    """


_ClientListClosedWorkflowExecutionsResponseTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionsResponseTypeDef",
    {
        "executionInfos": List[ClientListClosedWorkflowExecutionsResponseexecutionInfosTypeDef],
        "nextPageToken": str,
    },
    total=False,
)


class ClientListClosedWorkflowExecutionsResponseTypeDef(
    _ClientListClosedWorkflowExecutionsResponseTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `Response`

    Contains a paginated list of information about workflow executions.

    - **executionInfos** *(list) --*

      The list of workflow information structures.

      - *(dict) --*

        Contains information about a workflow execution.

        - **execution** *(dict) --*

          The workflow execution this information is about.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **workflowType** *(dict) --*

          The type of the workflow execution.

          - **name** *(string) --*

            The name of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

          - **version** *(string) --*

            The version of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

        - **startTimestamp** *(datetime) --*

          The time when the execution was started.

        - **closeTimestamp** *(datetime) --*

          The time when the workflow execution was closed. Set only if the execution status is
          CLOSED.

        - **executionStatus** *(string) --*

          The current status of the execution.

        - **closeStatus** *(string) --*

          If the execution status is closed then this specifies how the execution was closed:

          * ``COMPLETED`` – the execution was successfully completed.

          * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
          gracefully clean up before the execution is closed.

          * ``TERMINATED`` – the execution was force terminated.

          * ``FAILED`` – the execution failed to complete.

          * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
          timed out.

          * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
          execution was completed and a new execution was started to carry on the workflow.

        - **parent** *(dict) --*

          If this workflow execution is a child of another execution then contains the workflow
          execution that started this execution.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **tagList** *(list) --*

          The list of tags associated with the workflow execution. Tags can be used to identify and
          list workflow executions of interest through the visibility APIs. A workflow execution can
          have a maximum of 5 tags.

          - *(string) --*

        - **cancelRequested** *(boolean) --*

          Set to true if a cancellation is requested for this workflow execution.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.
    """


_ClientListClosedWorkflowExecutionscloseStatusFilterTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionscloseStatusFilterTypeDef", {"status": str}
)


class ClientListClosedWorkflowExecutionscloseStatusFilterTypeDef(
    _ClientListClosedWorkflowExecutionscloseStatusFilterTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `closeStatusFilter`

    If specified, only workflow executions that match this *close status* are listed. For example,
    if TERMINATED is specified, then only TERMINATED workflow executions are listed.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **status** *(string) --* **[REQUIRED]**

      The close status that must match the close status of an execution for it to meet the criteria
      of this filter.
    """


_RequiredClientListClosedWorkflowExecutionscloseTimeFilterTypeDef = TypedDict(
    "_RequiredClientListClosedWorkflowExecutionscloseTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalClientListClosedWorkflowExecutionscloseTimeFilterTypeDef = TypedDict(
    "_OptionalClientListClosedWorkflowExecutionscloseTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ClientListClosedWorkflowExecutionscloseTimeFilterTypeDef(
    _RequiredClientListClosedWorkflowExecutionscloseTimeFilterTypeDef,
    _OptionalClientListClosedWorkflowExecutionscloseTimeFilterTypeDef,
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `closeTimeFilter`

    If specified, the workflow executions are included in the returned results based on whether
    their close times are within the range specified by this filter. Also, if this parameter is
    specified, the returned results are ordered by their close times.

    .. note::

       ``startTimeFilter`` and ``closeTimeFilter`` are mutually exclusive. You must specify one of
       these in a request but not both.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ClientListClosedWorkflowExecutionsexecutionFilterTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionsexecutionFilterTypeDef", {"workflowId": str}
)


class ClientListClosedWorkflowExecutionsexecutionFilterTypeDef(
    _ClientListClosedWorkflowExecutionsexecutionFilterTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `executionFilter`

    If specified, only workflow executions matching the workflow ID specified in the filter are
    returned.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **workflowId** *(string) --* **[REQUIRED]**

      The workflowId to pass of match the criteria of this filter.
    """


_RequiredClientListClosedWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_RequiredClientListClosedWorkflowExecutionsstartTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalClientListClosedWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_OptionalClientListClosedWorkflowExecutionsstartTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ClientListClosedWorkflowExecutionsstartTimeFilterTypeDef(
    _RequiredClientListClosedWorkflowExecutionsstartTimeFilterTypeDef,
    _OptionalClientListClosedWorkflowExecutionsstartTimeFilterTypeDef,
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `startTimeFilter`

    If specified, the workflow executions are included in the returned results based on whether
    their start times are within the range specified by this filter. Also, if this parameter is
    specified, the returned results are ordered by their start times.

    .. note::

       ``startTimeFilter`` and ``closeTimeFilter`` are mutually exclusive. You must specify one of
       these in a request but not both.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ClientListClosedWorkflowExecutionstagFilterTypeDef = TypedDict(
    "_ClientListClosedWorkflowExecutionstagFilterTypeDef", {"tag": str}
)


class ClientListClosedWorkflowExecutionstagFilterTypeDef(
    _ClientListClosedWorkflowExecutionstagFilterTypeDef
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `tagFilter`

    If specified, only executions that have the matching tag are listed.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **tag** *(string) --* **[REQUIRED]**

      Specifies the tag that must be associated with the execution for it to meet the filter
      criteria.

      Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + -
      @`` .
    """


_RequiredClientListClosedWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_RequiredClientListClosedWorkflowExecutionstypeFilterTypeDef", {"name": str}
)
_OptionalClientListClosedWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_OptionalClientListClosedWorkflowExecutionstypeFilterTypeDef", {"version": str}, total=False
)


class ClientListClosedWorkflowExecutionstypeFilterTypeDef(
    _RequiredClientListClosedWorkflowExecutionstypeFilterTypeDef,
    _OptionalClientListClosedWorkflowExecutionstypeFilterTypeDef,
):
    """
    Type definition for `ClientListClosedWorkflowExecutions` `typeFilter`

    If specified, only executions of the type specified in the filter are returned.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **name** *(string) --* **[REQUIRED]**

      Name of the workflow type.

    - **version** *(string) --*

      Version of the workflow type.
    """


_ClientListDomainsResponsedomainInfosTypeDef = TypedDict(
    "_ClientListDomainsResponsedomainInfosTypeDef",
    {"name": str, "status": str, "description": str, "arn": str},
    total=False,
)


class ClientListDomainsResponsedomainInfosTypeDef(_ClientListDomainsResponsedomainInfosTypeDef):
    """
    Type definition for `ClientListDomainsResponse` `domainInfos`

    Contains general information about a domain.

    - **name** *(string) --*

      The name of the domain. This name is unique within the account.

    - **status** *(string) --*

      The status of the domain:

      * ``REGISTERED`` – The domain is properly registered and available. You can use this domain
      for registering types and creating new workflow executions.

      * ``DEPRECATED`` – The domain was deprecated using  DeprecateDomain , but is still in use. You
      should not create new workflow executions in this domain.

    - **description** *(string) --*

      The description of the domain provided through  RegisterDomain .

    - **arn** *(string) --*

      The ARN of the domain.
    """


_ClientListDomainsResponseTypeDef = TypedDict(
    "_ClientListDomainsResponseTypeDef",
    {"domainInfos": List[ClientListDomainsResponsedomainInfosTypeDef], "nextPageToken": str},
    total=False,
)


class ClientListDomainsResponseTypeDef(_ClientListDomainsResponseTypeDef):
    """
    Type definition for `ClientListDomains` `Response`

    Contains a paginated collection of DomainInfo structures.

    - **domainInfos** *(list) --*

      A list of DomainInfo structures.

      - *(dict) --*

        Contains general information about a domain.

        - **name** *(string) --*

          The name of the domain. This name is unique within the account.

        - **status** *(string) --*

          The status of the domain:

          * ``REGISTERED`` – The domain is properly registered and available. You can use this
          domain for registering types and creating new workflow executions.

          * ``DEPRECATED`` – The domain was deprecated using  DeprecateDomain , but is still in use.
          You should not create new workflow executions in this domain.

        - **description** *(string) --*

          The description of the domain provided through  RegisterDomain .

        - **arn** *(string) --*

          The ARN of the domain.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.
    """


_ClientListOpenWorkflowExecutionsResponseexecutionInfosexecutionTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionsResponseexecutionInfosexecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientListOpenWorkflowExecutionsResponseexecutionInfosexecutionTypeDef(
    _ClientListOpenWorkflowExecutionsResponseexecutionInfosexecutionTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutionsResponseexecutionInfos` `execution`

    The workflow execution this information is about.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientListOpenWorkflowExecutionsResponseexecutionInfosparentTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionsResponseexecutionInfosparentTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientListOpenWorkflowExecutionsResponseexecutionInfosparentTypeDef(
    _ClientListOpenWorkflowExecutionsResponseexecutionInfosparentTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutionsResponseexecutionInfos` `parent`

    If this workflow execution is a child of another execution then contains the workflow execution
    that started this execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientListOpenWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientListOpenWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef(
    _ClientListOpenWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutionsResponseexecutionInfos` `workflowType`

    The type of the workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientListOpenWorkflowExecutionsResponseexecutionInfosTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionsResponseexecutionInfosTypeDef",
    {
        "execution": ClientListOpenWorkflowExecutionsResponseexecutionInfosexecutionTypeDef,
        "workflowType": ClientListOpenWorkflowExecutionsResponseexecutionInfosworkflowTypeTypeDef,
        "startTimestamp": datetime,
        "closeTimestamp": datetime,
        "executionStatus": str,
        "closeStatus": str,
        "parent": ClientListOpenWorkflowExecutionsResponseexecutionInfosparentTypeDef,
        "tagList": List[str],
        "cancelRequested": bool,
    },
    total=False,
)


class ClientListOpenWorkflowExecutionsResponseexecutionInfosTypeDef(
    _ClientListOpenWorkflowExecutionsResponseexecutionInfosTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutionsResponse` `executionInfos`

    Contains information about a workflow execution.

    - **execution** *(dict) --*

      The workflow execution this information is about.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **startTimestamp** *(datetime) --*

      The time when the execution was started.

    - **closeTimestamp** *(datetime) --*

      The time when the workflow execution was closed. Set only if the execution status is CLOSED.

    - **executionStatus** *(string) --*

      The current status of the execution.

    - **closeStatus** *(string) --*

      If the execution status is closed then this specifies how the execution was closed:

      * ``COMPLETED`` – the execution was successfully completed.

      * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
      gracefully clean up before the execution is closed.

      * ``TERMINATED`` – the execution was force terminated.

      * ``FAILED`` – the execution failed to complete.

      * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
      timed out.

      * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
      execution was completed and a new execution was started to carry on the workflow.

    - **parent** *(dict) --*

      If this workflow execution is a child of another execution then contains the workflow
      execution that started this execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **tagList** *(list) --*

      The list of tags associated with the workflow execution. Tags can be used to identify and list
      workflow executions of interest through the visibility APIs. A workflow execution can have a
      maximum of 5 tags.

      - *(string) --*

    - **cancelRequested** *(boolean) --*

      Set to true if a cancellation is requested for this workflow execution.
    """


_ClientListOpenWorkflowExecutionsResponseTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionsResponseTypeDef",
    {
        "executionInfos": List[ClientListOpenWorkflowExecutionsResponseexecutionInfosTypeDef],
        "nextPageToken": str,
    },
    total=False,
)


class ClientListOpenWorkflowExecutionsResponseTypeDef(
    _ClientListOpenWorkflowExecutionsResponseTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutions` `Response`

    Contains a paginated list of information about workflow executions.

    - **executionInfos** *(list) --*

      The list of workflow information structures.

      - *(dict) --*

        Contains information about a workflow execution.

        - **execution** *(dict) --*

          The workflow execution this information is about.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **workflowType** *(dict) --*

          The type of the workflow execution.

          - **name** *(string) --*

            The name of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

          - **version** *(string) --*

            The version of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

        - **startTimestamp** *(datetime) --*

          The time when the execution was started.

        - **closeTimestamp** *(datetime) --*

          The time when the workflow execution was closed. Set only if the execution status is
          CLOSED.

        - **executionStatus** *(string) --*

          The current status of the execution.

        - **closeStatus** *(string) --*

          If the execution status is closed then this specifies how the execution was closed:

          * ``COMPLETED`` – the execution was successfully completed.

          * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
          gracefully clean up before the execution is closed.

          * ``TERMINATED`` – the execution was force terminated.

          * ``FAILED`` – the execution failed to complete.

          * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
          timed out.

          * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
          execution was completed and a new execution was started to carry on the workflow.

        - **parent** *(dict) --*

          If this workflow execution is a child of another execution then contains the workflow
          execution that started this execution.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **tagList** *(list) --*

          The list of tags associated with the workflow execution. Tags can be used to identify and
          list workflow executions of interest through the visibility APIs. A workflow execution can
          have a maximum of 5 tags.

          - *(string) --*

        - **cancelRequested** *(boolean) --*

          Set to true if a cancellation is requested for this workflow execution.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.
    """


_ClientListOpenWorkflowExecutionsexecutionFilterTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionsexecutionFilterTypeDef", {"workflowId": str}
)


class ClientListOpenWorkflowExecutionsexecutionFilterTypeDef(
    _ClientListOpenWorkflowExecutionsexecutionFilterTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutions` `executionFilter`

    If specified, only workflow executions matching the workflow ID specified in the filter are
    returned.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **workflowId** *(string) --* **[REQUIRED]**

      The workflowId to pass of match the criteria of this filter.
    """


_RequiredClientListOpenWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_RequiredClientListOpenWorkflowExecutionsstartTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalClientListOpenWorkflowExecutionsstartTimeFilterTypeDef = TypedDict(
    "_OptionalClientListOpenWorkflowExecutionsstartTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ClientListOpenWorkflowExecutionsstartTimeFilterTypeDef(
    _RequiredClientListOpenWorkflowExecutionsstartTimeFilterTypeDef,
    _OptionalClientListOpenWorkflowExecutionsstartTimeFilterTypeDef,
):
    """
    Type definition for `ClientListOpenWorkflowExecutions` `startTimeFilter`

    Workflow executions are included in the returned results based on whether their start times are
    within the range specified by this filter.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ClientListOpenWorkflowExecutionstagFilterTypeDef = TypedDict(
    "_ClientListOpenWorkflowExecutionstagFilterTypeDef", {"tag": str}
)


class ClientListOpenWorkflowExecutionstagFilterTypeDef(
    _ClientListOpenWorkflowExecutionstagFilterTypeDef
):
    """
    Type definition for `ClientListOpenWorkflowExecutions` `tagFilter`

    If specified, only executions that have the matching tag are listed.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **tag** *(string) --* **[REQUIRED]**

      Specifies the tag that must be associated with the execution for it to meet the filter
      criteria.

      Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + -
      @`` .
    """


_RequiredClientListOpenWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_RequiredClientListOpenWorkflowExecutionstypeFilterTypeDef", {"name": str}
)
_OptionalClientListOpenWorkflowExecutionstypeFilterTypeDef = TypedDict(
    "_OptionalClientListOpenWorkflowExecutionstypeFilterTypeDef", {"version": str}, total=False
)


class ClientListOpenWorkflowExecutionstypeFilterTypeDef(
    _RequiredClientListOpenWorkflowExecutionstypeFilterTypeDef,
    _OptionalClientListOpenWorkflowExecutionstypeFilterTypeDef,
):
    """
    Type definition for `ClientListOpenWorkflowExecutions` `typeFilter`

    If specified, only executions of the type specified in the filter are returned.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **name** *(string) --* **[REQUIRED]**

      Name of the workflow type.

    - **version** *(string) --*

      Version of the workflow type.
    """


_ClientListTagsForResourceResponsetagsTypeDef = TypedDict(
    "_ClientListTagsForResourceResponsetagsTypeDef", {"key": str, "value": str}, total=False
)


class ClientListTagsForResourceResponsetagsTypeDef(_ClientListTagsForResourceResponsetagsTypeDef):
    """
    Type definition for `ClientListTagsForResourceResponse` `tags`

    Tags are key-value pairs that can be associated with Amazon SWF state machines and activities.

    Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + - @``
    .

    - **key** *(string) --*

      The key of a tag.

    - **value** *(string) --*

      The value of a tag.
    """


_ClientListTagsForResourceResponseTypeDef = TypedDict(
    "_ClientListTagsForResourceResponseTypeDef",
    {"tags": List[ClientListTagsForResourceResponsetagsTypeDef]},
    total=False,
)


class ClientListTagsForResourceResponseTypeDef(_ClientListTagsForResourceResponseTypeDef):
    """
    Type definition for `ClientListTagsForResource` `Response`

    - **tags** *(list) --*

      An array of tags associated with the domain.

      - *(dict) --*

        Tags are key-value pairs that can be associated with Amazon SWF state machines and
        activities.

        Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / =
             + -
        @`` .

        - **key** *(string) --*

          The key of a tag.

        - **value** *(string) --*

          The value of a tag.
    """


_ClientListWorkflowTypesResponsetypeInfosworkflowTypeTypeDef = TypedDict(
    "_ClientListWorkflowTypesResponsetypeInfosworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientListWorkflowTypesResponsetypeInfosworkflowTypeTypeDef(
    _ClientListWorkflowTypesResponsetypeInfosworkflowTypeTypeDef
):
    """
    Type definition for `ClientListWorkflowTypesResponsetypeInfos` `workflowType`

    The workflow type this information is about.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientListWorkflowTypesResponsetypeInfosTypeDef = TypedDict(
    "_ClientListWorkflowTypesResponsetypeInfosTypeDef",
    {
        "workflowType": ClientListWorkflowTypesResponsetypeInfosworkflowTypeTypeDef,
        "status": str,
        "description": str,
        "creationDate": datetime,
        "deprecationDate": datetime,
    },
    total=False,
)


class ClientListWorkflowTypesResponsetypeInfosTypeDef(
    _ClientListWorkflowTypesResponsetypeInfosTypeDef
):
    """
    Type definition for `ClientListWorkflowTypesResponse` `typeInfos`

    Contains information about a workflow type.

    - **workflowType** *(dict) --*

      The workflow type this information is about.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **status** *(string) --*

      The current status of the workflow type.

    - **description** *(string) --*

      The description of the type registered through  RegisterWorkflowType .

    - **creationDate** *(datetime) --*

      The date when this type was registered.

    - **deprecationDate** *(datetime) --*

      If the type is in deprecated state, then it is set to the date when the type was deprecated.
    """


_ClientListWorkflowTypesResponseTypeDef = TypedDict(
    "_ClientListWorkflowTypesResponseTypeDef",
    {"typeInfos": List[ClientListWorkflowTypesResponsetypeInfosTypeDef], "nextPageToken": str},
    total=False,
)


class ClientListWorkflowTypesResponseTypeDef(_ClientListWorkflowTypesResponseTypeDef):
    """
    Type definition for `ClientListWorkflowTypes` `Response`

    Contains a paginated list of information structures about workflow types.

    - **typeInfos** *(list) --*

      The list of workflow type information.

      - *(dict) --*

        Contains information about a workflow type.

        - **workflowType** *(dict) --*

          The workflow type this information is about.

          - **name** *(string) --*

            The name of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

          - **version** *(string) --*

            The version of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

        - **status** *(string) --*

          The current status of the workflow type.

        - **description** *(string) --*

          The description of the type registered through  RegisterWorkflowType .

        - **creationDate** *(datetime) --*

          The date when this type was registered.

        - **deprecationDate** *(datetime) --*

          If the type is in deprecated state, then it is set to the date when the type was
          deprecated.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.
    """


_ClientPollForActivityTaskResponseactivityTypeTypeDef = TypedDict(
    "_ClientPollForActivityTaskResponseactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForActivityTaskResponseactivityTypeTypeDef(
    _ClientPollForActivityTaskResponseactivityTypeTypeDef
):
    """
    Type definition for `ClientPollForActivityTaskResponse` `activityType`

    The type of this activity task.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientPollForActivityTaskResponseworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForActivityTaskResponseworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForActivityTaskResponseworkflowExecutionTypeDef(
    _ClientPollForActivityTaskResponseworkflowExecutionTypeDef
):
    """
    Type definition for `ClientPollForActivityTaskResponse` `workflowExecution`

    The workflow execution that started this activity task.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForActivityTaskResponseTypeDef = TypedDict(
    "_ClientPollForActivityTaskResponseTypeDef",
    {
        "taskToken": str,
        "activityId": str,
        "startedEventId": int,
        "workflowExecution": ClientPollForActivityTaskResponseworkflowExecutionTypeDef,
        "activityType": ClientPollForActivityTaskResponseactivityTypeTypeDef,
        "input": str,
    },
    total=False,
)


class ClientPollForActivityTaskResponseTypeDef(_ClientPollForActivityTaskResponseTypeDef):
    """
    Type definition for `ClientPollForActivityTask` `Response`

    Unit of work sent to an activity worker.

    - **taskToken** *(string) --*

      The opaque string used as a handle on the task. This token is used by workers to communicate
      progress and response information back to the system about the task.

    - **activityId** *(string) --*

      The unique ID of the task.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded in the history.

    - **workflowExecution** *(dict) --*

      The workflow execution that started this activity task.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **activityType** *(dict) --*

      The type of this activity task.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **input** *(string) --*

      The inputs provided when the activity task was scheduled. The form of the input is user
      defined and should be meaningful to the activity implementation.
    """


_ClientPollForActivityTasktaskListTypeDef = TypedDict(
    "_ClientPollForActivityTasktaskListTypeDef", {"name": str}
)


class ClientPollForActivityTasktaskListTypeDef(_ClientPollForActivityTasktaskListTypeDef):
    """
    Type definition for `ClientPollForActivityTask` `taskList`

    Specifies the task list to poll for activity tasks.

    The specified string must not start or end with whitespace. It must not contain a ``:`` (colon),
    ``/`` (slash), ``|`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
    ``\\u007f-\\u009f`` ). Also, it must not *be* the literal string ``arn`` .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    {"decisionTaskCompletedEventId": int, "activityId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskCancelRequestedEventAttributes`

    If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **activityId** *(string) --*

      The unique ID of the task.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskCanceledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    {
        "details": str,
        "scheduledEventId": int,
        "startedEventId": int,
        "latestCancelRequestedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskCanceledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskCanceledEventAttributes`

    If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **details** *(string) --*

      Details of the cancellation.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **latestCancelRequestedEventId** *(integer) --*

      If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
      activity task. This information can be useful for diagnosing problems by tracing back the
      chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskCompletedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    {"result": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskCompletedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskCompletedEventAttributes`

    If the event is of type ``ActivityTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The results of the activity task.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskFailedEventAttributes`

    If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributes` `activityType`

    The type of the activity task.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributes` `taskList`

    The task list in which the activity task has been scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    {
        "activityType": ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "input": str,
        "control": str,
        "scheduleToStartTimeout": str,
        "scheduleToCloseTimeout": str,
        "startToCloseTimeout": str,
        "taskList": ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "heartbeatTimeout": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskScheduledEventAttributes`

    If the event is of type ``ActivityTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The type of the activity task.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The unique ID of the activity task.

    - **input** *(string) --*

      The input provided to the activity task.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks. This
      data isn't sent to the activity.

    - **scheduleToStartTimeout** *(string) --*

      The maximum amount of time the activity task can wait to be assigned to a worker.

    - **scheduleToCloseTimeout** *(string) --*

      The maximum amount of time for this activity task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker may take to process the activity task.

    - **taskList** *(dict) --*

      The task list in which the activity task has been scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority to assign to the scheduled activity task. If set, this overrides any default
      priority value that was assigned when the activity type was registered.

      Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.

    - **heartbeatTimeout** *(string) --*

      The maximum time before which the worker processing this task must report progress by calling
      RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is automatically
      timed out. If the worker subsequently attempts to record a heartbeat or return a result, it is
      ignored.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskStartedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskStartedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskStartedEventAttributes`

    If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the worker that was assigned this task. This aids diagnostics when problems arise.
      The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsactivityTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int, "details": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsactivityTaskTimedOutEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsactivityTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `activityTaskTimedOutEventAttributes`

    If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **details** *(string) --*

      Contains the content of the ``details`` parameter for the last call made by the activity to
      ``RecordActivityTaskHeartbeat`` .
    """


_ClientPollForDecisionTaskResponseeventscancelTimerFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventscancelTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventscancelTimerFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventscancelTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents` `cancelTimerFailedEventAttributes`

    If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``CancelTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `cancelWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowExecution`

    The child workflow execution that was canceled.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `childWorkflowExecutionCanceledEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was canceled.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **details** *(string) --*

      Details of the cancellation (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowExecution`

    The child workflow execution that was completed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef,
        "result": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `childWorkflowExecutionCompletedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was completed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **result** *(string) --*

      The result of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowExecution`

    The child workflow execution that failed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "reason": str,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `childWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that failed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **reason** *(string) --*

      The reason for the failure (if provided).

    - **details** *(string) --*

      The details of the failure (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowExecution`

    The child workflow execution that was started.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `childWorkflowExecutionStartedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was started.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowExecution`

    The child workflow execution that was terminated.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `childWorkflowExecutionTerminatedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was terminated.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowExecution`

    The child workflow execution that timed out.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef,
        "timeoutType": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `childWorkflowExecutionTimedOutEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that timed out.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **timeoutType** *(string) --*

      The type of the timeout that caused the child workflow execution to time out.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `completeWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientPollForDecisionTaskResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `continueAsNewWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventsdecisionTaskCompletedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    {"executionContext": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsdecisionTaskCompletedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsdecisionTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `decisionTaskCompletedEventAttributes`

    If the event is of type ``DecisionTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **executionContext** *(string) --*

      User defined context for the workflow execution.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef(
    _ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributes` `taskList`

    The name of the task list in which the decision task was scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    {
        "taskList": ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "startToCloseTimeout": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `decisionTaskScheduledEventAttributes`

    If the event is of type ``DecisionTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **taskList** *(dict) --*

      The name of the task list in which the decision task was scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      A task priority that, if set, specifies the priority for this decision task. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **startToCloseTimeout** *(string) --*

      The maximum duration for this decision task. The task is considered timed out if it doesn't
      completed within this duration.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.
    """


_ClientPollForDecisionTaskResponseeventsdecisionTaskStartedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsdecisionTaskStartedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsdecisionTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `decisionTaskStartedEventAttributes`

    If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the decider making the request. This enables diagnostic tracing when problems
      arise. The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsdecisionTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsdecisionTaskTimedOutEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsdecisionTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `decisionTaskTimedOutEventAttributes`

    If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that expired before the decision task could be completed.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributes`
    `workflowExecution`

    The external workflow execution to which the cancellation request was delivered.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `externalWorkflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution to which the cancellation request was delivered.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributes`
    `workflowExecution`

    The external workflow execution that the signal was delivered to.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    {
        "workflowExecution": ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `externalWorkflowExecutionSignaledEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution that the signal was delivered to.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `failWorkflowExecutionFailedEventAttributes`

    If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventslambdaFunctionCompletedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "result": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventslambdaFunctionCompletedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventslambdaFunctionCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `lambdaFunctionCompletedEventAttributes`

    Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **result** *(string) --*

      The results of the Lambda task.
    """


_ClientPollForDecisionTaskResponseeventslambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "reason": str, "details": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventslambdaFunctionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventslambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `lambdaFunctionFailedEventAttributes`

    Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.
    """


_ClientPollForDecisionTaskResponseeventslambdaFunctionScheduledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    {
        "id": str,
        "name": str,
        "control": str,
        "input": str,
        "startToCloseTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventslambdaFunctionScheduledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventslambdaFunctionScheduledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `lambdaFunctionScheduledEventAttributes`

    Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The unique ID of the Lambda task.

    - **name** *(string) --*

      The name of the Lambda function.

    - **control** *(string) --*

      Data attached to the event that the decider can use in subsequent workflow tasks. This data
      isn't sent to the Lambda task.

    - **input** *(string) --*

      The input provided to the Lambda task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker can take to process the Lambda task.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this activity task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventslambdaFunctionStartedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    {"scheduledEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventslambdaFunctionStartedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventslambdaFunctionStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `lambdaFunctionStartedEventAttributes`

    Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventslambdaFunctionTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "timeoutType": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventslambdaFunctionTimedOutEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventslambdaFunctionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `lambdaFunctionTimedOutEventAttributes`

    Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task started.
      To help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.
    """


_ClientPollForDecisionTaskResponseeventsmarkerRecordedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsmarkerRecordedEventAttributesTypeDef",
    {"markerName": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsmarkerRecordedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsmarkerRecordedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents` `markerRecordedEventAttributes`

    If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The name of the marker.

    - **details** *(string) --*

      The details of the marker.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarker`` decision that requested this marker. This information can be useful
      for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsrecordMarkerFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    {"markerName": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsrecordMarkerFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsrecordMarkerFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `recordMarkerFailedEventAttributes`

    If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The marker's name.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarkerFailed`` decision for this cancellation request. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    {"activityId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `requestCancelActivityTaskFailedEventAttributes`

    If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityId** *(string) --*

      The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `requestCancelExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is set
    and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {"workflowId": str, "runId": str, "decisionTaskCompletedEventId": int, "control": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `requestCancelExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member is
    set and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution to be canceled.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to be canceled.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.
    """


_ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributes`
    `activityType`

    The activity type provided in the ``ScheduleActivityTask`` decision that failed.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    {
        "activityType": ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "cause": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `scheduleActivityTaskFailedEventAttributes`

    If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The activity type provided in the ``ScheduleActivityTask`` decision that failed.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The activityId provided in the ``ScheduleActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    {"id": str, "name": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `scheduleLambdaFunctionFailedEventAttributes`

    Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

    - **name** *(string) --*

      The name of the Lambda function.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this Lambda task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `signalExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution that the signal was being delivered to.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution that the signal was being delivered to.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "signalName": str,
        "input": str,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `signalExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to send the signal to.

    - **signalName** *(string) --*

      The name of the signal.

    - **input** *(string) --*

      The input provided to the signal.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks.
    """


_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowType": ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "cause": str,
        "workflowId": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `startChildWorkflowExecutionFailedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowType** *(dict) --*

      The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
      ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
      ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
      information to diagnose problems by tracing back the chain of events leading up to this event.

      When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
      because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the chain of events.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the child workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `taskList`

    The name of the task list used for the decision tasks of the child workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "workflowType": ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef,
        "control": str,
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "childPolicy": str,
        "taskStartToCloseTimeout": str,
        "tagList": List[str],
        "lambdaRole": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `startChildWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks. This
      data isn't sent to the activity.

    - **input** *(string) --*

      The inputs provided to the child workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for the child workflow execution. If the workflow execution isn't closed
      within this duration, it is timed out and force-terminated.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The name of the task list used for the decision tasks of the child workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority assigned for the decision tasks for this workflow execution. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the cause of events.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this execution gets terminated by
      explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration allowed for the decision tasks for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **tagList** *(list) --*

      The list of tags to associated with the child workflow execution.

      - *(string) --*

    - **lambdaRole** *(string) --*

      The IAM role to attach to the child workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "cause": str, "message": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `startLambdaFunctionFailedEventAttributes`

    Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
        role attached to the execution lacked sufficient permissions. For details and example IAM
        policies, see `Lambda Tasks
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **message** *(string) --*

      A description that can help diagnose the cause of the fault.
    """


_ClientPollForDecisionTaskResponseeventsstartTimerFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsstartTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsstartTimerFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsstartTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents` `startTimerFailedEventAttributes`

    If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``StartTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventstimerCanceledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventstimerCanceledEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventstimerCanceledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventstimerCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents` `timerCanceledEventAttributes`

    If the event is of type ``TimerCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was canceled.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventstimerFiredEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventstimerFiredEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventstimerFiredEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventstimerFiredEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents` `timerFiredEventAttributes`

    If the event is of type ``TimerFired`` then this member is set and provides detailed information
    about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that fired.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_ClientPollForDecisionTaskResponseeventstimerStartedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventstimerStartedEventAttributesTypeDef",
    {
        "timerId": str,
        "control": str,
        "startToFireTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventstimerStartedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventstimerStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents` `timerStartedEventAttributes`

    If the event is of type ``TimerStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was started.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **startToFireTimeout** *(string) --*

      The duration of time after which the timer fires.

      The duration is specified in seconds, an integer greater than or equal to ``0`` .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributes`
    `externalWorkflowExecution`

    The external workflow execution for which the cancellation was requested.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "externalWorkflowExecution": ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
        "cause": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **externalWorkflowExecution** *(dict) --*

      The external workflow execution for which the cancellation was requested.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
      source event with this ID can be found in the history of the source workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **cause** *(string) --*

      If set, indicates that the request to cancel the workflow execution was automatically
      generated, and specifies the cause. This happens if the parent workflow execution times out or
      is terminated, and the child policy is set to cancel child executions.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    {"details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionCanceledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionCanceledEventAttributes`

    If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **details** *(string) --*

      The details of the cancellation.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    {"result": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionCompletedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionCompletedEventAttributes`

    If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The result produced by the workflow execution upon successful completion.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `taskList`

    The task list to use for the decisions of the new (continued) workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    {
        "input": str,
        "decisionTaskCompletedEventId": int,
        "newExecutionRunId": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef,
        "taskPriority": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "tagList": List[str],
        "workflowType": ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef,
        "lambdaRole": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionContinuedAsNewEventAttributes`

    If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the new workflow execution.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **newExecutionRunId** *(string) --*

      The ``runId`` of the new workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The total duration allowed for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The task list to use for the decisions of the new (continued) workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the task to use for the decisions of the new (continued) workflow execution.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions of the new execution if it is terminated
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **tagList** *(list) --*

      The list of tags associated with the new workflow execution.

      - *(string) --*

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **lambdaRole** *(string) --*

      The IAM role to attach to the new (continued) workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionFailedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionFailedEventAttributes`

    If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The descriptive reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributes`
    `externalWorkflowExecution`

    The workflow execution that sent the signal. This is set only of the signal was sent by another
    workflow execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    {
        "signalName": str,
        "input": str,
        "externalWorkflowExecution": ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionSignaledEventAttributes`

    If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **signalName** *(string) --*

      The name of the signal received. The decider can use the signal name and inputs to determine
      how to the process the signal.

    - **input** *(string) --*

      The inputs provided with the signal. The decider can use the signal name and inputs to
      determine how to process the signal.

    - **externalWorkflowExecution** *(dict) --*

      The workflow execution that sent the signal. This is set only of the signal was sent by
      another workflow execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
      this ID can be found in the history of the source workflow execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
      This field is set only if the signal was initiated by another workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributes`
    `parentWorkflowExecution`

    The source workflow execution that started this workflow execution. The member isn't set if the
    workflow execution was not started by a workflow.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributes` `taskList`

    The name of the task list for scheduling the decision tasks for this workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributes` `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    {
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "taskList": ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "workflowType": ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "tagList": List[str],
        "continuedExecutionRunId": str,
        "parentWorkflowExecution": ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef,
        "parentInitiatedEventId": int,
        "lambdaRole": str,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionStartedEventAttributes`

    If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for this workflow type.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this workflow execution is terminated,
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskList** *(dict) --*

      The name of the task list for scheduling the decision tasks for this workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the decision tasks in the workflow execution.

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **tagList** *(list) --*

      The list of tags associated with this workflow execution. An execution can have up to 5 tags.

      - *(string) --*

    - **continuedExecutionRunId** *(string) --*

      If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
      then it contains the ``runId`` of the previous workflow execution that was closed and
      continued as this execution.

    - **parentWorkflowExecution** *(dict) --*

      The source workflow execution that started this workflow execution. The member isn't set if
      the workflow execution was not started by a workflow.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **parentInitiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source event
      with this ID can be found in the history of the source workflow execution. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **lambdaRole** *(string) --*

      The IAM role attached to the workflow execution.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    {"reason": str, "details": str, "childPolicy": str, "cause": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionTerminatedEventAttributes`

    If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the termination.

    - **details** *(string) --*

      The details provided for the termination.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **cause** *(string) --*

      If set, indicates that the workflow execution was automatically terminated, and specifies the
      cause. This happens if the parent workflow execution times out or is terminated and the child
      policy is set to terminate child executions.
    """


_ClientPollForDecisionTaskResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "childPolicy": str},
    total=False,
)


class ClientPollForDecisionTaskResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef(
    _ClientPollForDecisionTaskResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponseevents`
    `workflowExecutionTimedOutEventAttributes`

    If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that caused this event.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.
    """


_ClientPollForDecisionTaskResponseeventsTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseeventsTypeDef",
    {
        "eventTimestamp": datetime,
        "eventType": str,
        "eventId": int,
        "workflowExecutionStartedEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionStartedEventAttributesTypeDef,
        "workflowExecutionCompletedEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionCompletedEventAttributesTypeDef,
        "completeWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionFailedEventAttributesTypeDef,
        "failWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTimedOutEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef,
        "workflowExecutionCanceledEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionCanceledEventAttributesTypeDef,
        "cancelWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionContinuedAsNewEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef,
        "continueAsNewWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTerminatedEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef,
        "workflowExecutionCancelRequestedEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef,
        "decisionTaskScheduledEventAttributes": ClientPollForDecisionTaskResponseeventsdecisionTaskScheduledEventAttributesTypeDef,
        "decisionTaskStartedEventAttributes": ClientPollForDecisionTaskResponseeventsdecisionTaskStartedEventAttributesTypeDef,
        "decisionTaskCompletedEventAttributes": ClientPollForDecisionTaskResponseeventsdecisionTaskCompletedEventAttributesTypeDef,
        "decisionTaskTimedOutEventAttributes": ClientPollForDecisionTaskResponseeventsdecisionTaskTimedOutEventAttributesTypeDef,
        "activityTaskScheduledEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskScheduledEventAttributesTypeDef,
        "activityTaskStartedEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskStartedEventAttributesTypeDef,
        "activityTaskCompletedEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskCompletedEventAttributesTypeDef,
        "activityTaskFailedEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskFailedEventAttributesTypeDef,
        "activityTaskTimedOutEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskTimedOutEventAttributesTypeDef,
        "activityTaskCanceledEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskCanceledEventAttributesTypeDef,
        "activityTaskCancelRequestedEventAttributes": ClientPollForDecisionTaskResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef,
        "workflowExecutionSignaledEventAttributes": ClientPollForDecisionTaskResponseeventsworkflowExecutionSignaledEventAttributesTypeDef,
        "markerRecordedEventAttributes": ClientPollForDecisionTaskResponseeventsmarkerRecordedEventAttributesTypeDef,
        "recordMarkerFailedEventAttributes": ClientPollForDecisionTaskResponseeventsrecordMarkerFailedEventAttributesTypeDef,
        "timerStartedEventAttributes": ClientPollForDecisionTaskResponseeventstimerStartedEventAttributesTypeDef,
        "timerFiredEventAttributes": ClientPollForDecisionTaskResponseeventstimerFiredEventAttributesTypeDef,
        "timerCanceledEventAttributes": ClientPollForDecisionTaskResponseeventstimerCanceledEventAttributesTypeDef,
        "startChildWorkflowExecutionInitiatedEventAttributes": ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef,
        "childWorkflowExecutionStartedEventAttributes": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef,
        "childWorkflowExecutionCompletedEventAttributes": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef,
        "childWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef,
        "childWorkflowExecutionTimedOutEventAttributes": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef,
        "childWorkflowExecutionCanceledEventAttributes": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef,
        "childWorkflowExecutionTerminatedEventAttributes": ClientPollForDecisionTaskResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef,
        "signalExternalWorkflowExecutionInitiatedEventAttributes": ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "externalWorkflowExecutionSignaledEventAttributes": ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef,
        "signalExternalWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "externalWorkflowExecutionCancelRequestedEventAttributes": ClientPollForDecisionTaskResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "scheduleActivityTaskFailedEventAttributes": ClientPollForDecisionTaskResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef,
        "requestCancelActivityTaskFailedEventAttributes": ClientPollForDecisionTaskResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef,
        "startTimerFailedEventAttributes": ClientPollForDecisionTaskResponseeventsstartTimerFailedEventAttributesTypeDef,
        "cancelTimerFailedEventAttributes": ClientPollForDecisionTaskResponseeventscancelTimerFailedEventAttributesTypeDef,
        "startChildWorkflowExecutionFailedEventAttributes": ClientPollForDecisionTaskResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef,
        "lambdaFunctionScheduledEventAttributes": ClientPollForDecisionTaskResponseeventslambdaFunctionScheduledEventAttributesTypeDef,
        "lambdaFunctionStartedEventAttributes": ClientPollForDecisionTaskResponseeventslambdaFunctionStartedEventAttributesTypeDef,
        "lambdaFunctionCompletedEventAttributes": ClientPollForDecisionTaskResponseeventslambdaFunctionCompletedEventAttributesTypeDef,
        "lambdaFunctionFailedEventAttributes": ClientPollForDecisionTaskResponseeventslambdaFunctionFailedEventAttributesTypeDef,
        "lambdaFunctionTimedOutEventAttributes": ClientPollForDecisionTaskResponseeventslambdaFunctionTimedOutEventAttributesTypeDef,
        "scheduleLambdaFunctionFailedEventAttributes": ClientPollForDecisionTaskResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef,
        "startLambdaFunctionFailedEventAttributes": ClientPollForDecisionTaskResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseeventsTypeDef(
    _ClientPollForDecisionTaskResponseeventsTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponse` `events`

    Event within a workflow execution. A history event can be one of these types:

    * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by the
    system.

    * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

    * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
    calling  RespondActivityTaskCompleted .

    * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
    RespondActivityTaskFailed .

    * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

    * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

    * ``ActivityTaskTimedOut`` – The activity task timed out.

    * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the decision
    isn't configured properly, for example no timer exists with the specified timer Id.

    * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

    * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
    execution, was canceled and closed.

    * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
    execution, completed successfully and was closed.

    * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
    execution, failed to complete successfully and was closed.

    * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

    * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this workflow
    execution, was terminated.

    * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
    execution, timed out and was closed.

    * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

    * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
    being continued as a new workflow execution.

    * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
    RespondDecisionTaskCompleted .

    * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

    * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

    * ``DecisionTaskTimedOut`` – The decision task timed out.

    * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
    execution was successfully delivered to the target execution.

    * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution, was
    successfully delivered to the target external workflow execution.

    * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
    failed.

    * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
    ``RecordMarker`` decision.

    * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

    * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask decision.
    This happens when the decision isn't configured properly.

    * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
    execution failed.

    * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
    cancellation of an external workflow execution.

    * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This happens
    when the decision isn't configured properly, for example the activity type specified isn't
    registered.

    * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
    execution failed.

    * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow was
    made.

    * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

    * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
    decision. This happens when the decision isn't configured properly, for example the workflow
    type specified isn't registered.

    * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
    execution.

    * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the decision
    isn't configured properly, for example a timer already exists with the specified timer Id.

    * ``TimerCanceled`` – A timer, previously started for this workflow execution, was successfully
    canceled.

    * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

    * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
    decision.

    * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was made.

    * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and closed.

    * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
    completion.

    * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new execution of
    the same type was created with the same workflowId.

    * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

    * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow execution.

    * ``WorkflowExecutionStarted`` – The workflow execution was started.

    * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

    * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
    exceeded.

    - **eventTimestamp** *(datetime) --*

      The date and time when the event occurred.

    - **eventType** *(string) --*

      The type of the history event.

    - **eventId** *(integer) --*

      The system generated ID of the event. This ID uniquely identifies the event with in the
      workflow execution history.

    - **workflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for this workflow type.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this workflow execution is
        terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
        expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskList** *(dict) --*

        The name of the task list for scheduling the decision tasks for this workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the decision tasks in the workflow execution.

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **tagList** *(list) --*

        The list of tags associated with this workflow execution. An execution can have up to 5
        tags.

        - *(string) --*

      - **continuedExecutionRunId** *(string) --*

        If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
        then it contains the ``runId`` of the previous workflow execution that was closed and
        continued as this execution.

      - **parentWorkflowExecution** *(dict) --*

        The source workflow execution that started this workflow execution. The member isn't set if
        the workflow execution was not started by a workflow.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **parentInitiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
        event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **lambdaRole** *(string) --*

        The IAM role attached to the workflow execution.

    - **workflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The result produced by the workflow execution upon successful completion.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The descriptive reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **workflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that caused this event.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **workflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **details** *(string) --*

        The details of the cancellation.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the new workflow execution.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **newExecutionRunId** *(string) --*

        The ``runId`` of the new workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The total duration allowed for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The task list to use for the decisions of the new (continued) workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the task to use for the decisions of the new (continued) workflow execution.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions of the new execution if it is terminated
        by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **tagList** *(list) --*

        The list of tags associated with the new workflow execution.

        - *(string) --*

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **lambdaRole** *(string) --*

        The IAM role to attach to the new (continued) workflow execution.

    - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the termination.

      - **details** *(string) --*

        The details provided for the termination.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **cause** *(string) --*

        If set, indicates that the workflow execution was automatically terminated, and specifies
        the cause. This happens if the parent workflow execution times out or is terminated and the
        child policy is set to terminate child executions.

    - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **externalWorkflowExecution** *(dict) --*

        The external workflow execution for which the cancellation was requested.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
        source event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        If set, indicates that the request to cancel the workflow execution was automatically
        generated, and specifies the cause. This happens if the parent workflow execution times out
        or is terminated, and the child policy is set to cancel child executions.

    - **decisionTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **taskList** *(dict) --*

        The name of the task list in which the decision task was scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        A task priority that, if set, specifies the priority for this decision task. Valid values
        are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **startToCloseTimeout** *(string) --*

        The maximum duration for this decision task. The task is considered timed out if it doesn't
        completed within this duration.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

    - **decisionTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the decider making the request. This enables diagnostic tracing when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **decisionTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **executionContext** *(string) --*

        User defined context for the workflow execution.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **decisionTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that expired before the decision task could be completed.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The type of the activity task.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The unique ID of the activity task.

      - **input** *(string) --*

        The input provided to the activity task.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.
        This data isn't sent to the activity.

      - **scheduleToStartTimeout** *(string) --*

        The maximum amount of time the activity task can wait to be assigned to a worker.

      - **scheduleToCloseTimeout** *(string) --*

        The maximum amount of time for this activity task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker may take to process the activity task.

      - **taskList** *(dict) --*

        The task list in which the activity task has been scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority to assign to the scheduled activity task. If set, this overrides any default
        priority value that was assigned when the activity type was registered.

        Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

      - **heartbeatTimeout** *(string) --*

        The maximum time before which the worker processing this task must report progress by
        calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
        automatically timed out. If the worker subsequently attempts to record a heartbeat or return
        a result, it is ignored.

    - **activityTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the worker that was assigned this task. This aids diagnostics when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **activityTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The results of the activity task.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **details** *(string) --*

        Contains the content of the ``details`` parameter for the last call made by the activity to
        ``RecordActivityTaskHeartbeat`` .

    - **activityTaskCanceledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **details** *(string) --*

        Details of the cancellation.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **latestCancelRequestedEventId** *(integer) --*

        If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
        activity task. This information can be useful for diagnosing problems by tracing back the
        chain of events leading up to this event.

    - **activityTaskCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **activityId** *(string) --*

        The unique ID of the task.

    - **workflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **signalName** *(string) --*

        The name of the signal received. The decider can use the signal name and inputs to determine
        how to the process the signal.

      - **input** *(string) --*

        The inputs provided with the signal. The decider can use the signal name and inputs to
        determine how to process the signal.

      - **externalWorkflowExecution** *(dict) --*

        The workflow execution that sent the signal. This is set only of the signal was sent by
        another workflow execution.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
        this ID can be found in the history of the source workflow execution. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event. This field is set only if the signal was initiated by another workflow execution.

    - **markerRecordedEventAttributes** *(dict) --*

      If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The name of the marker.

      - **details** *(string) --*

        The details of the marker.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarker`` decision that requested this marker. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **recordMarkerFailedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The marker's name.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerStartedEventAttributes** *(dict) --*

      If the event is of type ``TimerStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was started.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

      - **startToFireTimeout** *(string) --*

        The duration of time after which the timer fires.

        The duration is specified in seconds, an integer greater than or equal to ``0`` .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **timerFiredEventAttributes** *(dict) --*

      If the event is of type ``TimerFired`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that fired.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerCanceledEventAttributes** *(dict) --*

      If the event is of type ``TimerCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was canceled.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.
        This data isn't sent to the activity.

      - **input** *(string) --*

        The inputs provided to the child workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for the child workflow execution. If the workflow execution isn't
        closed within this duration, it is timed out and force-terminated.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The name of the task list used for the decision tasks of the child workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority assigned for the decision tasks for this workflow execution. Valid values are
        integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
        (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the cause
        of events.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this execution gets terminated by
        explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration allowed for the decision tasks for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **tagList** *(list) --*

        The list of tags to associated with the child workflow execution.

        - *(string) --*

      - **lambdaRole** *(string) --*

        The IAM role to attach to the child workflow execution.

    - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was started.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was completed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **result** *(string) --*

        The result of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that failed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **reason** *(string) --*

        The reason for the failure (if provided).

      - **details** *(string) --*

        The details of the failure (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that timed out.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **timeoutType** *(string) --*

        The type of the timeout that caused the child workflow execution to time out.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was canceled.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **details** *(string) --*

        Details of the cancellation (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was terminated.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to send the signal to.

      - **signalName** *(string) --*

        The name of the signal.

      - **input** *(string) --*

        The input provided to the signal.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.

    - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution that the signal was delivered to.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution that the signal was being delivered
        to.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution that the signal was being delivered to.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution to which the cancellation request was delivered.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member
      is set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution to be canceled.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to be canceled.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is
      set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The activity type provided in the ``ScheduleActivityTask`` decision that failed.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The activityId provided in the ``ScheduleActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

    - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **activityId** *(string) --*

        The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **startTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``StartTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **cancelTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``CancelTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowType** *(dict) --*

        The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
        ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
        ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
        information to diagnose problems by tracing back the chain of events leading up to this
        event.

        When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
        because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the child workflow execution.

    - **lambdaFunctionScheduledEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
      types.

      - **id** *(string) --*

        The unique ID of the Lambda task.

      - **name** *(string) --*

        The name of the Lambda function.

      - **control** *(string) --*

        Data attached to the event that the decider can use in subsequent workflow tasks. This data
        isn't sent to the Lambda task.

      - **input** *(string) --*

        The input provided to the Lambda task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker can take to process the Lambda task.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this activity task. To help diagnose issues, use this information to trace
        back the chain of events leading up to this event.

    - **lambdaFunctionStartedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

    - **lambdaFunctionCompletedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **result** *(string) --*

        The results of the Lambda task.

    - **lambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

    - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
        started. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

    - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
      event types.

      - **id** *(string) --*

        The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

      - **name** *(string) --*

        The name of the Lambda function.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this Lambda task. To help diagnose issues, use this information to trace back
        the chain of events leading up to this event.

    - **startLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
          role attached to the execution lacked sufficient permissions. For details and example IAM
          policies, see `Lambda Tasks
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **message** *(string) --*

        A description that can help diagnose the cause of the fault.
    """


_ClientPollForDecisionTaskResponseworkflowExecutionTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ClientPollForDecisionTaskResponseworkflowExecutionTypeDef(
    _ClientPollForDecisionTaskResponseworkflowExecutionTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponse` `workflowExecution`

    The workflow execution for which this decision task was created.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ClientPollForDecisionTaskResponseworkflowTypeTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ClientPollForDecisionTaskResponseworkflowTypeTypeDef(
    _ClientPollForDecisionTaskResponseworkflowTypeTypeDef
):
    """
    Type definition for `ClientPollForDecisionTaskResponse` `workflowType`

    The type of the workflow execution for which this decision task was created.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ClientPollForDecisionTaskResponseTypeDef = TypedDict(
    "_ClientPollForDecisionTaskResponseTypeDef",
    {
        "taskToken": str,
        "startedEventId": int,
        "workflowExecution": ClientPollForDecisionTaskResponseworkflowExecutionTypeDef,
        "workflowType": ClientPollForDecisionTaskResponseworkflowTypeTypeDef,
        "events": List[ClientPollForDecisionTaskResponseeventsTypeDef],
        "nextPageToken": str,
        "previousStartedEventId": int,
    },
    total=False,
)


class ClientPollForDecisionTaskResponseTypeDef(_ClientPollForDecisionTaskResponseTypeDef):
    """
    Type definition for `ClientPollForDecisionTask` `Response`

    A structure that represents a decision task. Decision tasks are sent to deciders in order for
    them to make decisions.

    - **taskToken** *(string) --*

      The opaque string used as a handle on the task. This token is used by workers to communicate
      progress and response information back to the system about the task.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded in the history.

    - **workflowExecution** *(dict) --*

      The workflow execution for which this decision task was created.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution for which this decision task was created.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **events** *(list) --*

      A paginated list of history events of the workflow execution. The decider uses this during the
      processing of the decision task.

      - *(dict) --*

        Event within a workflow execution. A history event can be one of these types:

        * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by
        the system.

        * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

        * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
        calling  RespondActivityTaskCompleted .

        * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
        RespondActivityTaskFailed .

        * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

        * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

        * ``ActivityTaskTimedOut`` – The activity task timed out.

        * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the
        decision isn't configured properly, for example no timer exists with the specified timer Id.

        * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

        * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
        execution, was canceled and closed.

        * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
        execution, completed successfully and was closed.

        * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
        execution, failed to complete successfully and was closed.

        * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

        * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this
        workflow execution, was terminated.

        * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
        execution, timed out and was closed.

        * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

        * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
        being continued as a new workflow execution.

        * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
        RespondDecisionTaskCompleted .

        * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

        * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

        * ``DecisionTaskTimedOut`` – The decision task timed out.

        * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
        execution was successfully delivered to the target execution.

        * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution,
        was successfully delivered to the target external workflow execution.

        * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
        failed.

        * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
        ``RecordMarker`` decision.

        * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

        * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask
        decision. This happens when the decision isn't configured properly.

        * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
        execution failed.

        * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
        cancellation of an external workflow execution.

        * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This
        happens when the decision isn't configured properly, for example the activity type specified
        isn't registered.

        * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
        execution failed.

        * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow
        was made.

        * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

        * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
        decision. This happens when the decision isn't configured properly, for example the workflow
        type specified isn't registered.

        * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
        execution.

        * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the
        decision isn't configured properly, for example a timer already exists with the specified
        timer Id.

        * ``TimerCanceled`` – A timer, previously started for this workflow execution, was
        successfully canceled.

        * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

        * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
        decision.

        * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was
        made.

        * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and
        closed.

        * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
        completion.

        * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new
        execution of the same type was created with the same workflowId.

        * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

        * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow
        execution.

        * ``WorkflowExecutionStarted`` – The workflow execution was started.

        * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

        * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
        exceeded.

        - **eventTimestamp** *(datetime) --*

          The date and time when the event occurred.

        - **eventType** *(string) --*

          The type of the history event.

        - **eventId** *(integer) --*

          The system generated ID of the event. This ID uniquely identifies the event with in the
          workflow execution history.

        - **workflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for this workflow type.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this workflow execution is
            terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskList** *(dict) --*

            The name of the task list for scheduling the decision tasks for this workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the decision tasks in the workflow execution.

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **tagList** *(list) --*

            The list of tags associated with this workflow execution. An execution can have up to 5
            tags.

            - *(string) --*

          - **continuedExecutionRunId** *(string) --*

            If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution``
            decision, then it contains the ``runId`` of the previous workflow execution that was
            closed and continued as this execution.

          - **parentWorkflowExecution** *(dict) --*

            The source workflow execution that started this workflow execution. The member isn't set
            if the workflow execution was not started by a workflow.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **parentInitiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
            event with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **lambdaRole** *(string) --*

            The IAM role attached to the workflow execution.

        - **workflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The result produced by the workflow execution upon successful completion.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The descriptive reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that caused this event.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

        - **workflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            The details of the cancellation.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the new workflow execution.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **newExecutionRunId** *(string) --*

            The ``runId`` of the new workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The total duration allowed for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The task list to use for the decisions of the new (continued) workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the task to use for the decisions of the new (continued) workflow
            execution.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions of the new execution if it is
            terminated by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **tagList** *(list) --*

            The list of tags associated with the new workflow execution.

            - *(string) --*

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **lambdaRole** *(string) --*

            The IAM role to attach to the new (continued) workflow execution.

        - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **workflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the termination.

          - **details** *(string) --*

            The details provided for the termination.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **cause** *(string) --*

            If set, indicates that the workflow execution was automatically terminated, and
            specifies the cause. This happens if the parent workflow execution times out or is
            terminated and the child policy is set to terminate child executions.

        - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **externalWorkflowExecution** *(dict) --*

            The external workflow execution for which the cancellation was requested.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow
            execution.The source event with this ID can be found in the history of the source
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **cause** *(string) --*

            If set, indicates that the request to cancel the workflow execution was automatically
            generated, and specifies the cause. This happens if the parent workflow execution times
            out or is terminated, and the child policy is set to cancel child executions.

        - **decisionTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **taskList** *(dict) --*

            The name of the task list in which the decision task was scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            A task priority that, if set, specifies the priority for this decision task. Valid
            values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **startToCloseTimeout** *(string) --*

            The maximum duration for this decision task. The task is considered timed out if it
            doesn't completed within this duration.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

        - **decisionTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the decider making the request. This enables diagnostic tracing when
            problems arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **decisionTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **executionContext** *(string) --*

            User defined context for the workflow execution.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **decisionTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that expired before the decision task could be completed.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The type of the activity task.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The unique ID of the activity task.

          - **input** *(string) --*

            The input provided to the activity task.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.
            This data isn't sent to the activity.

          - **scheduleToStartTimeout** *(string) --*

            The maximum amount of time the activity task can wait to be assigned to a worker.

          - **scheduleToCloseTimeout** *(string) --*

            The maximum amount of time for this activity task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker may take to process the activity task.

          - **taskList** *(dict) --*

            The task list in which the activity task has been scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority to assign to the scheduled activity task. If set, this overrides any
            default priority value that was assigned when the activity type was registered.

            Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

          - **heartbeatTimeout** *(string) --*

            The maximum time before which the worker processing this task must report progress by
            calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
            automatically timed out. If the worker subsequently attempts to record a heartbeat or
            return a result, it is ignored.

        - **activityTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the worker that was assigned this task. This aids diagnostics when problems
            arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **activityTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The results of the activity task.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **details** *(string) --*

            Contains the content of the ``details`` parameter for the last call made by the activity
            to ``RecordActivityTaskHeartbeat`` .

        - **activityTaskCanceledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            Details of the cancellation.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **latestCancelRequestedEventId** *(integer) --*

            If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for
            this activity task. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **activityTaskCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskcancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **activityId** *(string) --*

            The unique ID of the task.

        - **workflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **signalName** *(string) --*

            The name of the signal received. The decider can use the signal name and inputs to
            determine how to the process the signal.

          - **input** *(string) --*

            The inputs provided with the signal. The decider can use the signal name and inputs to
            determine how to process the signal.

          - **externalWorkflowExecution** *(dict) --*

            The workflow execution that sent the signal. This is set only of the signal was sent by
            another workflow execution.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event
            with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event. This field is set only if the signal was initiated by another
            workflow execution.

        - **markerRecordedEventAttributes** *(dict) --*

          If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The name of the marker.

          - **details** *(string) --*

            The details of the marker.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarker`` decision that requested this marker. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **recordMarkerFailedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The marker's name.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerStartedEventAttributes** *(dict) --*

          If the event is of type ``TimerStarted`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was started.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

          - **startToFireTimeout** *(string) --*

            The duration of time after which the timer fires.

            The duration is specified in seconds, an integer greater than or equal to ``0`` .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **timerFiredEventAttributes** *(dict) --*

          If the event is of type ``TimerFired`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that fired.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerCanceledEventAttributes** *(dict) --*

          If the event is of type ``TimerCanceled`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was canceled.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.
            This data isn't sent to the activity.

          - **input** *(string) --*

            The inputs provided to the child workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for the child workflow execution. If the workflow execution isn't
            closed within this duration, it is timed out and force-terminated.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The name of the task list used for the decision tasks of the child workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority assigned for the decision tasks for this workflow execution. Valid values
            are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the cause of events.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this execution gets terminated by
            explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration allowed for the decision tasks for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **tagList** *(list) --*

            The list of tags to associated with the child workflow execution.

            - *(string) --*

          - **lambdaRole** *(string) --*

            The IAM role to attach to the child workflow execution.

        - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was started.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was completed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **result** *(string) --*

            The result of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that failed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **reason** *(string) --*

            The reason for the failure (if provided).

          - **details** *(string) --*

            The details of the failure (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that timed out.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **timeoutType** *(string) --*

            The type of the timeout that caused the child workflow execution to time out.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was canceled.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **details** *(string) --*

            Details of the cancellation (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was terminated.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to send the signal to.

          - **signalName** *(string) --*

            The name of the signal.

          - **input** *(string) --*

            The input provided to the signal.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.

        - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution that the signal was delivered to.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution that the signal was being
            delivered to.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution that the signal was being delivered to.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution to which the cancellation request was delivered.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this
          member is set and provides detailed information about the event. It isn't set for other
          event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution to be canceled.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to be canceled.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

        - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member
          is set and provides detailed information about the event. It isn't set for other event
          types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow to which the cancel request was to be
            delivered.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The activity type provided in the ``ScheduleActivityTask`` decision that failed.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The activityId provided in the ``ScheduleActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

        - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityId** *(string) --*

            The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **startTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``StartTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **cancelTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelTimerFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``CancelTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowType** *(dict) --*

            The workflow type provided in the ``StartChildWorkflowExecution``   Decision that
            failed.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it
              lacks sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of
            the ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
            ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use
            this information to diagnose problems by tracing back the chain of events leading up to
            this event.

            When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to
            ``0`` because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the child workflow execution.

        - **lambdaFunctionScheduledEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The unique ID of the Lambda task.

          - **name** *(string) --*

            The name of the Lambda function.

          - **control** *(string) --*

            Data attached to the event that the decider can use in subsequent workflow tasks. This
            data isn't sent to the Lambda task.

          - **input** *(string) --*

            The input provided to the Lambda task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker can take to process the Lambda task.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this activity task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **lambdaFunctionStartedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

        - **lambdaFunctionCompletedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **result** *(string) --*

            The results of the Lambda task.

        - **lambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

        - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
            started. To help diagnose issues, use this information to trace back the chain of events
            leading up to this event.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

        - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

          - **name** *(string) --*

            The name of the Lambda function.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this Lambda task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **startLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the
              IAM role attached to the execution lacked sufficient permissions. For details and
              example IAM policies, see `Lambda Tasks
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **message** *(string) --*

            A description that can help diagnose the cause of the fault.

    - **nextPageToken** *(string) --*

      If a ``NextPageToken`` was returned by a previous call, there are more results available. To
      retrieve the next page of results, make the call again using the returned token in
      ``nextPageToken`` . Keep all other arguments unchanged.

      The configured ``maximumPageSize`` determines how many results can be returned in a single
      call.

    - **previousStartedEventId** *(integer) --*

      The ID of the DecisionTaskStarted event of the previous decision task of this workflow
      execution that was processed by the decider. This can be used to determine the events in the
      history new since the last decision task received by the decider.
    """


_ClientPollForDecisionTasktaskListTypeDef = TypedDict(
    "_ClientPollForDecisionTasktaskListTypeDef", {"name": str}
)


class ClientPollForDecisionTasktaskListTypeDef(_ClientPollForDecisionTasktaskListTypeDef):
    """
    Type definition for `ClientPollForDecisionTask` `taskList`

    Specifies the task list to poll for decision tasks.

    The specified string must not start or end with whitespace. It must not contain a ``:`` (colon),
    ``/`` (slash), ``|`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
    ``\\u007f-\\u009f`` ). Also, it must not *be* the literal string ``arn`` .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientRecordActivityTaskHeartbeatResponseTypeDef = TypedDict(
    "_ClientRecordActivityTaskHeartbeatResponseTypeDef", {"cancelRequested": bool}, total=False
)


class ClientRecordActivityTaskHeartbeatResponseTypeDef(
    _ClientRecordActivityTaskHeartbeatResponseTypeDef
):
    """
    Type definition for `ClientRecordActivityTaskHeartbeat` `Response`

    Status information about an activity task.

    - **cancelRequested** *(boolean) --*

      Set to ``true`` if cancellation of the task is requested.
    """


_ClientRegisterActivityTypedefaultTaskListTypeDef = TypedDict(
    "_ClientRegisterActivityTypedefaultTaskListTypeDef", {"name": str}
)


class ClientRegisterActivityTypedefaultTaskListTypeDef(
    _ClientRegisterActivityTypedefaultTaskListTypeDef
):
    """
    Type definition for `ClientRegisterActivityType` `defaultTaskList`

    If set, specifies the default task list to use for scheduling tasks of this activity type. This
    default task list is used if a task list isn't provided when a task is scheduled through the
    ``ScheduleActivityTask``   Decision .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_RequiredClientRegisterDomaintagsTypeDef = TypedDict(
    "_RequiredClientRegisterDomaintagsTypeDef", {"key": str}
)
_OptionalClientRegisterDomaintagsTypeDef = TypedDict(
    "_OptionalClientRegisterDomaintagsTypeDef", {"value": str}, total=False
)


class ClientRegisterDomaintagsTypeDef(
    _RequiredClientRegisterDomaintagsTypeDef, _OptionalClientRegisterDomaintagsTypeDef
):
    """
    Type definition for `ClientRegisterDomain` `tags`

    Tags are key-value pairs that can be associated with Amazon SWF state machines and activities.

    Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + - @``
    .

    - **key** *(string) --* **[REQUIRED]**

      The key of a tag.

    - **value** *(string) --*

      The value of a tag.
    """


_ClientRegisterWorkflowTypedefaultTaskListTypeDef = TypedDict(
    "_ClientRegisterWorkflowTypedefaultTaskListTypeDef", {"name": str}
)


class ClientRegisterWorkflowTypedefaultTaskListTypeDef(
    _ClientRegisterWorkflowTypedefaultTaskListTypeDef
):
    """
    Type definition for `ClientRegisterWorkflowType` `defaultTaskList`

    If set, specifies the default task list to use for scheduling decision tasks for executions of
    this workflow type. This default is used only if a task list isn't provided when starting the
    execution through the  StartWorkflowExecution Action or ``StartChildWorkflowExecution``
    Decision .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientRespondDecisionTaskCompleteddecisionscancelTimerDecisionAttributesTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionscancelTimerDecisionAttributesTypeDef",
    {"timerId": str},
)


class ClientRespondDecisionTaskCompleteddecisionscancelTimerDecisionAttributesTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionscancelTimerDecisionAttributesTypeDef
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `cancelTimerDecisionAttributes`

    Provides the details of the ``CancelTimer`` decision. It isn't set for other decision types.

    - **timerId** *(string) --* **[REQUIRED]**

      The unique ID of the timer to cancel.
    """


_ClientRespondDecisionTaskCompleteddecisionscancelWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionscancelWorkflowExecutionDecisionAttributesTypeDef",
    {"details": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionscancelWorkflowExecutionDecisionAttributesTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionscancelWorkflowExecutionDecisionAttributesTypeDef
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `cancelWorkflowExecutionDecisionAttributes`

    Provides the details of the ``CancelWorkflowExecution`` decision. It isn't set for other
    decision types.

    - **details** *(string) --*

      Details of the cancellation.
    """


_ClientRespondDecisionTaskCompleteddecisionscompleteWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionscompleteWorkflowExecutionDecisionAttributesTypeDef",
    {"result": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionscompleteWorkflowExecutionDecisionAttributesTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionscompleteWorkflowExecutionDecisionAttributesTypeDef
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `completeWorkflowExecutionDecisionAttributes`

    Provides the details of the ``CompleteWorkflowExecution`` decision. It isn't set for other
    decision types.

    - **result** *(string) --*

      The result of the workflow execution. The form of the result is implementation defined.
    """


_ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributestaskListTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributestaskListTypeDef",
    {"name": str},
)


class ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributestaskListTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributes`
    `taskList`

    The task list to use for the decisions of the new (continued) workflow execution.

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributesTypeDef",
    {
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributestaskListTypeDef,
        "taskPriority": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "tagList": List[str],
        "workflowTypeVersion": str,
        "lambdaRole": str,
    },
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributesTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributesTypeDef
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `continueAsNewWorkflowExecutionDecisionAttributes`

    Provides the details of the ``ContinueAsNewWorkflowExecution`` decision. It isn't set for other
    decision types.

    - **input** *(string) --*

      The input provided to the new workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      If set, specifies the total duration for this workflow execution. This overrides the
      ``defaultExecutionStartToCloseTimeout`` specified when registering the workflow type.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        An execution start-to-close timeout for this workflow execution must be specified either as
        a default for the workflow type or through this field. If neither this field is set nor a
        default execution start-to-close timeout was specified at registration time then a fault is
        returned.

    - **taskList** *(dict) --*

      The task list to use for the decisions of the new (continued) workflow execution.

      - **name** *(string) --* **[REQUIRED]**

        The name of the task list.

    - **taskPriority** *(string) --*

      The task priority that, if set, specifies the priority for the decision tasks for this
      workflow execution. This overrides the defaultTaskPriority specified when registering the
      workflow type. Valid values are integers that range from Java's ``Integer.MIN_VALUE``
      (-2147483648) to ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **taskStartToCloseTimeout** *(string) --*

      Specifies the maximum duration of decision tasks for the new workflow execution. This
      parameter overrides the ``defaultTaskStartToCloseTimout`` specified when registering the
      workflow type using  RegisterWorkflowType .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        A task start-to-close timeout for the new workflow execution must be specified either as a
        default for the workflow type or through this parameter. If neither this parameter is set
        nor a default task start-to-close timeout was specified at registration time then a fault is
        returned.

    - **childPolicy** *(string) --*

      If set, specifies the policy to use for the child workflow executions of the new execution if
      it is terminated by calling the  TerminateWorkflowExecution action explicitly or due to an
      expired timeout. This policy overrides the default child policy specified when registering the
      workflow type using  RegisterWorkflowType .

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

      .. note::

        A child policy for this workflow execution must be specified either as a default for the
        workflow type or through this parameter. If neither this parameter is set nor a default
        child policy was specified at registration time then a fault is returned.

    - **tagList** *(list) --*

      The list of tags to associate with the new workflow execution. A maximum of 5 tags can be
      specified. You can list workflow executions with a specific tag by calling
      ListOpenWorkflowExecutions or  ListClosedWorkflowExecutions and specifying a  TagFilter .

      - *(string) --*

    - **workflowTypeVersion** *(string) --*

      The version of the workflow to start.

    - **lambdaRole** *(string) --*

      The IAM role to attach to the new (continued) execution.
    """


_ClientRespondDecisionTaskCompleteddecisionsfailWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionsfailWorkflowExecutionDecisionAttributesTypeDef",
    {"reason": str, "details": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsfailWorkflowExecutionDecisionAttributesTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionsfailWorkflowExecutionDecisionAttributesTypeDef
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `failWorkflowExecutionDecisionAttributes`

    Provides the details of the ``FailWorkflowExecution`` decision. It isn't set for other decision
    types.

    - **reason** *(string) --*

      A descriptive reason for the failure that may help in diagnostics.

    - **details** *(string) --*

      Details of the failure.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef",
    {"markerName": str},
)
_OptionalClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef",
    {"details": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `recordMarkerDecisionAttributes`

    Provides the details of the ``RecordMarker`` decision. It isn't set for other decision types.

    - **markerName** *(string) --* **[REQUIRED]**

      The name of the marker.

    - **details** *(string) --*

      The details of the marker.
    """


_ClientRespondDecisionTaskCompleteddecisionsrequestCancelActivityTaskDecisionAttributesTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionsrequestCancelActivityTaskDecisionAttributesTypeDef",
    {"activityId": str},
)


class ClientRespondDecisionTaskCompleteddecisionsrequestCancelActivityTaskDecisionAttributesTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionsrequestCancelActivityTaskDecisionAttributesTypeDef
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `requestCancelActivityTaskDecisionAttributes`

    Provides the details of the ``RequestCancelActivityTask`` decision. It isn't set for other
    decision types.

    - **activityId** *(string) --* **[REQUIRED]**

      The ``activityId`` of the activity task to be canceled.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef",
    {"workflowId": str},
)
_OptionalClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef",
    {"runId": str, "control": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `requestCancelExternalWorkflowExecutionDecisionAttributes`

    Provides the details of the ``RequestCancelExternalWorkflowExecution`` decision. It isn't set
    for other decision types.

    - **workflowId** *(string) --* **[REQUIRED]**

      The ``workflowId`` of the external workflow execution to cancel.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to cancel.

    - **control** *(string) --*

      The data attached to the event that can be used by the decider in subsequent workflow tasks.
    """


_ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesactivityTypeTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
)


class ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesactivityTypeTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributes`
    `activityType`

    The type of the activity task to schedule.

    - **name** *(string) --* **[REQUIRED]**

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributestaskListTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributestaskListTypeDef",
    {"name": str},
)


class ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributestaskListTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributes` `taskList`

    If set, specifies the name of the task list in which to schedule the activity task. If not
    specified, the ``defaultTaskList`` registered with the activity type is used.

    .. note::

      A task list for this activity task must be specified either as a default for the activity type
      or through this field. If neither this field is set nor a default task list was specified at
      registration time then a fault is returned.

    The specified string must not start or end with whitespace. It must not contain a ``:`` (colon),
    ``/`` (slash), ``|`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
    ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef",
    {
        "activityType": ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesactivityTypeTypeDef,
        "activityId": str,
    },
)
_OptionalClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef",
    {
        "control": str,
        "input": str,
        "scheduleToCloseTimeout": str,
        "taskList": ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributestaskListTypeDef,
        "taskPriority": str,
        "scheduleToStartTimeout": str,
        "startToCloseTimeout": str,
        "heartbeatTimeout": str,
    },
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `scheduleActivityTaskDecisionAttributes`

    Provides the details of the ``ScheduleActivityTask`` decision. It isn't set for other decision
    types.

    - **activityType** *(dict) --* **[REQUIRED]**

      The type of the activity task to schedule.

      - **name** *(string) --* **[REQUIRED]**

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --* **[REQUIRED]**

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --* **[REQUIRED]**

      The ``activityId`` of the activity task.

      The specified string must not start or end with whitespace. It must not contain a ``:``
      (colon), ``/`` (slash), ``
      |`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
      ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks. This
      data isn't sent to the activity.

    - **input** *(string) --*

      The input provided to the activity task.

    - **scheduleToCloseTimeout** *(string) --*

      The maximum duration for this activity task.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        A schedule-to-close timeout for this activity task must be specified either as a default for
        the activity type or through this field. If neither this field is set nor a default
        schedule-to-close timeout was specified at registration time then a fault is returned.

    - **taskList** *(dict) --*

      If set, specifies the name of the task list in which to schedule the activity task. If not
      specified, the ``defaultTaskList`` registered with the activity type is used.

      .. note::

        A task list for this activity task must be specified either as a default for the activity
        type or through this field. If neither this field is set nor a default task list was
        specified at registration time then a fault is returned.

      The specified string must not start or end with whitespace. It must not contain a ``:``
      (colon), ``/`` (slash), ``
      |`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
      ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

      - **name** *(string) --* **[REQUIRED]**

        The name of the task list.

    - **taskPriority** *(string) --*

      If set, specifies the priority with which the activity task is to be assigned to a worker.
      This overrides the defaultTaskPriority specified when registering the activity type using
      RegisterActivityType . Valid values are integers that range from Java's ``Integer.MIN_VALUE``
      (-2147483648) to ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **scheduleToStartTimeout** *(string) --*

      If set, specifies the maximum duration the activity task can wait to be assigned to a worker.
      This overrides the default schedule-to-start timeout specified when registering the activity
      type using  RegisterActivityType .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        A schedule-to-start timeout for this activity task must be specified either as a default for
        the activity type or through this field. If neither this field is set nor a default
        schedule-to-start timeout was specified at registration time then a fault is returned.

    - **startToCloseTimeout** *(string) --*

      If set, specifies the maximum duration a worker may take to process this activity task. This
      overrides the default start-to-close timeout specified when registering the activity type
      using  RegisterActivityType .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        A start-to-close timeout for this activity task must be specified either as a default for
        the activity type or through this field. If neither this field is set nor a default
        start-to-close timeout was specified at registration time then a fault is returned.

    - **heartbeatTimeout** *(string) --*

      If set, specifies the maximum time before which a worker processing a task of this type must
      report progress by calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the
      activity task is automatically timed out. If the worker subsequently attempts to record a
      heartbeat or returns a result, it is ignored. This overrides the default heartbeat timeout
      specified when registering the activity type using  RegisterActivityType .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef",
    {"id": str, "name": str},
)
_OptionalClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef",
    {"control": str, "input": str, "startToCloseTimeout": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `scheduleLambdaFunctionDecisionAttributes`

    Provides the details of the ``ScheduleLambdaFunction`` decision. It isn't set for other decision
    types.

    - **id** *(string) --* **[REQUIRED]**

      A string that identifies the Lambda function execution in the event history.

    - **name** *(string) --* **[REQUIRED]**

      The name, or ARN, of the Lambda function to schedule.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the Lambda task.

    - **input** *(string) --*

      The optional input data to be supplied to the Lambda function.

    - **startToCloseTimeout** *(string) --*

      The timeout value, in seconds, after which the Lambda function is considered to be failed once
      it has started. This can be any integer from 1-300 (1s-5m). If no value is supplied, than a
      default value of 300s is assumed.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef",
    {"workflowId": str, "signalName": str},
)
_OptionalClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef",
    {"runId": str, "input": str, "control": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `signalExternalWorkflowExecutionDecisionAttributes`

    Provides the details of the ``SignalExternalWorkflowExecution`` decision. It isn't set for other
    decision types.

    - **workflowId** *(string) --* **[REQUIRED]**

      The ``workflowId`` of the workflow execution to be signaled.

    - **runId** *(string) --*

      The ``runId`` of the workflow execution to be signaled.

    - **signalName** *(string) --* **[REQUIRED]**

      The name of the signal.The target workflow execution uses the signal name and input to process
      the signal.

    - **input** *(string) --*

      The input data to be provided with the signal. The target workflow execution uses the signal
      name and input data to process the signal.

    - **control** *(string) --*

      The data attached to the event that can be used by the decider in subsequent decision tasks.
    """


_ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributestaskListTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributestaskListTypeDef",
    {"name": str},
)


class ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributestaskListTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributestaskListTypeDef
):
    """
    Type definition for
    `ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributes`
    `taskList`

    The name of the task list to be used for decision tasks of the child workflow execution.

    .. note::

      A task list for this workflow execution must be specified either as a default for the workflow
      type or through this parameter. If neither this parameter is set nor a default task list was
      specified at registration time then a fault is returned.

    The specified string must not start or end with whitespace. It must not contain a ``:`` (colon),
    ``/`` (slash), ``|`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
    ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesworkflowTypeTypeDef = TypedDict(
    "_ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
)


class ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesworkflowTypeTypeDef(
    _ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributes`
    `workflowType`

    The type of the workflow execution to be started.

    - **name** *(string) --* **[REQUIRED]**

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef",
    {
        "workflowType": ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesworkflowTypeTypeDef,
        "workflowId": str,
    },
)
_OptionalClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef",
    {
        "control": str,
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskList": ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributestaskListTypeDef,
        "taskPriority": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "tagList": List[str],
        "lambdaRole": str,
    },
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions`
    `startChildWorkflowExecutionDecisionAttributes`

    Provides the details of the ``StartChildWorkflowExecution`` decision. It isn't set for other
    decision types.

    - **workflowType** *(dict) --* **[REQUIRED]**

      The type of the workflow execution to be started.

      - **name** *(string) --* **[REQUIRED]**

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --* **[REQUIRED]**

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **workflowId** *(string) --* **[REQUIRED]**

      The ``workflowId`` of the workflow execution.

      The specified string must not start or end with whitespace. It must not contain a ``:``
      (colon), ``/`` (slash), ``
      |`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
      ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

    - **control** *(string) --*

      The data attached to the event that can be used by the decider in subsequent workflow tasks.
      This data isn't sent to the child workflow execution.

    - **input** *(string) --*

      The input to be provided to the workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The total duration for this workflow execution. This overrides the
      defaultExecutionStartToCloseTimeout specified when registering the workflow type.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        An execution start-to-close timeout for this workflow execution must be specified either as
        a default for the workflow type or through this parameter. If neither this parameter is set
        nor a default execution start-to-close timeout was specified at registration time then a
        fault is returned.

    - **taskList** *(dict) --*

      The name of the task list to be used for decision tasks of the child workflow execution.

      .. note::

        A task list for this workflow execution must be specified either as a default for the
        workflow type or through this parameter. If neither this parameter is set nor a default task
        list was specified at registration time then a fault is returned.

      The specified string must not start or end with whitespace. It must not contain a ``:``
      (colon), ``/`` (slash), ``
      |`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
      ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

      - **name** *(string) --* **[REQUIRED]**

        The name of the task list.

    - **taskPriority** *(string) --*

      A task priority that, if set, specifies the priority for a decision task of this workflow
      execution. This overrides the defaultTaskPriority specified when registering the workflow
      type. Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **taskStartToCloseTimeout** *(string) --*

      Specifies the maximum duration of decision tasks for this workflow execution. This parameter
      overrides the ``defaultTaskStartToCloseTimout`` specified when registering the workflow type
      using  RegisterWorkflowType .

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

      .. note::

        A task start-to-close timeout for this workflow execution must be specified either as a
        default for the workflow type or through this parameter. If neither this parameter is set
        nor a default task start-to-close timeout was specified at registration time then a fault is
        returned.

    - **childPolicy** *(string) --*

      If set, specifies the policy to use for the child workflow executions if the workflow
      execution being started is terminated by calling the  TerminateWorkflowExecution action
      explicitly or due to an expired timeout. This policy overrides the default child policy
      specified when registering the workflow type using  RegisterWorkflowType .

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

      .. note::

        A child policy for this workflow execution must be specified either as a default for the
        workflow type or through this parameter. If neither this parameter is set nor a default
        child policy was specified at registration time then a fault is returned.

    - **tagList** *(list) --*

      The list of tags to associate with the child workflow execution. A maximum of 5 tags can be
      specified. You can list workflow executions with a specific tag by calling
      ListOpenWorkflowExecutions or  ListClosedWorkflowExecutions and specifying a  TagFilter .

      - *(string) --*

    - **lambdaRole** *(string) --*

      The IAM role attached to the child workflow execution.
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef",
    {"timerId": str, "startToFireTimeout": str},
)
_OptionalClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef",
    {"control": str},
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleteddecisions` `startTimerDecisionAttributes`

    Provides the details of the ``StartTimer`` decision. It isn't set for other decision types.

    - **timerId** *(string) --* **[REQUIRED]**

      The unique ID of the timer.

      The specified string must not start or end with whitespace. It must not contain a ``:``
      (colon), ``/`` (slash), ``
      |`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
      ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

    - **control** *(string) --*

      The data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **startToFireTimeout** *(string) --* **[REQUIRED]**

      The duration to wait before firing the timer.

      The duration is specified in seconds, an integer greater than or equal to ``0`` .
    """


_RequiredClientRespondDecisionTaskCompleteddecisionsTypeDef = TypedDict(
    "_RequiredClientRespondDecisionTaskCompleteddecisionsTypeDef", {"decisionType": str}
)
_OptionalClientRespondDecisionTaskCompleteddecisionsTypeDef = TypedDict(
    "_OptionalClientRespondDecisionTaskCompleteddecisionsTypeDef",
    {
        "scheduleActivityTaskDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsscheduleActivityTaskDecisionAttributesTypeDef,
        "requestCancelActivityTaskDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsrequestCancelActivityTaskDecisionAttributesTypeDef,
        "completeWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionscompleteWorkflowExecutionDecisionAttributesTypeDef,
        "failWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsfailWorkflowExecutionDecisionAttributesTypeDef,
        "cancelWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionscancelWorkflowExecutionDecisionAttributesTypeDef,
        "continueAsNewWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionscontinueAsNewWorkflowExecutionDecisionAttributesTypeDef,
        "recordMarkerDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsrecordMarkerDecisionAttributesTypeDef,
        "startTimerDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsstartTimerDecisionAttributesTypeDef,
        "cancelTimerDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionscancelTimerDecisionAttributesTypeDef,
        "signalExternalWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionssignalExternalWorkflowExecutionDecisionAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsrequestCancelExternalWorkflowExecutionDecisionAttributesTypeDef,
        "startChildWorkflowExecutionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsstartChildWorkflowExecutionDecisionAttributesTypeDef,
        "scheduleLambdaFunctionDecisionAttributes": ClientRespondDecisionTaskCompleteddecisionsscheduleLambdaFunctionDecisionAttributesTypeDef,
    },
    total=False,
)


class ClientRespondDecisionTaskCompleteddecisionsTypeDef(
    _RequiredClientRespondDecisionTaskCompleteddecisionsTypeDef,
    _OptionalClientRespondDecisionTaskCompleteddecisionsTypeDef,
):
    """
    Type definition for `ClientRespondDecisionTaskCompleted` `decisions`

    Specifies a decision made by the decider. A decision can be one of these types:

    * ``CancelTimer`` – Cancels a previously started timer and records a ``TimerCanceled`` event in
    the history.

    * ``CancelWorkflowExecution`` – Closes the workflow execution and records a
    ``WorkflowExecutionCanceled`` event in the history.

    * ``CompleteWorkflowExecution`` – Closes the workflow execution and records a
    ``WorkflowExecutionCompleted`` event in the history .

    * ``ContinueAsNewWorkflowExecution`` – Closes the workflow execution and starts a new workflow
    execution of the same type using the same workflow ID and a unique run Id. A
    ``WorkflowExecutionContinuedAsNew`` event is recorded in the history.

    * ``FailWorkflowExecution`` – Closes the workflow execution and records a
    ``WorkflowExecutionFailed`` event in the history.

    * ``RecordMarker`` – Records a ``MarkerRecorded`` event in the history. Markers can be used for
    adding custom information in the history for instance to let deciders know that they don't need
    to look at the history beyond the marker event.

    * ``RequestCancelActivityTask`` – Attempts to cancel a previously scheduled activity task. If
    the activity task was scheduled but has not been assigned to a worker, then it is canceled. If
    the activity task was already assigned to a worker, then the worker is informed that
    cancellation has been requested in the response to  RecordActivityTaskHeartbeat .

    * ``RequestCancelExternalWorkflowExecution`` – Requests that a request be made to cancel the
    specified external workflow execution and records a
    ``RequestCancelExternalWorkflowExecutionInitiated`` event in the history.

    * ``ScheduleActivityTask`` – Schedules an activity task.

    * ``SignalExternalWorkflowExecution`` – Requests a signal to be delivered to the specified
    external workflow execution and records a ``SignalExternalWorkflowExecutionInitiated`` event in
    the history.

    * ``StartChildWorkflowExecution`` – Requests that a child workflow execution be started and
    records a ``StartChildWorkflowExecutionInitiated`` event in the history. The child workflow
    execution is a separate workflow execution with its own history.

    * ``StartTimer`` – Starts a timer for this workflow execution and records a ``TimerStarted``
    event in the history. This timer fires after the specified delay and record a ``TimerFired``
    event.

     **Access Control**

    If you grant permission to use ``RespondDecisionTaskCompleted`` , you can use IAM policies to
    express permissions for the list of decisions returned by this action as if they were members of
    the API. Treating decisions as a pseudo API maintains a uniform conceptual model and helps keep
    policies readable. For details and example IAM policies, see `Using IAM to Manage Access to
    Amazon SWF Workflows
    <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the *Amazon
    SWF Developer Guide* .

     **Decision Failure**

    Decisions can fail for several reasons

    * The ordering of decisions should follow a logical flow. Some decisions might not make sense in
    the current context of the workflow execution and therefore fails.

    * A limit on your account was reached.

    * The decision lacks sufficient permissions.

    One of the following events might be added to the history to indicate an error. The event
    attribute's ``cause`` parameter indicates the cause. If ``cause`` is set to
    ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked sufficient permissions. For
    details and example IAM policies, see `Using IAM to Manage Access to Amazon SWF Workflows
    <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the *Amazon
    SWF Developer Guide* .

    * ``ScheduleActivityTaskFailed`` – A ``ScheduleActivityTask`` decision failed. This could happen
    if the activity type specified in the decision isn't registered, is in a deprecated state, or
    the decision isn't properly configured.

    * ``RequestCancelActivityTaskFailed`` – A ``RequestCancelActivityTask`` decision failed. This
    could happen if there is no open activity task with the specified activityId.

    * ``StartTimerFailed`` – A ``StartTimer`` decision failed. This could happen if there is another
    open timer with the same timerId.

    * ``CancelTimerFailed`` – A ``CancelTimer`` decision failed. This could happen if there is no
    open timer with the specified timerId.

    * ``StartChildWorkflowExecutionFailed`` – A ``StartChildWorkflowExecution`` decision failed.
    This could happen if the workflow type specified isn't registered, is deprecated, or the
    decision isn't properly configured.

    * ``SignalExternalWorkflowExecutionFailed`` – A ``SignalExternalWorkflowExecution`` decision
    failed. This could happen if the ``workflowID`` specified in the decision was incorrect.

    * ``RequestCancelExternalWorkflowExecutionFailed`` – A
    ``RequestCancelExternalWorkflowExecution`` decision failed. This could happen if the
    ``workflowID`` specified in the decision was incorrect.

    * ``CancelWorkflowExecutionFailed`` – A ``CancelWorkflowExecution`` decision failed. This could
    happen if there is an unhandled decision task pending in the workflow execution.

    * ``CompleteWorkflowExecutionFailed`` – A ``CompleteWorkflowExecution`` decision failed. This
    could happen if there is an unhandled decision task pending in the workflow execution.

    * ``ContinueAsNewWorkflowExecutionFailed`` – A ``ContinueAsNewWorkflowExecution`` decision
    failed. This could happen if there is an unhandled decision task pending in the workflow
    execution or the ContinueAsNewWorkflowExecution decision was not configured correctly.

    * ``FailWorkflowExecutionFailed`` – A ``FailWorkflowExecution`` decision failed. This could
    happen if there is an unhandled decision task pending in the workflow execution.

    The preceding error events might occur due to an error in the decider logic, which might put the
    workflow execution in an unstable state The cause field in the event structure for the error
    event indicates the cause of the error.

    .. note::

      A workflow execution may be closed by the decider by returning one of the following decisions
      when completing a decision task: ``CompleteWorkflowExecution`` , ``FailWorkflowExecution`` ,
      ``CancelWorkflowExecution`` and ``ContinueAsNewWorkflowExecution`` . An ``UnhandledDecision``
      fault is returned if a workflow closing decision is specified and a signal or activity event
      had been added to the history while the decision task was being performed by the decider.
      Unlike the above situations which are logic issues, this fault is always possible because of
      race conditions in a distributed system. The right action here is to call
      RespondDecisionTaskCompleted without any decisions. This would result in another decision task
      with these new events included in the history. The decider should handle the new events and
      may decide to close the workflow execution.

     **How to Code a Decision**

    You code a decision by first setting the decision type field to one of the above decision
    values, and then set the corresponding attributes field shown below:

    * `` ScheduleActivityTaskDecisionAttributes ``

    * `` RequestCancelActivityTaskDecisionAttributes ``

    * `` CompleteWorkflowExecutionDecisionAttributes ``

    * `` FailWorkflowExecutionDecisionAttributes ``

    * `` CancelWorkflowExecutionDecisionAttributes ``

    * `` ContinueAsNewWorkflowExecutionDecisionAttributes ``

    * `` RecordMarkerDecisionAttributes ``

    * `` StartTimerDecisionAttributes ``

    * `` CancelTimerDecisionAttributes ``

    * `` SignalExternalWorkflowExecutionDecisionAttributes ``

    * `` RequestCancelExternalWorkflowExecutionDecisionAttributes ``

    * `` StartChildWorkflowExecutionDecisionAttributes ``

    - **decisionType** *(string) --* **[REQUIRED]**

      Specifies the type of the decision.

    - **scheduleActivityTaskDecisionAttributes** *(dict) --*

      Provides the details of the ``ScheduleActivityTask`` decision. It isn't set for other decision
      types.

      - **activityType** *(dict) --* **[REQUIRED]**

        The type of the activity task to schedule.

        - **name** *(string) --* **[REQUIRED]**

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --* **[REQUIRED]**

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --* **[REQUIRED]**

        The ``activityId`` of the activity task.

        The specified string must not start or end with whitespace. It must not contain a ``:``
        (colon), ``/`` (slash), ``
        |`` (vertical bar), or any control characters (``\\u0000-\\u001f``
        | ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.
        This data isn't sent to the activity.

      - **input** *(string) --*

        The input provided to the activity task.

      - **scheduleToCloseTimeout** *(string) --*

        The maximum duration for this activity task.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          A schedule-to-close timeout for this activity task must be specified either as a default
          for the activity type or through this field. If neither this field is set nor a default
          schedule-to-close timeout was specified at registration time then a fault is returned.

      - **taskList** *(dict) --*

        If set, specifies the name of the task list in which to schedule the activity task. If not
        specified, the ``defaultTaskList`` registered with the activity type is used.

        .. note::

          A task list for this activity task must be specified either as a default for the activity
          type or through this field. If neither this field is set nor a default task list was
          specified at registration time then a fault is returned.

        The specified string must not start or end with whitespace. It must not contain a ``:``
        (colon), ``/`` (slash), ``
        |`` (vertical bar), or any control characters (``\\u0000-\\u001f``
        | ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

        - **name** *(string) --* **[REQUIRED]**

          The name of the task list.

      - **taskPriority** *(string) --*

        If set, specifies the priority with which the activity task is to be assigned to a worker.
        This overrides the defaultTaskPriority specified when registering the activity type using
        RegisterActivityType . Valid values are integers that range from Java's
        ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE`` (2147483647). Higher numbers
        indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **scheduleToStartTimeout** *(string) --*

        If set, specifies the maximum duration the activity task can wait to be assigned to a
        worker. This overrides the default schedule-to-start timeout specified when registering the
        activity type using  RegisterActivityType .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          A schedule-to-start timeout for this activity task must be specified either as a default
          for the activity type or through this field. If neither this field is set nor a default
          schedule-to-start timeout was specified at registration time then a fault is returned.

      - **startToCloseTimeout** *(string) --*

        If set, specifies the maximum duration a worker may take to process this activity task. This
        overrides the default start-to-close timeout specified when registering the activity type
        using  RegisterActivityType .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          A start-to-close timeout for this activity task must be specified either as a default for
          the activity type or through this field. If neither this field is set nor a default
          start-to-close timeout was specified at registration time then a fault is returned.

      - **heartbeatTimeout** *(string) --*

        If set, specifies the maximum time before which a worker processing a task of this type must
        report progress by calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the
        activity task is automatically timed out. If the worker subsequently attempts to record a
        heartbeat or returns a result, it is ignored. This overrides the default heartbeat timeout
        specified when registering the activity type using  RegisterActivityType .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

    - **requestCancelActivityTaskDecisionAttributes** *(dict) --*

      Provides the details of the ``RequestCancelActivityTask`` decision. It isn't set for other
      decision types.

      - **activityId** *(string) --* **[REQUIRED]**

        The ``activityId`` of the activity task to be canceled.

    - **completeWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``CompleteWorkflowExecution`` decision. It isn't set for other
      decision types.

      - **result** *(string) --*

        The result of the workflow execution. The form of the result is implementation defined.

    - **failWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``FailWorkflowExecution`` decision. It isn't set for other
      decision types.

      - **reason** *(string) --*

        A descriptive reason for the failure that may help in diagnostics.

      - **details** *(string) --*

        Details of the failure.

    - **cancelWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``CancelWorkflowExecution`` decision. It isn't set for other
      decision types.

      - **details** *(string) --*

        Details of the cancellation.

    - **continueAsNewWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``ContinueAsNewWorkflowExecution`` decision. It isn't set for
      other decision types.

      - **input** *(string) --*

        The input provided to the new workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        If set, specifies the total duration for this workflow execution. This overrides the
        ``defaultExecutionStartToCloseTimeout`` specified when registering the workflow type.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          An execution start-to-close timeout for this workflow execution must be specified either
          as a default for the workflow type or through this field. If neither this field is set nor
          a default execution start-to-close timeout was specified at registration time then a fault
          is returned.

      - **taskList** *(dict) --*

        The task list to use for the decisions of the new (continued) workflow execution.

        - **name** *(string) --* **[REQUIRED]**

          The name of the task list.

      - **taskPriority** *(string) --*

        The task priority that, if set, specifies the priority for the decision tasks for this
        workflow execution. This overrides the defaultTaskPriority specified when registering the
        workflow type. Valid values are integers that range from Java's ``Integer.MIN_VALUE``
        (-2147483648) to ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher
        priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **taskStartToCloseTimeout** *(string) --*

        Specifies the maximum duration of decision tasks for the new workflow execution. This
        parameter overrides the ``defaultTaskStartToCloseTimout`` specified when registering the
        workflow type using  RegisterWorkflowType .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          A task start-to-close timeout for the new workflow execution must be specified either as a
          default for the workflow type or through this parameter. If neither this parameter is set
          nor a default task start-to-close timeout was specified at registration time then a fault
          is returned.

      - **childPolicy** *(string) --*

        If set, specifies the policy to use for the child workflow executions of the new execution
        if it is terminated by calling the  TerminateWorkflowExecution action explicitly or due to
        an expired timeout. This policy overrides the default child policy specified when
        registering the workflow type using  RegisterWorkflowType .

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

        .. note::

          A child policy for this workflow execution must be specified either as a default for the
          workflow type or through this parameter. If neither this parameter is set nor a default
          child policy was specified at registration time then a fault is returned.

      - **tagList** *(list) --*

        The list of tags to associate with the new workflow execution. A maximum of 5 tags can be
        specified. You can list workflow executions with a specific tag by calling
        ListOpenWorkflowExecutions or  ListClosedWorkflowExecutions and specifying a  TagFilter .

        - *(string) --*

      - **workflowTypeVersion** *(string) --*

        The version of the workflow to start.

      - **lambdaRole** *(string) --*

        The IAM role to attach to the new (continued) execution.

    - **recordMarkerDecisionAttributes** *(dict) --*

      Provides the details of the ``RecordMarker`` decision. It isn't set for other decision types.

      - **markerName** *(string) --* **[REQUIRED]**

        The name of the marker.

      - **details** *(string) --*

        The details of the marker.

    - **startTimerDecisionAttributes** *(dict) --*

      Provides the details of the ``StartTimer`` decision. It isn't set for other decision types.

      - **timerId** *(string) --* **[REQUIRED]**

        The unique ID of the timer.

        The specified string must not start or end with whitespace. It must not contain a ``:``
        (colon), ``/`` (slash), ``
        |`` (vertical bar), or any control characters (``\\u0000-\\u001f``
        | ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

      - **control** *(string) --*

        The data attached to the event that can be used by the decider in subsequent workflow tasks.

      - **startToFireTimeout** *(string) --* **[REQUIRED]**

        The duration to wait before firing the timer.

        The duration is specified in seconds, an integer greater than or equal to ``0`` .

    - **cancelTimerDecisionAttributes** *(dict) --*

      Provides the details of the ``CancelTimer`` decision. It isn't set for other decision types.

      - **timerId** *(string) --* **[REQUIRED]**

        The unique ID of the timer to cancel.

    - **signalExternalWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``SignalExternalWorkflowExecution`` decision. It isn't set for
      other decision types.

      - **workflowId** *(string) --* **[REQUIRED]**

        The ``workflowId`` of the workflow execution to be signaled.

      - **runId** *(string) --*

        The ``runId`` of the workflow execution to be signaled.

      - **signalName** *(string) --* **[REQUIRED]**

        The name of the signal.The target workflow execution uses the signal name and input to
        process the signal.

      - **input** *(string) --*

        The input data to be provided with the signal. The target workflow execution uses the signal
        name and input data to process the signal.

      - **control** *(string) --*

        The data attached to the event that can be used by the decider in subsequent decision tasks.

    - **requestCancelExternalWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``RequestCancelExternalWorkflowExecution`` decision. It isn't set
      for other decision types.

      - **workflowId** *(string) --* **[REQUIRED]**

        The ``workflowId`` of the external workflow execution to cancel.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to cancel.

      - **control** *(string) --*

        The data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **startChildWorkflowExecutionDecisionAttributes** *(dict) --*

      Provides the details of the ``StartChildWorkflowExecution`` decision. It isn't set for other
      decision types.

      - **workflowType** *(dict) --* **[REQUIRED]**

        The type of the workflow execution to be started.

        - **name** *(string) --* **[REQUIRED]**

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --* **[REQUIRED]**

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **workflowId** *(string) --* **[REQUIRED]**

        The ``workflowId`` of the workflow execution.

        The specified string must not start or end with whitespace. It must not contain a ``:``
        (colon), ``/`` (slash), ``
        |`` (vertical bar), or any control characters (``\\u0000-\\u001f``
        | ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

      - **control** *(string) --*

        The data attached to the event that can be used by the decider in subsequent workflow tasks.
        This data isn't sent to the child workflow execution.

      - **input** *(string) --*

        The input to be provided to the workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The total duration for this workflow execution. This overrides the
        defaultExecutionStartToCloseTimeout specified when registering the workflow type.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          An execution start-to-close timeout for this workflow execution must be specified either
          as a default for the workflow type or through this parameter. If neither this parameter is
          set nor a default execution start-to-close timeout was specified at registration time then
          a fault is returned.

      - **taskList** *(dict) --*

        The name of the task list to be used for decision tasks of the child workflow execution.

        .. note::

          A task list for this workflow execution must be specified either as a default for the
          workflow type or through this parameter. If neither this parameter is set nor a default
          task list was specified at registration time then a fault is returned.

        The specified string must not start or end with whitespace. It must not contain a ``:``
        (colon), ``/`` (slash), ``
        |`` (vertical bar), or any control characters (``\\u0000-\\u001f``
        | ``\\u007f-\\u009f`` ). Also, it must not contain the literal string ``arn`` .

        - **name** *(string) --* **[REQUIRED]**

          The name of the task list.

      - **taskPriority** *(string) --*

        A task priority that, if set, specifies the priority for a decision task of this workflow
        execution. This overrides the defaultTaskPriority specified when registering the workflow
        type. Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648)
        to ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **taskStartToCloseTimeout** *(string) --*

        Specifies the maximum duration of decision tasks for this workflow execution. This parameter
        overrides the ``defaultTaskStartToCloseTimout`` specified when registering the workflow type
        using  RegisterWorkflowType .

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

        .. note::

          A task start-to-close timeout for this workflow execution must be specified either as a
          default for the workflow type or through this parameter. If neither this parameter is set
          nor a default task start-to-close timeout was specified at registration time then a fault
          is returned.

      - **childPolicy** *(string) --*

        If set, specifies the policy to use for the child workflow executions if the workflow
        execution being started is terminated by calling the  TerminateWorkflowExecution action
        explicitly or due to an expired timeout. This policy overrides the default child policy
        specified when registering the workflow type using  RegisterWorkflowType .

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

        .. note::

          A child policy for this workflow execution must be specified either as a default for the
          workflow type or through this parameter. If neither this parameter is set nor a default
          child policy was specified at registration time then a fault is returned.

      - **tagList** *(list) --*

        The list of tags to associate with the child workflow execution. A maximum of 5 tags can be
        specified. You can list workflow executions with a specific tag by calling
        ListOpenWorkflowExecutions or  ListClosedWorkflowExecutions and specifying a  TagFilter .

        - *(string) --*

      - **lambdaRole** *(string) --*

        The IAM role attached to the child workflow execution.

    - **scheduleLambdaFunctionDecisionAttributes** *(dict) --*

      Provides the details of the ``ScheduleLambdaFunction`` decision. It isn't set for other
      decision types.

      - **id** *(string) --* **[REQUIRED]**

        A string that identifies the Lambda function execution in the event history.

      - **name** *(string) --* **[REQUIRED]**

        The name, or ARN, of the Lambda function to schedule.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the Lambda task.

      - **input** *(string) --*

        The optional input data to be supplied to the Lambda function.

      - **startToCloseTimeout** *(string) --*

        The timeout value, in seconds, after which the Lambda function is considered to be failed
        once it has started. This can be any integer from 1-300 (1s-5m). If no value is supplied,
        than a default value of 300s is assumed.
    """


_ClientStartWorkflowExecutionResponseTypeDef = TypedDict(
    "_ClientStartWorkflowExecutionResponseTypeDef", {"runId": str}, total=False
)


class ClientStartWorkflowExecutionResponseTypeDef(_ClientStartWorkflowExecutionResponseTypeDef):
    """
    Type definition for `ClientStartWorkflowExecution` `Response`

    Specifies the ``runId`` of a workflow execution.

    - **runId** *(string) --*

      The ``runId`` of a workflow execution. This ID is generated by the service and can be used to
      uniquely identify the workflow execution within a domain.
    """


_ClientStartWorkflowExecutiontaskListTypeDef = TypedDict(
    "_ClientStartWorkflowExecutiontaskListTypeDef", {"name": str}
)


class ClientStartWorkflowExecutiontaskListTypeDef(_ClientStartWorkflowExecutiontaskListTypeDef):
    """
    Type definition for `ClientStartWorkflowExecution` `taskList`

    The task list to use for the decision tasks generated for this workflow execution. This
    overrides the ``defaultTaskList`` specified when registering the workflow type.

    .. note::

      A task list for this workflow execution must be specified either as a default for the workflow
      type or through this parameter. If neither this parameter is set nor a default task list was
      specified at registration time then a fault is returned.

    The specified string must not start or end with whitespace. It must not contain a ``:`` (colon),
    ``/`` (slash), ``|`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
    ``\\u007f-\\u009f`` ). Also, it must not *be* the literal string ``arn`` .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """


_ClientStartWorkflowExecutionworkflowTypeTypeDef = TypedDict(
    "_ClientStartWorkflowExecutionworkflowTypeTypeDef", {"name": str, "version": str}
)


class ClientStartWorkflowExecutionworkflowTypeTypeDef(
    _ClientStartWorkflowExecutionworkflowTypeTypeDef
):
    """
    Type definition for `ClientStartWorkflowExecution` `workflowType`

    The type of the workflow to start.

    - **name** *(string) --* **[REQUIRED]**

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_RequiredClientTagResourcetagsTypeDef = TypedDict(
    "_RequiredClientTagResourcetagsTypeDef", {"key": str}
)
_OptionalClientTagResourcetagsTypeDef = TypedDict(
    "_OptionalClientTagResourcetagsTypeDef", {"value": str}, total=False
)


class ClientTagResourcetagsTypeDef(
    _RequiredClientTagResourcetagsTypeDef, _OptionalClientTagResourcetagsTypeDef
):
    """
    Type definition for `ClientTagResource` `tags`

    Tags are key-value pairs that can be associated with Amazon SWF state machines and activities.

    Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + - @``
    .

    - **key** *(string) --* **[REQUIRED]**

      The key of a tag.

    - **value** *(string) --*

      The value of a tag.
    """


_ClientUndeprecateActivityTypeactivityTypeTypeDef = TypedDict(
    "_ClientUndeprecateActivityTypeactivityTypeTypeDef", {"name": str, "version": str}
)


class ClientUndeprecateActivityTypeactivityTypeTypeDef(
    _ClientUndeprecateActivityTypeactivityTypeTypeDef
):
    """
    Type definition for `ClientUndeprecateActivityType` `activityType`

    The activity type to undeprecate.

    - **name** *(string) --* **[REQUIRED]**

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ClientUndeprecateWorkflowTypeworkflowTypeTypeDef = TypedDict(
    "_ClientUndeprecateWorkflowTypeworkflowTypeTypeDef", {"name": str, "version": str}
)


class ClientUndeprecateWorkflowTypeworkflowTypeTypeDef(
    _ClientUndeprecateWorkflowTypeworkflowTypeTypeDef
):
    """
    Type definition for `ClientUndeprecateWorkflowType` `workflowType`

    The name of the domain of the deprecated workflow type.

    - **name** *(string) --* **[REQUIRED]**

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --* **[REQUIRED]**

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginatePaginationConfigTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginatePaginationConfigTypeDef(
    _GetWorkflowExecutionHistoryPaginatePaginationConfigTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    {"decisionTaskCompletedEventId": int, "activityId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskCancelRequestedEventAttributes`

    If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **activityId** *(string) --*

      The unique ID of the task.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    {
        "details": str,
        "scheduledEventId": int,
        "startedEventId": int,
        "latestCancelRequestedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskCanceledEventAttributes`

    If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **details** *(string) --*

      Details of the cancellation.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **latestCancelRequestedEventId** *(integer) --*

      If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
      activity task. This information can be useful for diagnosing problems by tracing back the
      chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    {"result": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskCompletedEventAttributes`

    If the event is of type ``ActivityTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The results of the activity task.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskFailedEventAttributes`

    If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributes`
    `activityType`

    The type of the activity task.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributes`
    `taskList`

    The task list in which the activity task has been scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    {
        "activityType": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "input": str,
        "control": str,
        "scheduleToStartTimeout": str,
        "scheduleToCloseTimeout": str,
        "startToCloseTimeout": str,
        "taskList": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "heartbeatTimeout": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskScheduledEventAttributes`

    If the event is of type ``ActivityTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The type of the activity task.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The unique ID of the activity task.

    - **input** *(string) --*

      The input provided to the activity task.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks. This
      data isn't sent to the activity.

    - **scheduleToStartTimeout** *(string) --*

      The maximum amount of time the activity task can wait to be assigned to a worker.

    - **scheduleToCloseTimeout** *(string) --*

      The maximum amount of time for this activity task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker may take to process the activity task.

    - **taskList** *(dict) --*

      The task list in which the activity task has been scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority to assign to the scheduled activity task. If set, this overrides any default
      priority value that was assigned when the activity type was registered.

      Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.

    - **heartbeatTimeout** *(string) --*

      The maximum time before which the worker processing this task must report progress by calling
      RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is automatically
      timed out. If the worker subsequently attempts to record a heartbeat or return a result, it is
      ignored.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskStartedEventAttributes`

    If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the worker that was assigned this task. This aids diagnostics when problems arise.
      The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int, "details": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `activityTaskTimedOutEventAttributes`

    If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **details** *(string) --*

      Contains the content of the ``details`` parameter for the last call made by the activity to
      ``RecordActivityTaskHeartbeat`` .
    """


_GetWorkflowExecutionHistoryPaginateResponseeventscancelTimerFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventscancelTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventscancelTimerFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventscancelTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `cancelTimerFailedEventAttributes`

    If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``CancelTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `cancelWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowExecution`

    The child workflow execution that was canceled.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `childWorkflowExecutionCanceledEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was canceled.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **details** *(string) --*

      Details of the cancellation (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowExecution`

    The child workflow execution that was completed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef,
        "result": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `childWorkflowExecutionCompletedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was completed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **result** *(string) --*

      The result of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowExecution`

    The child workflow execution that failed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "reason": str,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `childWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that failed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **reason** *(string) --*

      The reason for the failure (if provided).

    - **details** *(string) --*

      The details of the failure (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowExecution`

    The child workflow execution that was started.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `childWorkflowExecutionStartedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was started.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowExecution`

    The child workflow execution that was terminated.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `childWorkflowExecutionTerminatedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was terminated.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowExecution`

    The child workflow execution that timed out.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef,
        "timeoutType": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `childWorkflowExecutionTimedOutEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that timed out.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **timeoutType** *(string) --*

      The type of the timeout that caused the child workflow execution to time out.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `completeWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `continueAsNewWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    {"executionContext": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `decisionTaskCompletedEventAttributes`

    If the event is of type ``DecisionTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **executionContext** *(string) --*

      User defined context for the workflow execution.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributes`
    `taskList`

    The name of the task list in which the decision task was scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    {
        "taskList": GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "startToCloseTimeout": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `decisionTaskScheduledEventAttributes`

    If the event is of type ``DecisionTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **taskList** *(dict) --*

      The name of the task list in which the decision task was scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      A task priority that, if set, specifies the priority for this decision task. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **startToCloseTimeout** *(string) --*

      The maximum duration for this decision task. The task is considered timed out if it doesn't
      completed within this duration.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `decisionTaskStartedEventAttributes`

    If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the decider making the request. This enables diagnostic tracing when problems
      arise. The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `decisionTaskTimedOutEventAttributes`

    If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that expired before the decision task could be completed.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributes`
    `workflowExecution`

    The external workflow execution to which the cancellation request was delivered.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `externalWorkflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution to which the cancellation request was delivered.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributes`
    `workflowExecution`

    The external workflow execution that the signal was delivered to.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    {
        "workflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `externalWorkflowExecutionSignaledEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution that the signal was delivered to.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `failWorkflowExecutionFailedEventAttributes`

    If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "result": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `lambdaFunctionCompletedEventAttributes`

    Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **result** *(string) --*

      The results of the Lambda task.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "reason": str, "details": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `lambdaFunctionFailedEventAttributes`

    Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    {
        "id": str,
        "name": str,
        "control": str,
        "input": str,
        "startToCloseTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `lambdaFunctionScheduledEventAttributes`

    Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The unique ID of the Lambda task.

    - **name** *(string) --*

      The name of the Lambda function.

    - **control** *(string) --*

      Data attached to the event that the decider can use in subsequent workflow tasks. This data
      isn't sent to the Lambda task.

    - **input** *(string) --*

      The input provided to the Lambda task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker can take to process the Lambda task.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this activity task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    {"scheduledEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `lambdaFunctionStartedEventAttributes`

    Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "timeoutType": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `lambdaFunctionTimedOutEventAttributes`

    Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task started.
      To help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsmarkerRecordedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsmarkerRecordedEventAttributesTypeDef",
    {"markerName": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsmarkerRecordedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsmarkerRecordedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `markerRecordedEventAttributes`

    If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The name of the marker.

    - **details** *(string) --*

      The details of the marker.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarker`` decision that requested this marker. This information can be useful
      for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    {"markerName": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `recordMarkerFailedEventAttributes`

    If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The marker's name.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarkerFailed`` decision for this cancellation request. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    {"activityId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `requestCancelActivityTaskFailedEventAttributes`

    If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityId** *(string) --*

      The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `requestCancelExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is set
    and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {"workflowId": str, "runId": str, "decisionTaskCompletedEventId": int, "control": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `requestCancelExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member is
    set and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution to be canceled.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to be canceled.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributes`
    `activityType`

    The activity type provided in the ``ScheduleActivityTask`` decision that failed.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    {
        "activityType": GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "cause": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `scheduleActivityTaskFailedEventAttributes`

    If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The activity type provided in the ``ScheduleActivityTask`` decision that failed.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The activityId provided in the ``ScheduleActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    {"id": str, "name": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `scheduleLambdaFunctionFailedEventAttributes`

    Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

    - **name** *(string) --*

      The name of the Lambda function.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this Lambda task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `signalExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution that the signal was being delivered to.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution that the signal was being delivered to.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "signalName": str,
        "input": str,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `signalExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to send the signal to.

    - **signalName** *(string) --*

      The name of the signal.

    - **input** *(string) --*

      The input provided to the signal.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "cause": str,
        "workflowId": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `startChildWorkflowExecutionFailedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowType** *(dict) --*

      The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
      ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
      ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
      information to diagnose problems by tracing back the chain of events leading up to this event.

      When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
      because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the chain of events.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the child workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `taskList`

    The name of the task list used for the decision tasks of the child workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef,
        "control": str,
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskList": GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "childPolicy": str,
        "taskStartToCloseTimeout": str,
        "tagList": List[str],
        "lambdaRole": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `startChildWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks. This
      data isn't sent to the activity.

    - **input** *(string) --*

      The inputs provided to the child workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for the child workflow execution. If the workflow execution isn't closed
      within this duration, it is timed out and force-terminated.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The name of the task list used for the decision tasks of the child workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority assigned for the decision tasks for this workflow execution. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the cause of events.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this execution gets terminated by
      explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration allowed for the decision tasks for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **tagList** *(list) --*

      The list of tags to associated with the child workflow execution.

      - *(string) --*

    - **lambdaRole** *(string) --*

      The IAM role to attach to the child workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "cause": str, "message": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `startLambdaFunctionFailedEventAttributes`

    Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
        role attached to the execution lacked sufficient permissions. For details and example IAM
        policies, see `Lambda Tasks
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **message** *(string) --*

      A description that can help diagnose the cause of the fault.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsstartTimerFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsstartTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsstartTimerFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsstartTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `startTimerFailedEventAttributes`

    If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``StartTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventstimerCanceledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventstimerCanceledEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventstimerCanceledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventstimerCanceledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `timerCanceledEventAttributes`

    If the event is of type ``TimerCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was canceled.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventstimerFiredEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventstimerFiredEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventstimerFiredEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventstimerFiredEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `timerFiredEventAttributes`

    If the event is of type ``TimerFired`` then this member is set and provides detailed information
    about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that fired.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventstimerStartedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventstimerStartedEventAttributesTypeDef",
    {
        "timerId": str,
        "control": str,
        "startToFireTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventstimerStartedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventstimerStartedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `timerStartedEventAttributes`

    If the event is of type ``TimerStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was started.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **startToFireTimeout** *(string) --*

      The duration of time after which the timer fires.

      The duration is specified in seconds, an integer greater than or equal to ``0`` .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributes`
    `externalWorkflowExecution`

    The external workflow execution for which the cancellation was requested.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "externalWorkflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
        "cause": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **externalWorkflowExecution** *(dict) --*

      The external workflow execution for which the cancellation was requested.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
      source event with this ID can be found in the history of the source workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **cause** *(string) --*

      If set, indicates that the request to cancel the workflow execution was automatically
      generated, and specifies the cause. This happens if the parent workflow execution times out or
      is terminated, and the child policy is set to cancel child executions.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    {"details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionCanceledEventAttributes`

    If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **details** *(string) --*

      The details of the cancellation.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    {"result": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionCompletedEventAttributes`

    If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The result produced by the workflow execution upon successful completion.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `taskList`

    The task list to use for the decisions of the new (continued) workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    {
        "input": str,
        "decisionTaskCompletedEventId": int,
        "newExecutionRunId": str,
        "executionStartToCloseTimeout": str,
        "taskList": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef,
        "taskPriority": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "tagList": List[str],
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef,
        "lambdaRole": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionContinuedAsNewEventAttributes`

    If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the new workflow execution.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **newExecutionRunId** *(string) --*

      The ``runId`` of the new workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The total duration allowed for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The task list to use for the decisions of the new (continued) workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the task to use for the decisions of the new (continued) workflow execution.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions of the new execution if it is terminated
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **tagList** *(list) --*

      The list of tags associated with the new workflow execution.

      - *(string) --*

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **lambdaRole** *(string) --*

      The IAM role to attach to the new (continued) workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionFailedEventAttributes`

    If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The descriptive reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributes`
    `externalWorkflowExecution`

    The workflow execution that sent the signal. This is set only of the signal was sent by another
    workflow execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    {
        "signalName": str,
        "input": str,
        "externalWorkflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionSignaledEventAttributes`

    If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **signalName** *(string) --*

      The name of the signal received. The decider can use the signal name and inputs to determine
      how to the process the signal.

    - **input** *(string) --*

      The inputs provided with the signal. The decider can use the signal name and inputs to
      determine how to process the signal.

    - **externalWorkflowExecution** *(dict) --*

      The workflow execution that sent the signal. This is set only of the signal was sent by
      another workflow execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
      this ID can be found in the history of the source workflow execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
      This field is set only if the signal was initiated by another workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributes`
    `parentWorkflowExecution`

    The source workflow execution that started this workflow execution. The member isn't set if the
    workflow execution was not started by a workflow.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributes`
    `taskList`

    The name of the task list for scheduling the decision tasks for this workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    {
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "taskList": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "workflowType": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "tagList": List[str],
        "continuedExecutionRunId": str,
        "parentWorkflowExecution": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef,
        "parentInitiatedEventId": int,
        "lambdaRole": str,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionStartedEventAttributes`

    If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for this workflow type.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this workflow execution is terminated,
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskList** *(dict) --*

      The name of the task list for scheduling the decision tasks for this workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the decision tasks in the workflow execution.

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **tagList** *(list) --*

      The list of tags associated with this workflow execution. An execution can have up to 5 tags.

      - *(string) --*

    - **continuedExecutionRunId** *(string) --*

      If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
      then it contains the ``runId`` of the previous workflow execution that was closed and
      continued as this execution.

    - **parentWorkflowExecution** *(dict) --*

      The source workflow execution that started this workflow execution. The member isn't set if
      the workflow execution was not started by a workflow.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **parentInitiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source event
      with this ID can be found in the history of the source workflow execution. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **lambdaRole** *(string) --*

      The IAM role attached to the workflow execution.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    {"reason": str, "details": str, "childPolicy": str, "cause": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionTerminatedEventAttributes`

    If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the termination.

    - **details** *(string) --*

      The details provided for the termination.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **cause** *(string) --*

      If set, indicates that the workflow execution was automatically terminated, and specifies the
      cause. This happens if the parent workflow execution times out or is terminated and the child
      policy is set to terminate child executions.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "childPolicy": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponseevents`
    `workflowExecutionTimedOutEventAttributes`

    If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that caused this event.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.
    """


_GetWorkflowExecutionHistoryPaginateResponseeventsTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseeventsTypeDef",
    {
        "eventTimestamp": datetime,
        "eventType": str,
        "eventId": int,
        "workflowExecutionStartedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef,
        "workflowExecutionCompletedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef,
        "completeWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef,
        "failWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTimedOutEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef,
        "workflowExecutionCanceledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef,
        "cancelWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionContinuedAsNewEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef,
        "continueAsNewWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTerminatedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef,
        "workflowExecutionCancelRequestedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef,
        "decisionTaskScheduledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef,
        "decisionTaskStartedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef,
        "decisionTaskCompletedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef,
        "decisionTaskTimedOutEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef,
        "activityTaskScheduledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef,
        "activityTaskStartedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef,
        "activityTaskCompletedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef,
        "activityTaskFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef,
        "activityTaskTimedOutEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef,
        "activityTaskCanceledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef,
        "activityTaskCancelRequestedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef,
        "workflowExecutionSignaledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef,
        "markerRecordedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsmarkerRecordedEventAttributesTypeDef,
        "recordMarkerFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef,
        "timerStartedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventstimerStartedEventAttributesTypeDef,
        "timerFiredEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventstimerFiredEventAttributesTypeDef,
        "timerCanceledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventstimerCanceledEventAttributesTypeDef,
        "startChildWorkflowExecutionInitiatedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef,
        "childWorkflowExecutionStartedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef,
        "childWorkflowExecutionCompletedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef,
        "childWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef,
        "childWorkflowExecutionTimedOutEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef,
        "childWorkflowExecutionCanceledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef,
        "childWorkflowExecutionTerminatedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef,
        "signalExternalWorkflowExecutionInitiatedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "externalWorkflowExecutionSignaledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef,
        "signalExternalWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "externalWorkflowExecutionCancelRequestedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "scheduleActivityTaskFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef,
        "requestCancelActivityTaskFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef,
        "startTimerFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsstartTimerFailedEventAttributesTypeDef,
        "cancelTimerFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventscancelTimerFailedEventAttributesTypeDef,
        "startChildWorkflowExecutionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef,
        "lambdaFunctionScheduledEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef,
        "lambdaFunctionStartedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef,
        "lambdaFunctionCompletedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef,
        "lambdaFunctionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef,
        "lambdaFunctionTimedOutEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef,
        "scheduleLambdaFunctionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef,
        "startLambdaFunctionFailedEventAttributes": GetWorkflowExecutionHistoryPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef,
    },
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseeventsTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseeventsTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginateResponse` `events`

    Event within a workflow execution. A history event can be one of these types:

    * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by the
    system.

    * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

    * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
    calling  RespondActivityTaskCompleted .

    * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
    RespondActivityTaskFailed .

    * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

    * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

    * ``ActivityTaskTimedOut`` – The activity task timed out.

    * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the decision
    isn't configured properly, for example no timer exists with the specified timer Id.

    * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

    * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
    execution, was canceled and closed.

    * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
    execution, completed successfully and was closed.

    * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
    execution, failed to complete successfully and was closed.

    * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

    * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this workflow
    execution, was terminated.

    * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
    execution, timed out and was closed.

    * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

    * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
    being continued as a new workflow execution.

    * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
    RespondDecisionTaskCompleted .

    * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

    * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

    * ``DecisionTaskTimedOut`` – The decision task timed out.

    * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
    execution was successfully delivered to the target execution.

    * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution, was
    successfully delivered to the target external workflow execution.

    * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
    failed.

    * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
    ``RecordMarker`` decision.

    * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

    * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask decision.
    This happens when the decision isn't configured properly.

    * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
    execution failed.

    * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
    cancellation of an external workflow execution.

    * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This happens
    when the decision isn't configured properly, for example the activity type specified isn't
    registered.

    * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
    execution failed.

    * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow was
    made.

    * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

    * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
    decision. This happens when the decision isn't configured properly, for example the workflow
    type specified isn't registered.

    * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
    execution.

    * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the decision
    isn't configured properly, for example a timer already exists with the specified timer Id.

    * ``TimerCanceled`` – A timer, previously started for this workflow execution, was successfully
    canceled.

    * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

    * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
    decision.

    * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was made.

    * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and closed.

    * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
    completion.

    * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new execution of
    the same type was created with the same workflowId.

    * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

    * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow execution.

    * ``WorkflowExecutionStarted`` – The workflow execution was started.

    * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

    * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
    exceeded.

    - **eventTimestamp** *(datetime) --*

      The date and time when the event occurred.

    - **eventType** *(string) --*

      The type of the history event.

    - **eventId** *(integer) --*

      The system generated ID of the event. This ID uniquely identifies the event with in the
      workflow execution history.

    - **workflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for this workflow type.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this workflow execution is
        terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
        expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskList** *(dict) --*

        The name of the task list for scheduling the decision tasks for this workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the decision tasks in the workflow execution.

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **tagList** *(list) --*

        The list of tags associated with this workflow execution. An execution can have up to 5
        tags.

        - *(string) --*

      - **continuedExecutionRunId** *(string) --*

        If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
        then it contains the ``runId`` of the previous workflow execution that was closed and
        continued as this execution.

      - **parentWorkflowExecution** *(dict) --*

        The source workflow execution that started this workflow execution. The member isn't set if
        the workflow execution was not started by a workflow.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **parentInitiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
        event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **lambdaRole** *(string) --*

        The IAM role attached to the workflow execution.

    - **workflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The result produced by the workflow execution upon successful completion.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The descriptive reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **workflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that caused this event.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **workflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **details** *(string) --*

        The details of the cancellation.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the new workflow execution.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **newExecutionRunId** *(string) --*

        The ``runId`` of the new workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The total duration allowed for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The task list to use for the decisions of the new (continued) workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the task to use for the decisions of the new (continued) workflow execution.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions of the new execution if it is terminated
        by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **tagList** *(list) --*

        The list of tags associated with the new workflow execution.

        - *(string) --*

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **lambdaRole** *(string) --*

        The IAM role to attach to the new (continued) workflow execution.

    - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the termination.

      - **details** *(string) --*

        The details provided for the termination.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **cause** *(string) --*

        If set, indicates that the workflow execution was automatically terminated, and specifies
        the cause. This happens if the parent workflow execution times out or is terminated and the
        child policy is set to terminate child executions.

    - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **externalWorkflowExecution** *(dict) --*

        The external workflow execution for which the cancellation was requested.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
        source event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        If set, indicates that the request to cancel the workflow execution was automatically
        generated, and specifies the cause. This happens if the parent workflow execution times out
        or is terminated, and the child policy is set to cancel child executions.

    - **decisionTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **taskList** *(dict) --*

        The name of the task list in which the decision task was scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        A task priority that, if set, specifies the priority for this decision task. Valid values
        are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **startToCloseTimeout** *(string) --*

        The maximum duration for this decision task. The task is considered timed out if it doesn't
        completed within this duration.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

    - **decisionTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the decider making the request. This enables diagnostic tracing when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **decisionTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **executionContext** *(string) --*

        User defined context for the workflow execution.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **decisionTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that expired before the decision task could be completed.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The type of the activity task.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The unique ID of the activity task.

      - **input** *(string) --*

        The input provided to the activity task.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.
        This data isn't sent to the activity.

      - **scheduleToStartTimeout** *(string) --*

        The maximum amount of time the activity task can wait to be assigned to a worker.

      - **scheduleToCloseTimeout** *(string) --*

        The maximum amount of time for this activity task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker may take to process the activity task.

      - **taskList** *(dict) --*

        The task list in which the activity task has been scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority to assign to the scheduled activity task. If set, this overrides any default
        priority value that was assigned when the activity type was registered.

        Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

      - **heartbeatTimeout** *(string) --*

        The maximum time before which the worker processing this task must report progress by
        calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
        automatically timed out. If the worker subsequently attempts to record a heartbeat or return
        a result, it is ignored.

    - **activityTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the worker that was assigned this task. This aids diagnostics when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **activityTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The results of the activity task.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **details** *(string) --*

        Contains the content of the ``details`` parameter for the last call made by the activity to
        ``RecordActivityTaskHeartbeat`` .

    - **activityTaskCanceledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **details** *(string) --*

        Details of the cancellation.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **latestCancelRequestedEventId** *(integer) --*

        If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
        activity task. This information can be useful for diagnosing problems by tracing back the
        chain of events leading up to this event.

    - **activityTaskCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **activityId** *(string) --*

        The unique ID of the task.

    - **workflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **signalName** *(string) --*

        The name of the signal received. The decider can use the signal name and inputs to determine
        how to the process the signal.

      - **input** *(string) --*

        The inputs provided with the signal. The decider can use the signal name and inputs to
        determine how to process the signal.

      - **externalWorkflowExecution** *(dict) --*

        The workflow execution that sent the signal. This is set only of the signal was sent by
        another workflow execution.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
        this ID can be found in the history of the source workflow execution. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event. This field is set only if the signal was initiated by another workflow execution.

    - **markerRecordedEventAttributes** *(dict) --*

      If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The name of the marker.

      - **details** *(string) --*

        The details of the marker.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarker`` decision that requested this marker. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **recordMarkerFailedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The marker's name.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerStartedEventAttributes** *(dict) --*

      If the event is of type ``TimerStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was started.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

      - **startToFireTimeout** *(string) --*

        The duration of time after which the timer fires.

        The duration is specified in seconds, an integer greater than or equal to ``0`` .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **timerFiredEventAttributes** *(dict) --*

      If the event is of type ``TimerFired`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that fired.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerCanceledEventAttributes** *(dict) --*

      If the event is of type ``TimerCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was canceled.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.
        This data isn't sent to the activity.

      - **input** *(string) --*

        The inputs provided to the child workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for the child workflow execution. If the workflow execution isn't
        closed within this duration, it is timed out and force-terminated.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The name of the task list used for the decision tasks of the child workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority assigned for the decision tasks for this workflow execution. Valid values are
        integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
        (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the cause
        of events.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this execution gets terminated by
        explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration allowed for the decision tasks for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **tagList** *(list) --*

        The list of tags to associated with the child workflow execution.

        - *(string) --*

      - **lambdaRole** *(string) --*

        The IAM role to attach to the child workflow execution.

    - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was started.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was completed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **result** *(string) --*

        The result of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that failed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **reason** *(string) --*

        The reason for the failure (if provided).

      - **details** *(string) --*

        The details of the failure (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that timed out.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **timeoutType** *(string) --*

        The type of the timeout that caused the child workflow execution to time out.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was canceled.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **details** *(string) --*

        Details of the cancellation (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was terminated.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to send the signal to.

      - **signalName** *(string) --*

        The name of the signal.

      - **input** *(string) --*

        The input provided to the signal.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.

    - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution that the signal was delivered to.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution that the signal was being delivered
        to.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution that the signal was being delivered to.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution to which the cancellation request was delivered.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member
      is set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution to be canceled.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to be canceled.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is
      set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The activity type provided in the ``ScheduleActivityTask`` decision that failed.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The activityId provided in the ``ScheduleActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

    - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **activityId** *(string) --*

        The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **startTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``StartTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **cancelTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``CancelTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowType** *(dict) --*

        The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
        ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
        ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
        information to diagnose problems by tracing back the chain of events leading up to this
        event.

        When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
        because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the child workflow execution.

    - **lambdaFunctionScheduledEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
      types.

      - **id** *(string) --*

        The unique ID of the Lambda task.

      - **name** *(string) --*

        The name of the Lambda function.

      - **control** *(string) --*

        Data attached to the event that the decider can use in subsequent workflow tasks. This data
        isn't sent to the Lambda task.

      - **input** *(string) --*

        The input provided to the Lambda task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker can take to process the Lambda task.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this activity task. To help diagnose issues, use this information to trace
        back the chain of events leading up to this event.

    - **lambdaFunctionStartedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

    - **lambdaFunctionCompletedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **result** *(string) --*

        The results of the Lambda task.

    - **lambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

    - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
        started. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

    - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
      event types.

      - **id** *(string) --*

        The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

      - **name** *(string) --*

        The name of the Lambda function.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this Lambda task. To help diagnose issues, use this information to trace back
        the chain of events leading up to this event.

    - **startLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
          role attached to the execution lacked sufficient permissions. For details and example IAM
          policies, see `Lambda Tasks
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **message** *(string) --*

        A description that can help diagnose the cause of the fault.
    """


_GetWorkflowExecutionHistoryPaginateResponseTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateResponseTypeDef",
    {"events": List[GetWorkflowExecutionHistoryPaginateResponseeventsTypeDef], "NextToken": str},
    total=False,
)


class GetWorkflowExecutionHistoryPaginateResponseTypeDef(
    _GetWorkflowExecutionHistoryPaginateResponseTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginate` `Response`

    Paginated representation of a workflow history for a workflow execution. This is the up to date,
    complete and authoritative record of the events related to all tasks and events in the life of
    the workflow execution.

    - **events** *(list) --*

      The list of history events.

      - *(dict) --*

        Event within a workflow execution. A history event can be one of these types:

        * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by
        the system.

        * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

        * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
        calling  RespondActivityTaskCompleted .

        * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
        RespondActivityTaskFailed .

        * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

        * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

        * ``ActivityTaskTimedOut`` – The activity task timed out.

        * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the
        decision isn't configured properly, for example no timer exists with the specified timer Id.

        * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

        * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
        execution, was canceled and closed.

        * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
        execution, completed successfully and was closed.

        * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
        execution, failed to complete successfully and was closed.

        * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

        * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this
        workflow execution, was terminated.

        * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
        execution, timed out and was closed.

        * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

        * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
        being continued as a new workflow execution.

        * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
        RespondDecisionTaskCompleted .

        * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

        * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

        * ``DecisionTaskTimedOut`` – The decision task timed out.

        * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
        execution was successfully delivered to the target execution.

        * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution,
        was successfully delivered to the target external workflow execution.

        * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
        failed.

        * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
        ``RecordMarker`` decision.

        * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

        * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask
        decision. This happens when the decision isn't configured properly.

        * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
        execution failed.

        * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
        cancellation of an external workflow execution.

        * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This
        happens when the decision isn't configured properly, for example the activity type specified
        isn't registered.

        * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
        execution failed.

        * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow
        was made.

        * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

        * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
        decision. This happens when the decision isn't configured properly, for example the workflow
        type specified isn't registered.

        * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
        execution.

        * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the
        decision isn't configured properly, for example a timer already exists with the specified
        timer Id.

        * ``TimerCanceled`` – A timer, previously started for this workflow execution, was
        successfully canceled.

        * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

        * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
        decision.

        * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was
        made.

        * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and
        closed.

        * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
        completion.

        * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new
        execution of the same type was created with the same workflowId.

        * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

        * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow
        execution.

        * ``WorkflowExecutionStarted`` – The workflow execution was started.

        * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

        * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
        exceeded.

        - **eventTimestamp** *(datetime) --*

          The date and time when the event occurred.

        - **eventType** *(string) --*

          The type of the history event.

        - **eventId** *(integer) --*

          The system generated ID of the event. This ID uniquely identifies the event with in the
          workflow execution history.

        - **workflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for this workflow type.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this workflow execution is
            terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskList** *(dict) --*

            The name of the task list for scheduling the decision tasks for this workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the decision tasks in the workflow execution.

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **tagList** *(list) --*

            The list of tags associated with this workflow execution. An execution can have up to 5
            tags.

            - *(string) --*

          - **continuedExecutionRunId** *(string) --*

            If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution``
            decision, then it contains the ``runId`` of the previous workflow execution that was
            closed and continued as this execution.

          - **parentWorkflowExecution** *(dict) --*

            The source workflow execution that started this workflow execution. The member isn't set
            if the workflow execution was not started by a workflow.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **parentInitiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
            event with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **lambdaRole** *(string) --*

            The IAM role attached to the workflow execution.

        - **workflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The result produced by the workflow execution upon successful completion.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The descriptive reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that caused this event.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

        - **workflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            The details of the cancellation.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the new workflow execution.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **newExecutionRunId** *(string) --*

            The ``runId`` of the new workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The total duration allowed for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The task list to use for the decisions of the new (continued) workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the task to use for the decisions of the new (continued) workflow
            execution.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions of the new execution if it is
            terminated by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **tagList** *(list) --*

            The list of tags associated with the new workflow execution.

            - *(string) --*

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **lambdaRole** *(string) --*

            The IAM role to attach to the new (continued) workflow execution.

        - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **workflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the termination.

          - **details** *(string) --*

            The details provided for the termination.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **cause** *(string) --*

            If set, indicates that the workflow execution was automatically terminated, and
            specifies the cause. This happens if the parent workflow execution times out or is
            terminated and the child policy is set to terminate child executions.

        - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **externalWorkflowExecution** *(dict) --*

            The external workflow execution for which the cancellation was requested.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow
            execution.The source event with this ID can be found in the history of the source
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **cause** *(string) --*

            If set, indicates that the request to cancel the workflow execution was automatically
            generated, and specifies the cause. This happens if the parent workflow execution times
            out or is terminated, and the child policy is set to cancel child executions.

        - **decisionTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **taskList** *(dict) --*

            The name of the task list in which the decision task was scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            A task priority that, if set, specifies the priority for this decision task. Valid
            values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **startToCloseTimeout** *(string) --*

            The maximum duration for this decision task. The task is considered timed out if it
            doesn't completed within this duration.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

        - **decisionTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the decider making the request. This enables diagnostic tracing when
            problems arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **decisionTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **executionContext** *(string) --*

            User defined context for the workflow execution.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **decisionTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that expired before the decision task could be completed.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The type of the activity task.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The unique ID of the activity task.

          - **input** *(string) --*

            The input provided to the activity task.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.
            This data isn't sent to the activity.

          - **scheduleToStartTimeout** *(string) --*

            The maximum amount of time the activity task can wait to be assigned to a worker.

          - **scheduleToCloseTimeout** *(string) --*

            The maximum amount of time for this activity task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker may take to process the activity task.

          - **taskList** *(dict) --*

            The task list in which the activity task has been scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority to assign to the scheduled activity task. If set, this overrides any
            default priority value that was assigned when the activity type was registered.

            Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

          - **heartbeatTimeout** *(string) --*

            The maximum time before which the worker processing this task must report progress by
            calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
            automatically timed out. If the worker subsequently attempts to record a heartbeat or
            return a result, it is ignored.

        - **activityTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the worker that was assigned this task. This aids diagnostics when problems
            arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **activityTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The results of the activity task.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **details** *(string) --*

            Contains the content of the ``details`` parameter for the last call made by the activity
            to ``RecordActivityTaskHeartbeat`` .

        - **activityTaskCanceledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            Details of the cancellation.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **latestCancelRequestedEventId** *(integer) --*

            If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for
            this activity task. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **activityTaskCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskcancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **activityId** *(string) --*

            The unique ID of the task.

        - **workflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **signalName** *(string) --*

            The name of the signal received. The decider can use the signal name and inputs to
            determine how to the process the signal.

          - **input** *(string) --*

            The inputs provided with the signal. The decider can use the signal name and inputs to
            determine how to process the signal.

          - **externalWorkflowExecution** *(dict) --*

            The workflow execution that sent the signal. This is set only of the signal was sent by
            another workflow execution.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event
            with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event. This field is set only if the signal was initiated by another
            workflow execution.

        - **markerRecordedEventAttributes** *(dict) --*

          If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The name of the marker.

          - **details** *(string) --*

            The details of the marker.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarker`` decision that requested this marker. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **recordMarkerFailedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The marker's name.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerStartedEventAttributes** *(dict) --*

          If the event is of type ``TimerStarted`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was started.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

          - **startToFireTimeout** *(string) --*

            The duration of time after which the timer fires.

            The duration is specified in seconds, an integer greater than or equal to ``0`` .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **timerFiredEventAttributes** *(dict) --*

          If the event is of type ``TimerFired`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that fired.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerCanceledEventAttributes** *(dict) --*

          If the event is of type ``TimerCanceled`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was canceled.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.
            This data isn't sent to the activity.

          - **input** *(string) --*

            The inputs provided to the child workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for the child workflow execution. If the workflow execution isn't
            closed within this duration, it is timed out and force-terminated.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The name of the task list used for the decision tasks of the child workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority assigned for the decision tasks for this workflow execution. Valid values
            are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the cause of events.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this execution gets terminated by
            explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration allowed for the decision tasks for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **tagList** *(list) --*

            The list of tags to associated with the child workflow execution.

            - *(string) --*

          - **lambdaRole** *(string) --*

            The IAM role to attach to the child workflow execution.

        - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was started.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was completed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **result** *(string) --*

            The result of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that failed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **reason** *(string) --*

            The reason for the failure (if provided).

          - **details** *(string) --*

            The details of the failure (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that timed out.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **timeoutType** *(string) --*

            The type of the timeout that caused the child workflow execution to time out.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was canceled.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **details** *(string) --*

            Details of the cancellation (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was terminated.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to send the signal to.

          - **signalName** *(string) --*

            The name of the signal.

          - **input** *(string) --*

            The input provided to the signal.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.

        - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution that the signal was delivered to.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution that the signal was being
            delivered to.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution that the signal was being delivered to.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution to which the cancellation request was delivered.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this
          member is set and provides detailed information about the event. It isn't set for other
          event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution to be canceled.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to be canceled.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

        - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member
          is set and provides detailed information about the event. It isn't set for other event
          types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow to which the cancel request was to be
            delivered.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The activity type provided in the ``ScheduleActivityTask`` decision that failed.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The activityId provided in the ``ScheduleActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

        - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityId** *(string) --*

            The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **startTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``StartTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **cancelTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelTimerFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``CancelTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowType** *(dict) --*

            The workflow type provided in the ``StartChildWorkflowExecution``   Decision that
            failed.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it
              lacks sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of
            the ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
            ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use
            this information to diagnose problems by tracing back the chain of events leading up to
            this event.

            When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to
            ``0`` because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the child workflow execution.

        - **lambdaFunctionScheduledEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The unique ID of the Lambda task.

          - **name** *(string) --*

            The name of the Lambda function.

          - **control** *(string) --*

            Data attached to the event that the decider can use in subsequent workflow tasks. This
            data isn't sent to the Lambda task.

          - **input** *(string) --*

            The input provided to the Lambda task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker can take to process the Lambda task.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this activity task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **lambdaFunctionStartedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

        - **lambdaFunctionCompletedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **result** *(string) --*

            The results of the Lambda task.

        - **lambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

        - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
            started. To help diagnose issues, use this information to trace back the chain of events
            leading up to this event.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

        - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

          - **name** *(string) --*

            The name of the Lambda function.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this Lambda task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **startLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the
              IAM role attached to the execution lacked sufficient permissions. For details and
              example IAM policies, see `Lambda Tasks
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **message** *(string) --*

            A description that can help diagnose the cause of the fault.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_GetWorkflowExecutionHistoryPaginateexecutionTypeDef = TypedDict(
    "_GetWorkflowExecutionHistoryPaginateexecutionTypeDef", {"workflowId": str, "runId": str}
)


class GetWorkflowExecutionHistoryPaginateexecutionTypeDef(
    _GetWorkflowExecutionHistoryPaginateexecutionTypeDef
):
    """
    Type definition for `GetWorkflowExecutionHistoryPaginate` `execution`

    Specifies the workflow execution for which to return the history.

    - **workflowId** *(string) --* **[REQUIRED]**

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --* **[REQUIRED]**

      A system-generated unique identifier for the workflow execution.
    """


_ListActivityTypesPaginatePaginationConfigTypeDef = TypedDict(
    "_ListActivityTypesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class ListActivityTypesPaginatePaginationConfigTypeDef(
    _ListActivityTypesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `ListActivityTypesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_ListActivityTypesPaginateResponsetypeInfosactivityTypeTypeDef = TypedDict(
    "_ListActivityTypesPaginateResponsetypeInfosactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ListActivityTypesPaginateResponsetypeInfosactivityTypeTypeDef(
    _ListActivityTypesPaginateResponsetypeInfosactivityTypeTypeDef
):
    """
    Type definition for `ListActivityTypesPaginateResponsetypeInfos` `activityType`

    The  ActivityType type structure representing the activity type.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_ListActivityTypesPaginateResponsetypeInfosTypeDef = TypedDict(
    "_ListActivityTypesPaginateResponsetypeInfosTypeDef",
    {
        "activityType": ListActivityTypesPaginateResponsetypeInfosactivityTypeTypeDef,
        "status": str,
        "description": str,
        "creationDate": datetime,
        "deprecationDate": datetime,
    },
    total=False,
)


class ListActivityTypesPaginateResponsetypeInfosTypeDef(
    _ListActivityTypesPaginateResponsetypeInfosTypeDef
):
    """
    Type definition for `ListActivityTypesPaginateResponse` `typeInfos`

    Detailed information about an activity type.

    - **activityType** *(dict) --*

      The  ActivityType type structure representing the activity type.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **status** *(string) --*

      The current status of the activity type.

    - **description** *(string) --*

      The description of the activity type provided in  RegisterActivityType .

    - **creationDate** *(datetime) --*

      The date and time this activity type was created through  RegisterActivityType .

    - **deprecationDate** *(datetime) --*

      If DEPRECATED, the date and time  DeprecateActivityType was called.
    """


_ListActivityTypesPaginateResponseTypeDef = TypedDict(
    "_ListActivityTypesPaginateResponseTypeDef",
    {"typeInfos": List[ListActivityTypesPaginateResponsetypeInfosTypeDef], "NextToken": str},
    total=False,
)


class ListActivityTypesPaginateResponseTypeDef(_ListActivityTypesPaginateResponseTypeDef):
    """
    Type definition for `ListActivityTypesPaginate` `Response`

    Contains a paginated list of activity type information structures.

    - **typeInfos** *(list) --*

      List of activity type information.

      - *(dict) --*

        Detailed information about an activity type.

        - **activityType** *(dict) --*

          The  ActivityType type structure representing the activity type.

          - **name** *(string) --*

            The name of this activity.

            .. note::

              The combination of activity type name and version must be unique within a domain.

          - **version** *(string) --*

            The version of this activity.

            .. note::

              The combination of activity type name and version must be unique with in a domain.

        - **status** *(string) --*

          The current status of the activity type.

        - **description** *(string) --*

          The description of the activity type provided in  RegisterActivityType .

        - **creationDate** *(datetime) --*

          The date and time this activity type was created through  RegisterActivityType .

        - **deprecationDate** *(datetime) --*

          If DEPRECATED, the date and time  DeprecateActivityType was called.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_ListClosedWorkflowExecutionsPaginatePaginationConfigTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class ListClosedWorkflowExecutionsPaginatePaginationConfigTypeDef(
    _ListClosedWorkflowExecutionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ListClosedWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef(
    _ListClosedWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginateResponseexecutionInfos` `execution`

    The workflow execution this information is about.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ListClosedWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef(
    _ListClosedWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginateResponseexecutionInfos` `parent`

    If this workflow execution is a child of another execution then contains the workflow execution
    that started this execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ListClosedWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef(
    _ListClosedWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginateResponseexecutionInfos` `workflowType`

    The type of the workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginateResponseexecutionInfosTypeDef",
    {
        "execution": ListClosedWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef,
        "workflowType": ListClosedWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef,
        "startTimestamp": datetime,
        "closeTimestamp": datetime,
        "executionStatus": str,
        "closeStatus": str,
        "parent": ListClosedWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef,
        "tagList": List[str],
        "cancelRequested": bool,
    },
    total=False,
)


class ListClosedWorkflowExecutionsPaginateResponseexecutionInfosTypeDef(
    _ListClosedWorkflowExecutionsPaginateResponseexecutionInfosTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginateResponse` `executionInfos`

    Contains information about a workflow execution.

    - **execution** *(dict) --*

      The workflow execution this information is about.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **startTimestamp** *(datetime) --*

      The time when the execution was started.

    - **closeTimestamp** *(datetime) --*

      The time when the workflow execution was closed. Set only if the execution status is CLOSED.

    - **executionStatus** *(string) --*

      The current status of the execution.

    - **closeStatus** *(string) --*

      If the execution status is closed then this specifies how the execution was closed:

      * ``COMPLETED`` – the execution was successfully completed.

      * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
      gracefully clean up before the execution is closed.

      * ``TERMINATED`` – the execution was force terminated.

      * ``FAILED`` – the execution failed to complete.

      * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
      timed out.

      * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
      execution was completed and a new execution was started to carry on the workflow.

    - **parent** *(dict) --*

      If this workflow execution is a child of another execution then contains the workflow
      execution that started this execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **tagList** *(list) --*

      The list of tags associated with the workflow execution. Tags can be used to identify and list
      workflow executions of interest through the visibility APIs. A workflow execution can have a
      maximum of 5 tags.

      - *(string) --*

    - **cancelRequested** *(boolean) --*

      Set to true if a cancellation is requested for this workflow execution.
    """


_ListClosedWorkflowExecutionsPaginateResponseTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginateResponseTypeDef",
    {
        "executionInfos": List[ListClosedWorkflowExecutionsPaginateResponseexecutionInfosTypeDef],
        "NextToken": str,
    },
    total=False,
)


class ListClosedWorkflowExecutionsPaginateResponseTypeDef(
    _ListClosedWorkflowExecutionsPaginateResponseTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `Response`

    Contains a paginated list of information about workflow executions.

    - **executionInfos** *(list) --*

      The list of workflow information structures.

      - *(dict) --*

        Contains information about a workflow execution.

        - **execution** *(dict) --*

          The workflow execution this information is about.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **workflowType** *(dict) --*

          The type of the workflow execution.

          - **name** *(string) --*

            The name of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

          - **version** *(string) --*

            The version of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

        - **startTimestamp** *(datetime) --*

          The time when the execution was started.

        - **closeTimestamp** *(datetime) --*

          The time when the workflow execution was closed. Set only if the execution status is
          CLOSED.

        - **executionStatus** *(string) --*

          The current status of the execution.

        - **closeStatus** *(string) --*

          If the execution status is closed then this specifies how the execution was closed:

          * ``COMPLETED`` – the execution was successfully completed.

          * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
          gracefully clean up before the execution is closed.

          * ``TERMINATED`` – the execution was force terminated.

          * ``FAILED`` – the execution failed to complete.

          * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
          timed out.

          * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
          execution was completed and a new execution was started to carry on the workflow.

        - **parent** *(dict) --*

          If this workflow execution is a child of another execution then contains the workflow
          execution that started this execution.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **tagList** *(list) --*

          The list of tags associated with the workflow execution. Tags can be used to identify and
          list workflow executions of interest through the visibility APIs. A workflow execution can
          have a maximum of 5 tags.

          - *(string) --*

        - **cancelRequested** *(boolean) --*

          Set to true if a cancellation is requested for this workflow execution.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_ListClosedWorkflowExecutionsPaginatecloseStatusFilterTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginatecloseStatusFilterTypeDef", {"status": str}
)


class ListClosedWorkflowExecutionsPaginatecloseStatusFilterTypeDef(
    _ListClosedWorkflowExecutionsPaginatecloseStatusFilterTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `closeStatusFilter`

    If specified, only workflow executions that match this *close status* are listed. For example,
    if TERMINATED is specified, then only TERMINATED workflow executions are listed.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **status** *(string) --* **[REQUIRED]**

      The close status that must match the close status of an execution for it to meet the criteria
      of this filter.
    """


_RequiredListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef = TypedDict(
    "_RequiredListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef = TypedDict(
    "_OptionalListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef(
    _RequiredListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef,
    _OptionalListClosedWorkflowExecutionsPaginatecloseTimeFilterTypeDef,
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `closeTimeFilter`

    If specified, the workflow executions are included in the returned results based on whether
    their close times are within the range specified by this filter. Also, if this parameter is
    specified, the returned results are ordered by their close times.

    .. note::

       ``startTimeFilter`` and ``closeTimeFilter`` are mutually exclusive. You must specify one of
       these in a request but not both.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ListClosedWorkflowExecutionsPaginateexecutionFilterTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginateexecutionFilterTypeDef", {"workflowId": str}
)


class ListClosedWorkflowExecutionsPaginateexecutionFilterTypeDef(
    _ListClosedWorkflowExecutionsPaginateexecutionFilterTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `executionFilter`

    If specified, only workflow executions matching the workflow ID specified in the filter are
    returned.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **workflowId** *(string) --* **[REQUIRED]**

      The workflowId to pass of match the criteria of this filter.
    """


_RequiredListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef = TypedDict(
    "_RequiredListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef = TypedDict(
    "_OptionalListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef(
    _RequiredListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef,
    _OptionalListClosedWorkflowExecutionsPaginatestartTimeFilterTypeDef,
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `startTimeFilter`

    If specified, the workflow executions are included in the returned results based on whether
    their start times are within the range specified by this filter. Also, if this parameter is
    specified, the returned results are ordered by their start times.

    .. note::

       ``startTimeFilter`` and ``closeTimeFilter`` are mutually exclusive. You must specify one of
       these in a request but not both.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ListClosedWorkflowExecutionsPaginatetagFilterTypeDef = TypedDict(
    "_ListClosedWorkflowExecutionsPaginatetagFilterTypeDef", {"tag": str}
)


class ListClosedWorkflowExecutionsPaginatetagFilterTypeDef(
    _ListClosedWorkflowExecutionsPaginatetagFilterTypeDef
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `tagFilter`

    If specified, only executions that have the matching tag are listed.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **tag** *(string) --* **[REQUIRED]**

      Specifies the tag that must be associated with the execution for it to meet the filter
      criteria.

      Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + -
      @`` .
    """


_RequiredListClosedWorkflowExecutionsPaginatetypeFilterTypeDef = TypedDict(
    "_RequiredListClosedWorkflowExecutionsPaginatetypeFilterTypeDef", {"name": str}
)
_OptionalListClosedWorkflowExecutionsPaginatetypeFilterTypeDef = TypedDict(
    "_OptionalListClosedWorkflowExecutionsPaginatetypeFilterTypeDef", {"version": str}, total=False
)


class ListClosedWorkflowExecutionsPaginatetypeFilterTypeDef(
    _RequiredListClosedWorkflowExecutionsPaginatetypeFilterTypeDef,
    _OptionalListClosedWorkflowExecutionsPaginatetypeFilterTypeDef,
):
    """
    Type definition for `ListClosedWorkflowExecutionsPaginate` `typeFilter`

    If specified, only executions of the type specified in the filter are returned.

    .. note::

       ``closeStatusFilter`` , ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually
       exclusive. You can specify at most one of these in a request.

    - **name** *(string) --* **[REQUIRED]**

      Name of the workflow type.

    - **version** *(string) --*

      Version of the workflow type.
    """


_ListDomainsPaginatePaginationConfigTypeDef = TypedDict(
    "_ListDomainsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class ListDomainsPaginatePaginationConfigTypeDef(_ListDomainsPaginatePaginationConfigTypeDef):
    """
    Type definition for `ListDomainsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_ListDomainsPaginateResponsedomainInfosTypeDef = TypedDict(
    "_ListDomainsPaginateResponsedomainInfosTypeDef",
    {"name": str, "status": str, "description": str, "arn": str},
    total=False,
)


class ListDomainsPaginateResponsedomainInfosTypeDef(_ListDomainsPaginateResponsedomainInfosTypeDef):
    """
    Type definition for `ListDomainsPaginateResponse` `domainInfos`

    Contains general information about a domain.

    - **name** *(string) --*

      The name of the domain. This name is unique within the account.

    - **status** *(string) --*

      The status of the domain:

      * ``REGISTERED`` – The domain is properly registered and available. You can use this domain
      for registering types and creating new workflow executions.

      * ``DEPRECATED`` – The domain was deprecated using  DeprecateDomain , but is still in use. You
      should not create new workflow executions in this domain.

    - **description** *(string) --*

      The description of the domain provided through  RegisterDomain .

    - **arn** *(string) --*

      The ARN of the domain.
    """


_ListDomainsPaginateResponseTypeDef = TypedDict(
    "_ListDomainsPaginateResponseTypeDef",
    {"domainInfos": List[ListDomainsPaginateResponsedomainInfosTypeDef], "NextToken": str},
    total=False,
)


class ListDomainsPaginateResponseTypeDef(_ListDomainsPaginateResponseTypeDef):
    """
    Type definition for `ListDomainsPaginate` `Response`

    Contains a paginated collection of DomainInfo structures.

    - **domainInfos** *(list) --*

      A list of DomainInfo structures.

      - *(dict) --*

        Contains general information about a domain.

        - **name** *(string) --*

          The name of the domain. This name is unique within the account.

        - **status** *(string) --*

          The status of the domain:

          * ``REGISTERED`` – The domain is properly registered and available. You can use this
          domain for registering types and creating new workflow executions.

          * ``DEPRECATED`` – The domain was deprecated using  DeprecateDomain , but is still in use.
          You should not create new workflow executions in this domain.

        - **description** *(string) --*

          The description of the domain provided through  RegisterDomain .

        - **arn** *(string) --*

          The ARN of the domain.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_ListOpenWorkflowExecutionsPaginatePaginationConfigTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class ListOpenWorkflowExecutionsPaginatePaginationConfigTypeDef(
    _ListOpenWorkflowExecutionsPaginatePaginationConfigTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ListOpenWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef(
    _ListOpenWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginateResponseexecutionInfos` `execution`

    The workflow execution this information is about.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class ListOpenWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef(
    _ListOpenWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginateResponseexecutionInfos` `parent`

    If this workflow execution is a child of another execution then contains the workflow execution
    that started this execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ListOpenWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef(
    _ListOpenWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginateResponseexecutionInfos` `workflowType`

    The type of the workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginateResponseexecutionInfosTypeDef",
    {
        "execution": ListOpenWorkflowExecutionsPaginateResponseexecutionInfosexecutionTypeDef,
        "workflowType": ListOpenWorkflowExecutionsPaginateResponseexecutionInfosworkflowTypeTypeDef,
        "startTimestamp": datetime,
        "closeTimestamp": datetime,
        "executionStatus": str,
        "closeStatus": str,
        "parent": ListOpenWorkflowExecutionsPaginateResponseexecutionInfosparentTypeDef,
        "tagList": List[str],
        "cancelRequested": bool,
    },
    total=False,
)


class ListOpenWorkflowExecutionsPaginateResponseexecutionInfosTypeDef(
    _ListOpenWorkflowExecutionsPaginateResponseexecutionInfosTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginateResponse` `executionInfos`

    Contains information about a workflow execution.

    - **execution** *(dict) --*

      The workflow execution this information is about.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **startTimestamp** *(datetime) --*

      The time when the execution was started.

    - **closeTimestamp** *(datetime) --*

      The time when the workflow execution was closed. Set only if the execution status is CLOSED.

    - **executionStatus** *(string) --*

      The current status of the execution.

    - **closeStatus** *(string) --*

      If the execution status is closed then this specifies how the execution was closed:

      * ``COMPLETED`` – the execution was successfully completed.

      * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
      gracefully clean up before the execution is closed.

      * ``TERMINATED`` – the execution was force terminated.

      * ``FAILED`` – the execution failed to complete.

      * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
      timed out.

      * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
      execution was completed and a new execution was started to carry on the workflow.

    - **parent** *(dict) --*

      If this workflow execution is a child of another execution then contains the workflow
      execution that started this execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **tagList** *(list) --*

      The list of tags associated with the workflow execution. Tags can be used to identify and list
      workflow executions of interest through the visibility APIs. A workflow execution can have a
      maximum of 5 tags.

      - *(string) --*

    - **cancelRequested** *(boolean) --*

      Set to true if a cancellation is requested for this workflow execution.
    """


_ListOpenWorkflowExecutionsPaginateResponseTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginateResponseTypeDef",
    {
        "executionInfos": List[ListOpenWorkflowExecutionsPaginateResponseexecutionInfosTypeDef],
        "NextToken": str,
    },
    total=False,
)


class ListOpenWorkflowExecutionsPaginateResponseTypeDef(
    _ListOpenWorkflowExecutionsPaginateResponseTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginate` `Response`

    Contains a paginated list of information about workflow executions.

    - **executionInfos** *(list) --*

      The list of workflow information structures.

      - *(dict) --*

        Contains information about a workflow execution.

        - **execution** *(dict) --*

          The workflow execution this information is about.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **workflowType** *(dict) --*

          The type of the workflow execution.

          - **name** *(string) --*

            The name of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

          - **version** *(string) --*

            The version of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

        - **startTimestamp** *(datetime) --*

          The time when the execution was started.

        - **closeTimestamp** *(datetime) --*

          The time when the workflow execution was closed. Set only if the execution status is
          CLOSED.

        - **executionStatus** *(string) --*

          The current status of the execution.

        - **closeStatus** *(string) --*

          If the execution status is closed then this specifies how the execution was closed:

          * ``COMPLETED`` – the execution was successfully completed.

          * ``CANCELED`` – the execution was canceled.Cancellation allows the implementation to
          gracefully clean up before the execution is closed.

          * ``TERMINATED`` – the execution was force terminated.

          * ``FAILED`` – the execution failed to complete.

          * ``TIMED_OUT`` – the execution did not complete in the alloted time and was automatically
          timed out.

          * ``CONTINUED_AS_NEW`` – the execution is logically continued. This means the current
          execution was completed and a new execution was started to carry on the workflow.

        - **parent** *(dict) --*

          If this workflow execution is a child of another execution then contains the workflow
          execution that started this execution.

          - **workflowId** *(string) --*

            The user defined identifier associated with the workflow execution.

          - **runId** *(string) --*

            A system-generated unique identifier for the workflow execution.

        - **tagList** *(list) --*

          The list of tags associated with the workflow execution. Tags can be used to identify and
          list workflow executions of interest through the visibility APIs. A workflow execution can
          have a maximum of 5 tags.

          - *(string) --*

        - **cancelRequested** *(boolean) --*

          Set to true if a cancellation is requested for this workflow execution.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_ListOpenWorkflowExecutionsPaginateexecutionFilterTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginateexecutionFilterTypeDef", {"workflowId": str}
)


class ListOpenWorkflowExecutionsPaginateexecutionFilterTypeDef(
    _ListOpenWorkflowExecutionsPaginateexecutionFilterTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginate` `executionFilter`

    If specified, only workflow executions matching the workflow ID specified in the filter are
    returned.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **workflowId** *(string) --* **[REQUIRED]**

      The workflowId to pass of match the criteria of this filter.
    """


_RequiredListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef = TypedDict(
    "_RequiredListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef", {"oldestDate": datetime}
)
_OptionalListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef = TypedDict(
    "_OptionalListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef",
    {"latestDate": datetime},
    total=False,
)


class ListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef(
    _RequiredListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef,
    _OptionalListOpenWorkflowExecutionsPaginatestartTimeFilterTypeDef,
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginate` `startTimeFilter`

    Workflow executions are included in the returned results based on whether their start times are
    within the range specified by this filter.

    - **oldestDate** *(datetime) --* **[REQUIRED]**

      Specifies the oldest start or close date and time to return.

    - **latestDate** *(datetime) --*

      Specifies the latest start or close date and time to return.
    """


_ListOpenWorkflowExecutionsPaginatetagFilterTypeDef = TypedDict(
    "_ListOpenWorkflowExecutionsPaginatetagFilterTypeDef", {"tag": str}
)


class ListOpenWorkflowExecutionsPaginatetagFilterTypeDef(
    _ListOpenWorkflowExecutionsPaginatetagFilterTypeDef
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginate` `tagFilter`

    If specified, only executions that have the matching tag are listed.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **tag** *(string) --* **[REQUIRED]**

      Specifies the tag that must be associated with the execution for it to meet the filter
      criteria.

      Tags may only contain unicode letters, digits, whitespace, or these symbols: ``_ . : / = + -
      @`` .
    """


_RequiredListOpenWorkflowExecutionsPaginatetypeFilterTypeDef = TypedDict(
    "_RequiredListOpenWorkflowExecutionsPaginatetypeFilterTypeDef", {"name": str}
)
_OptionalListOpenWorkflowExecutionsPaginatetypeFilterTypeDef = TypedDict(
    "_OptionalListOpenWorkflowExecutionsPaginatetypeFilterTypeDef", {"version": str}, total=False
)


class ListOpenWorkflowExecutionsPaginatetypeFilterTypeDef(
    _RequiredListOpenWorkflowExecutionsPaginatetypeFilterTypeDef,
    _OptionalListOpenWorkflowExecutionsPaginatetypeFilterTypeDef,
):
    """
    Type definition for `ListOpenWorkflowExecutionsPaginate` `typeFilter`

    If specified, only executions of the type specified in the filter are returned.

    .. note::

       ``executionFilter`` , ``typeFilter`` and ``tagFilter`` are mutually exclusive. You can
       specify at most one of these in a request.

    - **name** *(string) --* **[REQUIRED]**

      Name of the workflow type.

    - **version** *(string) --*

      Version of the workflow type.
    """


_ListWorkflowTypesPaginatePaginationConfigTypeDef = TypedDict(
    "_ListWorkflowTypesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class ListWorkflowTypesPaginatePaginationConfigTypeDef(
    _ListWorkflowTypesPaginatePaginationConfigTypeDef
):
    """
    Type definition for `ListWorkflowTypesPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_ListWorkflowTypesPaginateResponsetypeInfosworkflowTypeTypeDef = TypedDict(
    "_ListWorkflowTypesPaginateResponsetypeInfosworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class ListWorkflowTypesPaginateResponsetypeInfosworkflowTypeTypeDef(
    _ListWorkflowTypesPaginateResponsetypeInfosworkflowTypeTypeDef
):
    """
    Type definition for `ListWorkflowTypesPaginateResponsetypeInfos` `workflowType`

    The workflow type this information is about.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_ListWorkflowTypesPaginateResponsetypeInfosTypeDef = TypedDict(
    "_ListWorkflowTypesPaginateResponsetypeInfosTypeDef",
    {
        "workflowType": ListWorkflowTypesPaginateResponsetypeInfosworkflowTypeTypeDef,
        "status": str,
        "description": str,
        "creationDate": datetime,
        "deprecationDate": datetime,
    },
    total=False,
)


class ListWorkflowTypesPaginateResponsetypeInfosTypeDef(
    _ListWorkflowTypesPaginateResponsetypeInfosTypeDef
):
    """
    Type definition for `ListWorkflowTypesPaginateResponse` `typeInfos`

    Contains information about a workflow type.

    - **workflowType** *(dict) --*

      The workflow type this information is about.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **status** *(string) --*

      The current status of the workflow type.

    - **description** *(string) --*

      The description of the type registered through  RegisterWorkflowType .

    - **creationDate** *(datetime) --*

      The date when this type was registered.

    - **deprecationDate** *(datetime) --*

      If the type is in deprecated state, then it is set to the date when the type was deprecated.
    """


_ListWorkflowTypesPaginateResponseTypeDef = TypedDict(
    "_ListWorkflowTypesPaginateResponseTypeDef",
    {"typeInfos": List[ListWorkflowTypesPaginateResponsetypeInfosTypeDef], "NextToken": str},
    total=False,
)


class ListWorkflowTypesPaginateResponseTypeDef(_ListWorkflowTypesPaginateResponseTypeDef):
    """
    Type definition for `ListWorkflowTypesPaginate` `Response`

    Contains a paginated list of information structures about workflow types.

    - **typeInfos** *(list) --*

      The list of workflow type information.

      - *(dict) --*

        Contains information about a workflow type.

        - **workflowType** *(dict) --*

          The workflow type this information is about.

          - **name** *(string) --*

            The name of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

          - **version** *(string) --*

            The version of the workflow type.

            .. note::

              The combination of workflow type name and version must be unique with in a domain.

        - **status** *(string) --*

          The current status of the workflow type.

        - **description** *(string) --*

          The description of the type registered through  RegisterWorkflowType .

        - **creationDate** *(datetime) --*

          The date when this type was registered.

        - **deprecationDate** *(datetime) --*

          If the type is in deprecated state, then it is set to the date when the type was
          deprecated.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_PollForDecisionTaskPaginatePaginationConfigTypeDef = TypedDict(
    "_PollForDecisionTaskPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)


class PollForDecisionTaskPaginatePaginationConfigTypeDef(
    _PollForDecisionTaskPaginatePaginationConfigTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginate` `PaginationConfig`

    A dictionary that provides parameters to control pagination.

    - **MaxItems** *(integer) --*

      The total number of items to return. If the total number of items available is more than the
      value specified in max-items then a ``NextToken`` will be provided in the output that you can
      use to resume pagination.

    - **PageSize** *(integer) --*

      The size of each page.

    - **StartingToken** *(string) --*

      A token to specify where to start paginating. This is the ``NextToken`` from a previous
      response.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef",
    {"decisionTaskCompletedEventId": int, "activityId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskCancelRequestedEventAttributes`

    If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **activityId** *(string) --*

      The unique ID of the task.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef",
    {
        "details": str,
        "scheduledEventId": int,
        "startedEventId": int,
        "latestCancelRequestedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskCanceledEventAttributes`

    If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **details** *(string) --*

      Details of the cancellation.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **latestCancelRequestedEventId** *(integer) --*

      If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
      activity task. This information can be useful for diagnosing problems by tracing back the
      chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef",
    {"result": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskCompletedEventAttributes`

    If the event is of type ``ActivityTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The results of the activity task.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskFailedEventAttributes`

    If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributes` `activityType`

    The type of the activity task.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributes` `taskList`

    The task list in which the activity task has been scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef",
    {
        "activityType": PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "input": str,
        "control": str,
        "scheduleToStartTimeout": str,
        "scheduleToCloseTimeout": str,
        "startToCloseTimeout": str,
        "taskList": PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "heartbeatTimeout": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskScheduledEventAttributes`

    If the event is of type ``ActivityTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The type of the activity task.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The unique ID of the activity task.

    - **input** *(string) --*

      The input provided to the activity task.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks. This
      data isn't sent to the activity.

    - **scheduleToStartTimeout** *(string) --*

      The maximum amount of time the activity task can wait to be assigned to a worker.

    - **scheduleToCloseTimeout** *(string) --*

      The maximum amount of time for this activity task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker may take to process the activity task.

    - **taskList** *(dict) --*

      The task list in which the activity task has been scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority to assign to the scheduled activity task. If set, this overrides any default
      priority value that was assigned when the activity type was registered.

      Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
      ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.

    - **heartbeatTimeout** *(string) --*

      The maximum time before which the worker processing this task must report progress by calling
      RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is automatically
      timed out. If the worker subsequently attempts to record a heartbeat or return a result, it is
      ignored.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskStartedEventAttributes`

    If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the worker that was assigned this task. This aids diagnostics when problems arise.
      The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int, "details": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `activityTaskTimedOutEventAttributes`

    If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **details** *(string) --*

      Contains the content of the ``details`` parameter for the last call made by the activity to
      ``RecordActivityTaskHeartbeat`` .
    """


_PollForDecisionTaskPaginateResponseeventscancelTimerFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventscancelTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventscancelTimerFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventscancelTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `cancelTimerFailedEventAttributes`

    If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``CancelTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `cancelWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowExecution`

    The child workflow execution that was canceled.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesworkflowTypeTypeDef,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `childWorkflowExecutionCanceledEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was canceled.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **details** *(string) --*

      Details of the cancellation (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowExecution`

    The child workflow execution that was completed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesworkflowTypeTypeDef,
        "result": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `childWorkflowExecutionCompletedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was completed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **result** *(string) --*

      The result of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowExecution`

    The child workflow execution that failed.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "reason": str,
        "details": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `childWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that failed.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **reason** *(string) --*

      The reason for the failure (if provided).

    - **details** *(string) --*

      The details of the failure (if provided).

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowExecution`

    The child workflow execution that was started.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `childWorkflowExecutionStartedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was started.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowExecution`

    The child workflow execution that was terminated.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesworkflowTypeTypeDef,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `childWorkflowExecutionTerminatedEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that was terminated.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowExecution`

    The child workflow execution that timed out.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesworkflowTypeTypeDef,
        "timeoutType": str,
        "initiatedEventId": int,
        "startedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `childWorkflowExecutionTimedOutEventAttributes`

    If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The child workflow execution that timed out.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **timeoutType** *(string) --*

      The type of the timeout that caused the child workflow execution to time out.

    - **initiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
      execution was started. This information can be useful for diagnosing problems by tracing back
      the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `completeWorkflowExecutionFailedEventAttributes`

    If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_PollForDecisionTaskPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `continueAsNewWorkflowExecutionFailedEventAttributes`

    If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef",
    {"executionContext": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `decisionTaskCompletedEventAttributes`

    If the event is of type ``DecisionTaskCompleted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **executionContext** *(string) --*

      User defined context for the workflow execution.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef(
    _PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributes` `taskList`

    The name of the task list in which the decision task was scheduled.

    - **name** *(string) --*

      The name of the task list.
    """


_PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef",
    {
        "taskList": PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributestaskListTypeDef,
        "taskPriority": str,
        "startToCloseTimeout": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `decisionTaskScheduledEventAttributes`

    If the event is of type ``DecisionTaskScheduled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **taskList** *(dict) --*

      The name of the task list in which the decision task was scheduled.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      A task priority that, if set, specifies the priority for this decision task. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **startToCloseTimeout** *(string) --*

      The maximum duration for this decision task. The task is considered timed out if it doesn't
      completed within this duration.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.
    """


_PollForDecisionTaskPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef",
    {"identity": str, "scheduledEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `decisionTaskStartedEventAttributes`

    If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **identity** *(string) --*

      Identity of the decider making the request. This enables diagnostic tracing when problems
      arise. The form of this identity is user defined.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "scheduledEventId": int, "startedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `decisionTaskTimedOutEventAttributes`

    If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that expired before the decision task could be completed.

    - **scheduledEventId** *(integer) --*

      The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
      scheduled. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributes`
    `workflowExecution`

    The external workflow execution to which the cancellation request was delivered.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `externalWorkflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution to which the cancellation request was delivered.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributes`
    `workflowExecution`

    The external workflow execution that the signal was delivered to.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef",
    {
        "workflowExecution": PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesworkflowExecutionTypeDef,
        "initiatedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `externalWorkflowExecutionSignaledEventAttributes`

    If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowExecution** *(dict) --*

      The external workflow execution that the signal was delivered to.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef",
    {"cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `failWorkflowExecutionFailedEventAttributes`

    If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "result": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `lambdaFunctionCompletedEventAttributes`

    Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **result** *(string) --*

      The results of the Lambda task.
    """


_PollForDecisionTaskPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "reason": str, "details": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `lambdaFunctionFailedEventAttributes`

    Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
      help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **reason** *(string) --*

      The reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.
    """


_PollForDecisionTaskPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef",
    {
        "id": str,
        "name": str,
        "control": str,
        "input": str,
        "startToCloseTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `lambdaFunctionScheduledEventAttributes`

    Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The unique ID of the Lambda task.

    - **name** *(string) --*

      The name of the Lambda function.

    - **control** *(string) --*

      Data attached to the event that the decider can use in subsequent workflow tasks. This data
      isn't sent to the Lambda task.

    - **input** *(string) --*

      The input provided to the Lambda task.

    - **startToCloseTimeout** *(string) --*

      The maximum amount of time a worker can take to process the Lambda task.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this activity task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef",
    {"scheduledEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `lambdaFunctionStartedEventAttributes`

    Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef",
    {"scheduledEventId": int, "startedEventId": int, "timeoutType": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `lambdaFunctionTimedOutEventAttributes`

    Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **startedEventId** *(integer) --*

      The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task started.
      To help diagnose issues, use this information to trace back the chain of events leading up to
      this event.

    - **timeoutType** *(string) --*

      The type of the timeout that caused this event.
    """


_PollForDecisionTaskPaginateResponseeventsmarkerRecordedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsmarkerRecordedEventAttributesTypeDef",
    {"markerName": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsmarkerRecordedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsmarkerRecordedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents` `markerRecordedEventAttributes`

    If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The name of the marker.

    - **details** *(string) --*

      The details of the marker.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarker`` decision that requested this marker. This information can be useful
      for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef",
    {"markerName": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `recordMarkerFailedEventAttributes`

    If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **markerName** *(string) --*

      The marker's name.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RecordMarkerFailed`` decision for this cancellation request. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef",
    {"activityId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `requestCancelActivityTaskFailedEventAttributes`

    If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityId** *(string) --*

      The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelActivityTask`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `requestCancelExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is set
    and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
      execution. This information can be useful for diagnosing problems by tracing back the chain of
      events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {"workflowId": str, "runId": str, "decisionTaskCompletedEventId": int, "control": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `requestCancelExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member is
    set and provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution to be canceled.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to be canceled.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation request. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.
    """


_PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributes`
    `activityType`

    The activity type provided in the ``ScheduleActivityTask`` decision that failed.

    - **name** *(string) --*

      The name of this activity.

      .. note::

        The combination of activity type name and version must be unique within a domain.

    - **version** *(string) --*

      The version of this activity.

      .. note::

        The combination of activity type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef",
    {
        "activityType": PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesactivityTypeTypeDef,
        "activityId": str,
        "cause": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `scheduleActivityTaskFailedEventAttributes`

    If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **activityType** *(dict) --*

      The activity type provided in the ``ScheduleActivityTask`` decision that failed.

      - **name** *(string) --*

        The name of this activity.

        .. note::

          The combination of activity type name and version must be unique within a domain.

      - **version** *(string) --*

        The version of this activity.

        .. note::

          The combination of activity type name and version must be unique with in a domain.

    - **activityId** *(string) --*

      The activityId provided in the ``ScheduleActivityTask`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
      the scheduling of this activity task. This information can be useful for diagnosing problems
      by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef",
    {"id": str, "name": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `scheduleLambdaFunctionFailedEventAttributes`

    Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **id** *(string) --*

      The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

    - **name** *(string) --*

      The name of the Lambda function.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted in
      scheduling this Lambda task. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "cause": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `signalExternalWorkflowExecutionFailedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution that the signal was being delivered to.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution that the signal was being delivered to.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **initiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "runId": str,
        "signalName": str,
        "input": str,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `signalExternalWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the external workflow execution.

    - **runId** *(string) --*

      The ``runId`` of the external workflow execution to send the signal to.

    - **signalName** *(string) --*

      The name of the signal.

    - **input** *(string) --*

      The input provided to the signal.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``SignalExternalWorkflowExecution`` decision for this signal. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks.
    """


_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributes`
    `workflowType`

    The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef",
    {
        "workflowType": PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesworkflowTypeTypeDef,
        "cause": str,
        "workflowId": str,
        "initiatedEventId": int,
        "decisionTaskCompletedEventId": int,
        "control": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `startChildWorkflowExecutionFailedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowType** *(dict) --*

      The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **initiatedEventId** *(integer) --*

      When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
      ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
      ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
      information to diagnose problems by tracing back the chain of events leading up to this event.

      When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
      because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the chain of events.

    - **control** *(string) --*

      The data attached to the event that the decider can use in subsequent workflow tasks. This
      data isn't sent to the child workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `taskList`

    The name of the task list used for the decision tasks of the child workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributes`
    `workflowType`

    The type of the child workflow execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef",
    {
        "workflowId": str,
        "workflowType": PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesworkflowTypeTypeDef,
        "control": str,
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskList": PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "decisionTaskCompletedEventId": int,
        "childPolicy": str,
        "taskStartToCloseTimeout": str,
        "tagList": List[str],
        "lambdaRole": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `startChildWorkflowExecutionInitiatedEventAttributes`

    If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **workflowId** *(string) --*

      The ``workflowId`` of the child workflow execution.

    - **workflowType** *(dict) --*

      The type of the child workflow execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent decision tasks. This
      data isn't sent to the activity.

    - **input** *(string) --*

      The inputs provided to the child workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for the child workflow execution. If the workflow execution isn't closed
      within this duration, it is timed out and force-terminated.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The name of the task list used for the decision tasks of the child workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority assigned for the decision tasks for this workflow execution. Valid values are
      integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
      (2147483647). Higher numbers indicate higher priority.

      For more information about setting task priority, see `Setting Task Priority
      <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__ in
      the *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartChildWorkflowExecution``   Decision to request this child workflow execution.
      This information can be useful for diagnosing problems by tracing back the cause of events.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this execution gets terminated by
      explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration allowed for the decision tasks for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **tagList** *(list) --*

      The list of tags to associated with the child workflow execution.

      - *(string) --*

    - **lambdaRole** *(string) --*

      The IAM role to attach to the child workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef",
    {"scheduledEventId": int, "cause": str, "message": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `startLambdaFunctionFailedEventAttributes`

    Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
    types.

    - **scheduledEventId** *(integer) --*

      The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
      scheduled. To help diagnose issues, use this information to trace back the chain of events
      leading up to this event.

    - **cause** *(string) --*

      The cause of the failure. To help diagnose issues, use this information to trace back the
      chain of events leading up to this event.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
        role attached to the execution lacked sufficient permissions. For details and example IAM
        policies, see `Lambda Tasks
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **message** *(string) --*

      A description that can help diagnose the cause of the fault.
    """


_PollForDecisionTaskPaginateResponseeventsstartTimerFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsstartTimerFailedEventAttributesTypeDef",
    {"timerId": str, "cause": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsstartTimerFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsstartTimerFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `startTimerFailedEventAttributes`

    If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The timerId provided in the ``StartTimer`` decision that failed.

    - **cause** *(string) --*

      The cause of the failure. This information is generated by the system and can be useful for
      diagnostic purposes.

      .. note::

        If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
        sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
        Access to Amazon SWF Workflows
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
        *Amazon SWF Developer Guide* .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventstimerCanceledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventstimerCanceledEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventstimerCanceledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventstimerCanceledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents` `timerCanceledEventAttributes`

    If the event is of type ``TimerCanceled`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was canceled.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelTimer`` decision to cancel this timer. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventstimerFiredEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventstimerFiredEventAttributesTypeDef",
    {"timerId": str, "startedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventstimerFiredEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventstimerFiredEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents` `timerFiredEventAttributes`

    If the event is of type ``TimerFired`` then this member is set and provides detailed information
    about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that fired.

    - **startedEventId** *(integer) --*

      The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.
    """


_PollForDecisionTaskPaginateResponseeventstimerStartedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventstimerStartedEventAttributesTypeDef",
    {
        "timerId": str,
        "control": str,
        "startToFireTimeout": str,
        "decisionTaskCompletedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventstimerStartedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventstimerStartedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents` `timerStartedEventAttributes`

    If the event is of type ``TimerStarted`` then this member is set and provides detailed
    information about the event. It isn't set for other event types.

    - **timerId** *(string) --*

      The unique ID of the timer that was started.

    - **control** *(string) --*

      Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **startToFireTimeout** *(string) --*

      The duration of time after which the timer fires.

      The duration is specified in seconds, an integer greater than or equal to ``0`` .

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``StartTimer`` decision for this activity task. This information can be useful for
      diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributes`
    `externalWorkflowExecution`

    The external workflow execution for which the cancellation was requested.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef",
    {
        "externalWorkflowExecution": PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
        "cause": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionCancelRequestedEventAttributes`

    If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
    provides detailed information about the event. It isn't set for other event types.

    - **externalWorkflowExecution** *(dict) --*

      The external workflow execution for which the cancellation was requested.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
      ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
      source event with this ID can be found in the history of the source workflow execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **cause** *(string) --*

      If set, indicates that the request to cancel the workflow execution was automatically
      generated, and specifies the cause. This happens if the parent workflow execution times out or
      is terminated, and the child policy is set to cancel child executions.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef",
    {"details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionCanceledEventAttributes`

    If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **details** *(string) --*

      The details of the cancellation.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CancelWorkflowExecution`` decision for this cancellation request. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef",
    {"result": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionCompletedEventAttributes`

    If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **result** *(string) --*

      The result produced by the workflow execution upon successful completion.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``CompleteWorkflowExecution`` decision to complete this execution. This information can
      be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `taskList`

    The task list to use for the decisions of the new (continued) workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef",
    {
        "input": str,
        "decisionTaskCompletedEventId": int,
        "newExecutionRunId": str,
        "executionStartToCloseTimeout": str,
        "taskList": PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributestaskListTypeDef,
        "taskPriority": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "tagList": List[str],
        "workflowType": PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesworkflowTypeTypeDef,
        "lambdaRole": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionContinuedAsNewEventAttributes`

    If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the new workflow execution.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``ContinueAsNewWorkflowExecution`` decision that started this execution. This
      information can be useful for diagnosing problems by tracing back the chain of events leading
      up to this event.

    - **newExecutionRunId** *(string) --*

      The ``runId`` of the new workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The total duration allowed for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskList** *(dict) --*

      The task list to use for the decisions of the new (continued) workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the task to use for the decisions of the new (continued) workflow execution.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for the new workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions of the new execution if it is terminated
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **tagList** *(list) --*

      The list of tags associated with the new workflow execution.

      - *(string) --*

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **lambdaRole** *(string) --*

      The IAM role to attach to the new (continued) workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef",
    {"reason": str, "details": str, "decisionTaskCompletedEventId": int},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionFailedEventAttributes`

    If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The descriptive reason provided for the failure.

    - **details** *(string) --*

      The details of the failure.

    - **decisionTaskCompletedEventId** *(integer) --*

      The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that resulted
      in the ``FailWorkflowExecution`` decision to fail this execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributes`
    `externalWorkflowExecution`

    The workflow execution that sent the signal. This is set only of the signal was sent by another
    workflow execution.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef",
    {
        "signalName": str,
        "input": str,
        "externalWorkflowExecution": PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesexternalWorkflowExecutionTypeDef,
        "externalInitiatedEventId": int,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionSignaledEventAttributes`

    If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **signalName** *(string) --*

      The name of the signal received. The decider can use the signal name and inputs to determine
      how to the process the signal.

    - **input** *(string) --*

      The inputs provided with the signal. The decider can use the signal name and inputs to
      determine how to process the signal.

    - **externalWorkflowExecution** *(dict) --*

      The workflow execution that sent the signal. This is set only of the signal was sent by
      another workflow execution.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **externalInitiatedEventId** *(integer) --*

      The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
      ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
      this ID can be found in the history of the source workflow execution. This information can be
      useful for diagnosing problems by tracing back the chain of events leading up to this event.
      This field is set only if the signal was initiated by another workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributes`
    `parentWorkflowExecution`

    The source workflow execution that started this workflow execution. The member isn't set if the
    workflow execution was not started by a workflow.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef",
    {"name": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributes` `taskList`

    The name of the task list for scheduling the decision tasks for this workflow execution.

    - **name** *(string) --*

      The name of the task list.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef
):
    """
    Type definition for
    `PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributes`
    `workflowType`

    The workflow type of this execution.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef",
    {
        "input": str,
        "executionStartToCloseTimeout": str,
        "taskStartToCloseTimeout": str,
        "childPolicy": str,
        "taskList": PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributestaskListTypeDef,
        "taskPriority": str,
        "workflowType": PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesworkflowTypeTypeDef,
        "tagList": List[str],
        "continuedExecutionRunId": str,
        "parentWorkflowExecution": PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesparentWorkflowExecutionTypeDef,
        "parentInitiatedEventId": int,
        "lambdaRole": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionStartedEventAttributes`

    If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **input** *(string) --*

      The input provided to the workflow execution.

    - **executionStartToCloseTimeout** *(string) --*

      The maximum duration for this workflow execution.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **taskStartToCloseTimeout** *(string) --*

      The maximum duration of decision tasks for this workflow type.

      The duration is specified in seconds, an integer greater than or equal to ``0`` . You can use
      ``NONE`` to specify unlimited duration.

    - **childPolicy** *(string) --*

      The policy to use for the child workflow executions if this workflow execution is terminated,
      by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **taskList** *(dict) --*

      The name of the task list for scheduling the decision tasks for this workflow execution.

      - **name** *(string) --*

        The name of the task list.

    - **taskPriority** *(string) --*

      The priority of the decision tasks in the workflow execution.

    - **workflowType** *(dict) --*

      The workflow type of this execution.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **tagList** *(list) --*

      The list of tags associated with this workflow execution. An execution can have up to 5 tags.

      - *(string) --*

    - **continuedExecutionRunId** *(string) --*

      If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
      then it contains the ``runId`` of the previous workflow execution that was closed and
      continued as this execution.

    - **parentWorkflowExecution** *(dict) --*

      The source workflow execution that started this workflow execution. The member isn't set if
      the workflow execution was not started by a workflow.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **parentInitiatedEventId** *(integer) --*

      The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
      ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source event
      with this ID can be found in the history of the source workflow execution. This information
      can be useful for diagnosing problems by tracing back the chain of events leading up to this
      event.

    - **lambdaRole** *(string) --*

      The IAM role attached to the workflow execution.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef",
    {"reason": str, "details": str, "childPolicy": str, "cause": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionTerminatedEventAttributes`

    If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **reason** *(string) --*

      The reason provided for the termination.

    - **details** *(string) --*

      The details provided for the termination.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **cause** *(string) --*

      If set, indicates that the workflow execution was automatically terminated, and specifies the
      cause. This happens if the parent workflow execution times out or is terminated and the child
      policy is set to terminate child executions.
    """


_PollForDecisionTaskPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef",
    {"timeoutType": str, "childPolicy": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef(
    _PollForDecisionTaskPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponseevents`
    `workflowExecutionTimedOutEventAttributes`

    If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
    detailed information about the event. It isn't set for other event types.

    - **timeoutType** *(string) --*

      The type of timeout that caused this event.

    - **childPolicy** *(string) --*

      The policy used for the child workflow executions of this workflow execution.

      The supported child policies are:

      * ``TERMINATE`` – The child executions are terminated.

      * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by recording
      a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the decider to take
      appropriate actions when it receives an execution history with this event.

      * ``ABANDON`` – No action is taken. The child executions continue to run.
    """


_PollForDecisionTaskPaginateResponseeventsTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseeventsTypeDef",
    {
        "eventTimestamp": datetime,
        "eventType": str,
        "eventId": int,
        "workflowExecutionStartedEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionStartedEventAttributesTypeDef,
        "workflowExecutionCompletedEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionCompletedEventAttributesTypeDef,
        "completeWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventscompleteWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionFailedEventAttributesTypeDef,
        "failWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsfailWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTimedOutEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionTimedOutEventAttributesTypeDef,
        "workflowExecutionCanceledEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionCanceledEventAttributesTypeDef,
        "cancelWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventscancelWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionContinuedAsNewEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionContinuedAsNewEventAttributesTypeDef,
        "continueAsNewWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventscontinueAsNewWorkflowExecutionFailedEventAttributesTypeDef,
        "workflowExecutionTerminatedEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionTerminatedEventAttributesTypeDef,
        "workflowExecutionCancelRequestedEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionCancelRequestedEventAttributesTypeDef,
        "decisionTaskScheduledEventAttributes": PollForDecisionTaskPaginateResponseeventsdecisionTaskScheduledEventAttributesTypeDef,
        "decisionTaskStartedEventAttributes": PollForDecisionTaskPaginateResponseeventsdecisionTaskStartedEventAttributesTypeDef,
        "decisionTaskCompletedEventAttributes": PollForDecisionTaskPaginateResponseeventsdecisionTaskCompletedEventAttributesTypeDef,
        "decisionTaskTimedOutEventAttributes": PollForDecisionTaskPaginateResponseeventsdecisionTaskTimedOutEventAttributesTypeDef,
        "activityTaskScheduledEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskScheduledEventAttributesTypeDef,
        "activityTaskStartedEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskStartedEventAttributesTypeDef,
        "activityTaskCompletedEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskCompletedEventAttributesTypeDef,
        "activityTaskFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskFailedEventAttributesTypeDef,
        "activityTaskTimedOutEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskTimedOutEventAttributesTypeDef,
        "activityTaskCanceledEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskCanceledEventAttributesTypeDef,
        "activityTaskCancelRequestedEventAttributes": PollForDecisionTaskPaginateResponseeventsactivityTaskCancelRequestedEventAttributesTypeDef,
        "workflowExecutionSignaledEventAttributes": PollForDecisionTaskPaginateResponseeventsworkflowExecutionSignaledEventAttributesTypeDef,
        "markerRecordedEventAttributes": PollForDecisionTaskPaginateResponseeventsmarkerRecordedEventAttributesTypeDef,
        "recordMarkerFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsrecordMarkerFailedEventAttributesTypeDef,
        "timerStartedEventAttributes": PollForDecisionTaskPaginateResponseeventstimerStartedEventAttributesTypeDef,
        "timerFiredEventAttributes": PollForDecisionTaskPaginateResponseeventstimerFiredEventAttributesTypeDef,
        "timerCanceledEventAttributes": PollForDecisionTaskPaginateResponseeventstimerCanceledEventAttributesTypeDef,
        "startChildWorkflowExecutionInitiatedEventAttributes": PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionInitiatedEventAttributesTypeDef,
        "childWorkflowExecutionStartedEventAttributes": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionStartedEventAttributesTypeDef,
        "childWorkflowExecutionCompletedEventAttributes": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCompletedEventAttributesTypeDef,
        "childWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionFailedEventAttributesTypeDef,
        "childWorkflowExecutionTimedOutEventAttributes": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTimedOutEventAttributesTypeDef,
        "childWorkflowExecutionCanceledEventAttributes": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionCanceledEventAttributesTypeDef,
        "childWorkflowExecutionTerminatedEventAttributes": PollForDecisionTaskPaginateResponseeventschildWorkflowExecutionTerminatedEventAttributesTypeDef,
        "signalExternalWorkflowExecutionInitiatedEventAttributes": PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "externalWorkflowExecutionSignaledEventAttributes": PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionSignaledEventAttributesTypeDef,
        "signalExternalWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventssignalExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "externalWorkflowExecutionCancelRequestedEventAttributes": PollForDecisionTaskPaginateResponseeventsexternalWorkflowExecutionCancelRequestedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionInitiatedEventAttributesTypeDef,
        "requestCancelExternalWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsrequestCancelExternalWorkflowExecutionFailedEventAttributesTypeDef,
        "scheduleActivityTaskFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsscheduleActivityTaskFailedEventAttributesTypeDef,
        "requestCancelActivityTaskFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsrequestCancelActivityTaskFailedEventAttributesTypeDef,
        "startTimerFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsstartTimerFailedEventAttributesTypeDef,
        "cancelTimerFailedEventAttributes": PollForDecisionTaskPaginateResponseeventscancelTimerFailedEventAttributesTypeDef,
        "startChildWorkflowExecutionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsstartChildWorkflowExecutionFailedEventAttributesTypeDef,
        "lambdaFunctionScheduledEventAttributes": PollForDecisionTaskPaginateResponseeventslambdaFunctionScheduledEventAttributesTypeDef,
        "lambdaFunctionStartedEventAttributes": PollForDecisionTaskPaginateResponseeventslambdaFunctionStartedEventAttributesTypeDef,
        "lambdaFunctionCompletedEventAttributes": PollForDecisionTaskPaginateResponseeventslambdaFunctionCompletedEventAttributesTypeDef,
        "lambdaFunctionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventslambdaFunctionFailedEventAttributesTypeDef,
        "lambdaFunctionTimedOutEventAttributes": PollForDecisionTaskPaginateResponseeventslambdaFunctionTimedOutEventAttributesTypeDef,
        "scheduleLambdaFunctionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsscheduleLambdaFunctionFailedEventAttributesTypeDef,
        "startLambdaFunctionFailedEventAttributes": PollForDecisionTaskPaginateResponseeventsstartLambdaFunctionFailedEventAttributesTypeDef,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseeventsTypeDef(
    _PollForDecisionTaskPaginateResponseeventsTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponse` `events`

    Event within a workflow execution. A history event can be one of these types:

    * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by the
    system.

    * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

    * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
    calling  RespondActivityTaskCompleted .

    * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
    RespondActivityTaskFailed .

    * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

    * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

    * ``ActivityTaskTimedOut`` – The activity task timed out.

    * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the decision
    isn't configured properly, for example no timer exists with the specified timer Id.

    * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

    * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
    execution, was canceled and closed.

    * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
    execution, completed successfully and was closed.

    * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
    execution, failed to complete successfully and was closed.

    * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

    * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this workflow
    execution, was terminated.

    * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
    execution, timed out and was closed.

    * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

    * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
    being continued as a new workflow execution.

    * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
    RespondDecisionTaskCompleted .

    * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

    * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

    * ``DecisionTaskTimedOut`` – The decision task timed out.

    * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
    execution was successfully delivered to the target execution.

    * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution, was
    successfully delivered to the target external workflow execution.

    * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
    failed.

    * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
    ``RecordMarker`` decision.

    * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

    * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask decision.
    This happens when the decision isn't configured properly.

    * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
    execution failed.

    * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
    cancellation of an external workflow execution.

    * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This happens
    when the decision isn't configured properly, for example the activity type specified isn't
    registered.

    * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
    execution failed.

    * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow was
    made.

    * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

    * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
    decision. This happens when the decision isn't configured properly, for example the workflow
    type specified isn't registered.

    * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
    execution.

    * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the decision
    isn't configured properly, for example a timer already exists with the specified timer Id.

    * ``TimerCanceled`` – A timer, previously started for this workflow execution, was successfully
    canceled.

    * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

    * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
    decision.

    * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was made.

    * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and closed.

    * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
    completion.

    * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new execution of
    the same type was created with the same workflowId.

    * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

    * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow execution.

    * ``WorkflowExecutionStarted`` – The workflow execution was started.

    * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

    * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
    exceeded.

    - **eventTimestamp** *(datetime) --*

      The date and time when the event occurred.

    - **eventType** *(string) --*

      The type of the history event.

    - **eventId** *(integer) --*

      The system generated ID of the event. This ID uniquely identifies the event with in the
      workflow execution history.

    - **workflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for this workflow type.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this workflow execution is
        terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
        expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskList** *(dict) --*

        The name of the task list for scheduling the decision tasks for this workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the decision tasks in the workflow execution.

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **tagList** *(list) --*

        The list of tags associated with this workflow execution. An execution can have up to 5
        tags.

        - *(string) --*

      - **continuedExecutionRunId** *(string) --*

        If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution`` decision,
        then it contains the ``runId`` of the previous workflow execution that was closed and
        continued as this execution.

      - **parentWorkflowExecution** *(dict) --*

        The source workflow execution that started this workflow execution. The member isn't set if
        the workflow execution was not started by a workflow.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **parentInitiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
        event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **lambdaRole** *(string) --*

        The IAM role attached to the workflow execution.

    - **workflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The result produced by the workflow execution upon successful completion.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The descriptive reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``FailWorkflowExecution`` decision to fail this execution. This information
        can be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **workflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that caused this event.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

    - **workflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **details** *(string) --*

        The details of the cancellation.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **input** *(string) --*

        The input provided to the new workflow execution.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **newExecutionRunId** *(string) --*

        The ``runId`` of the new workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The total duration allowed for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The task list to use for the decisions of the new (continued) workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority of the task to use for the decisions of the new (continued) workflow execution.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration of decision tasks for the new workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions of the new execution if it is terminated
        by calling the  TerminateWorkflowExecution action explicitly or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **tagList** *(list) --*

        The list of tags associated with the new workflow execution.

        - *(string) --*

      - **workflowType** *(dict) --*

        The workflow type of this execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **lambdaRole** *(string) --*

        The IAM role to attach to the new (continued) workflow execution.

    - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **workflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionTerminated`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the termination.

      - **details** *(string) --*

        The details provided for the termination.

      - **childPolicy** *(string) --*

        The policy used for the child workflow executions of this workflow execution.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **cause** *(string) --*

        If set, indicates that the workflow execution was automatically terminated, and specifies
        the cause. This happens if the parent workflow execution times out or is terminated and the
        child policy is set to terminate child executions.

    - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **externalWorkflowExecution** *(dict) --*

        The external workflow execution for which the cancellation was requested.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow execution.The
        source event with this ID can be found in the history of the source workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        If set, indicates that the request to cancel the workflow execution was automatically
        generated, and specifies the cause. This happens if the parent workflow execution times out
        or is terminated, and the child policy is set to cancel child executions.

    - **decisionTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **taskList** *(dict) --*

        The name of the task list in which the decision task was scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        A task priority that, if set, specifies the priority for this decision task. Valid values
        are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **startToCloseTimeout** *(string) --*

        The maximum duration for this decision task. The task is considered timed out if it doesn't
        completed within this duration.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

    - **decisionTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the decider making the request. This enables diagnostic tracing when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **decisionTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **executionContext** *(string) --*

        User defined context for the workflow execution.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **decisionTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of timeout that expired before the decision task could be completed.

      - **scheduledEventId** *(integer) --*

        The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``DecisionTaskStarted`` event recorded when this decision task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskScheduledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The type of the activity task.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The unique ID of the activity task.

      - **input** *(string) --*

        The input provided to the activity task.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.
        This data isn't sent to the activity.

      - **scheduleToStartTimeout** *(string) --*

        The maximum amount of time the activity task can wait to be assigned to a worker.

      - **scheduleToCloseTimeout** *(string) --*

        The maximum amount of time for this activity task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker may take to process the activity task.

      - **taskList** *(dict) --*

        The task list in which the activity task has been scheduled.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority to assign to the scheduled activity task. If set, this overrides any default
        priority value that was assigned when the activity type was registered.

        Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
        ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

      - **heartbeatTimeout** *(string) --*

        The maximum time before which the worker processing this task must report progress by
        calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
        automatically timed out. If the worker subsequently attempts to record a heartbeat or return
        a result, it is ignored.

    - **activityTaskStartedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **identity** *(string) --*

        Identity of the worker that was assigned this task. This aids diagnostics when problems
        arise. The form of this identity is user defined.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **activityTaskCompletedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **result** *(string) --*

        The results of the activity task.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **activityTaskTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **details** *(string) --*

        Contains the content of the ``details`` parameter for the last call made by the activity to
        ``RecordActivityTaskHeartbeat`` .

    - **activityTaskCanceledEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **details** *(string) --*

        Details of the cancellation.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event recorded when this activity task was started.
        This information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **latestCancelRequestedEventId** *(integer) --*

        If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for this
        activity task. This information can be useful for diagnosing problems by tracing back the
        chain of events leading up to this event.

    - **activityTaskCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ActivityTaskcancelRequested`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **activityId** *(string) --*

        The unique ID of the task.

    - **workflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **signalName** *(string) --*

        The name of the signal received. The decider can use the signal name and inputs to determine
        how to the process the signal.

      - **input** *(string) --*

        The inputs provided with the signal. The decider can use the signal name and inputs to
        determine how to process the signal.

      - **externalWorkflowExecution** *(dict) --*

        The workflow execution that sent the signal. This is set only of the signal was sent by
        another workflow execution.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **externalInitiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event with
        this ID can be found in the history of the source workflow execution. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event. This field is set only if the signal was initiated by another workflow execution.

    - **markerRecordedEventAttributes** *(dict) --*

      If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The name of the marker.

      - **details** *(string) --*

        The details of the marker.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarker`` decision that requested this marker. This information can
        be useful for diagnosing problems by tracing back the chain of events leading up to this
        event.

    - **recordMarkerFailedEventAttributes** *(dict) --*

      If the event is of type ``DecisionTaskFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **markerName** *(string) --*

        The marker's name.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerStartedEventAttributes** *(dict) --*

      If the event is of type ``TimerStarted`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was started.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

      - **startToFireTimeout** *(string) --*

        The duration of time after which the timer fires.

        The duration is specified in seconds, an integer greater than or equal to ``0`` .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **timerFiredEventAttributes** *(dict) --*

      If the event is of type ``TimerFired`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that fired.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **timerCanceledEventAttributes** *(dict) --*

      If the event is of type ``TimerCanceled`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The unique ID of the timer that was canceled.

      - **startedEventId** *(integer) --*

        The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.
        This data isn't sent to the activity.

      - **input** *(string) --*

        The inputs provided to the child workflow execution.

      - **executionStartToCloseTimeout** *(string) --*

        The maximum duration for the child workflow execution. If the workflow execution isn't
        closed within this duration, it is timed out and force-terminated.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **taskList** *(dict) --*

        The name of the task list used for the decision tasks of the child workflow execution.

        - **name** *(string) --*

          The name of the task list.

      - **taskPriority** *(string) --*

        The priority assigned for the decision tasks for this workflow execution. Valid values are
        integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to ``Integer.MAX_VALUE``
        (2147483647). Higher numbers indicate higher priority.

        For more information about setting task priority, see `Setting Task Priority
        <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
        in the *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the cause
        of events.

      - **childPolicy** *(string) --*

        The policy to use for the child workflow executions if this execution gets terminated by
        explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

        The supported child policies are:

        * ``TERMINATE`` – The child executions are terminated.

        * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
        recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
        decider to take appropriate actions when it receives an execution history with this event.

        * ``ABANDON`` – No action is taken. The child executions continue to run.

      - **taskStartToCloseTimeout** *(string) --*

        The maximum duration allowed for the decision tasks for this workflow execution.

        The duration is specified in seconds, an integer greater than or equal to ``0`` . You can
        use ``NONE`` to specify unlimited duration.

      - **tagList** *(list) --*

        The list of tags to associated with the child workflow execution.

        - *(string) --*

      - **lambdaRole** *(string) --*

        The IAM role to attach to the child workflow execution.

    - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was started.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was completed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **result** *(string) --*

        The result of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that failed.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **reason** *(string) --*

        The reason for the failure (if provided).

      - **details** *(string) --*

        The details of the failure (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that timed out.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **timeoutType** *(string) --*

        The type of the timeout that caused the child workflow execution to time out.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was canceled.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **details** *(string) --*

        Details of the cancellation (if provided).

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

      If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The child workflow execution that was terminated.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **workflowType** *(dict) --*

        The type of the child workflow execution.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **initiatedEventId** *(integer) --*

        The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
        ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
        execution was started. This information can be useful for diagnosing problems by tracing
        back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to send the signal to.

      - **signalName** *(string) --*

        The name of the signal.

      - **input** *(string) --*

        The input provided to the signal.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent decision tasks.

    - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution that the signal was delivered to.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution that the signal was being delivered
        to.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution that the signal was being delivered to.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
        ``SignalExternalWorkflowExecution`` decision to request this signal. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

      If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is set
      and provides detailed information about the event. It isn't set for other event types.

      - **workflowExecution** *(dict) --*

        The external workflow execution to which the cancellation request was delivered.

        - **workflowId** *(string) --*

          The user defined identifier associated with the workflow execution.

        - **runId** *(string) --*

          A system-generated unique identifier for the workflow execution.

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

    - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this member
      is set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow execution to be canceled.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution to be canceled.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        Data attached to the event that can be used by the decider in subsequent workflow tasks.

    - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member is
      set and provides detailed information about the event. It isn't set for other event types.

      - **workflowId** *(string) --*

        The ``workflowId`` of the external workflow to which the cancel request was to be delivered.

      - **runId** *(string) --*

        The ``runId`` of the external workflow execution.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **initiatedEventId** *(integer) --*

        The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to the
        ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events leading up to this event.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this cancellation
        request. This information can be useful for diagnosing problems by tracing back the chain of
        events leading up to this event.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the workflow execution.

    - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and provides
      detailed information about the event. It isn't set for other event types.

      - **activityType** *(dict) --*

        The activity type provided in the ``ScheduleActivityTask`` decision that failed.

        - **name** *(string) --*

          The name of this activity.

          .. note::

            The combination of activity type name and version must be unique within a domain.

        - **version** *(string) --*

          The version of this activity.

          .. note::

            The combination of activity type name and version must be unique with in a domain.

      - **activityId** *(string) --*

        The activityId provided in the ``ScheduleActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that resulted in
        the scheduling of this activity task. This information can be useful for diagnosing problems
        by tracing back the chain of events leading up to this event.

    - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

      If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **activityId** *(string) --*

        The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``RequestCancelActivityTask`` decision for this cancellation request. This
        information can be useful for diagnosing problems by tracing back the chain of events
        leading up to this event.

    - **startTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``StartTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartTimer`` decision for this activity task. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **cancelTimerFailedEventAttributes** *(dict) --*

      If the event is of type ``CancelTimerFailed`` then this member is set and provides detailed
      information about the event. It isn't set for other event types.

      - **timerId** *(string) --*

        The timerId provided in the ``CancelTimer`` decision that failed.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
        useful for diagnosing problems by tracing back the chain of events leading up to this event.

    - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

      If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
      provides detailed information about the event. It isn't set for other event types.

      - **workflowType** *(dict) --*

        The workflow type provided in the ``StartChildWorkflowExecution``   Decision that failed.

        - **name** *(string) --*

          The name of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

        - **version** *(string) --*

          The version of the workflow type.

          .. note::

            The combination of workflow type name and version must be unique with in a domain.

      - **cause** *(string) --*

        The cause of the failure. This information is generated by the system and can be useful for
        diagnostic purposes.

        .. note::

          When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it lacks
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **workflowId** *(string) --*

        The ``workflowId`` of the child workflow execution.

      - **initiatedEventId** *(integer) --*

        When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of the
        ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
        ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use this
        information to diagnose problems by tracing back the chain of events leading up to this
        event.

        When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to ``0``
        because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
        resulted in the ``StartChildWorkflowExecution``   Decision to request this child workflow
        execution. This information can be useful for diagnosing problems by tracing back the chain
        of events.

      - **control** *(string) --*

        The data attached to the event that the decider can use in subsequent workflow tasks. This
        data isn't sent to the child workflow execution.

    - **lambdaFunctionScheduledEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other event
      types.

      - **id** *(string) --*

        The unique ID of the Lambda task.

      - **name** *(string) --*

        The name of the Lambda function.

      - **control** *(string) --*

        Data attached to the event that the decider can use in subsequent workflow tasks. This data
        isn't sent to the Lambda task.

      - **input** *(string) --*

        The input provided to the Lambda task.

      - **startToCloseTimeout** *(string) --*

        The maximum amount of time a worker can take to process the Lambda task.

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this activity task. To help diagnose issues, use this information to trace
        back the chain of events leading up to this event.

    - **lambdaFunctionStartedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

    - **lambdaFunctionCompletedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **result** *(string) --*

        The results of the Lambda task.

    - **lambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started. To
        help diagnose issues, use this information to trace back the chain of events leading up to
        this event.

      - **reason** *(string) --*

        The reason provided for the failure.

      - **details** *(string) --*

        The details of the failure.

    - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

      Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity task
        was scheduled. To help diagnose issues, use this information to trace back the chain of
        events leading up to this event.

      - **startedEventId** *(integer) --*

        The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
        started. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **timeoutType** *(string) --*

        The type of the timeout that caused this event.

    - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
      event types.

      - **id** *(string) --*

        The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

      - **name** *(string) --*

        The name of the Lambda function.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it lacked
          sufficient permissions. For details and example IAM policies, see `Using IAM to Manage
          Access to Amazon SWF Workflows
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **decisionTaskCompletedEventId** *(integer) --*

        The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that resulted
        in scheduling this Lambda task. To help diagnose issues, use this information to trace back
        the chain of events leading up to this event.

    - **startLambdaFunctionFailedEventAttributes** *(dict) --*

      Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other event
      types.

      - **scheduledEventId** *(integer) --*

        The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task was
        scheduled. To help diagnose issues, use this information to trace back the chain of events
        leading up to this event.

      - **cause** *(string) --*

        The cause of the failure. To help diagnose issues, use this information to trace back the
        chain of events leading up to this event.

        .. note::

          If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the IAM
          role attached to the execution lacked sufficient permissions. For details and example IAM
          policies, see `Lambda Tasks
          <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in the
          *Amazon SWF Developer Guide* .

      - **message** *(string) --*

        A description that can help diagnose the cause of the fault.
    """


_PollForDecisionTaskPaginateResponseworkflowExecutionTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseworkflowExecutionTypeDef",
    {"workflowId": str, "runId": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseworkflowExecutionTypeDef(
    _PollForDecisionTaskPaginateResponseworkflowExecutionTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponse` `workflowExecution`

    The workflow execution for which this decision task was created.

    - **workflowId** *(string) --*

      The user defined identifier associated with the workflow execution.

    - **runId** *(string) --*

      A system-generated unique identifier for the workflow execution.
    """


_PollForDecisionTaskPaginateResponseworkflowTypeTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseworkflowTypeTypeDef",
    {"name": str, "version": str},
    total=False,
)


class PollForDecisionTaskPaginateResponseworkflowTypeTypeDef(
    _PollForDecisionTaskPaginateResponseworkflowTypeTypeDef
):
    """
    Type definition for `PollForDecisionTaskPaginateResponse` `workflowType`

    The type of the workflow execution for which this decision task was created.

    - **name** *(string) --*

      The name of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.

    - **version** *(string) --*

      The version of the workflow type.

      .. note::

        The combination of workflow type name and version must be unique with in a domain.
    """


_PollForDecisionTaskPaginateResponseTypeDef = TypedDict(
    "_PollForDecisionTaskPaginateResponseTypeDef",
    {
        "taskToken": str,
        "startedEventId": int,
        "workflowExecution": PollForDecisionTaskPaginateResponseworkflowExecutionTypeDef,
        "workflowType": PollForDecisionTaskPaginateResponseworkflowTypeTypeDef,
        "events": List[PollForDecisionTaskPaginateResponseeventsTypeDef],
        "previousStartedEventId": int,
        "NextToken": str,
    },
    total=False,
)


class PollForDecisionTaskPaginateResponseTypeDef(_PollForDecisionTaskPaginateResponseTypeDef):
    """
    Type definition for `PollForDecisionTaskPaginate` `Response`

    A structure that represents a decision task. Decision tasks are sent to deciders in order for
    them to make decisions.

    - **taskToken** *(string) --*

      The opaque string used as a handle on the task. This token is used by workers to communicate
      progress and response information back to the system about the task.

    - **startedEventId** *(integer) --*

      The ID of the ``DecisionTaskStarted`` event recorded in the history.

    - **workflowExecution** *(dict) --*

      The workflow execution for which this decision task was created.

      - **workflowId** *(string) --*

        The user defined identifier associated with the workflow execution.

      - **runId** *(string) --*

        A system-generated unique identifier for the workflow execution.

    - **workflowType** *(dict) --*

      The type of the workflow execution for which this decision task was created.

      - **name** *(string) --*

        The name of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

      - **version** *(string) --*

        The version of the workflow type.

        .. note::

          The combination of workflow type name and version must be unique with in a domain.

    - **events** *(list) --*

      A paginated list of history events of the workflow execution. The decider uses this during the
      processing of the decision task.

      - *(dict) --*

        Event within a workflow execution. A history event can be one of these types:

        * ``ActivityTaskCancelRequested`` – A ``RequestCancelActivityTask`` decision was received by
        the system.

        * ``ActivityTaskCanceled`` – The activity task was successfully canceled.

        * ``ActivityTaskCompleted`` – An activity worker successfully completed an activity task by
        calling  RespondActivityTaskCompleted .

        * ``ActivityTaskFailed`` – An activity worker failed an activity task by calling
        RespondActivityTaskFailed .

        * ``ActivityTaskScheduled`` – An activity task was scheduled for execution.

        * ``ActivityTaskStarted`` – The scheduled activity task was dispatched to a worker.

        * ``ActivityTaskTimedOut`` – The activity task timed out.

        * ``CancelTimerFailed`` – Failed to process CancelTimer decision. This happens when the
        decision isn't configured properly, for example no timer exists with the specified timer Id.

        * ``CancelWorkflowExecutionFailed`` – A request to cancel a workflow execution failed.

        * ``ChildWorkflowExecutionCanceled`` – A child workflow execution, started by this workflow
        execution, was canceled and closed.

        * ``ChildWorkflowExecutionCompleted`` – A child workflow execution, started by this workflow
        execution, completed successfully and was closed.

        * ``ChildWorkflowExecutionFailed`` – A child workflow execution, started by this workflow
        execution, failed to complete successfully and was closed.

        * ``ChildWorkflowExecutionStarted`` – A child workflow execution was successfully started.

        * ``ChildWorkflowExecutionTerminated`` – A child workflow execution, started by this
        workflow execution, was terminated.

        * ``ChildWorkflowExecutionTimedOut`` – A child workflow execution, started by this workflow
        execution, timed out and was closed.

        * ``CompleteWorkflowExecutionFailed`` – The workflow execution failed to complete.

        * ``ContinueAsNewWorkflowExecutionFailed`` – The workflow execution failed to complete after
        being continued as a new workflow execution.

        * ``DecisionTaskCompleted`` – The decider successfully completed a decision task by calling
        RespondDecisionTaskCompleted .

        * ``DecisionTaskScheduled`` – A decision task was scheduled for the workflow execution.

        * ``DecisionTaskStarted`` – The decision task was dispatched to a decider.

        * ``DecisionTaskTimedOut`` – The decision task timed out.

        * ``ExternalWorkflowExecutionCancelRequested`` – Request to cancel an external workflow
        execution was successfully delivered to the target execution.

        * ``ExternalWorkflowExecutionSignaled`` – A signal, requested by this workflow execution,
        was successfully delivered to the target external workflow execution.

        * ``FailWorkflowExecutionFailed`` – A request to mark a workflow execution as failed, itself
        failed.

        * ``MarkerRecorded`` – A marker was recorded in the workflow history as the result of a
        ``RecordMarker`` decision.

        * ``RecordMarkerFailed`` – A ``RecordMarker`` decision was returned as failed.

        * ``RequestCancelActivityTaskFailed`` – Failed to process RequestCancelActivityTask
        decision. This happens when the decision isn't configured properly.

        * ``RequestCancelExternalWorkflowExecutionFailed`` – Request to cancel an external workflow
        execution failed.

        * ``RequestCancelExternalWorkflowExecutionInitiated`` – A request was made to request the
        cancellation of an external workflow execution.

        * ``ScheduleActivityTaskFailed`` – Failed to process ScheduleActivityTask decision. This
        happens when the decision isn't configured properly, for example the activity type specified
        isn't registered.

        * ``SignalExternalWorkflowExecutionFailed`` – The request to signal an external workflow
        execution failed.

        * ``SignalExternalWorkflowExecutionInitiated`` – A request to signal an external workflow
        was made.

        * ``StartActivityTaskFailed`` – A scheduled activity task failed to start.

        * ``StartChildWorkflowExecutionFailed`` – Failed to process StartChildWorkflowExecution
        decision. This happens when the decision isn't configured properly, for example the workflow
        type specified isn't registered.

        * ``StartChildWorkflowExecutionInitiated`` – A request was made to start a child workflow
        execution.

        * ``StartTimerFailed`` – Failed to process StartTimer decision. This happens when the
        decision isn't configured properly, for example a timer already exists with the specified
        timer Id.

        * ``TimerCanceled`` – A timer, previously started for this workflow execution, was
        successfully canceled.

        * ``TimerFired`` – A timer, previously started for this workflow execution, fired.

        * ``TimerStarted`` – A timer was started for the workflow execution due to a ``StartTimer``
        decision.

        * ``WorkflowExecutionCancelRequested`` – A request to cancel this workflow execution was
        made.

        * ``WorkflowExecutionCanceled`` – The workflow execution was successfully canceled and
        closed.

        * ``WorkflowExecutionCompleted`` – The workflow execution was closed due to successful
        completion.

        * ``WorkflowExecutionContinuedAsNew`` – The workflow execution was closed and a new
        execution of the same type was created with the same workflowId.

        * ``WorkflowExecutionFailed`` – The workflow execution closed due to a failure.

        * ``WorkflowExecutionSignaled`` – An external signal was received for the workflow
        execution.

        * ``WorkflowExecutionStarted`` – The workflow execution was started.

        * ``WorkflowExecutionTerminated`` – The workflow execution was terminated.

        * ``WorkflowExecutionTimedOut`` – The workflow execution was closed because a time out was
        exceeded.

        - **eventTimestamp** *(datetime) --*

          The date and time when the event occurred.

        - **eventType** *(string) --*

          The type of the history event.

        - **eventId** *(integer) --*

          The system generated ID of the event. This ID uniquely identifies the event with in the
          workflow execution history.

        - **workflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for this workflow type.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this workflow execution is
            terminated, by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskList** *(dict) --*

            The name of the task list for scheduling the decision tasks for this workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the decision tasks in the workflow execution.

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **tagList** *(list) --*

            The list of tags associated with this workflow execution. An execution can have up to 5
            tags.

            - *(string) --*

          - **continuedExecutionRunId** *(string) --*

            If this workflow execution was started due to a ``ContinueAsNewWorkflowExecution``
            decision, then it contains the ``runId`` of the previous workflow execution that was
            closed and continued as this execution.

          - **parentWorkflowExecution** *(dict) --*

            The source workflow execution that started this workflow execution. The member isn't set
            if the workflow execution was not started by a workflow.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **parentInitiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this workflow execution. The source
            event with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **lambdaRole** *(string) --*

            The IAM role attached to the workflow execution.

        - **workflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The result produced by the workflow execution upon successful completion.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **completeWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CompleteWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CompleteWorkflowExecution`` decision to complete this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The descriptive reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **failWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``FailWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``FailWorkflowExecution`` decision to fail this execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that caused this event.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

        - **workflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            The details of the cancellation.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **cancelWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelWorkflowExecution`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **workflowExecutionContinuedAsNewEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionContinuedAsNew`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **input** *(string) --*

            The input provided to the new workflow execution.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **newExecutionRunId** *(string) --*

            The ``runId`` of the new workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The total duration allowed for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The task list to use for the decisions of the new (continued) workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority of the task to use for the decisions of the new (continued) workflow
            execution.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration of decision tasks for the new workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions of the new execution if it is
            terminated by calling the  TerminateWorkflowExecution action explicitly or due to an
            expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **tagList** *(list) --*

            The list of tags associated with the new workflow execution.

            - *(string) --*

          - **workflowType** *(dict) --*

            The workflow type of this execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **lambdaRole** *(string) --*

            The IAM role to attach to the new (continued) workflow execution.

        - **continueAsNewWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ContinueAsNewWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``ContinueAsNewWorkflowExecution`` decision that started this execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **workflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the termination.

          - **details** *(string) --*

            The details provided for the termination.

          - **childPolicy** *(string) --*

            The policy used for the child workflow executions of this workflow execution.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **cause** *(string) --*

            If set, indicates that the workflow execution was automatically terminated, and
            specifies the cause. This happens if the parent workflow execution times out or is
            terminated and the child policy is set to terminate child executions.

        - **workflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionCancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **externalWorkflowExecution** *(dict) --*

            The external workflow execution for which the cancellation was requested.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this workflow
            execution.The source event with this ID can be found in the history of the source
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **cause** *(string) --*

            If set, indicates that the request to cancel the workflow execution was automatically
            generated, and specifies the cause. This happens if the parent workflow execution times
            out or is terminated, and the child policy is set to cancel child executions.

        - **decisionTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **taskList** *(dict) --*

            The name of the task list in which the decision task was scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            A task priority that, if set, specifies the priority for this decision task. Valid
            values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **startToCloseTimeout** *(string) --*

            The maximum duration for this decision task. The task is considered timed out if it
            doesn't completed within this duration.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

        - **decisionTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the decider making the request. This enables diagnostic tracing when
            problems arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **decisionTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **executionContext** *(string) --*

            User defined context for the workflow execution.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **decisionTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of timeout that expired before the decision task could be completed.

          - **scheduledEventId** *(integer) --*

            The ID of the ``DecisionTaskScheduled`` event that was recorded when this decision task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``DecisionTaskStarted`` event recorded when this decision task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskScheduledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskScheduled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The type of the activity task.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The unique ID of the activity task.

          - **input** *(string) --*

            The input provided to the activity task.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.
            This data isn't sent to the activity.

          - **scheduleToStartTimeout** *(string) --*

            The maximum amount of time the activity task can wait to be assigned to a worker.

          - **scheduleToCloseTimeout** *(string) --*

            The maximum amount of time for this activity task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker may take to process the activity task.

          - **taskList** *(dict) --*

            The task list in which the activity task has been scheduled.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority to assign to the scheduled activity task. If set, this overrides any
            default priority value that was assigned when the activity type was registered.

            Valid values are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

          - **heartbeatTimeout** *(string) --*

            The maximum time before which the worker processing this task must report progress by
            calling  RecordActivityTaskHeartbeat . If the timeout is exceeded, the activity task is
            automatically timed out. If the worker subsequently attempts to record a heartbeat or
            return a result, it is ignored.

        - **activityTaskStartedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskStarted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **identity** *(string) --*

            Identity of the worker that was assigned this task. This aids diagnostics when problems
            arise. The form of this identity is user defined.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

        - **activityTaskCompletedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCompleted`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **result** *(string) --*

            The results of the activity task.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **activityTaskTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskTimedOut`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **details** *(string) --*

            Contains the content of the ``details`` parameter for the last call made by the activity
            to ``RecordActivityTaskHeartbeat`` .

        - **activityTaskCanceledEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskCanceled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **details** *(string) --*

            Details of the cancellation.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event recorded when this activity task was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **latestCancelRequestedEventId** *(integer) --*

            If set, contains the ID of the last ``ActivityTaskCancelRequested`` event recorded for
            this activity task. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **activityTaskCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ActivityTaskcancelRequested`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

          - **activityId** *(string) --*

            The unique ID of the task.

        - **workflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``WorkflowExecutionSignaled`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **signalName** *(string) --*

            The name of the signal received. The decider can use the signal name and inputs to
            determine how to the process the signal.

          - **input** *(string) --*

            The inputs provided with the signal. The decider can use the signal name and inputs to
            determine how to process the signal.

          - **externalWorkflowExecution** *(dict) --*

            The workflow execution that sent the signal. This is set only of the signal was sent by
            another workflow execution.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **externalInitiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflow`` decision to signal this workflow execution.The source event
            with this ID can be found in the history of the source workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event. This field is set only if the signal was initiated by another
            workflow execution.

        - **markerRecordedEventAttributes** *(dict) --*

          If the event is of type ``MarkerRecorded`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The name of the marker.

          - **details** *(string) --*

            The details of the marker.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarker`` decision that requested this marker. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **recordMarkerFailedEventAttributes** *(dict) --*

          If the event is of type ``DecisionTaskFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **markerName** *(string) --*

            The marker's name.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RecordMarkerFailed`` decision for this cancellation request. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerStartedEventAttributes** *(dict) --*

          If the event is of type ``TimerStarted`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was started.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

          - **startToFireTimeout** *(string) --*

            The duration of time after which the timer fires.

            The duration is specified in seconds, an integer greater than or equal to ``0`` .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **timerFiredEventAttributes** *(dict) --*

          If the event is of type ``TimerFired`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that fired.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **timerCanceledEventAttributes** *(dict) --*

          If the event is of type ``TimerCanceled`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The unique ID of the timer that was canceled.

          - **startedEventId** *(integer) --*

            The ID of the ``TimerStarted`` event that was recorded when this timer was started. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionInitiated`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.
            This data isn't sent to the activity.

          - **input** *(string) --*

            The inputs provided to the child workflow execution.

          - **executionStartToCloseTimeout** *(string) --*

            The maximum duration for the child workflow execution. If the workflow execution isn't
            closed within this duration, it is timed out and force-terminated.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **taskList** *(dict) --*

            The name of the task list used for the decision tasks of the child workflow execution.

            - **name** *(string) --*

              The name of the task list.

          - **taskPriority** *(string) --*

            The priority assigned for the decision tasks for this workflow execution. Valid values
            are integers that range from Java's ``Integer.MIN_VALUE`` (-2147483648) to
            ``Integer.MAX_VALUE`` (2147483647). Higher numbers indicate higher priority.

            For more information about setting task priority, see `Setting Task Priority
            <https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html>`__
            in the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the cause of events.

          - **childPolicy** *(string) --*

            The policy to use for the child workflow executions if this execution gets terminated by
            explicitly calling the  TerminateWorkflowExecution action or due to an expired timeout.

            The supported child policies are:

            * ``TERMINATE`` – The child executions are terminated.

            * ``REQUEST_CANCEL`` – A request to cancel is attempted for each child execution by
            recording a ``WorkflowExecutionCancelRequested`` event in its history. It is up to the
            decider to take appropriate actions when it receives an execution history with this
            event.

            * ``ABANDON`` – No action is taken. The child executions continue to run.

          - **taskStartToCloseTimeout** *(string) --*

            The maximum duration allowed for the decision tasks for this workflow execution.

            The duration is specified in seconds, an integer greater than or equal to ``0`` . You
            can use ``NONE`` to specify unlimited duration.

          - **tagList** *(list) --*

            The list of tags to associated with the child workflow execution.

            - *(string) --*

          - **lambdaRole** *(string) --*

            The IAM role to attach to the child workflow execution.

        - **childWorkflowExecutionStartedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionStarted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was started.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

        - **childWorkflowExecutionCompletedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCompleted`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was completed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **result** *(string) --*

            The result of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that failed.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **reason** *(string) --*

            The reason for the failure (if provided).

          - **details** *(string) --*

            The details of the failure (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTimedOutEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTimedOut`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that timed out.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **timeoutType** *(string) --*

            The type of the timeout that caused the child workflow execution to time out.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionCanceledEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionCanceled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was canceled.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **details** *(string) --*

            Details of the cancellation (if provided).

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **childWorkflowExecutionTerminatedEventAttributes** *(dict) --*

          If the event is of type ``ChildWorkflowExecutionTerminated`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The child workflow execution that was terminated.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **workflowType** *(dict) --*

            The type of the child workflow execution.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **initiatedEventId** *(integer) --*

            The ID of the ``StartChildWorkflowExecutionInitiated`` event corresponding to the
            ``StartChildWorkflowExecution``   Decision to start this child workflow execution. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ChildWorkflowExecutionStarted`` event recorded when this child workflow
            execution was started. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

        - **signalExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionInitiated`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to send the signal to.

          - **signalName** *(string) --*

            The name of the signal.

          - **input** *(string) --*

            The input provided to the signal.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent decision tasks.

        - **externalWorkflowExecutionSignaledEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionSignaled`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution that the signal was delivered to.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

        - **signalExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``SignalExternalWorkflowExecutionFailed`` then this member is set
          and provides detailed information about the event. It isn't set for other event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution that the signal was being
            delivered to.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution that the signal was being delivered to.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``SignalExternalWorkflowExecutionInitiated`` event corresponding to the
            ``SignalExternalWorkflowExecution`` decision to request this signal. This information
            can be useful for diagnosing problems by tracing back the chain of events leading up to
            this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``SignalExternalWorkflowExecution`` decision for this signal. This
            information can be useful for diagnosing problems by tracing back the chain of events
            leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **externalWorkflowExecutionCancelRequestedEventAttributes** *(dict) --*

          If the event is of type ``ExternalWorkflowExecutionCancelRequested`` then this member is
          set and provides detailed information about the event. It isn't set for other event types.

          - **workflowExecution** *(dict) --*

            The external workflow execution to which the cancellation request was delivered.

            - **workflowId** *(string) --*

              The user defined identifier associated with the workflow execution.

            - **runId** *(string) --*

              A system-generated unique identifier for the workflow execution.

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

        - **requestCancelExternalWorkflowExecutionInitiatedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionInitiated`` then this
          member is set and provides detailed information about the event. It isn't set for other
          event types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow execution to be canceled.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution to be canceled.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            Data attached to the event that can be used by the decider in subsequent workflow tasks.

        - **requestCancelExternalWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelExternalWorkflowExecutionFailed`` then this member
          is set and provides detailed information about the event. It isn't set for other event
          types.

          - **workflowId** *(string) --*

            The ``workflowId`` of the external workflow to which the cancel request was to be
            delivered.

          - **runId** *(string) --*

            The ``runId`` of the external workflow execution.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **initiatedEventId** *(integer) --*

            The ID of the ``RequestCancelExternalWorkflowExecutionInitiated`` event corresponding to
            the ``RequestCancelExternalWorkflowExecution`` decision to cancel this external workflow
            execution. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelExternalWorkflowExecution`` decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.

        - **scheduleActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``ScheduleActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityType** *(dict) --*

            The activity type provided in the ``ScheduleActivityTask`` decision that failed.

            - **name** *(string) --*

              The name of this activity.

              .. note::

                The combination of activity type name and version must be unique within a domain.

            - **version** *(string) --*

              The version of this activity.

              .. note::

                The combination of activity type name and version must be unique with in a domain.

          - **activityId** *(string) --*

            The activityId provided in the ``ScheduleActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision that
            resulted in the scheduling of this activity task. This information can be useful for
            diagnosing problems by tracing back the chain of events leading up to this event.

        - **requestCancelActivityTaskFailedEventAttributes** *(dict) --*

          If the event is of type ``RequestCancelActivityTaskFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **activityId** *(string) --*

            The activityId provided in the ``RequestCancelActivityTask`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``RequestCancelActivityTask`` decision for this cancellation request.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.

        - **startTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``StartTimerFailed`` then this member is set and provides detailed
          information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``StartTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartTimer`` decision for this activity task. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **cancelTimerFailedEventAttributes** *(dict) --*

          If the event is of type ``CancelTimerFailed`` then this member is set and provides
          detailed information about the event. It isn't set for other event types.

          - **timerId** *(string) --*

            The timerId provided in the ``CancelTimer`` decision that failed.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``CancelTimer`` decision to cancel this timer. This information can be
            useful for diagnosing problems by tracing back the chain of events leading up to this
            event.

        - **startChildWorkflowExecutionFailedEventAttributes** *(dict) --*

          If the event is of type ``StartChildWorkflowExecutionFailed`` then this member is set and
          provides detailed information about the event. It isn't set for other event types.

          - **workflowType** *(dict) --*

            The workflow type provided in the ``StartChildWorkflowExecution``   Decision that
            failed.

            - **name** *(string) --*

              The name of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

            - **version** *(string) --*

              The version of the workflow type.

              .. note::

                The combination of workflow type name and version must be unique with in a domain.

          - **cause** *(string) --*

            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.

            .. note::

              When ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision fails because it
              lacks sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **workflowId** *(string) --*

            The ``workflowId`` of the child workflow execution.

          - **initiatedEventId** *(integer) --*

            When the ``cause`` is ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is the ID of
            the ``StartChildWorkflowExecutionInitiated`` event that corresponds to the
            ``StartChildWorkflowExecution``   Decision to start the workflow execution. You can use
            this information to diagnose problems by tracing back the chain of events leading up to
            this event.

            When the ``cause`` isn't ``WORKFLOW_ALREADY_RUNNING`` , ``initiatedEventId`` is set to
            ``0`` because the ``StartChildWorkflowExecutionInitiated`` event doesn't exist.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``DecisionTaskCompleted`` event corresponding to the decision task that
            resulted in the ``StartChildWorkflowExecution``   Decision to request this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events.

          - **control** *(string) --*

            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the child workflow execution.

        - **lambdaFunctionScheduledEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionScheduled`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The unique ID of the Lambda task.

          - **name** *(string) --*

            The name of the Lambda function.

          - **control** *(string) --*

            Data attached to the event that the decider can use in subsequent workflow tasks. This
            data isn't sent to the Lambda task.

          - **input** *(string) --*

            The input provided to the Lambda task.

          - **startToCloseTimeout** *(string) --*

            The maximum amount of time a worker can take to process the Lambda task.

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this activity task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **lambdaFunctionStartedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionStarted`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

        - **lambdaFunctionCompletedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionCompleted`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this Lambda task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **result** *(string) --*

            The results of the Lambda task.

        - **lambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionFailed`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``LambdaFunctionStarted`` event recorded when this activity task started.
            To help diagnose issues, use this information to trace back the chain of events leading
            up to this event.

          - **reason** *(string) --*

            The reason provided for the failure.

          - **details** *(string) --*

            The details of the failure.

        - **lambdaFunctionTimedOutEventAttributes** *(dict) --*

          Provides the details of the ``LambdaFunctionTimedOut`` event. It isn't set for other event
          types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``LambdaFunctionScheduled`` event that was recorded when this activity
            task was scheduled. To help diagnose issues, use this information to trace back the
            chain of events leading up to this event.

          - **startedEventId** *(integer) --*

            The ID of the ``ActivityTaskStarted`` event that was recorded when this activity task
            started. To help diagnose issues, use this information to trace back the chain of events
            leading up to this event.

          - **timeoutType** *(string) --*

            The type of the timeout that caused this event.

        - **scheduleLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``ScheduleLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **id** *(string) --*

            The ID provided in the ``ScheduleLambdaFunction`` decision that failed.

          - **name** *(string) --*

            The name of the Lambda function.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because it
              lacked sufficient permissions. For details and example IAM policies, see `Using IAM to
              Manage Access to Amazon SWF Workflows
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **decisionTaskCompletedEventId** *(integer) --*

            The ID of the ``LambdaFunctionCompleted`` event corresponding to the decision that
            resulted in scheduling this Lambda task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.

        - **startLambdaFunctionFailedEventAttributes** *(dict) --*

          Provides the details of the ``StartLambdaFunctionFailed`` event. It isn't set for other
          event types.

          - **scheduledEventId** *(integer) --*

            The ID of the ``ActivityTaskScheduled`` event that was recorded when this activity task
            was scheduled. To help diagnose issues, use this information to trace back the chain of
            events leading up to this event.

          - **cause** *(string) --*

            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.

            .. note::

              If ``cause`` is set to ``OPERATION_NOT_PERMITTED`` , the decision failed because the
              IAM role attached to the execution lacked sufficient permissions. For details and
              example IAM policies, see `Lambda Tasks
              <https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html>`__ in
              the *Amazon SWF Developer Guide* .

          - **message** *(string) --*

            A description that can help diagnose the cause of the fault.

    - **previousStartedEventId** *(integer) --*

      The ID of the DecisionTaskStarted event of the previous decision task of this workflow
      execution that was processed by the decider. This can be used to determine the events in the
      history new since the last decision task received by the decider.

    - **NextToken** *(string) --*

      A token to resume pagination.
    """


_PollForDecisionTaskPaginatetaskListTypeDef = TypedDict(
    "_PollForDecisionTaskPaginatetaskListTypeDef", {"name": str}
)


class PollForDecisionTaskPaginatetaskListTypeDef(_PollForDecisionTaskPaginatetaskListTypeDef):
    """
    Type definition for `PollForDecisionTaskPaginate` `taskList`

    Specifies the task list to poll for decision tasks.

    The specified string must not start or end with whitespace. It must not contain a ``:`` (colon),
    ``/`` (slash), ``|`` (vertical bar), or any control characters (``\\u0000-\\u001f`` |
    ``\\u007f-\\u009f`` ). Also, it must not *be* the literal string ``arn`` .

    - **name** *(string) --* **[REQUIRED]**

      The name of the task list.
    """
