"update"
********


Description
===========

Updates the specified Autonomous Database with a new CPU core count
and size.


Usage
=====

   oci db autonomous-database update [OPTIONS]


Required Parameters
===================

--autonomous-database-id [text]

The database OCID.


Optional Parameters
===================

--admin-password [text]

The password must be between 12 and 30 characters long, and must
contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It
cannot contain the double quote symbol (") or the username "admin",
regardless of casing. It must be different from the last four
passwords and it must not be a password used within the last 24 hours.

--cpu-core-count [integer]

The number of CPU cores to be made available to the database.

--data-storage-size-in-tbs [integer]

The size, in terabytes, of the data volume that will be attached to
the database.

--db-name [text]

New name for this Autonomous Database. It must begin with an
alphabetic character and can contain a maximum of eight alphanumeric
characters. Special characters are not permitted. This is valid only
for dedicated databases.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

The user-friendly name for the Autonomous Database. The name does not
have to be unique.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.

--is-auto-scaling-enabled [boolean]

Indicates if auto scaling is enabled for the Autonomous Database CPU
core count. The default value is false. Note that auto scaling is
available for serverless deployments only.

--is-free-tier [boolean]

Indicates if this is an Always Free resource. The default value is
false. Note that Always Free Autonomous Databases have 1 CPU and 20GB
memory. For Always Free databases, memory and CPU cannot be scaled.

--license-model [text]

The Oracle license model that applies to the Oracle Autonomous
Database. The default for Autonomous Database using the [shared
deployment] is BRING_YOUR_OWN_LICENSE. Note that when provisioning an
Autonomous Database using the dedicated deployment option, this
attribute must be null because the attribute is already set on
Autonomous Exadata Infrastructure level.

Accepted values are:

   BRING_YOUR_OWN_LICENSE, LICENSE_INCLUDED

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, AVAILABLE_NEEDS_ATTENTION, BACKUP_IN_PROGRESS, MAINTENANCE_IN_PROGRESS, PROVISIONING, RESTORE_FAILED, RESTORE_IN_PROGRESS, SCALE_IN_PROGRESS, STARTING, STOPPED, STOPPING, TERMINATED, TERMINATING, UNAVAILABLE, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource to
see if it has reached the lifecycle state defined by "--wait-for-
state". Defaults to 30 seconds.

--whitelisted-ips [complex type]

The client IP access control list (ACL). This feature is available for
serverless deployments only. Only clients connecting from an IP
address included in the ACL may access the Autonomous Database
instance. This is an array of CIDR (Classless Inter-Domain Routing)
notations for a subnet or VCN OCID. To delete all the existing white
listed IPâ€™s, use an array with a single empty string entry. To add the
whitelist VCN specific subnet or IP, use a semicoln ';' as a
deliminator to add the VCN specific subnets or IPs. Example: *["1.1.1
.1","1.1.1.0/24","ocid1.vcn.oc1.sea.aaaaaaaard2hfx2nn3e5xeo6j6o62jga4
4xjizkw","ocid1.vcn.oc1.sea.aaaaaaaard2hfx2nn3e5xeo6j6o62jga44xjizkw;
1.1.1.1","ocid1.vcn.oc1.sea.aaaaaaaard2hfx2nn3e5xeo6j6o62jga44xjizkw"
]* This is a complex type whose value must be valid JSON. The value
can be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth", "--cert-bundle", "--cli-rc-file", "--config-file", "--
debug", "--defaults-file", "--endpoint", "--generate-full-command-
json-input", "--generate-param-json-input", "--help", "--no-retry", "
--opc-client-request-id", "--opc-request-id", "--output", "--profile",
"--query", "--raw-output", "--region", "--request-id", "--version",
"-?", "-d", "-h", "-v"
