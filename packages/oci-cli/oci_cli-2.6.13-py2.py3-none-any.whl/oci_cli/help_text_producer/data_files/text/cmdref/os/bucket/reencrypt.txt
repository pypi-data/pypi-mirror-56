"reencrypt"
***********


Description
===========

Reencrypts the data encryption key of the bucket and objects in the
bucket. This is an asynchronous call, the system will start a work
request task to reencrypt the data encryption key of the objects and
chunks in the bucket. Only the objects created before the time the API
call will be reencrypted. The call can take long time depending on how
many objects in the bucket and how big the objects are. This API will
return a work request id, so the user can use this id to retrieve the
status of the work request task.

A user can update kmsKeyId of the bucket, and then call this API, so
the data encryption key of the bucket and objects in the bucket will
be reencryped by the new kmsKeyId. Note that the system doesn't
maintain what ksmKeyId is used to encrypt the object, the user has to
maintain the mapping if they want.


Usage
=====

   oci os bucket reencrypt [OPTIONS]


Required Parameters
===================

--bucket-name, -bn [text]

The name of the bucket. Avoid entering confidential information.
Example: *my-new-bucket1*


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--namespace-name, --namespace, -ns [text]

The Object Storage namespace used for the request. If not provided,
this parameter will be obtained internally using a call to 'oci os ns
get'

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, COMPLETED, FAILED, IN_PROGRESS

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
to see if it has reached the state defined by "--wait-for-state".
Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth", "--cert-bundle", "--cli-rc-file", "--config-file", "--
debug", "--defaults-file", "--endpoint", "--generate-full-command-
json-input", "--generate-param-json-input", "--help", "--no-retry", "
--opc-client-request-id", "--opc-request-id", "--output", "--profile",
"--query", "--raw-output", "--region", "--request-id", "--version",
"-?", "-d", "-h", "-v"
