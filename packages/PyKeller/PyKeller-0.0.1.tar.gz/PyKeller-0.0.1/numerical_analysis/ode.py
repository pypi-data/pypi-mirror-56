#Created: Sun Jun 23 18:22:05 2019
#By: mach

def runge_kutta_6(dydx, y0, x0, h):
    
    k1 = h*dydx(x0, y0)
    k2 = h*dydx(x0 + h, y0 + k1)
    k3 = h*dydx(x0 + h/2, y0 + (3*k1 + k2)/8)
    k4 = h*dydx(x0 + 2*h/3, y0 + (8*k1 + 2*k2 + 8*k3)/27)
    k5 = h*dydx(x0 + (7 - 21**.5)*h/14, y0 + (3*(3*21**.5 - 7)*k1 - 8*(7 - 21**.5)*k2 + 48*(7 - 21**.5)*k3 - 3*(21 - 21**.5)*k4)/392)
    k6 = h*dydx(x0 + (7 + 21**.5)*h/14, y0 + (-5*(231 + 51*21**.5)*k1 - 40*(7 + 21**.5)*k2 - 320*21**.5*k3 + 3*(21 + 121*21**.5)*k4 + 392*(6 + 21**.5)*k5)/1960)
    k7 = h*dydx(x0 + h, y0 + (15*(22 + 7*21**.5)*k1 + 120*k2 + 40*(7*21**.5 - 5)*k3 - 63*(3*21**.5 - 2)*k4 - 14*(49 + 9*21**.5)*k5 + 70*(7 - 21**.5)*k6)/180)
    
    return y0 + (9*k1 + 64*k3 + 49*k5 + 49*k6 + 9*k7)/180

def runge_kutta_4(dydx, y0, x0, h):
    
    k1 = h*dydx(x0, y0)
    k2 = h*dydx(x0 + h/2, y0 + k1/2)
    k3 = h*dydx(x0 + h/2, y0 + k2/2)
    k4 = h*dydx(x0 + h, y0 + k3)
    
    return y0 + (k1 + 2*k2 + 2*k3 + k4)/6