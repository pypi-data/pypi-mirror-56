{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack:///./node_modules/normalize-scroll-left/esm/main.js","webpack:///./node_modules/@material-ui/core/esm/internal/animate.js","webpack:///./node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js","webpack:///./node_modules/@material-ui/core/esm/Tabs/TabIndicator.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","webpack:///./node_modules/@material-ui/core/esm/Tabs/TabScrollButton.js","webpack:///./node_modules/@material-ui/core/esm/Tabs/Tabs.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_helpers__WEBPACK_IMPORTED_MODULE_6__","ListSubheader","a","forwardRef","props","ref","classes","className","_props$color","color","_props$component","component","Component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","other","Object","createElement","root","concat","sticky","gutters","__webpack_exports__","theme","boxSizing","lineHeight","listStyle","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","colorPrimary","primary","main","colorInherit","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","name","cachedType","inDOM","window","document","detectScrollType","body","dummy","appendChild","createTextNode","dir","style","width","height","overflow","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","type","Number","NaN","scrollWidth","clientWidth","easeInOutSin","time","Math","sin","PI","internal_animate","prop","to","options","arguments","length","undefined","cb","_options$ease","ease","_options$duration","duration","start","from","cancelled","cancel","Error","requestAnimationFrame","step","timestamp","min","ScrollbarSize_styles","ScrollbarSize","onChange","objectWithoutProperties","scrollbarHeight","react_default","useRef","nodeRef","setMeasurements","current","offsetHeight","clientHeight","useEffect","handleResize","debounce","prevHeight","addEventListener","clear","removeEventListener","esm_extends","TabIndicator_TabIndicator","orientation","clsx_m","helpers","vertical","Tabs_TabIndicator","withStyles","bottom","transition","transitions","create","colorSecondary","right","KeyboardArrowLeft","createSvgIcon","d","KeyboardArrowRight","_ref","_ref2","TabScrollButton_TabScrollButton","classNameProp","visible","ButtonBase","role","tabIndex","Tabs_TabScrollButton","flexShrink","& svg","transform","Tabs_Tabs","action","_props$centered","centered","childrenProp","children","_props$indicatorColor","indicatorColor","_props$orientation","_props$ScrollButtonCo","ScrollButtonComponent","_props$scrollButtons","scrollButtons","_props$TabIndicatorPr","TabIndicatorProps","_props$textColor","textColor","value","_props$variant","variant","scrollable","isRtl","scrollStart","end","clientSize","size","_React$useState","useState","_React$useState2","slicedToArray","mounted","setMounted","_React$useState3","_React$useState4","indicatorStyle","setIndicatorStyle","_React$useState5","_React$useState6","displayScroll","setDisplayScroll","_React$useState7","marginBottom","_React$useState8","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","childrenWrapperRef","getTabsMeta","tabsMeta","tabMeta","tabsNode","rect","getBoundingClientRect","scrollTop","scrollLeftNormalized","left","_children","tab","get","updateIndicatorState","useEventCallback","_newIndicatorStyle","_getTabsMeta","startValue","round","correction","newIndicatorStyle","defineProperty","isNaN","scroll","scrollValue","moveTabsScroll","delta","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","scrollSelectedIntoView","_getTabsMeta2","nextScrollStart","_nextScrollStart","updateScrollButtonState","showStartScroll","showEndScroll","_tabsRef$current","scrollHeight","win","ownerWindow","handleTabsScroll","useImperativeHandle","updateIndicator","indicator","childIndex","Children","map","child","isValidElement","childValue","set","selected","cloneElement","fullWidth","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","scrollButtonsDesktop","scrollButtonEnd","getConditionalElements","scroller","fixed","onScroll","flexContainer","flexContainerVertical","minHeight","WebkitOverflowScrolling","display","flexDirection","justifyContent","flex","whiteSpace","overflowX","scrollbarWidth","&::-webkit-scrollbar","breakpoints","down","withTheme"],"mappings":"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","file":"3.67b051e399310d9cf092.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\r\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\nvar cachedType;\r\nexport function _setScrollType(type) {\r\n    cachedType = type;\r\n}\r\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\nexport function detectScrollType() {\r\n    if (cachedType) {\r\n        return cachedType;\r\n    }\r\n    if (!inDOM || !window.document.body) {\r\n        return 'indeterminate';\r\n    }\r\n    var dummy = window.document.createElement('div');\r\n    dummy.appendChild(document.createTextNode('ABCD'));\r\n    dummy.dir = 'rtl';\r\n    dummy.style.fontSize = '14px';\r\n    dummy.style.width = '4px';\r\n    dummy.style.height = '1px';\r\n    dummy.style.position = 'absolute';\r\n    dummy.style.top = '-1000px';\r\n    dummy.style.overflow = 'scroll';\r\n    document.body.appendChild(dummy);\r\n    cachedType = 'reverse';\r\n    if (dummy.scrollLeft > 0) {\r\n        cachedType = 'default';\r\n    }\r\n    else {\r\n        dummy.scrollLeft = 1;\r\n        if (dummy.scrollLeft === 0) {\r\n            cachedType = 'negative';\r\n        }\r\n    }\r\n    document.body.removeChild(dummy);\r\n    return cachedType;\r\n}\r\n// Based on https://stackoverflow.com/a/24394376\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n    var scrollLeft = element.scrollLeft;\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        return scrollLeft;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return Number.NaN;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            return element.scrollWidth - element.clientWidth + scrollLeft;\r\n        case 'reverse':\r\n            return element.scrollWidth - element.clientWidth - scrollLeft;\r\n    }\r\n    return scrollLeft;\r\n}\r\nexport function setNormalizedScrollLeft(element, scrollLeft, direction) {\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        element.scrollLeft = scrollLeft;\r\n        return;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\r\n            break;\r\n        case 'reverse':\r\n            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\r\n            break;\r\n        default:\r\n            element.scrollLeft = scrollLeft;\r\n            break;\r\n    }\r\n}\r\n","function easeInOutSin(time) {\n  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;\n}\n\nfunction animate(prop, element, to) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var cb = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {};\n  var _options$ease = options.ease,\n      ease = _options$ease === void 0 ? easeInOutSin : _options$ease,\n      _options$duration = options.duration,\n      duration = _options$duration === void 0 ? 300 : _options$duration;\n  var start = null;\n  var from = element[prop];\n  var cancelled = false;\n\n  var cancel = function cancel() {\n    cancelled = true;\n  };\n\n  var step = function step(timestamp) {\n    if (cancelled) {\n      cb(new Error('Animation cancelled'));\n      return;\n    }\n\n    if (start === null) {\n      start = timestamp;\n    }\n\n    var time = Math.min(1, (timestamp - start) / duration);\n    element[prop] = ease(time) * (to - from) + from;\n\n    if (time >= 1) {\n      requestAnimationFrame(function () {\n        cb(null);\n      });\n      return;\n    }\n\n    requestAnimationFrame(step);\n  };\n\n  if (from === to) {\n    cb(new Error('Element already at target position'));\n    return cancel;\n  }\n\n  requestAnimationFrame(step);\n  return cancel;\n}\n\nexport default animate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nvar styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n/**\n * @ignore - internal component.\n * The component is originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nexport default function ScrollbarSize(props) {\n  var onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"onChange\"]);\n\n  var scrollbarHeight = React.useRef();\n  var nodeRef = React.useRef(null);\n\n  var setMeasurements = function setMeasurements() {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      var prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(function () {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return React.createElement(\"div\", _extends({\n    style: styles,\n    ref: nodeRef\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'absolute',\n      height: 2,\n      bottom: 0,\n      width: '100%',\n      transition: theme.transitions.create()\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n    vertical: {\n      height: '100%',\n      width: 2,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar TabIndicator = React.forwardRef(function TabIndicator(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      color = props.color,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"orientation\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      vertical: classes.vertical\n    }[orientation]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      direction = props.direction,\n      orientation = props.orientation,\n      visible = props.visible,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  var className = clsx(classes.root, classNameProp, {\n    vertical: classes.vertical\n  }[orientation]);\n\n  if (!visible) {\n    return React.createElement(\"div\", {\n      className: className\n    });\n  }\n\n  return React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * Should the button be present or just consume space.\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\n/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n    flexContainerVertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll',\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\nvar Tabs = React.forwardRef(function Tabs(props, ref) {\n  var action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      theme = props.theme,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n  process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indicatorStyle = _React$useState4[0],\n      setIndicatorStyle = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    start: false,\n    end: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      displayScroll = _React$useState6[0],\n      setDisplayScroll = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      scrollerStyle = _React$useState8[0],\n      setScrollerStyle = _React$useState8[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var childrenWrapperRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = childrenWrapperRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _newIndicatorStyle;\n\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = Math.round(tabMeta.top - tabsMeta.top + tabsMeta.scrollTop);\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = Math.round(tabMeta.left - tabsMeta.left + correction);\n      }\n    }\n\n    var newIndicatorStyle = (_newIndicatorStyle = {}, _defineProperty(_newIndicatorStyle, start, startValue), _defineProperty(_newIndicatorStyle, size, tabMeta ? Math.round(tabMeta[size]) : 0), _newIndicatorStyle);\n\n    if ((newIndicatorStyle[start] !== indicatorStyle[start] || newIndicatorStyle[size] !== indicatorStyle[size]) && !isNaN(newIndicatorStyle[start]) && !isNaN(newIndicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var handleStartScrollClick = function handleStartScrollClick() {\n    moveTabsScroll(-tabsRef.current[clientSize]);\n  };\n\n  var handleEndScrollClick = function handleEndScrollClick() {\n    moveTabsScroll(tabsRef.current[clientSize]);\n  };\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarHeight) {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonStart = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      visible: displayScroll.start,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      visible: displayScroll.end,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== 'off') {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useCallback(debounce(function () {\n    updateScrollButtonState();\n  }));\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState\n    };\n  }, [updateIndicatorState]);\n  var indicator = React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, {}, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    });\n  });\n  var conditionalElements = getConditionalElements();\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, React.createElement(\"div\", {\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    ref: childrenWrapperRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Props applied to the tab indicator element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(Tabs);"],"sourceRoot":""}