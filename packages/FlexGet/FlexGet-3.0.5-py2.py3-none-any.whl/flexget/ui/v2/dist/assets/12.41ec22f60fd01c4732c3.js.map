{"version":3,"sources":["webpack:///./src/common/TextField/index.jsx","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/core/auth/LoginCard/styles.js","webpack:///./src/core/auth/LoginCard/LoginCard.jsx","webpack:///./src/core/auth/LoginCard/index.js","webpack:///./src/common/WaveSpinner/styles.js","webpack:///./src/common/WaveSpinner/index.jsx","webpack:///./src/core/auth/Splash/styles.js","webpack:///./src/core/auth/Splash/index.jsx","webpack:///./src/core/auth/Login/styles.js","webpack:///./src/core/auth/Login/Login.jsx","webpack:///./src/core/auth/Login/index.js","webpack:///./src/core/auth/index.js"],"names":["CustomTextField","_ref","input","_ref$meta","meta","touched","error","custom","_objectWithoutProperties","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_3__","_extends","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","CardContent","a","forwardRef","props","ref","classes","className","_props$component","component","Component","other","createElement","root","__webpack_exports__","padding","&:last-child","paddingBottom","name","Card","styled_base_browser_esm","MUICard","target","theme","breakpoints","up","ErrorMessage","palette","LoginButton","Button","styles","Content","LoginField","Field","LoginCard","handleSubmit","errorStatus","core_browser_esm","styles_Card","onSubmit","message","TextField","id","label","autoFocus","type","CardActions","defaultProps","reduxForm","form","connect","initialValues","username","status","dispatch","_ref2","password","actions","login","request","stretchDelay","keyframes","_templateObject","Spinner","Rect1","primary","Rect2","Rect3","Rect4","Rect5","WaveSpinner","Logo","headerImage","SplashScreen","common_WaveSpinner","LoginPage","redirectToReferrer","location","loading","from","state","pathname","Redirect","to","Splash","styles_Logo","auth_LoginCard","auth","loggedIn","Constants","GET_VERSION","Login"],"mappings":"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","file":"12.41ec22f60fd01c4732c3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nconst CustomTextField = ({ input, meta: { touched, error }, ...custom }) => (<TextField error={touched && error} {...input} {...custom}/>);\nCustomTextField.propTypes = {\n    input: PropTypes.object.isRequired,\n    meta: PropTypes.object.isRequired,\n};\nexport default CustomTextField;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import styled from '@emotion/styled';\nimport { Field } from 'redux-form';\nimport theme from 'theme';\nimport { Card as MUICard, CardContent, Button } from '@material-ui/core';\nexport const Card = styled(MUICard) `\n  max-width: 40rem;\n  margin: 0 1rem;\n  ${theme.breakpoints.up('sm')} {\n    margin: 0 auto;\n  }\n`;\nexport const ErrorMessage = styled.div `\n  color: ${theme.palette.error[500]};\n  text-align: center;\n  padding: 1rem;\n`;\nexport const LoginButton = styled(Button) `\n  width: 100%;\n`;\nexport const Content = styled(CardContent) `\n  display: flex;\n  flex-direction: column;\n`;\nexport const LoginField = styled(Field) `\n  padding-bottom: 1rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxForm } from 'redux-form';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from 'common/TextField';\nimport { Card, ErrorMessage, LoginButton, Content, LoginField } from './styles';\nexport const LoginCard = ({ handleSubmit, errorStatus }) => (<Card>\n    <form onSubmit={handleSubmit}>\n      <Content>\n        <ErrorMessage>{errorStatus.message}</ErrorMessage>\n        <LoginField name=\"username\" component={TextField} id=\"username\" label=\"Username\" autoFocus/>\n        <LoginField name=\"password\" component={TextField} id=\"password\" label=\"Password\" type=\"Password\"/>\n      </Content>\n      <CardActions>\n        <LoginButton type=\"submit\">Login</LoginButton>\n      </CardActions>\n    </form>\n  </Card>);\nLoginCard.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    errorStatus: PropTypes.object,\n};\nLoginCard.defaultProps = {\n    errorStatus: {},\n};\nexport default reduxForm({\n    form: 'login',\n})(LoginCard);\n","import { connect } from 'react-redux';\nimport actions from 'core/auth/state/actions';\nimport LoginCard from './LoginCard';\nexport function mapStateToProps({ status }) {\n    return {\n        initialValues: {\n            username: 'flexget',\n        },\n        errorStatus: status.error || {},\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onSubmit: ({ username, password }) => dispatch(actions.login.request(username, password)),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginCard);\nexport { LoginCard };\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/core';\nimport theme from 'theme';\nconst stretchDelay = keyframes `\n  0%, 40%, 100% {\n    transform: scaleY(0.4);\n  }\n\n  20% {\n    transform: scaleY(1.0);\n  }\n`;\nexport const Spinner = styled.div `\n  margin: 10rem auto;\n  width: 5rem;\n  height: 4rem;\n  text-align: center;\n  font-size: 1rem;\n`;\nexport const Rect1 = styled.div `\n  background-color: ${theme.palette.primary[500]};\n  height: 100%;\n  width: 0.6rem;\n  display: inline-block;\n  margin: 0.1rem;\n  animation: ${stretchDelay} 1.2s infinite ease-in-out;\n`;\nexport const Rect2 = styled(Rect1) `\n  animation-delay: -1.1s;\n`;\nexport const Rect3 = styled(Rect1) `\n  animation-delay: -1s;\n`;\nexport const Rect4 = styled(Rect1) `\n  animation-delay: -0.9s;\n`;\nexport const Rect5 = styled(Rect1) `\n  animation-delay: -0.8s;\n`;\n","import React from 'react';\nimport { Spinner, Rect1, Rect2, Rect3, Rect4, Rect5 } from './styles';\nconst WaveSpinner = () => (<Spinner>\n    <Rect1 />\n    <Rect2 />\n    <Rect3 />\n    <Rect4 />\n    <Rect5 />\n  </Spinner>);\nexport default WaveSpinner;\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nimport headerImage from 'images/header.png';\nexport const Logo = styled.div `\n  background: transparent url(${headerImage}) no-repeat center;\n  min-height: 9rem;\n  background-size: 100% auto;\n  margin: 0 1rem;\n  ${theme.breakpoints.up('sm')} {\n    background-size: auto;\n  }\n`;\n","import React from 'react';\nimport WaveSpinner from 'common/WaveSpinner';\nimport { Logo } from './styles';\nconst SplashScreen = () => (<div>\n    <Logo />\n    <WaveSpinner />\n  </div>);\nexport default SplashScreen;\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nimport headerImage from 'images/header.png';\nexport const Logo = styled.div `\n  background: transparent url(${headerImage}) no-repeat center;\n  min-height: 9rem;\n  background-size: 100% auto;\n  margin: 0 1rem;\n  ${theme.breakpoints.up('sm')} {\n    background-size: auto;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport LoginCard from '../LoginCard';\nimport SplashScreen from '../Splash';\nimport { Logo } from './styles';\nconst LoginPage = ({ redirectToReferrer, location, loading }) => {\n    const { from } = location.state || { from: { pathname: '/' } };\n    if (redirectToReferrer) {\n        return <Redirect to={from}/>;\n    }\n    if (loading) {\n        return <SplashScreen />;\n    }\n    return (<div>\n      <Logo />\n      <LoginCard />\n    </div>);\n};\nLoginPage.propTypes = {\n    location: PropTypes.object.isRequired,\n    redirectToReferrer: PropTypes.bool.isRequired,\n    loading: PropTypes.bool.isRequired,\n};\nexport default LoginPage;\n","import { connect } from 'react-redux';\nimport { Constants } from 'core/version/state/actions';\nimport Login from './Login';\nexport function mapStateToProps({ auth, status }) {\n    return {\n        redirectToReferrer: !!auth.loggedIn,\n        loading: !!status.loading[Constants.GET_VERSION],\n    };\n}\nexport default connect(mapStateToProps)(Login);\nexport { Login };\n","import Login from './Login';\nexport default Login;\n"],"sourceRoot":""}