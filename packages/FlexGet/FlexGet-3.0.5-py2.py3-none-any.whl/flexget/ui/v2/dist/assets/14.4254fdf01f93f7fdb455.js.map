{"version":3,"sources":["webpack:///./src/plugins/log/Header/styles.js","webpack:///./src/plugins/log/Header/Header.jsx","webpack:///./src/plugins/log/Header/index.js","webpack:///./src/plugins/log/LogTable/styles.js","webpack:///./src/plugins/log/state/shapes.js","webpack:///./src/plugins/log/LogTable/LogTable.jsx","webpack:///./src/plugins/log/LogTable/index.js","webpack:///./src/plugins/log/Log/styles.js","webpack:///./src/plugins/log/Log/index.jsx"],"names":["grey","css","theme","palette","Wrapper","Object","styled_base_browser_esm","target","breakpoints","up","GreyIcon","FontAwesomeIcon","GreyClickableIcon","name","styles","GreyType","Typography","Spacer","TextFieldWrapper","FilterField","TextField","MenuIcon","ENTER_KEY","Header","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","state","open","lines","query","reload","_this$props","props","connected","start","stop","_this$state","clearLogs","handleLines","event","setState","value","handleQuery","handleKeyPress","which","handleRequestClose","anchorEl","undefined","handleMenuClick","currentTarget","Component","_this$props2","_this$state2","core_browser_esm","variant","icon","id","label","onChange","inputProps","onKeyPress","helperText","onClick","Menu","onClose","MenuItem","type","connect","_ref","log","dispatch","payload","actions","request","disconnect","clear","Table","PropTypes","shape","timestamp","string","message","task","logLevel","plugin","RVTable","LogTable","messages","dist_es","_ref2","height","width","rowCount","length","rowHeight","headerHeight","rowGetter","_ref3","index","rowClassName","_ref4","log_level","toLowerCase","dataKey","flexGrow","TableWrapper","LogPage","elevation","log_Header","log_LogTable"],"mappings":"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","file":"14.4254fdf01f93f7fdb455.js","sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport theme from 'theme';\nimport { Typography, TextField } from '@material-ui/core';\nconst grey = css `\n  color: ${theme.palette.grey[600]};\n`;\nexport const Wrapper = styled.div `\n  display: block;\n  ${theme.breakpoints.up('sm')} {\n    display: flex;\n    align-items: baseline;\n  }\n`;\nexport const GreyIcon = styled(FontAwesomeIcon) `\n  ${grey};\n`;\nexport const GreyClickableIcon = styled(GreyIcon) `\n  cursor: pointer;\n`;\nexport const GreyType = styled(Typography) `\n  ${grey};\n`;\nexport const Spacer = styled.div `\n  flex: 1;\n`;\nexport const TextFieldWrapper = styled.div `\n  display: flex;\n  align-items: baseline;\n`;\nexport const FilterField = styled(TextField) `\n  margin-left: 1rem;\n  margin-right: 1rem;\n`;\nexport const MenuIcon = styled(FontAwesomeIcon) `\n  margin-right: 3rem;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { Wrapper, GreyIcon, GreyClickableIcon, GreyType, Spacer, TextFieldWrapper, FilterField, MenuIcon, } from './styles';\nconst ENTER_KEY = 13;\nclass Header extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            open: false,\n            lines: '200',\n            query: '',\n        };\n        this.reload = () => {\n            const { connected, start, stop } = this.props;\n            const { lines, query } = this.state;\n            if (connected) {\n                stop();\n            }\n            start({ lines, query });\n        };\n        this.clearLogs = () => this.props.clearLogs();\n        this.handleLines = event => this.setState({ lines: event.target.value });\n        this.handleQuery = event => this.setState({ query: event.target.value });\n        this.handleKeyPress = event => event.which === ENTER_KEY && this.reload();\n        this.handleRequestClose = () => this.setState({\n            open: false,\n            anchorEl: undefined,\n        });\n        this.handleMenuClick = event => this.setState({\n            open: true,\n            anchorEl: event.currentTarget,\n        });\n    }\n    componentDidMount() {\n        this.reload();\n    }\n    componentWillUnmount() {\n        const { stop } = this.props;\n        stop();\n    }\n    render() {\n        const { connected, stop } = this.props;\n        const { anchorEl, open, query, lines } = this.state;\n        const helperText = 'Supports operators and, or, (), and \"str\"';\n        return (<Wrapper>\n        <div>\n          <Typography variant=\"h6\">Server Log</Typography>\n          <GreyType variant=\"subtitle1\">{connected ? 'Streaming' : 'Disconnected'}</GreyType>\n        </div>\n        <Spacer />\n        <TextFieldWrapper>\n          <GreyIcon icon=\"filter\"/>\n          <FilterField id=\"filter\" label=\"Filter\" value={query} onChange={this.handleQuery} inputProps={{\n            onKeyPress: this.handleKeyPress,\n        }} helperText={helperText}/>\n          <GreyClickableIcon onClick={this.handleMenuClick} icon=\"ellipsis-v\"/>\n        </TextFieldWrapper>\n        <Menu id=\"log-menu\" anchorEl={anchorEl} open={open} onClose={this.handleRequestClose}>\n          <MenuItem>\n            <TextField id=\"lines\" label=\"Max Lines\" value={lines} onChange={this.handleLines} type=\"number\" inputProps={{\n            onKeyPress: this.handleKeyPress,\n        }}/>\n          </MenuItem>\n          <MenuItem onClick={this.clearLogs}>\n            <MenuIcon icon=\"eraser\"/>\n            Clear\n          </MenuItem>\n          <MenuItem onClick={connected ? stop : this.reload}>\n            <MenuIcon icon={connected ? 'stop' : 'play'}/>\n            {connected ? 'Stop' : 'Start'}\n          </MenuItem>\n        </Menu>\n      </Wrapper>);\n    }\n}\nHeader.propTypes = {\n    start: PropTypes.func.isRequired,\n    stop: PropTypes.func.isRequired,\n    connected: PropTypes.bool.isRequired,\n    clearLogs: PropTypes.func.isRequired,\n};\nexport default Header;\n","import { connect } from 'react-redux';\nimport actions from 'plugins/log/state/actions';\nimport Header from './Header';\nexport function mapStateToProps({ log }) {\n    return {\n        connected: log.connected,\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        start: payload => dispatch(actions.connect.request(payload)),\n        stop: () => dispatch(actions.disconnect()),\n        clearLogs: () => dispatch(actions.clear()),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\nexport { Header };\n","import styled from '@emotion/styled';\nimport { Table as RVTable } from 'react-virtualized';\nexport const Table = styled(RVTable) `\n  font-size: 1rem;\n\n  & .error {\n    background-color: #f2dede;\n  }\n\n  & .critical {\n    background-color: #f2dede;\n  }\n\n  & .warning {\n    background-color: #fcf8e3;\n  }\n`;\n","import PropTypes from 'prop-types';\nexport const LogShape = PropTypes.shape({\n    timestamp: PropTypes.string,\n    message: PropTypes.string,\n    task: PropTypes.string,\n    logLevel: PropTypes.string,\n    plugin: PropTypes.string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoSizer, Column } from 'react-virtualized';\nimport { LogShape } from 'plugins/log/state/shapes';\nimport 'react-virtualized/styles.css';\nimport { Table } from './styles';\nconst LogTable = ({ messages }) => (<AutoSizer>\n    {({ height, width }) => (<Table rowCount={messages.length} rowHeight={20} headerHeight={50} width={width} height={height} rowGetter={({ index }) => messages[index]} rowClassName={({ index }) => messages[index] && messages[index].log_level.toLowerCase()}>\n        <Column label=\"Time\" dataKey=\"timestamp\" width={100}/>\n        <Column label=\"Level\" dataKey=\"logLevel\" width={100}/>\n        <Column label=\"Plugin\" dataKey=\"plugin\" width={100}/>\n        <Column label=\"Task\" dataKey=\"task\" width={100}/>\n        <Column label=\"Message\" dataKey=\"message\" width={100} flexGrow={1}/>\n      </Table>)}\n  </AutoSizer>);\nLogTable.propTypes = {\n    messages: PropTypes.arrayOf(LogShape).isRequired,\n};\nexport default LogTable;\n","import { connect } from 'react-redux';\nimport LogTable from './LogTable';\nexport function mapStateToProps({ log }) {\n    return {\n        messages: log.messages,\n    };\n}\nexport default connect(mapStateToProps)(LogTable);\nexport { LogTable };\n","import styled from '@emotion/styled';\nexport const TableWrapper = styled.div `\n  width: initial;\n  flex: 1;\n  background-color: #fff;\n`;\n","import React from 'react';\nimport { PaperWrapper } from 'common/styles';\nimport Header from '../Header';\nimport LogTable from '../LogTable';\nimport { TableWrapper } from './styles';\nconst LogPage = () => (<PaperWrapper elevation={4}>\n    <Header />\n    <TableWrapper>\n      <LogTable />\n    </TableWrapper>\n  </PaperWrapper>);\nexport default LogPage;\n"],"sourceRoot":""}