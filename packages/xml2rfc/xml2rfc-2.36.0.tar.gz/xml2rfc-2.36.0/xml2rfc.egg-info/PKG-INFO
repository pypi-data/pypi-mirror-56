Metadata-Version: 1.2
Name: xml2rfc
Version: 2.36.0
Summary: Xml2rfc generates RFCs and IETF drafts from document source in XML according to the IETF xml2rfc v2 and v3 vocabularies.
Home-page: https://tools.ietf.org/tools/xml2rfc/trac/
Author: Henrik Levkowetz, Josh Bothun
Author-email: tools-discuss@ietf.org
Maintainer: Henrik Levkowetz
Maintainer-email: henrik@levkowetz.com
License: BSD-3-Clause
Download-URL: https://pypi.python.org/pypi/xml2rfc
Description: Introduction
        ============
        
        The IETF_ uses a specific format for the standards and other documents it
        publishes as RFCs_, and for the draft documents which are produced when
        developing documents for publications.  There exists a number of different
        tools to facilitate the formatting of drafts and RFCs according to the
        existing rules, and this tool, **xml2rfc**, is one of them.  It takes as input
        an xml file which contains the text and meta-information about author names
        etc., and transforms it into suitably formatted output.  The input xml file
        should follow the grammars in RFC7749_ (for v2 documents) or RFC7991_ (for 
        v3 documents). Note that the grammar for v3 is still being refined, and 
        changes will eventually be captured in the `bis draft for 7991`_. 
        Changes not yet captured can be seen in the xml2rfc source `v3.rng`_.
        
        **xml2rfc** provides a variety of output formats. See the command line
        help for a full list of formats. It also provides conversion from v2 to
        v3, and can run the preptool_ on its input.
        
        .. _IETF: https://www.ietf.org/
        .. _RFCs: https://www.rfc-editor.org/
        .. _RFC7749: https://tools.ietf.org/html/rfc7749
        .. _RFC7991: https://tools.ietf.org/html/rfc7991
        .. _bis draft for 7991: https://tools.ietf.org/html/draft-iab-rfc7991bis
        .. _v3.rng: https://trac.tools.ietf.org/tools/xml2rfc/trac/browser/trunk/cli/xml2rfc/data/v3.rng
        .. _preptool: https://tools.ietf.org/html/rfc7998
        
        Installation
        ============
        
        Installation of the python package is done as usual with 'pip install xml2rfc',
        using appropriate switches and/or sudo.
        
        Installation of support libraries for the PDF-formatter
        -------------------------------------------------------
        
        In order to generate PDFs, xml2rfc uses the WeasyPrint module, which
        depends on external libaries that must be installed as native packages
        on your platform, separately from the xml2rfc install.
        
        First, install the Cairo, Pango, and GDK-PixBuf library files on your
        system.  See installation instructions on the WeasyPrint Docs:
        
            https://weasyprint.readthedocs.io/en/stable/install.html
        
        (Python 3 is not needed if your system Python is 2.7, though).
        
        (On some OS X systems with System Integrity Protection active, you may
        need to create a symlink from your home directory to the library installation
        directory (often /opt/local/lib):
        
            ln -s /opt/local/lib ~/lib
        
        in order for weasyprint to find the installed cairo and pango libraries.
        Whether this is needed or not depends on whether you used macports or homebrew
        to install cairo and pango, and the homebrew / macport version.)
        
        Next, install the pycairo and weasyprint python modules using pip.
        Depending on your system, you may need to use 'sudo' or install in
        user-specific directories, using the --user switch.  On OS X in
        particular, you may also need to install a newer version of setuptools
        using --user before weasyprint can be installed.  If you install with 
        the --user switch, you may need to also set PYTHONPATH, e.g.,
        
            PYTHONPATH=/Users/henrik/Library/Python/2.7/lib/python/site-packages
        
        for Python 2.7.
        
        The basic pip commands (modify as needed according to the text above)
        are:
        
            pip install 'pycairo>=1.18' 'weasyprint<=0.42.3'
        
        With these installed and available to xml2rfc, the --pdf switch will be
        enabled.
        
        For PDF output, you also need to install the Noto font set.  Download the full
        set from https://noto-website-2.storage.googleapis.com/pkgs/Noto-unhinted.zip,
        and install as appropriate for your platform.
        
        Usage
        =====
        
        xml2rfc accepts a single XML document as input and outputs to one or more conversion formats.
        
        **Basic Usage**: ``xml2rfc SOURCE [options] FORMATS...``
        
        Run ``xml2rfc --help`` for a full listing of command-line options.
        
        
        Changelog
        =========
        
        
        Version 2.36.0 (02 Dec 2019)
        ------------------------------------------------
        
        
          * Improved support for internal xref to <li>, giving 'Section X,
            Paragraph Y, Item Z'.  Tweaked the output for xrefs to <li> with
            format='counter' to not include trailing period.
        
          * Stripped away some cases of leading punctuation on incomplete postal 
            address lines.
        
          * Fixed an issue with multi-part <ol> lists with the same group setting.
        
          * Added support for tables in list items, on request from the RPC, in 
            order to match the needs of a couple of recent RFCs-to-be.
        
          * Improved output format handling of postal addresses for countries with
            non-latin scripts where the XML address content is ASCII, rather than
            the expected native script.
        
          * Fixed the isempty() utility function to correctly return False for 
            elements containing comments with trailing text.  Fixes issue #455.
        
          * Added some cases of normalization of postal code during v2v3 conversion.
        
          * Added bottom margin space for artwork in print output, to match that
            for sourcecode.
        
        
        
        
        
        
        
        Version 2.35.0 (12 Nov 2019)
        ------------------------------------------------
        
        
          * Changed the pn numbers for ToC entries to use 'section-toc.1-...' 
            instead of 'section-boilerplate.3-...'.
        
          * Fixed schema and code so as to correctly show <name> entries with 
            superscript (and more) in the ToC.
        
          * Added code to clean out instances of &nbsp; and other special 
            characters when rendering ToC, title, xref and reference.
        
          * Eliminated postal address lines with only template content, i.e., no
            <postal> content, from output renderings.
        
          * Fixed a typo in the v2v3 converter which caused conversion of the 
            tocdepth PI to fail.
        
          * Added handling of <sourcecode> name attributes which were too long to
            fit on the same line as the <CODE BEGINS> marker, and added a specific
            indentation setting for <sourcecode> within <section>, to avoid
            extra indentation.
        
          * For source code with markers and file name, only emit file name if 
            actually set.  Fixes an issue with the HTML renderer.
        
          * Added the same in-figure indent for sourcecode as for artwork, to avoid 
            extra indentation.
        
          * Removed an extraneous leading comma in reference rendering for 
            references without author information.
        
          * Added CSS for bottom margin after <sourcecode> rendering in print.
        
          * Added a missing conversion of attribute value 'no' to 'false' in the 
            v2v3 converter.
        
          * Tweaked the text width when folding hang text.
        
          * Changed the location and method of checking and catching non-ascii 
            characters in XML input declared with encoding='us-ascii'.
        
          * Added warnings for tabs in artwork and sourcecode.
        
          * Added a warning for long lines in v3 text ouput.
        
          * Added a new metadata.js file from the RPC, with copyright and license 
            information and a code tweak.
        
          * Refactored extract_date() into one extraction function and one 
            augmentation function, in order to render references with missing date info 
            correctly.  Also updated renderers to handle this case appropriately.
        
          * Fixed an inconsistency in requiring the ascii attribute for Latin
            script non-ascii names.
        
          * Corrected a buggy format string.  Fixes issue #449.
        
          * Added an error if pn numbers are present in a file which is not marked 
            with prepTime.
        
          * Corrected the indentation for <t> in table cells.
        
          * Fixed an issue with duplicate pn numbers for <t> in table cells.
        
        
        
        
        
        
        
        Version 2.34.0 (23 Oct 2019)
        ------------------------------------------------
        
        
          * Made preptool reference sorting honour the sortRefs <rfc> attribute
            when symRefs is true.
        
          * Fixed an issue with v2v3 conversion of PIs to <xml> attributes, where 
            PIs occuring before <rfc> would not be processed.
        
          * Fixed the v3 text output for authors with no organization to output 
            blank lines, as for v2.
        
          * Changed the rendering of <xref> with section reference and text 
            content, based on input from the RPC.
        
          * Fixed an issue with &nbsp; in section headers not being handled
            properly by PDF viewers, by using plain space instead of non-breaking
            space.
        
          * Fixed an issue with sizing of SVG artwork in PDF renderings.
        
          * Fixed a validation problem for an empty boilerplate element for ipr='none'.
        
          * Added a <toc> entry in <rfc><front>, and moved table of contents XML 
            from <boilerplate> to <toc>.
        
          * Fixed an issue with the use of seriesInfo for top first page of v3
            text output.
        
          * Added support for a new attribute 'brackets { "none" | "angle" }? for
            <eref>, on request from the RPC.
        
          * Changed the rendering of <dt><dd> so as to insert a newline if the <dt> 
            entry extends too close to the right-hand margin.
        
          * Tweaked the removal of PIs during the preptool phase to occur before
            writing prepped content out to file, rather than earlier, in order to
            preserve PIs when prep() is used by xml2rfc internally.
        
          * Added a warning for SVG content that won't scale.
        
          * Added 'dd' to is_htmlblock().  One effect of this is to let <dd> to 
            be link targets for <xref> when generating HTML output.
        
          * Changed the schema for <postal> to a workable but less precise 
            expression because the RFC7991bis generation scripts don't support the RNG 
            <interleave> construct.
        
        
        
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: License :: OSI Approved :: BSD License
