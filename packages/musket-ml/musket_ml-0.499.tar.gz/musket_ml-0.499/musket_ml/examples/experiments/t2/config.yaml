#%Musket Classification 1.0
architecture: xception #pre-trained model we are going to use
pooling: avg
augmentation: #define some minimal augmentations on images
   Fliplr: 0.5
   Flipud: 0.5

classes: 1 #define the number of classes
activation: sigmoid #as we have multilabel classification, the activation for last layer is sigmoid
weights: imagenet #we would like to start from network pretrained on imagenet dataset
shape: [224,224, 3] #our desired input image size, everything will be resized to fit
optimizer: Adam #Adam optimizer is a good default choice
batch: 1 #our batch size will be 16
lr: 0.001 
metrics: #we would like to track some metrics
  - binary_accuracy
  - macro_f1
primary_metric: val_binary_accuracy #the most interesting metric is val_binary_accuracy
primary_metric_mode: max
folds_count: 1
inference_batch: 1
callbacks: #configure some minimal callbacks
  EarlyStopping:
    patience: 10
    monitor: val_macro_f1
    mode: max
    verbose: 1
  ReduceLROnPlateau:
    patience: 2
    factor: 0.3
    monitor: val_binary_accuracy
    mode: max
    cooldown: 1
    verbose: 1 
loss: binary_crossentropy 
dumpPredictionsToCSV: true
stages:
  - epochs: 1 #let's go for 100 epochs
dataset:
   getSe: []  
testTimeAugmentation: Horizontal_and_vertical