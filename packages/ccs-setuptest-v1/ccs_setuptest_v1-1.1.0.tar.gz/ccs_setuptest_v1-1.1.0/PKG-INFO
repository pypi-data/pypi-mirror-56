Metadata-Version: 2.1
Name: ccs_setuptest_v1
Version: 1.1.0
Summary: The Selenium based setuptest for the CYBR CSCW-SUITE (CCS). 1.download: wget sourceforge.net/projects/c-c-s/files/latest/download  2.install-app: docker-compose up --build  3.get-test: pip3 install ccs-setuptest-v1 --user 4.setup-and-test(execute locally - install on server by typing in your command-line): ccs-setuptest.py
Home-page: https://c-c-s.sourceforge.io/
Author: Florian Strahberger
Author-email: flori@ctemplar.com
License: MIT
Description: #  The python-based setuptest for the CYBR CSCW-SUITE (CCS) Version 0.9.6
         (will use selenium & pytest. will require to be installed: python3 & ChromeDriver. Get ChromeDriver from: https://chromedriver.chromium.org/)
        
        ## The setuptest will:
          * Open the Conf/test_configVars.py file, so you can modify the values (The IP of your CCS, the SendGrid API-Key, E-Mail-Address & publicPGP-Key ..)
          * Call the installation-script for creating the database-tables of your CCS
          * Make the automated setup for your first 5 projects
          * Will create a testing-project and simulate an admin who is creating a project, a WBS, creates a user-profile, testst the user's CFLX, starts to make a posting.
        
        ## Prep. steps to install the CCS on your server with Linux & docker / docker-compose installed
        
        * from the terminal of your Linux-server / VPS (get one via: https://www.mvps.net/?aff=6517 - and support my server-costs)
        
        `wget sourceforge.net/projects/c-c-s/files/latest/download`
        
        `docker-compose up --build`
        
        ## Installation & Execution of this ccs_setuptest
        Requires ChromeDriver & Chrome Web-Browser to be installed - ensure to have the correct versions which fit to each other!
        Installation is easy - check the docs / tutorials for your local Operation System (Windows / Mac / Linux), then proceed and:
        
        ### via pip / PyPi:
        * download this ccs-setuptest on your (local) machine:
        
        `pip3 install ccs-setuptest-v1 --user`
        
        * execute the test
        
        `ccs-setuptest.py`
        
        ### download & execute manually from command-line / terminal:
        
        download from:
        
        https://sourceforge.net/projects/c-c-s/files/setuptest.zip/download
        
        * download, unzip & cd into the setuptest/
        
        * execute the Start/ccs-setuptest.py
        
        	python3 Start/ccs-setuptest.py
        
        *usage without the tkinter GUI:*
        
        	pytest -m /RunSetups
        
        ## Usage of the ccs_setuptest
        
        <1st page>
        * The yellow [CONTINUE] button
        will open the page displaying the actual setup-install values.
        
        <2nd page>
        * The yellow [SETUP] button will open the Conf/test_configVars.py file, so you can modify the values (The IP of your CCS, the SendGrid API-Key, E-Mail-Address & publicPGP-Key ..)
        
        **make the changes, save & re-run with:**
        
        `ccs-setuptest.py`
        
        <2nd page>
        * The red [INSTALL] button (bottom of 2nd page) will perform the installation with the values
         & perform a fully automated show-up-test showing and explaining you the basic functionalities
         for setting-up the projects as well as how to use the application.
        
        **NOTE: this will use the first slot of your CCS and populate it with an example project!**
        
        This means, your per default available projects for your productive work will be reduced to 4,
        unless you decide to fully delete the database-tables of projectdb1 database - and rebuild the tables by calling:
        https://[IP or domain]/1/zubringer/create8Tables.php
        
        ### manually start & select the setup, installation & testing-scripts
        At first, you need to make the settings by modifying the Conf/test_configVars.py file with the text-editor of your choice (nano, gedit, touch, editor) - then you can call the scripts via pytest
        
        
        #### You can call the scripts manually - and only the selected one or ones from your terminal / console/ bash/ shell/ as well:
        
          *  for running all tests within the directory: pytest foldername/
        
        eg for running all setups or running all tests:
        
        
            pytest RunSetups/
        or:
        
            pytest Tests/
        
        
          *  for running a single test, cd to the test and type: pytest filename.py (see details below)
        
        #### Setup-Scripts available:
        **`cd RunSetups/`**
        
        	pytest test_ini_1_createTables.py
        
        	pytest test_ini_2_registerSuperadmin.py
        
        	pytest test_ini_3_1stProjectSetup.py
        
        	pytest test_ini_4_4ProjectsSetup.py
        
        #### Walk-Through tests available (still in beta: will work, but might throw errors. Its a test-script issue then - not an application one!):
        **`cd Tests/`**
        
        	pytest test_loginCreateProjectCreateWBS.py
        
        	pytest test_loginMakePosts.py 
        
        	pytest test_loginPersProfileComplete.py
         
        
        
Keywords: CYBR CSCW-SUITE,CCS,digital workplace,project management,digitalization,communication,collaboration,groupware,setup.install,test,selenium,pytest,chromedriver,setuptest
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Description-Content-Type: text/markdown
